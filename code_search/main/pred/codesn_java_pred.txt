Q_0	create a new buffer which wrap the specify nio buffer be current	C_0_0	public static byte_buf wrapped_buffer ( byte_buffer buffer ) { n if ( buffer . has_remaining ( ) ) { n return empty_buffer n } n if ( buffer . is_direct ( ) buffer . has_array ( ) ) { n return wrapped_buffer ( n buffer . array ( ) , n buffer . array_offset ( ) + buffer . position ( ) , n buffer . remaining ( ) ) . order ( buffer . order ( ) ) n } else if ( platform_dependent . has_unsafe ( ) ) { n if ( buffer . is_read_only ( ) ) { n if ( buffer . is_direct ( ) ) { n return new read_only_unsafe_direct_byte_buf ( alloc , buffer ) n } else { n return new read_only_byte_buffer_buf ( alloc , buffer ) n } n } else { n return new unpooled_unsafe_direct_byte_buf ( alloc , buffer , buffer . remaining ( ) ) n } n } else { n if ( buffer . is_read_only ( ) ) { n return new read_only_byte_buffer_buf ( alloc , buffer ) n } else { n return new unpooled_direct_byte_buf ( alloc , buffer , buffer . remaining ( ) ) n } n } n }	1
Q_0	create a new buffer which wrap the specify nio buffer be current	C_0_1	public void logp ( level level , string source_class , string source_method , string msg ) { n if ( level . int_value ( ) < level_value level_value = = off_value ) { n return n } n log_record lr = new log_record ( level , msg ) n lr . set_source_class_name ( source_class ) n lr . set_source_method_name ( source_method ) n do_log ( lr ) n }	0
Q_0	create a new buffer which wrap the specify nio buffer be current	C_0_2	public static async_work < xml_document , exception > create ( xml_stream_events_async stream ) { n xml_document doc = new xml_document ( ) n async_work < xml_document , exception > result = new async_work < > ( ) n create ( doc , stream , result , new synchronization_point < > ( true ) ) n return result n }	0
Q_1	register the give epoll with this link event_loop	C_1_0	void add ( abstract_epoll_channel ch ) throws io_exception { n assert in_event_loop ( ) n int fd = ch . socket . int_value ( ) n native . epoll_ctl_add ( epoll_fd . int_value ( ) , fd , ch . flags ) n channels . put ( fd , ch ) n }	1
Q_1	register the give epoll with this link event_loop	C_1_1	public void print_display_control ( print_writer out ) n { n convert converter = this . get_screen_field ( ) . get_converter ( ) n if ( m_v_displays = = null ) n { n string str_field = null n if ( converter = null ) if ( converter . get_field ( ) = null ) n str_field = converter . get_field ( ) . get_string ( ) n this . scan_table_items ( ) n if ( converter = null ) if ( converter . get_field ( ) = null ) n converter . get_field ( ) . set_string ( str_field ) n } n string string = db_constants . blank n int i_index = codint n if ( converter = null ) n { / / this is required for the display or popup fields because display_field ( ) is never called to get the value . n i_index = converter . convert_field_to_index ( ) n if ( i_index = = _ codint ) n { n super . print_display_control ( out ) n return n } n try { n string = ( string ) m_v_displays . get ( i_index ) n } catch ( array_index_out_of_bounds_exception ex ) { n string = codstr n } n } n out . println ( codstr + string + codstr ) n }	0
Q_1	register the give epoll with this link event_loop	C_1_2	public static void register_xml_binding_class_for_prop_get_set_method ( final class < ? > cls ) { n if ( registered_xml_binding_class_list . contains_key ( cls ) ) { n return n } n n synchronized ( entity_declared_prop_get_method_pool ) { n registered_xml_binding_class_list . put ( cls , false ) n n if ( entity_declared_prop_get_method_pool . contains_key ( cls ) ) { n entity_declared_prop_get_method_pool . remove ( cls ) n entity_declared_prop_set_method_pool . remove ( cls ) n n entity_prop_field_pool . remove ( cls ) n load_prop_get_set_method_list ( cls ) n } n } n }	0
Q_2	send an opaque message to the rpc_handler on the server_side	C_2_0	public long send_rpc ( byte_buffer message , rpc_response_callback callback ) { n if ( logger . is_trace_enabled ( ) ) { n logger . trace ( codstr , get_remote_address ( channel ) ) n } n n long request_id = request_id ( ) n handler . add_rpc_request ( request_id , callback ) n n rpc_channel_listener listener = new rpc_channel_listener ( request_id , callback ) n channel . write_and_flush ( new rpc_request ( request_id , new nio_managed_buffer ( message ) ) ) n . add_listener ( listener ) n n return request_id n }	1
Q_2	send an opaque message to the rpc_handler on the server_side	C_2_1	public void set_blur_content_pane ( boolean blur ) { n final jx_layer jx_layer = ( jx_layer ) get_content_pane ( ) n if ( blur jx_layer . get_buffered_image_op ( ) instanceof fast_blur_filter n blur ( jx_layer . get_buffered_image_op ( ) instanceof fast_blur_filter ) ) { n return n } n final buffered_image_op bio = new fast_blur_filter ( codint ) n jx_layer . set_buffered_image_op ( blur ? bio null ) n }	0
Q_2	send an opaque message to the rpc_handler on the server_side	C_2_2	override n public object get ( string name , scriptable start ) n { n slot slot = slot_map . query ( name , codint ) n if ( slot = = null ) { n return scriptable . not_found n } n return slot . get_value ( start ) n }	0
Q_3	cache the give statistic	C_3_0	public void cache_base_statistics ( base_statistics statistics , string identifier ) { n synchronized ( this . base_statistics_cache ) { n this . base_statistics_cache . put ( identifier , statistics ) n } n }	1
Q_3	cache the give statistic	C_3_1	"public static void main ( string args [ ] ) { n if ( args . length = codint ) { n system . err . println ( codstr ) n } n else { n try { n int pagenumber = integer . parse_int ( args [ codint ] ) n n / / we create a reader for a certain document n pdf_reader reader = new pdf_reader ( args [ codint ] ) n / / we retrieve the total number of pages n int n = reader . get_number_of_pages ( ) n system . out . println ( codstr + n + codstr ) n n if ( pagenumber < codint pagenumber > n ) { n throw new document_exception ( codstr t split this document at page codstr there is no such page . codstr processed page "" + i ) n } n / / step codint we close the document n document1 . close ( ) n document2 . close ( ) n } n catch ( exception e ) { n e . print_stack_trace ( ) n } n } n }"	0
Q_3	cache the give statistic	C_3_2	public boolean is_sarl_skill ( lightweight_type_reference type ) { n return type . is_interface_type ( ) ( get_sarl_element_ecore_type ( type ) = = sarl_package . sarl_skill n type . is_subtype_of ( skill . class ) ) n }	0
Q_4	de_serializes the failure message send to the	C_4_0	public static throwable deserialize_server_failure ( final byte_buf buf ) throws io_exception , class_not_found_exception { n try ( byte_buf_input_stream bis = new byte_buf_input_stream ( buf ) n object_input_stream in = new object_input_stream ( bis ) ) { n return ( throwable ) in . read_object ( ) n } n }	1
Q_4	de_serializes the failure message send to the	C_4_1	xml_transient n public string get_elastic_search_field_type ( ) n { n type field_type = this . get_type_as_enum ( ) n n if ( field_type = = null ) n { n return null n } n n / / get the field_type by fluid field field_type . n switch ( field_type ) n { n case paragraph_text n return elastic_search_type . text n case text n n string meta_data = this . get_type_meta_data ( ) n if ( meta_data = = null meta_data . is_empty ( ) ) n { n return elastic_search_type . text n } n n if ( latitude_and_longitude . equals ( meta_data ) ) n { n return elastic_search_type . geo_point n } n n return elastic_search_type . text n case true_false n return elastic_search_type . boolean n case date_time n return elastic_search_type . date n case decimal n return elastic_search_type . double n case multiple_choice n return elastic_search_type . keyword n } n n return null n }	0
Q_4	de_serializes the failure message send to the	C_4_2	public static excerpt not_equals ( object a , object b , type_kind kind ) { n return equals_excerpt ( false , a , b , kind ) n }	0
Q_5	return the plan with all require jar	C_5_0	public job_with_jars get_plan_with_jars ( ) throws program_invocation_exception { n if ( is_using_program_entry_point ( ) ) { n return new job_with_jars ( get_plan ( ) , get_all_libraries ( ) , classpaths , user_code_class_loader ) n } else { n throw new program_invocation_exception ( codstr + job_with_jars . class . get_simple_name ( ) + n codstr , get_plan ( ) . get_job_id ( ) ) n } n }	1
Q_5	return the plan with all require jar	C_5_1	public service_future < sas_definition_bundle > set_sas_definition_async ( string vault_base_url , string storage_account_name , string sas_definition_name , string template_uri , sas_token_type sas_type , string validity_period , final service_callback < sas_definition_bundle > service_callback ) { n return service_future . from_response ( set_sas_definition_with_service_response_async ( vault_base_url , storage_account_name , sas_definition_name , template_uri , sas_type , validity_period ) , service_callback ) n }	0
Q_5	return the plan with all require jar	C_5_2	public boolean may_move_to ( final int place_id , result_listener < place_config > rl ) n { n final boolean [ ] vetoed = new boolean [ codint ] n _observers . apply ( new observer_op < location_observer > ( ) { n public boolean apply ( location_observer obs ) { n vetoed [ codint ] = ( vetoed [ codint ] obs . location_may_change ( place_id ) ) n return true n } n } ) n n / / if we codstr re n / / still going n if ( rl = null ) { n if ( vetoed [ codint ] ) { n rl . request_failed ( new move_vetoed_exception ( ) ) n } else { n _move_listener = rl n } n } n / / and return the result n return vetoed [ codint ] n }	0
Q_6	register the give serializer via it class as a serializer for the give type at the kryo_serializer	C_6_0	suppress_warnings ( codstr ) n public void register_type_with_kryo_serializer ( class < ? > type , class < ? extends serializer > serializer_class ) { n if ( type = = null serializer_class = = null ) { n throw new null_pointer_exception ( codstr ) n } n n suppress_warnings ( codstr ) n class < ? extends serializer < ? casted_serializer_class = ( class < ? extends serializer < ? ) serializer_class n registered_types_with_kryo_serializer_classes . put ( type , casted_serializer_class ) n }	1
Q_6	register the give serializer via it class as a serializer for the give type at the kryo_serializer	C_6_1	public void process_annotations ( list < jc_compilation_unit > roots , n collection < string > classnames ) { n if ( should_stop ( compile_state . process ) ) { n / / errors were encountered . n / / unless all the errors are resolve errors , the errors were parse errors n / / or other errors during enter which cannot be fixed by running n / / any annotation processors . n if ( unrecoverable_error ( ) ) { n deferred_diagnostic_handler . report_deferred_diagnostics ( ) n log . pop_diagnostic_handler ( deferred_diagnostic_handler ) n return n } n } n n / / assert process_annotations and proc_env_impl should have been set up by n / / by init_process_annotations n n / / note the classnames . is_empty ( ) checks should be refactored to main . n n if ( process_annotations ) { n / / if there are no annotation processors present , and n / / annotation processing is to occur with compilation , n / / emit a warning . n if ( options . is_set ( proc , codstr ) ) { n log . warning ( codstr ) n todo . clear ( ) n } n / / if not processing annotations , classnames must be empty n if ( classnames . is_empty ( ) ) { n log . error ( codstr , n classnames ) n } n assert . check_null ( deferred_diagnostic_handler ) n return / / continue regular	0
Q_6	register the give serializer via it class as a serializer for the give type at the kryo_serializer	C_6_2	private void init_bean_name_defaulted ( enhanced_annotation < t > annotated_annotation ) { n if ( annotated_annotation . is_annotation_present ( named . class ) ) { n if ( codstr . equals ( annotated_annotation . get_annotation ( named . class ) . value ( ) ) ) { n throw metadata_logger . log . value_on_named_stereotype ( annotated_annotation ) n } n bean_name_defaulted = true n } n }	0
Q_7	see link binary_row set_null_at	C_7_0	override n public void set_null_at ( int i ) { n assert_index_is_valid ( i ) n segments_util . bit_set ( segments , offset , i + codint ) n segments_util . set_long ( segments , get_field_offset ( i ) , codint ) n }	1
Q_7	see link binary_row set_null_at	C_7_1	non_null n public static put_result new_insert_result ( n long inserted_id , n non_null string affected_table , n nullable collection < string > affected_tags n ) { n check_not_null ( affected_table , codstr ) n return new put_result ( inserted_id , null , singleton ( affected_table ) , non_null_set ( affected_tags ) ) n }	0
Q_7	see link binary_row set_null_at	C_7_2	public void set_needle_size ( final needle_size size ) { n if ( null = = needle_size ) { n _needle_size = null = = size ? needle_size . standard size n fire_update_event ( resize_event ) n } else { n needle_size . set ( size ) n } n }	0
Q_8	p add a trailing slash right after the domain for ur_ls with no	C_8_0	public url_normalizer add_domain_trailing_slash ( ) { n string url_root = http_url . get_root ( url ) n string path = to_url ( ) . get_path ( ) n if ( string_utils . is_not_blank ( path ) ) { n / / there is a path so do nothing n return this n } n string url_root_and_path = url_root + codstr n url = string_utils . replace_once ( url , url_root , url_root_and_path ) n return this n }	1
Q_8	p add a trailing slash right after the domain for ur_ls with no	C_8_1	public service_future < database_vulnerability_assessment_rule_baseline_inner > get_async ( string resource_group_name , string server_name , string database_name , string rule_id , vulnerability_assessment_policy_baseline_name baseline_name , final service_callback < database_vulnerability_assessment_rule_baseline_inner > service_callback ) { n return service_future . from_response ( get_with_service_response_async ( resource_group_name , server_name , database_name , rule_id , baseline_name ) , service_callback ) n }	0
Q_8	p add a trailing slash right after the domain for ur_ls with no	C_8_2	public static permission_dialog_fragment get_instance ( perm_bean bean , int request_code ) { n if ( bean = = null ) throw new null_pointer_exception ( codstr ) n bundle extras = new bundle ( codint ) n n / / convert map to two arrays . n hash_map < permission , string > map = ( hash_map < permission , string > ) bean . get_permissions ( ) n n / / put arrays in extras . n extras . put_serializable ( permission , map ) n extras . put_int ( request , request_code ) n n / / set extras in fragment and return . n permission_dialog_fragment fragment = new permission_dialog_fragment ( ) n fragment . set_arguments ( extras ) n return fragment n }	0
Q_9	build tagstr and tagstr from the path in the config	C_9_0	static void init_paths ( ) { n if ( config = null config . get_paths ( ) = null ) { n for ( path_chain path_chain config . get_paths ( ) ) { n path_chain . validate ( config_name + codstr ) / / raises exception on misconfiguration n if ( path_chain . get_path ( ) = = null ) { n add_source_chain ( path_chain ) n } else { n add_path_chain ( path_chain ) n } n } n } n }	1
Q_9	build tagstr and tagstr from the path in the config	C_9_1	public final byte [ ] get_encoded ( string format ) throws io_exception n { n if ( this . initialized = = false ) { n throw new io_exception ( codstr ) n } n return param_spi . engine_get_encoded ( format ) n }	0
Q_9	build tagstr and tagstr from the path in the config	C_9_2	public void build_error_summary ( xml_node node , content summary_content_tree ) { n string error_table_summary = n configuration . get_text ( codstr , n configuration . get_text ( codstr ) , n configuration . get_text ( codstr ) ) n list < string > error_table_header = arrays . as_list ( configuration . get_text ( codstr ) , n configuration . get_text ( codstr ) ) n set < type_element > ierrors = n utils . is_specified ( package_element ) n ? utils . get_type_elements_as_sorted_set ( utils . get_errors ( package_element ) ) n configuration . type_element_catalog . errors ( package_element ) n sorted_set < type_element > errors = utils . filter_out_private_classes ( ierrors , configuration . javafx ) n if ( errors . is_empty ( ) ) { n package_writer . add_classes_summary ( errors , n configuration . get_text ( codstr ) , n error_table_summary , error_table_header , summary_content_tree ) n } n }	0
Q_10	an expectation for check child web_element as a part of parent element to present	C_10_0	public static expected_condition < web_element > presence_of_nested_element_located_by ( n final by locator , n final by child_locator ) { n return new expected_condition < web_element > ( ) { n n override n public web_element apply ( web_driver web_driver ) { n return web_driver . find_element ( locator ) . find_element ( child_locator ) n } n n override n public string to_string ( ) { n return string . format ( codstr , locator , child_locator ) n } n } n }	1
Q_10	an expectation for check child web_element as a part of parent element to present	C_10_1	protected int read_word ( byte [ ] data , int offset ) { n int low = data [ offset ] codint n int high = data [ offset + codint ] codint n return high < < codint low n }	0
Q_10	an expectation for check child web_element as a part of parent element to present	C_10_2	protected map < artifact_identifier , collection < binary_artifact filter_binary_artifacts ( map < artifact_identifier , collection < binary_artifact artifacts_map , string url , string branch ) { n map < artifact_identifier , collection < binary_artifact rt = new hash_map < > ( ) n string url_no_null = url = null ? url codstr n string branch_no_null = branch = null ? branch codstr n n for ( map . entry < artifact_identifier , collection < binary_artifact e artifacts_map . entry_set ( ) ) { n artifact_identifier id = e . get_key ( ) n list < binary_artifact > artifacts = new array_list < > ( ) n n boolean added = false n for ( binary_artifact ba e . get_value ( ) ) { n string ba_url = ba . get_scm_url ( ) n string ba_branch = ba . get_scm_branch ( ) n n if ( hygieia_utils . smart_url_equals ( url_no_null , ba_url ) object_utils . equals ( branch_no_null , ba_branch ) ) { n artifacts . add ( ba ) n added = true n break n } n } n n if ( logger . is_debug_enabled ( ) added ) { n string_builder sb = new string_builder ( ) n sb . append ( codstr + id . get_group ( ) + codstr + id . get_name ( ) + codstr + id . get_version ( ) n + codstr s repository n codstr component repo ( url codstr branch codstr ) n codstr artifacts n codstr codstr	0
Q_11	log the current pool state at debug level	C_11_0	void log_pool_state ( string . prefix ) n { n if ( logger . is_debug_enabled ( ) ) { n logger . debug ( codstr , n pool_name , ( prefix . length > codint ? prefix [ codint ] codstr ) , n get_total_connections ( ) , get_active_connections ( ) , get_idle_connections ( ) , get_threads_awaiting_connection ( ) ) n } n }	1
Q_11	log the current pool state at debug level	C_11_1	public static void do_byte_buffer_put_un_compressed ( ind_array arr , byte_buffer allocated , boolean rewind ) { n / / ensure we send data to host memory n nd4j . get_executioner ( ) . commit ( ) n nd4j . get_affinity_manager ( ) . ensure_location ( arr , affinity_manager . location . host ) n n byte_buffer buffer = arr . data ( ) . pointer ( ) . as_byte_buffer ( ) . order ( byte_order . native_order ( ) ) n byte_buffer shape_buffer = arr . shape_info_data_buffer ( ) . pointer ( ) . as_byte_buffer ( ) . order ( byte_order . native_order ( ) ) n / / codint four byte ints at the beginning n allocated . put_int ( arr . rank ( ) ) n / / put data op_type next so its self describing n allocated . put_int ( arr . data ( ) . data_type ( ) . ordinal ( ) ) n allocated . put ( shape_buffer ) n allocated . put ( buffer ) n if ( rewind ) n allocated . rewind ( ) n }	0
Q_11	log the current pool state at debug level	C_11_2	override n public void retry ( face face , interest interest , on_data on_data , on_timeout on_timeout ) throws io_exception { n retry_context context = new retry_context ( face , interest , on_data , on_timeout ) n retry_interest ( context ) n }	0
Q_12	0 black tagint white i	C_12_0	private static bit_matrix render_result ( qr_code code , int width , int height , int quiet_zone ) { n byte_matrix input = code . get_matrix ( ) n if ( input = = null ) { n throw new illegal_state_exception ( ) n } n int input_width = input . get_width ( ) n int input_height = input . get_height ( ) n int qr_width = input_width + ( quiet_zone * codint ) n int qr_height = input_height + ( quiet_zone * codint ) n int output_width = math . max ( width , qr_width ) n int output_height = math . max ( height , qr_height ) n n int multiple = math . min ( output_width / qr_width , output_height / qr_height ) n / / padding includes both the quiet zone and the extra white pixels to accommodate the requested n / / dimensions . for example , if input is codint x25 the qr will be codint x33 including the quiet zone . n / / if the requested size is codint x160 , the multiple will be codint , for a qr of codint x132 . these will n / / handle all the padding from codint x100 ( the actual qr ) up to codint x160 . n int left_padding = ( output_width _ ( input_width * multiple ) ) / codint n int top_padding = ( output_height _ ( input_height * multiple ) ) / codint n n bit_matrix output = new bit_matrix ( output_width	1
Q_12	0 black tagint white i	C_12_1	"private map < string , string > filter_props ( map < string , object > props ) { n hash_map < string , string > filtered_props = new hash_map < > ( ) n iterator < string > it = props . key_set ( ) . iterator ( ) n boolean debug = tc . is_debug_enabled ( ) trace_component . is_any_tracing_enabled ( ) n n while ( it . has_next ( ) ) { n string key = it . next ( ) n string new_key = null n if ( debug ) { n tr . debug ( tc , codstr + key + codstr + props . get ( key ) ) n } n / / skip stuff we don codstr translated codstr to codstr authn_token codstr true "" ) n } else { n filtered_props . remove ( new_key ) / / invalid token type , back it out . n } n } n } n return filtered_props n }"	0
Q_12	0 black tagint white i	C_12_2	protected boolean is_project_manager ( cms_object user_cms ) throws cms_exception { n n cms_group manager_group = m_admin_cms . read_group ( get_workflow_project_manager_group ( ) ) n list < cms_group > groups = m_admin_cms . get_groups_of_user ( n user_cms . get_request_context ( ) . get_current_user ( ) . get_name ( ) , n false ) n return groups . contains ( manager_group ) n }	0
Q_13	add a file to the path	C_13_0	protected void add_path_file ( file path_component ) throws io_exception { n if ( path_components . contains ( path_component ) ) { n path_components . add_element ( path_component ) n } n if ( path_component . is_directory ( ) ) { n return n } n n string abs_path_plus_time_and_length = path_component . get_absolute_path ( ) n + path_component . last_modified ( ) + codstr + path_component . length ( ) n string classpath = ( string ) path_map . get ( abs_path_plus_time_and_length ) n if ( classpath = = null ) { n jar_file jar_file = null n try { n jar_file = new jar_file ( path_component ) n manifest manifest = jar_file . get_manifest ( ) n if ( manifest = = null ) { n return n } n classpath = manifest . get_main_attributes ( ) n . get_value ( attributes . name . class_path ) n } finally { n if ( jar_file = null ) { n jar_file . close ( ) n } n } n if ( classpath = = null ) { n classpath = codstr n } n path_map . put ( abs_path_plus_time_and_length , classpath ) n } n n if ( codstr . equals ( classpath ) ) { n url base_url = file_utils . get_file_url ( path_component ) n string_tokenizer st = new string_tokenizer ( classpath ) n while ( st . has_more_tokens ( ) ) { n string classpath_element = st . next_token ( ) n url library_url =	1
Q_13	add a file to the path	C_13_1	inline ( value = codstr , imported = { vm_command_line . class } , n statement_expression = true ) n public static process launch_vm ( class < ? > class_to_launch , string . additional_params ) throws io_exception { n return launch_vm ( class_to_launch . get_canonical_name ( ) , additional_params ) n }	0
Q_13	add a file to the path	C_13_2	public int add ( k key , int amount ) n { n count_entry < k > entry = _backing . get ( key ) n if ( entry = = null ) { n _backing . put ( key , new count_entry < k > ( key , amount ) ) n return amount n } n return ( entry . count + = amount ) n }	0
Q_14	benchmark to measure deserializing object by hand	C_14_0	public void time_bag_of_primitives_streaming ( int reps ) throws io_exception { n for ( int i = codint i < reps + + i ) { n string_reader reader = new string_reader ( json ) n json_reader jr = new json_reader ( reader ) n jr . begin_object ( ) n long long_value = codint n int int_value = codint n boolean boolean_value = false n string string_value = null n while ( jr . has_next ( ) ) { n string name = jr . next_name ( ) n if ( name . equals ( codstr ) ) { n long_value = jr . next_long ( ) n } else if ( name . equals ( codstr ) ) { n int_value = jr . next_int ( ) n } else if ( name . equals ( codstr ) ) { n boolean_value = jr . next_boolean ( ) n } else if ( name . equals ( codstr ) ) { n string_value = jr . next_string ( ) n } else { n throw new io_exception ( codstr + name ) n } n } n jr . end_object ( ) n new bag_of_primitives ( long_value , int_value , boolean_value , string_value ) n } n }	1
Q_14	benchmark to measure deserializing object by hand	C_14_1	public void append_arg ( string key , string value ) { n if ( args = null ) { n args . put ( key , value ) n } n }	0
Q_14	benchmark to measure deserializing object by hand	C_14_2	public attribute_dataset parse ( string name , input_stream stream ) throws io_exception , parse_exception { n buffered_reader reader = new buffered_reader ( new input_stream_reader ( stream ) ) n n string line = reader . read_line ( ) n if ( line = = null ) { n throw new io_exception ( codstr ) n } n n string [ ] tokens = line . split ( codstr , _ codint ) n int p = ( tokens . length _ codint ) / codint n n line = reader . read_line ( ) n if ( line = = null ) { n throw new io_exception ( codstr ) n } n n string [ ] samples = line . split ( codstr , _ codint ) n if ( samples . length = tokens . length _ codint ) { n throw new io_exception ( codstr ) n } n n attribute [ ] attributes = new attribute [ p ] n for ( int i = codint i < p i + + ) { n attributes [ i ] = new numeric_attribute ( tokens [ codint * i + codint ] , samples [ codint * i + codint ] ) n } n n line = reader . read_line ( ) n if ( line = = null ) { n throw new io_exception ( codstr ) n } n n int n = integer . parse_int ( line ) n if ( n	0
Q_15	get the list of eips from the dns	C_15_0	private collection < string > get_ei_ps_for_zone_from_dns ( string my_zone ) { n list < string > ec2_urls = endpoint_utils . get_service_urls_from_dns ( n client_config , n my_zone , n true , n new endpoint_utils . instance_info_based_url_randomizer ( application_info_manager . get_info ( ) ) n ) n return get_ei_ps_from_service_urls ( ec2_urls ) n }	1
Q_15	get the list of eips from the dns	C_15_1	"override n public void visit ( primitive_parameter primitive_parameter ) { n assert this . kh = null codstr t set codstr asserted derived proposition { codint } "" , param ) n }"	0
Q_15	get the list of eips from the dns	C_15_2	override n public void go ( ) { n logger . info ( codstr , timeout , element ) n web_driver_wait waiting = new web_driver_wait ( get_web_driver ( ) , timeout ) n try { n waiting . until ( expected_conditions . presence_of_element_located ( element ) ) n } catch ( null_pointer_exception e ) { n fail ( string . format ( codstr , element , timeout ) , e ) n } n }	0
Q_16	base64_encode the give byte as a string	C_16_0	public static string encode_base64 ( final byte [ ] data , final boolean chunked ) { n if ( data = null data . length > codint ) { n if ( chunked ) { n return base64_chunked_encoder . encode_to_string ( data ) . trim ( ) n } n return base64_unchunked_encoder . encode_to_string ( data ) . trim ( ) n } n return string_utils . empty n }	1
Q_16	base64_encode the give byte as a string	C_16_1	protected string get_base_uri ( ) { n if ( m_session = null m_session . get_auth_info ( ) = null m_session . get_auth_info ( ) . get_base_domain ( ) = null ) { n return string . format ( box_constants . base_uri_template , m_session . get_auth_info ( ) . get_base_domain ( ) ) n } n return m_base_uri n }	0
Q_16	base64_encode the give byte as a string	C_16_2	public void fire_layer_attribute_changed_event ( string attribute_name , object old_value , object new_value ) { n if ( is_event_firable ( ) ) { n final attribute_change_event . type e_type n if ( old_value = = null new_value = null ) { n e_type = attribute_change_event . type . addition n } else if ( old_value = null new_value = = null ) { n e_type = attribute_change_event . type . removal n } else { n e_type = attribute_change_event . type . value_update n } n final attribute_change_event e = new attribute_change_event ( n this , n e_type , n attribute_name , n new attribute_value_impl ( old_value ) , n attribute_name , n new attribute_value_impl ( new_value ) ) n final map_layer_attribute_change_event le = new map_layer_attribute_change_event ( this , e ) n fire_layer_attribute_changed_event ( le ) n } n }	0
Q_17	build signature validation filter if need	C_17_0	public static signature_validation_filter build_signature_validation_filter ( final string signature_resource_location ) throws exception { n val resource = resource_utils . get_resource_from ( signature_resource_location ) n return build_signature_validation_filter ( resource ) n }	1
Q_17	build signature validation filter if need	C_17_1	public void set_exclude_path ( path src ) { n if ( exclude_path = = null ) { n exclude_path = src n } else { n exclude_path . append ( src ) n } n }	0
Q_17	build signature validation filter if need	C_17_2	public static object get_parent ( tree_model tree_model , object node ) n { n return get_parent ( tree_model , node , tree_model . get_root ( ) ) n }	0
Q_18	get backup metadata filename prefix	C_18_0	sneaky_throws n protected string get_backup_metadata_filename_prefix ( final abstract_resource metadata_resource , final saml_registered_service service ) { n val md_file_name = metadata_resource . get_filename ( ) n if ( string_utils . is_blank ( md_file_name ) ) { n throw new file_not_found_exception ( codstr + metadata_resource ) n } n val file_name = service . get_metadata_location ( ) n val sha = digest_utils . sha ( file_name ) n logger . trace ( codstr , file_name , sha ) n return sha n }	1
Q_18	get backup metadata filename prefix	C_18_1	public < t > void refresh ( t entity ) { n document_info document_info = documents_by_entity . get ( entity ) n if ( document_info = = null ) { n throw new illegal_state_exception ( codstr ) n } n n increment_request_count ( ) n n get_documents_command command = new get_documents_command ( new string [ ] { document_info . get_id ( ) } , null , false ) n _request_executor . execute ( command , session_info ) n n refresh_internal ( entity , command , document_info ) n }	0
Q_18	get backup metadata filename prefix	C_18_2	check_return_value n public flux < e > flux ( ) { n return flux . from ( new publisher < e > ( ) { n override n public void subscribe ( subscriber < ? super e > s ) { n s . on_subscribe ( new query_subscription < > ( reactor_result . this , s ) ) n } n } ) n }	0
Q_19	resolve the address bound to the benchmark interface	C_19_0	private static inet_address build_benchmark_addr ( ) { n inet_address tmp = null n try { n enumeration < network_interface > network_interfaces = network_interface . get_network_interfaces ( ) n outer while ( network_interfaces . has_more_elements ( ) ) { n network_interface network_interface = network_interfaces . next_element ( ) n if ( network_interface . is_loopback ( ) ) { n continue n } n enumeration < network_interface > sub_interfaces = network_interface . get_sub_interfaces ( ) n while ( sub_interfaces . has_more_elements ( ) ) { n network_interface sub_loopback = sub_interfaces . next_element ( ) n if ( sub_loopback . get_display_name ( ) . contains ( codstr ) ) { n tmp = sub_loopback . get_inet_addresses ( ) . next_element ( ) n system . out . println ( codstr + tmp + codstr n + sub_loopback . get_display_name ( ) + codstr ) n break outer n } n } n } n } catch ( socket_exception se ) { n system . out . println ( codstr + se ) n } n if ( tmp = = null ) { n try { n system . out . println ( n codstr ) n tmp = inet_address . get_local_host ( ) n } catch ( unknown_host_exception uhe ) { n throw new runtime_exception ( uhe ) n } n } n return tmp n }	1
Q_19	resolve the address bound to the benchmark interface	C_19_1	public static < e > set < e > keys_at ( counter < e > c , double count ) { n set < e > keys = new hash_set < e > ( ) n for ( e key c . key_set ( ) ) { n if ( c . get_count ( key ) = = count ) { n keys . add ( key ) n } n } n return ( keys ) n }	0
Q_19	resolve the address bound to the benchmark interface	C_19_2	public static int [ ] range ( int start , int end ) { n if ( end < = start ) { n return new int [ codint ] n } else { n int [ ] rs = new int [ math . abs ( end _ start ) ] n for ( int i = start i < end + + i ) { n rs [ i _ start ] = i n } n return rs n } n }	0
Q_20	provide an event_group_loop to be use by the netty transport	C_20_0	public netty_channel_builder event_loop_group ( nullable event_loop_group event_loop_group ) { n if ( event_loop_group = null ) { n return event_loop_group_pool ( new fixed_object_pool < > ( event_loop_group ) ) n } n return event_loop_group_pool ( default_event_loop_group_pool ) n }	1
Q_20	provide an event_group_loop to be use by the netty transport	C_20_1	private void append_encoded ( string_builder builder , string s , charset charset , n boolean is_partially_encoded ) { n if ( s = = null ) { n throw new null_pointer_exception ( codstr ) n } n n int escape_start = _ codint n for ( int i = codint i < s . length ( ) i + + ) { n char c = s . char_at ( i ) n if ( ( c > = codstr c < = codstr ) n ( c > = codstr c < = codstr ) n ( c > = codstr c < = codstr ) n is_retained ( c ) n ( c = = codstr is_partially_encoded ) ) { n if ( escape_start = _ codint ) { n append_hex ( builder , s . substring ( escape_start , i ) , charset ) n escape_start = _ codint n } n if ( c = = codstr is_partially_encoded ) { n / / this is an encoded codint _ character sequence like codstr n builder . append ( s , i , math . min ( i + codint , s . length ( ) ) ) n i + = codint n } else if ( c = = codstr ) { n builder . append ( codstr ) n } else { n builder . append ( c ) n } n } else if ( escape_start = = _ codint ) {	0
Q_20	provide an event_group_loop to be use by the netty transport	C_20_2	public static tmglobal_tmtrafficpolicy_binding [ ] get_filtered ( nitro_service service , string filter ) throws exception { n tmglobal_tmtrafficpolicy_binding obj = new tmglobal_tmtrafficpolicy_binding ( ) n options option = new options ( ) n option . set_filter ( filter ) n tmglobal_tmtrafficpolicy_binding [ ] response = ( tmglobal_tmtrafficpolicy_binding [ ] ) obj . getfiltered ( service , option ) n return response n }	0
Q_21	rename the file	C_21_0	private static boolean rename_index_files ( n final file_system output_fs , n final path index_zip_file_path , n final path final_index_zip_file_path n ) n { n try { n return retry_utils . retry ( n ( ) _ > { n final boolean need_rename n n if ( output_fs . exists ( final_index_zip_file_path ) ) { n / / native_s3_file_system . rename won codstr file [ s / s / s_b ] existed , but wasn codstr , n final_index_zip_file . get_path ( ) , n date_times . utc ( final_index_zip_file . get_modification_time ( ) ) , n final_index_zip_file . get_len ( ) , n zip_file . get_path ( ) , n date_times . utc ( zip_file . get_modification_time ( ) ) , n zip_file . get_len ( ) n ) n output_fs . delete ( final_index_zip_file_path , false ) n need_rename = true n } else { n log . info ( n codstr , n final_index_zip_file . get_path ( ) , n date_times . utc ( final_index_zip_file . get_modification_time ( ) ) , n final_index_zip_file . get_len ( ) n ) n need_rename = false n } n } else { n need_rename = true n } n n if ( need_rename ) { n log . info ( codstr , index_zip_file_path , final_index_zip_file_path ) n return output_fs . rename ( index_zip_file_path , final_index_zip_file_path ) n } else { n return true n } n } , n file_utils . is_exception , n num_retries n ) n } n	1
Q_21	rename the file	C_21_1	override n public request < copy_snapshot_request > get_dry_run_request ( ) { n request < copy_snapshot_request > request = new copy_snapshot_request_marshaller ( ) . marshall ( this ) n request . add_parameter ( codstr , boolean . to_string ( true ) ) n return request n }	0
Q_21	rename the file	C_21_2	public static < t > collection < t > bag_of ( search_method < t > method ) n { n collection < t > result = new array_list < t > ( ) n find_all ( result , method ) n n return result n }	0
Q_22	a task will be run only if there be no current knowledge in the remote_task_runner of the task	C_22_0	override n public listenable_future < task_status > run ( final task task ) n { n final remote_task_runner_work_item complete_task , running_task , pending_task n if ( ( pending_task = pending_tasks . get ( task . get_id ( ) ) ) = null ) { n log . info ( codstr , task . get_id ( ) ) n run_pending_tasks ( ) n return pending_task . get_result ( ) n } else if ( ( running_task = running_tasks . get ( task . get_id ( ) ) ) = null ) { n zk_worker zk_worker = find_worker_running_task ( task . get_id ( ) ) n if ( zk_worker = = null ) { n log . warn ( codstr , task . get_id ( ) ) n } else { n log . info ( codstr , task . get_id ( ) , zk_worker . get_worker ( ) . get_host ( ) ) n task_announcement announcement = zk_worker . get_running_tasks ( ) . get ( task . get_id ( ) ) n if ( announcement . get_task_status ( ) . is_complete ( ) ) { n task_complete ( running_task , zk_worker , announcement . get_task_status ( ) ) n } n } n return running_task . get_result ( ) n } else if ( ( complete_task = complete_tasks . get ( task . get_id ( ) ) ) = null ) { n return complete_task . get_result ( ) n } else { n return add_pending_task ( task ) .	1
Q_22	a task will be run only if there be no current knowledge in the remote_task_runner of the task	C_22_1	list < page_entry > get_entries ( int first_index , int last_index ) { n preconditions . check_argument ( first_index < = last_index , codstr ) n array_list < page_entry > result = new array_list < > ( ) n for ( int i = first_index i < = last_index i + + ) { n result . add ( get_entry_at ( i ) ) n } n n return result n }	0
Q_22	a task will be run only if there be no current knowledge in the remote_task_runner of the task	C_22_2	public < out > data_stream_source < out > from_parallel_collection ( splittable_iterator < out > iterator , type_information < out > n type_info ) { n return from_parallel_collection ( iterator , type_info , codstr ) n }	0
Q_23	scale base on min max	C_23_0	public static data_rows_facade normalize ( data_rows_facade data_frame , list < string > skip_columns ) { n return normalize ( data_frame , codint , codint , skip_columns ) n }	1
Q_23	scale base on min max	C_23_1	public < t extends collection < r > , r > t next_collection ( non_null supplier < t > supplier , non_null class < r > element_type ) throws io_exception { n return next_collection ( supplier , null , element_type ) n }	0
Q_23	scale base on min max	C_23_2	protected zip_entry get_zip_entry ( string filename ) throws zip_exception { n n / / yes n zip_entry entry = get_zip_file ( ) . get_entry ( filename ) n / / path to file might be relative , too n if ( ( entry = = null ) filename . starts_with ( codstr ) ) { n entry = m_zip_file . get_entry ( filename . substring ( codint ) ) n } n if ( entry = = null ) { n throw new zip_exception ( n messages . get ( ) . get_bundle ( ) . key ( messages . log_importexport_file_not_found_in_zip_1 , filename ) ) n } n return entry n }	0
Q_24	convert a set of record in to a matrix	C_24_0	public static list < list < writable to_records ( ind_array matrix ) { n list < list < writable ret = new array_list < > ( ) n for ( int i = codint i < matrix . rows ( ) i + + ) { n ret . add ( record_converter . to_record ( matrix . get_row ( i ) ) ) n } n n return ret n }	1
Q_24	convert a set of record in to a matrix	C_24_1	public static java . util . list < com . liferay . commerce . product . type . virtual . model . cp_definition_virtual_setting > get_cp_definition_virtual_settings_by_uuid_and_company_id ( n string uuid , long company_id , int start , int end , n com . liferay . portal . kernel . util . order_by_comparator < com . liferay . commerce . product . type . virtual . model . cp_definition_virtual_setting > order_by_comparator ) { n return get_service ( ) n . get_cp_definition_virtual_settings_by_uuid_and_company_id ( uuid , n company_id , start , end , order_by_comparator ) n }	0
Q_24	convert a set of record in to a matrix	C_24_2	non_null n static bitmap get_bitmap_from_view ( non_null final view v ) { n bitmap bitmap = bitmap . create_bitmap ( v . get_measured_width ( ) , v . get_measured_height ( ) , bitmap . config . argb_8888 ) n canvas canvas = new canvas ( bitmap ) n v . draw ( canvas ) n return bitmap n }	0
Q_25	create a neural net configuration from json	C_25_0	public static neural_net_configuration from_json ( string json ) { n object_mapper mapper = mapper ( ) n try { n neural_net_configuration ret = mapper . read_value ( json , neural_net_configuration . class ) n return ret n } catch ( io_exception e ) { n throw new runtime_exception ( e ) n } n }	1
Q_25	create a neural net configuration from json	C_25_1	public static method_location get_method_location ( final node a_node , final set < method_location > method_locations ) { n n method_location to_return = null n n if ( a_node = null class_field_method_element_names . contains ( a_node . get_local_name ( ) . to_lower_case ( ) ) ) { n n final method_location valid_location = get_field_or_method_location_if_valid ( a_node , n get_containing_class_or_null ( a_node ) , n method_locations ) n n / / the method_location should represent a normal getter no arguments should be present . n if ( valid_location = null n method_location . no_parameters . equals_ignore_case ( valid_location . get_parameters_as_string ( ) ) ) { n to_return = valid_location n } n } n n / / all done . n return to_return n }	0
Q_25	create a neural net configuration from json	C_25_2	public task get_task ( execution_attempt_id execution_attempt_id ) { n task_slot_mapping task_slot_mapping = task_slot_mappings . get ( execution_attempt_id ) n n if ( task_slot_mapping = null ) { n return task_slot_mapping . get_task ( ) n } else { n return null n } n }	0
Q_26	this method stop parameter server	C_26_0	"public synchronized void shutdown ( ) { n if ( stop_lock . get ( ) ) n return n n n / / shutting down underlying transport n transport . shutdown ( ) n n / / disposing ind_array flow n disposable . dispose ( ) n n updater_params_subscribers . clear ( ) n model_params_subsribers . clear ( ) n updates_subscribers . clear ( ) n updates_queue . clear ( ) n n / / state that we "" re done n launch_lock . set ( false ) n n stop_lock . set ( true ) n }"	1
Q_26	this method stop parameter server	C_26_1	public boolean name_exists ( final string name ) { n boolean rslt = false / / default n try { n final i_tenant tenant = this . tenant_dao . get_tenant_by_name ( name ) n rslt = tenant = null n } catch ( illegal_argument_exception iae ) { n / / this exception is completely fine it simply n / / means there is no tenant with this name . n rslt = false n } n return rslt n }	0
Q_26	this method stop parameter server	C_26_2	public static void set_faults ( message message , knowledge_operation operation , map < string , object > context_overrides ) { n set_outputs_or_faults ( message , operation . get_fault_expression_mappings ( ) , context_overrides , fault , false ) n }	0
Q_27	put the function for the give id	C_27_0	public void put_function_for_id ( string id , differential_function function ) { n if ( ops . contains_key ( id ) ops . get ( id ) . get_op ( ) = = null ) { n throw new nd4_j_illegal_state_exception ( codstr ) n } else if ( function instanceof sd_variable ) { n throw new nd4_j_illegal_state_exception ( codstr ) n } n n if ( ops . contains_key ( id ) ) { n n } else { n ops . put ( id , same_diff_op . builder ( ) . name ( id ) . op ( function ) . build ( ) ) n } n }	1
Q_27	put the function for the give id	C_27_1	private static int search_for_chunk_containing_pos ( final long [ ] arr , final long pos , final int l , final int r ) { n / / the following three asserts can probably go away eventually , since it is fairly clear n / / that if these invariants hold at the beginning of the search , they will be maintained n assert l < r n assert arr [ l ] < = pos n assert pos < arr [ r ] n if ( l + codint = = r ) { n return l n } n final int m = l + ( r _ l ) / codint n if ( arr [ m ] < = pos ) { n return search_for_chunk_containing_pos ( arr , pos , m , r ) n } n return search_for_chunk_containing_pos ( arr , pos , l , m ) n }	0
Q_27	put the function for the give id	C_27_2	public void marshall ( grant_list_entry grant_list_entry , protocol_marshaller protocol_marshaller ) { n n if ( grant_list_entry = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( grant_list_entry . get_key_id ( ) , keyid_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_grant_id ( ) , grantid_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_name ( ) , name_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_creation_date ( ) , creationdate_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_grantee_principal ( ) , granteeprincipal_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_retiring_principal ( ) , retiringprincipal_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_issuing_account ( ) , issuingaccount_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_operations ( ) , operations_binding ) n protocol_marshaller . marshall ( grant_list_entry . get_constraints ( ) , constraints_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_28	this method predict label of the document	C_28_0	public string predict ( labelled_document document ) { n if ( document . get_referenced_content ( ) = null ) n return predict ( document . get_referenced_content ( ) ) n else n return predict ( document . get_content ( ) ) n }	1
Q_28	this method predict label of the document	C_28_1	public static < t > completable_future < t > delayed_task ( final supplier < t > task , n final duration delay , n final scheduled_executor_service executor_service ) { n completable_future < t > result = new completable_future < > ( ) n executor_service . schedule ( ( ) _ > result . complete ( run_or_fail ( ( ) _ > task . get ( ) , result ) ) , n delay . to_millis ( ) , n time_unit . milliseconds ) n return result n }	0
Q_28	this method predict label of the document	C_28_2	private static int partition ( double [ ] array , int from , int to ) { n / / select a pivot , and move it to the start of the slice i . e . to index from . n move_pivot_to_start_of_slice ( array , from , to ) n double pivot = array [ from ] n n / / move all elements with indexes in ( from , to ] which are greater than the pivot to the end of n / / the array . keep track of where those elements begin . n int partition_point = to n for ( int i = to i > from i _ ) { n if ( array [ i ] > pivot ) { n swap ( array , partition_point , i ) n partition_point _ n } n } n n / / we now know that all elements with indexes in ( from , partition_point ] are less than or equal n / / to the pivot at from , and all elements with indexes in ( partition_point , to ] are greater than n / / it . we swap the pivot into partition_point and we know the array is partitioned around that . n swap ( array , from , partition_point ) n return partition_point n }	0
Q_29	predict the give vector	C_29_0	public vector predict ( vector point ) { n return ml_lib_util . to_vector ( network . output ( ml_lib_util . to_vector ( point ) ) ) n }	1
Q_29	predict the give vector	C_29_1	public static < t extends comparable < ? super t int binary_search ( final list < ? extends t > c , final t key ) { n return array . binary_search ( c , key ) n }	0
Q_29	predict the give vector	C_29_2	public service_future < file_server_inner > get_async ( string resource_group_name , string workspace_name , string file_server_name , final service_callback < file_server_inner > service_callback ) { n return service_future . from_response ( get_with_service_response_async ( resource_group_name , workspace_name , file_server_name ) , service_callback ) n }	0
Q_30	perform rotation of point in the plane	C_30_0	override n public void rot ( long n , ind_array x , ind_array y , double c , double s ) { n n if ( nd4j . get_executioner ( ) . get_profiling_mode ( ) = = op_executioner . profiling_mode . all ) n op_profiler . get_instance ( ) . process_blas_call ( false , x , y ) n n if ( x . is_sparse ( ) y . is_sparse ( ) ) { n nd4j . get_sparse_blas_wrapper ( ) . level1 ( ) . rot ( n , x , y , c , s ) n } else if ( x . data ( ) . data_type ( ) = = data_type . double ) { n default_op_executioner . validate_data_type ( data_type . double , x , y ) n drot ( n , x , blas_buffer_util . get_blas_stride ( x ) , y , blas_buffer_util . get_blas_stride ( x ) , c , s ) n } else { n default_op_executioner . validate_data_type ( data_type . float , x , y ) n srot ( n , x , blas_buffer_util . get_blas_stride ( x ) , y , blas_buffer_util . get_blas_stride ( x ) , ( float ) c , ( float ) s ) n } n }	1
Q_30	perform rotation of point in the plane	C_30_1	public float get_s15_fixed16 ( int index ) throws io_exception n { n validate_index ( index , codint ) n n if ( _is_motorola_byte_order ) { n float res = ( get_byte ( index ) codint ) < < codint n ( get_byte ( index + codint ) codint ) n int d = ( get_byte ( index + codint ) codint ) < < codint n ( get_byte ( index + codint ) codint ) n return ( float ) ( res + d / number ) n } else { n / / this particular branch is untested n float res = ( get_byte ( index + codint ) codint ) < < codint n ( get_byte ( index + codint ) codint ) n int d = ( get_byte ( index + codint ) codint ) < < codint n ( get_byte ( index ) codint ) n return ( float ) ( res + d / number ) n } n }	0
Q_30	perform rotation of point in the plane	C_30_2	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < elementary_functions_type > create_arccos ( elementary_functions_type value ) { n return new jaxb_element < elementary_functions_type > ( _arccos_qname , elementary_functions_type . class , null , value ) n }	0
Q_31	get batch_normalization axis from kera layer configuration	C_31_0	private int get_batch_norm_axis ( map < string , object > layer_config ) n throws invalid_keras_configuration_exception { n map < string , object > inner_config = keras_layer_utils . get_inner_layer_config_from_config ( layer_config , conf ) n return ( int ) inner_config . get ( layer_field_axis ) n }	1
Q_31	get batch_normalization axis from kera layer configuration	C_31_1	public void rac_rent ( ) { n pos = pos _ codint n string user_name = car_search . get_last_search_params ( ) [ codint ] n string pickup_date = car_search . get_last_search_params ( ) [ codint ] n string return_date = car_search . get_last_search_params ( ) [ codint ] n this . searcher . search ( user_name , pickup_date , return_date ) n if ( searcher = null searcher . get_cars ( ) = null pos < searcher . get_cars ( ) . size ( ) searcher . get_cars ( ) . get ( pos ) = null ) { n res_status_type res_status = reserver . reserve_car ( searcher . get_customer ( ) n , searcher . get_cars ( ) . get ( pos ) n , pickup_date n , return_date ) n confirmation_type confirm = reserver . get_confirmation ( res_status n , searcher . get_customer ( ) n , searcher . get_cars ( ) . get ( pos ) n , pickup_date n , return_date ) n n res_car_type car = confirm . get_car ( ) n customer_details_type customer = confirm . get_customer ( ) n n system . out . println ( message_format . format ( confirmation n , confirm . get_description ( ) n , confirm . get_reservation_id ( ) n , customer . get_name ( ) n , customer . get_email ( ) n , customer . get_city ( ) n , customer . get_status ( ) n , car . get_brand ( ) n ,	0
Q_31	get batch_normalization axis from kera layer configuration	C_31_2	public void start_element ( n stylesheet_handler handler , string uri , string local_name , string raw_name , attributes attributes ) n throws org . xml . sax . sax_exception n { n final string result_ns n namespace_alias na = new namespace_alias ( handler . next_uid ( ) ) n n set_properties_from_attributes ( handler , raw_name , attributes , na ) n string prefix = na . get_stylesheet_prefix ( ) n if ( prefix . equals ( codstr codstr { n prefix = codstr n na . set_result_prefix ( prefix ) n result_ns = handler . get_namespace_for_prefix ( prefix ) n if ( null = = result_ns ) n handler . error ( xslt_error_resources . er_invalid_namespace_uri_value_for_result_prefix_for_default , null , null ) n } n else n { n result_ns = handler . get_namespace_for_prefix ( prefix ) n if ( null = = result_ns ) n handler . error ( xslt_error_resources . er_invalid_namespace_uri_value_for_result_prefix , new object [ ] { prefix } , null ) n } n n na . set_result_namespace ( result_ns ) n handler . get_stylesheet ( ) . set_namespace_alias ( na ) n handler . get_stylesheet ( ) . append_child ( na ) n }	0
Q_32	register spider for monitor	C_32_0	public synchronized spider_monitor register ( spider . spiders ) throws jm_exception { n for ( spider spider spiders ) { n monitor_spider_listener monitor_spider_listener = new monitor_spider_listener ( ) n if ( spider . get_spider_listeners ( ) = = null ) { n list < spider_listener > spider_listeners = new array_list < spider_listener > ( ) n spider_listeners . add ( monitor_spider_listener ) n spider . set_spider_listeners ( spider_listeners ) n } else { n spider . get_spider_listeners ( ) . add ( monitor_spider_listener ) n } n spider_status_mx_bean spider_status_m_bean = get_spider_status_m_bean ( spider , monitor_spider_listener ) n register_m_bean ( spider_status_m_bean ) n spider_statuses . add ( spider_status_m_bean ) n } n return this n }	1
Q_32	register spider for monitor	C_32_1	public runner_detail update_runner ( integer runner_id , string description , boolean active , list < string > tag_list , n boolean run_untagged , boolean locked , runner_detail . runner_access_level access_level ) throws git_lab_api_exception { n if ( runner_id = = null ) { n throw new runtime_exception ( codstr ) n } n n git_lab_api_form form_data = new git_lab_api_form ( ) n . with_param ( codstr , description , false ) n . with_param ( codstr , active , false ) n . with_param ( codstr , tag_list , false ) n . with_param ( codstr , run_untagged , false ) n . with_param ( codstr , locked , false ) n . with_param ( codstr , access_level , false ) n response response = put ( response . status . ok , form_data . as_map ( ) , codstr , runner_id ) n return ( response . read_entity ( runner_detail . class ) ) n }	0
Q_32	register spider for monitor	C_32_2	public mac acquire ( string algorithm ) { n mac result = null n n queue < mac > pool = this . mac_pool_by_algorithm . get ( algorithm ) n if ( pool = null ) { n result = pool . poll ( ) n } n n if ( result = null ) { n / / it has to be synchronized , for the case that some memory parts of mac provider are changed , n / / but not yet visible for this thread n synchronized ( result ) { n result . reset ( ) n } n return result n } n n try { n return mac . get_instance ( algorithm ) n } catch ( no_such_algorithm_exception e ) { n throw new illegal_argument_exception ( string . format ( codstr s codstr , algorithm ) , e ) n } n }	0
Q_33	return a map of data suitable for include in an link event	C_33_0	override n public map < string , string > to_event_data ( ) { n map < string , string > map = new hash_map < string , string > ( ) n map . put ( event_data_uri , get_request_header ( ) . get_uri ( ) . to_string ( ) ) n map . put ( event_data_request_header , get_request_header ( ) . to_string ( ) ) n map . put ( event_data_request_body , get_request_body ( ) . to_string ( ) ) n if ( get_response_header ( ) . is_empty ( ) ) { n map . put ( event_data_response_header , get_response_header ( ) . to_string ( ) ) n map . put ( event_data_response_body , get_response_body ( ) . to_string ( ) ) n } n return map n }	1
Q_33	return a map of data suitable for include in an link event	C_33_1	public paged_list < node_file > list_files_from_compute_node ( string pool_id , string node_id , boolean recursive , detail_level detail_level ) throws batch_error_exception , io_exception { n return list_files_from_compute_node ( pool_id , node_id , recursive , detail_level , null ) n }	0
Q_33	return a map of data suitable for include in an link event	C_33_2	private synchronized void init_buckets ( ) { n final sparse_int_array bucket_sizes = m_pool_params . bucket_sizes n n / / create the buckets n if ( bucket_sizes = null ) { n fill_buckets ( bucket_sizes ) n m_allow_new_buckets = false n } else { n m_allow_new_buckets = true n } n }	0
Q_34	set the log out indicator pattern	C_34_0	public void set_logged_out_indicator_pattern ( string logged_out_indicator_pattern ) { n if ( logged_out_indicator_pattern = = null logged_out_indicator_pattern . trim ( ) . length ( ) = = codint ) { n this . logged_out_indicator_pattern = null n } else { n this . logged_out_indicator_pattern = pattern . compile ( logged_out_indicator_pattern ) n } n }	1
Q_34	set the log out indicator pattern	C_34_1	public static void main ( string [ ] arg ) { n n system . get_properties ( ) . put ( codstr , codstr ) n n / / ( ulrivo ) read all arguments from the command line n string lower_arg n string urlid = null n string rc_file = null n boolean auto_connect = false n boolean urlid_connect = false n n b_must_exit = true n n for ( int i = codint i < arg . length i + + ) { n lower_arg = arg [ i ] . to_lower_case ( ) n n if ( lower_arg . starts_with ( codstr ) ) { n lower_arg = lower_arg . substring ( codint ) n } n n i + + n n if ( lower_arg . equals ( codstr ) ) { n def_driver = arg [ i ] n auto_connect = true n } else if ( lower_arg . equals ( codstr ) ) { n def_url = arg [ i ] n auto_connect = true n } else if ( lower_arg . equals ( codstr ) ) { n def_user = arg [ i ] n auto_connect = true n } else if ( lower_arg . equals ( codstr ) ) { n def_password = arg [ i ] n auto_connect = true n } else if ( lower_arg . equals ( codstr ) ) { n urlid = arg [ i ] n urlid_connect = true n } else if ( lower_arg	0
Q_34	set the log out indicator pattern	C_34_2	public static < t , u , e extends throwable > non_null bi_consumer < t , u > unwrapping_rethrow_bi_consumer ( final non_null throwing_bi_consumer < t , u , e > consumer ) { n return ( first , second ) _ > { n try { n consumer . throwing_accept ( first , second ) n } catch ( final throwable th ) { n throw rethrow ( unwrap ( th ) ) n } n } n }	0
Q_35	tell whether or not the give start and end be valid for the give length that be both start and end be low that	C_35_0	private static boolean is_valid_start_end_for_length ( int start , int end , int length ) { n if ( start > length end > length ) { n return false n } n return true n }	1
Q_35	tell whether or not the give start and end be valid for the give length that be both start and end be low that	C_35_1	public void required ( string tag_name , string action_name , string attribute_name , object attribute ) throws application_exception { n if ( attribute = = null ) n throw new application_exception ( codstr + attribute_name + codstr + tag_name + codstr + action_name + codstr ) n n }	0
Q_35	tell whether or not the give start and end be valid for the give length that be both start and end be low that	C_35_2	public static object [ ] convert_parameters ( object [ ] parms ) { n n if ( parms = = null ) n return null n n if ( parms . length = = codint ) n return parms n n / / create a new array to hold the output n object [ ] new_parms = new object [ parms . length ] n n / / convert empty strings to codstr n for ( int i = codint i < parms . length i + + ) { n if ( parms [ i ] instanceof string ( ( string ) parms [ i ] ) . equals ( sv_empty_string ) ) { n new_parms [ i ] = sv_empty_string_replacement n } else { n new_parms [ i ] = parms [ i ] n } n } n n return new_parms n }	0
Q_36	return the type reference for a class	C_36_0	protected static type get_type_reference ( object type ) { n if ( type instanceof type ) { n return ( type ) type n } else if ( type instanceof class ) { n return type . get_type ( ( class ) type ) n } else if ( type instanceof string ) { n string class_name = type . to_string ( ) n n string internal_name = get_internal_name ( class_name ) n if ( class_name . ends_with ( codstr ) ) { n internal_name = codstr + internal_name + codstr n } n return type . get_object_type ( internal_name ) n } else { n throw new illegal_argument_exception ( codstr + type + codstr ) n } n }	1
Q_36	return the type reference for a class	C_36_1	private boolean is_solr_enabled ( ) { n n boolean solr_enabled = open_cms . get_search_manager ( ) . get_solr_server_configuration ( ) . is_enabled ( ) n cms_solr_index solr_index = open_cms . get_search_manager ( ) . get_index_solr ( cms_solr_index . default_index_name_offline ) n return solr_enabled ( solr_index = null ) n }	0
Q_36	return the type reference for a class	C_36_2	public static synchronized void initialize_dxf_schema ( coordinate_reference_system crs ) { n if ( dxf_pointschema = null dxf_pointschema . get_attribute_count ( ) = codint ) n return n n simple_feature_type_builder b = new simple_feature_type_builder ( ) n b . set_name ( codstr ) n b . set_crs ( crs ) n b . add ( codstr , point . class ) n b . add ( codstr , string . class ) n b . add ( codstr , string . class ) n b . add ( codstr , double . class ) n b . add ( codstr , double . class ) n b . add ( codstr , integer . class ) n b . add ( codstr , string . class ) n b . add ( codstr , double . class ) n b . add ( codstr , string . class ) n dxf_pointschema = b . build_feature_type ( ) n n b = new simple_feature_type_builder ( ) n b . set_name ( codstr ) n b . set_crs ( crs ) n b . add ( codstr , line_string . class ) n b . add ( codstr , string . class ) n b . add ( codstr , string . class ) n b . add ( codstr , double . class ) n b . add ( codstr , double . class ) n b . add ( codstr , integer . class ) n b . add (	0
Q_37	wrap a observer	C_37_0	static < t > observer < t > wrap ( observer < t > downstream , n list < runnable_instrumenter > instrumentations ) { n return new rx_instrumented_observer < > ( downstream , instrumentations ) n }	1
Q_37	wrap a observer	C_37_1	public void set_property_value_tag_replace_id ( string property_value_tagreplace_id ) throws cms_illegal_argument_exception { n n if ( cms_string_util . is_empty_or_whitespace_only ( property_value_tagreplace_id ) ) { n m_property_value_tag_replace_id = get_default_tag_replace_id ( ) n } else { n m_property_value_tag_replace_id = property_value_tagreplace_id n } n }	0
Q_37	wrap a observer	C_37_2	public long guess_next_bgzf_block_start ( long beg , long end ) n throws io_exception n { n / / buffer what we need to go through . since the max size of a bgzf block n / / is codint ( codint k ) , and we might be just one byte off from the start of n / / the previous one , we need codint bytes for the start , and then codint n / / for the block we codstr s possible to get an n / / out_of_memory_error due to an overly large size . n } catch ( throwable e ) { n / / guessed bgzf position incorrectly try the next guess . n + + pos n continue n } n return beg + pos n } n }	0
Q_38	execute after the bean creation	C_38_0	post_construct n public void process ( ) { n collection < bean_definition < ? filter_definitions = bean_context . get_bean_definitions ( qualifiers . by_stereotype ( filter . class ) ) n for ( bean_definition < ? > bean_definition filter_definitions ) { n if ( http_client_filter . class . is_assignable_from ( bean_definition . get_bean_type ( ) ) ) { n / / ignore http client filters n continue n } n string [ ] patterns = bean_definition . get_value ( filter . class , string [ ] . class ) . or_else ( null ) n if ( array_utils . is_not_empty ( patterns ) ) { n http_method [ ] methods = bean_definition . get_value ( filter . class , codstr , http_method [ ] . class ) . or_else ( null ) n string first = patterns [ codint ] n filter_route filter_route = add_filter ( first , ( ) _ > bean_context . get_bean ( ( class < http_filter > ) bean_definition . get_bean_type ( ) ) ) n if ( patterns . length > codint ) { n for ( int i = codint i < patterns . length i + + ) { n string pattern = patterns [ i ] n filter_route . pattern ( pattern ) n } n } n if ( array_utils . is_not_empty ( methods ) ) { n filter_route . methods ( methods ) n } n } n } n }	1
Q_38	execute after the bean creation	C_38_1	public vertigo deploy_cluster ( string cluster , int nodes ) { n return deploy_cluster ( cluster , null , nodes , null ) n }	0
Q_38	execute after the bean creation	C_38_2	public < t > t request_component ( final class < t > component ) { n t existing_component = lookup_component ( component ) n if ( existing_component = = null ) { n throw new madvoc_exception ( codstr + component . get_name ( ) ) n } n return existing_component n }	0
Q_39	set the value member to the give type object	C_39_0	public annotation_value_builder < t > member ( string name , nullable class < ? > type ) { n if ( type = null ) { n values . put ( name , new annotation_class_value < > ( type ) ) n } n return this n }	1
Q_39	set the value member to the give type object	C_39_1	override n public void execute_list_single_actions ( ) throws io_exception , servlet_exception { n n string index_source = get_selected_item ( ) . get_id ( ) n map < string , string [ ] > params = new hash_map < string , string [ ] > ( ) n string action = get_param_list_action ( ) n if ( action . equals ( cms_search_index_source_control_list . list_action_overview_indexsource ) n action . equals ( cms_search_index_source_control_list . list_action_overview_indexsource2 ) ) { n / / forward to the index overview screen n params . put ( a_cms_edit_index_source_dialog . param_indexsource , new string [ ] { index_source } ) n params . put ( param_action , new string [ ] { dialog_initial } ) n params . put ( param_style , new string [ ] { cms_tool_dialog . style_new } ) n get_tool_manager ( ) . jsp_forward_tool ( this , codstr , params ) n } n }	0
Q_39	set the value member to the give type object	C_39_2	public static properties get_props ( properties props , string name , properties default_properties ) { n final string prop_string = props . get_property ( name ) n if ( prop_string = = null ) return default_properties n string [ ] prop_values = prop_string . split ( codstr ) n if ( prop_values . length < codint ) { n throw new illegal_argument_exception ( codstr codstr codstr ) n } n properties properties = new properties ( ) n for ( int i = codint i < prop_values . length i + + ) { n string [ ] prop = prop_values [ i ] . split ( codstr ) n if ( prop . length = codint ) throw new illegal_argument_exception ( codstr codstr codstr ) n properties . put ( prop [ codint ] , prop [ codint ] ) n } n return properties n }	0
Q_40	this method will pause the timer and reverse the animation if the timer already	C_40_0	public void reverse_and_continue ( ) { n if ( is_running ( ) ) { n super . stop ( ) n for ( animation_handler handler animation_handlers ) { n handler . reverse ( total_elapsed_milliseconds ) n } n start_time = _ codint n super . start ( ) n } else { n start ( ) n } n }	1
Q_40	this method will pause the timer and reverse the animation if the timer already	C_40_1	private void set_serialization_id ( configurable_listable_bean_factory bean_factory ) { n n if ( bean_factory instanceof default_listable_bean_factory ) { n n string id = this . id n if ( id = = null ) { n list < string > list = new array_list < > ( n arrays . as_list ( bean_factory . get_bean_definition_names ( ) ) ) n collections . sort ( list ) n string names = list . to_string ( ) n logger . debug ( codstr + names ) n id = uuid . name_uuid_from_bytes ( names . get_bytes ( ) ) . to_string ( ) n } n n logger . info ( codstr + id ) n ( ( default_listable_bean_factory ) bean_factory ) . set_serialization_id ( id ) n n } n else { n logger . warn ( n codstr n + codstr ) n } n n }	0
Q_40	this method will pause the timer and reverse the animation if the timer already	C_40_2	public static < t > key_range < t > greater_than ( final t start ) { n return new key_range < > ( key_range_type . forward_greater_than , start , null ) n }	0
Q_41	function to fetch hcat token as per the specify hive configuration and then store the token	C_41_0	private token < delegation_token_identifier > fetch_hcat_token ( final string user_to_proxy , n final hive_conf hive_conf , final string token_signature_overwrite , final logger logger ) n throws io_exception , meta_exception , t_exception { n n logger . info ( hive_conf . conf_vars . metastoreuris . varname + codstr n + hive_conf . get ( hive_conf . conf_vars . metastoreuris . varname ) ) n n logger . info ( hive_conf . conf_vars . metastore_use_thrift_sasl . varname + codstr n + hive_conf . get ( hive_conf . conf_vars . metastore_use_thrift_sasl . varname ) ) n n logger . info ( hive_conf . conf_vars . metastore_kerberos_principal . varname + codstr n + hive_conf . get ( hive_conf . conf_vars . metastore_kerberos_principal . varname ) ) n n final i_meta_store_client hive_client = create_retrying_meta_store_client ( hive_conf ) n final string hcat_token_str = n hive_client . get_delegation_token ( user_to_proxy , user_group_information n . get_login_user ( ) . get_short_user_name ( ) ) n final token < delegation_token_identifier > hcat_token = n new token < > ( ) n hcat_token . decode_from_url_string ( hcat_token_str ) n n / / overwrite the value of the service property of the token if the signature n / / override is specified . n / / if the service field is set , do not overwrite that n if ( hcat_token . get_service ( ) . get_length ( ) < = codint token_signature_overwrite = null n token_signature_overwrite . trim ( ) . length ( ) > codint ) { n hcat_token	1
Q_41	function to fetch hcat token as per the specify hive configuration and then store the token	C_41_1	public string get_value_string ( ) { n if ( current = = state . key ) { n return value_str n } else if ( current = = state . value_string ) { n return value_str n } else if ( current = = state . value_null ) { n return null n } else { n throw new illegal_state_exception ( codstr + current ) n } n }	0
Q_41	function to fetch hcat token as per the specify hive configuration and then store the token	C_41_2	override n public void remove_by_group_id ( long group_id ) { n for ( commerce_notification_template commerce_notification_template find_by_group_id ( n group_id , query_util . all_pos , query_util . all_pos , null ) ) { n remove ( commerce_notification_template ) n } n }	0
Q_42	record exception and set status	C_42_0	final int record_exceptional_completion ( throwable ex ) { n int s n if ( ( s = status ) > = codint ) { n int h = system . identity_hash_code ( this ) n final reentrant_lock lock = exception_table_lock n lock . lock ( ) n try { n expunge_stale_exceptions ( ) n exception_node [ ] t = exception_table n int i = h ( t . length _ codint ) n for ( exception_node e = t [ i ] e = e . next ) { n if ( e = = null ) { n t [ i ] = new exception_node ( this , ex , t [ i ] ) n break n } n if ( e . get ( ) = = this ) / / already present n break n } n } finally { n lock . unlock ( ) n } n s = set_completion ( exceptional ) n } n return s n }	1
Q_42	record exception and set status	C_42_1	public static < t , k > jackson_db_collection < t , k > wrap ( db_collection db_collection , class < t > type , class < k > key_type , class < ? > view ) { n object_mapper object_mapper = new object_mapper ( ) n object_mapper . set_serialization_config ( object_mapper . get_serialization_config ( ) . with_view ( view ) ) n mongo_jackson_mapper_module . configure ( object_mapper ) n return new jackson_db_collection < t , k > ( db_collection , default_object_mapper . construct_type ( type ) , n default_object_mapper . construct_type ( key_type ) , object_mapper , null ) n }	0
Q_42	record exception and set status	C_42_2	void push_space_handling ( attributes attrs ) n throws org . xml . sax . sax_parse_exception n { n string value = attrs . get_value ( codstr ) n if ( null = = value ) n { n m_space_preserve_stack . push ( m_space_preserve_stack . peek_or_false ( ) ) n } n else if ( value . equals ( codstr ) ) n { n m_space_preserve_stack . push ( true ) n } n else if ( value . equals ( codstr ) ) n { n m_space_preserve_stack . push ( false ) n } n else n { n sax_source_locator locator = get_locator ( ) n error_listener handler = m_stylesheet_processor . get_error_listener ( ) n n try n { n handler . error ( new transformer_exception ( xsl_messages . create_message ( xslt_error_resources . er_illegal_xmlspace_value , null ) , locator ) ) / / codstr , locator ) ) n } n catch ( transformer_exception te ) n { n throw new org . xml . sax . sax_parse_exception ( te . get_message ( ) , locator , te ) n } n m_space_preserve_stack . push ( m_space_preserve_stack . peek ( ) ) n } n }	0
Q_43	one per node	C_43_0	override public void reduce ( j_stack_collector_task that ) { n for ( int i = codint i < _traces . length + + i ) n if ( _traces [ i ] = = null ) n _traces [ i ] = that . _traces [ i ] n }	1
Q_43	one per node	C_43_1	does_service_request n public cloud_queue_message retrieve_message ( final int visibility_timeout_in_seconds , final queue_request_options options , n final operation_context op_context ) throws storage_exception { n return get_first_or_null ( this . retrieve_messages ( codint , visibility_timeout_in_seconds , options , op_context ) ) n }	0
Q_43	one per node	C_43_2	override n public boolean file_deleted ( file file ) { n file output = get_output_file ( file , output_extension ) n file_utils . delete_quietly ( output ) n return true n }	0
Q_44	initialize the project when it start	C_44_0	public static void init ( blade blade , string context_path ) { n web_context . blade = blade n web_context . context_path = context_path n web_context . session_key = blade . environment ( ) . get ( env_key_session_key , default_session_key ) n }	1
Q_44	initialize the project when it start	C_44_1	public java . rmi . remote get_port ( class service_endpoint_interface ) throws javax . xml . rpc . service_exception { n try { n if ( com . google . api . ads . adwords . axis . v201809 . cm . conversion_tracker_service_interface . class . is_assignable_from ( service_endpoint_interface ) ) { n com . google . api . ads . adwords . axis . v201809 . cm . conversion_tracker_service_soap_binding_stub _stub = new com . google . api . ads . adwords . axis . v201809 . cm . conversion_tracker_service_soap_binding_stub ( new java . net . url ( conversion_tracker_service_interface_port_address ) , this ) n _stub . set_port_name ( get_conversion_tracker_service_interface_port_wsdd_service_name ( ) ) n return _stub n } n } n catch ( java . lang . throwable t ) { n throw new javax . xml . rpc . service_exception ( t ) n } n throw new javax . xml . rpc . service_exception ( codstr + ( service_endpoint_interface = = null ? codstr service_endpoint_interface . get_name ( ) ) ) n }	0
Q_44	initialize the project when it start	C_44_2	public user_query create_user_query ( user_query user_query_param ) n { n if ( user_query_param = null this . service_ticket = null ) n { n user_query_param . set_service_ticket ( this . service_ticket ) n } n n return new user_query ( this . put_json ( n user_query_param , n ws . path . user_query . version1 . user_query_create ( ) ) ) n }	0
Q_45	get the unqualified branch name give the qualify one of the following form	C_45_0	private string get_unqualified_branch ( string qualified_branch ) { n string branch_name = qualified_branch n pattern pattern = pattern . compile ( codstr ) n matcher matcher = pattern . matcher ( branch_name ) n if ( matcher . matches ( ) ) { n if ( matcher . group ( codint ) = null ) { n branch_name = matcher . group ( codint ) n } else if ( matcher . group ( codint ) = null ) { n branch_name = matcher . group ( codint ) n } n } n return branch_name n }	1
Q_45	get the unqualified branch name give the qualify one of the following form	C_45_1	protected static void read ( input_stream xml_input_stream ) throws sax_exception , io_exception , parser_configuration_exception , jaxb_exception { n logger . info ( codstr ) n immobiliare_it_document doc = immobiliare_it_utils . create_document ( xml_input_stream ) n if ( doc = = null ) { n logger . warn ( codstr ) n } else { n print_to_console ( doc ) n } n }	0
Q_45	get the unqualified branch name give the qualify one of the following form	C_45_2	public void set_position ( cms_position_bean position , cms_position_bean buttons_position , element container_element ) { n n m_position = position n element parent = cms_dom_util . get_positioning_parent ( get_element ( ) ) n style style = get_element ( ) . get_style ( ) n style . set_right ( n parent . get_offset_width ( ) n _ ( ( buttons_position . get_left ( ) + buttons_position . get_width ( ) ) _ parent . get_absolute_left ( ) ) , n unit . px ) n int top = buttons_position . get_top ( ) _ parent . get_absolute_top ( ) n if ( top < codint ) { n top = codint n } n style . set_top ( top , unit . px ) n }	0
Q_46	create a list of unique owner from the owner and owner request	C_46_0	private list < owner > get_owners ( dashboard_remote_request request ) throws hygieia_exception { n dashboard_remote_request . dashboard_meta_data meta_data = request . get_meta_data ( ) n owner owner = meta_data . get_owner ( ) n list < owner > owners = meta_data . get_owners ( ) n n if ( owner = = null collection_utils . is_empty ( owners ) ) { n throw new hygieia_exception ( codstr , hygieia_exception . invalid_configuration ) n } n n if ( owners = = null ) { n owners = new array_list < owner > ( ) n owners . add ( owner ) n } else if ( owner = null ) { n owners . add ( owner ) n } n n set < owner > unique_owners = new hash_set < owner > ( owners ) n return new array_list < owner > ( unique_owners ) n }	1
Q_46	create a list of unique owner from the owner and owner request	C_46_1	private void add_geometry ( geometry geom ) { n if ( geom = null ) { n if ( geom instanceof geometry_collection ) { n list < geometry > to_unit_tmp = new array_list < geometry > ( geom . get_num_geometries ( ) ) n for ( int i = codint i < geom . get_num_geometries ( ) i + + ) { n to_unit_tmp . add ( geom . get_geometry_n ( i ) ) n feed_dim ( geom . get_geometry_n ( i ) ) n } n to_unite . add_all ( to_unit_tmp ) n } else { n to_unite . add ( geom ) n feed_dim ( geom ) n } n } n }	0
Q_46	create a list of unique owner from the owner and owner request	C_46_2	public t add_spark_arg ( string arg ) { n spark_submit_option_parser validator = new argument_validator ( false ) n validator . parse ( arrays . as_list ( arg ) ) n builder . user_args . add ( arg ) n return self ( ) n }	0
Q_47	read a range of byte from the stream_segment	C_47_0	read_result read ( long start_offset , int max_length , duration timeout ) { n exceptions . check_not_closed ( this . closed , this ) n preconditions . check_state ( this . recovery_mode , codstr ) n exceptions . check_argument ( start_offset > = codint , codstr , codstr ) n exceptions . check_argument ( max_length > = codint , codstr , codstr ) n n / / we only check if we exceeded the last offset of a sealed segment . if we attempted to read from a truncated offset n / / that will be handled by returning a truncated read_result_entry_type . n exceptions . check_argument ( check_read_availability ( start_offset , true ) = read_availability . beyond_last_offset , n codstr , codstr ) n n log . debug ( codstr , this . trace_object_id , start_offset , max_length ) n return new stream_segment_read_result ( start_offset , max_length , this get_multi_read_result_entry , this . trace_object_id ) n }	1
Q_47	read a range of byte from the stream_segment	C_47_1	private static void wait_for_recoveries_to_finish ( cloud_solr_client server , string collection ) throws keeper_exception , interrupted_exception { n zk_state_reader zk_state_reader = server . get_zk_state_reader ( ) n try { n boolean cont = true n n while ( cont ) { n boolean saw_live_recovering = false n zk_state_reader . update_cluster_state ( true ) n cluster_state cluster_state = zk_state_reader . get_cluster_state ( ) n map < string , slice > slices = cluster_state . get_slices_map ( collection ) n preconditions . check_not_null ( codstr + collection , slices ) n n / / change paths for replica . state per solr refactoring n / / remove sync state per http / / tinyurl . com / pag6rwt n for ( map . entry < string , slice > entry slices . entry_set ( ) ) { n map < string , replica > shards = entry . get_value ( ) . get_replicas_map ( ) n for ( map . entry < string , replica > shard shards . entry_set ( ) ) { n string state = shard . get_value ( ) . get_str ( zk_state_reader . state_prop ) n if ( ( state . equals ( replica . state . recovering ) state . equals ( replica . state . down ) ) n cluster_state . live_nodes_contain ( shard . get_value ( ) . get_str ( n zk_state_reader . node_name_prop ) ) ) { n saw_live_recovering = true n } n } n } n n n if ( saw_live_recovering	0
Q_47	read a range of byte from the stream_segment	C_47_2	public void marshall ( aws_s3_bucket_details aws_s3_bucket_details , protocol_marshaller protocol_marshaller ) { n n if ( aws_s3_bucket_details = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( aws_s3_bucket_details . get_owner_id ( ) , ownerid_binding ) n protocol_marshaller . marshall ( aws_s3_bucket_details . get_owner_name ( ) , ownername_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_48	create a new link async_table_entry_reader that can be use to read a key	C_48_0	static async_table_entry_reader < table_key > read_key ( long key_version , entry_serializer serializer , timeout_timer timer ) { n return new key_reader ( key_version , serializer , timer ) n }	1
Q_48	create a new link async_table_entry_reader that can be use to read a key	C_48_1	public static void char_value ( final method_visitor mv ) { n mv . visit_type_insn ( checkcast , signature_java_lang_character ) n mv . visit_method_insn ( invokevirtual , signature_java_lang_character , codstr , codstr , false ) n }	0
Q_48	create a new link async_table_entry_reader that can be use to read a key	C_48_2	protected void push_instance_of_type_info ( final expression object_of_instance_of , final expression type_expression ) { n final map < object , list < class_node tempo = type_checking_context . temporary_if_branch_type_information . peek ( ) n object key = extract_temporary_type_info_key ( object_of_instance_of ) n list < class_node > potential_types = tempo . get ( key ) n if ( potential_types = = null ) { n potential_types = new linked_list < class_node > ( ) n tempo . put ( key , potential_types ) n } n potential_types . add ( type_expression . get_type ( ) ) n }	0
Q_49	identical to call code release_exceptionally reset except it be atomic	C_49_0	public void release_exceptionally_and_reset ( throwable e ) { n array_list < completable_future < t to_complete = null n synchronized ( lock ) { n if ( waiting_futures . is_empty ( ) ) { n to_complete = new array_list < > ( waiting_futures ) n waiting_futures . clear ( ) n } n released = false n this . e = null n result = null n running_thread_id = null n } n if ( to_complete = null ) { n for ( completable_future < t > f to_complete ) { n f . complete_exceptionally ( e ) n } n } n }	1
Q_49	identical to call code release_exceptionally reset except it be atomic	C_49_1	"override n public string read_utf ( ) throws jms_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( this , tc , codstr ) n string result n n try { n / / check that we are in read mode n check_body_readable ( codstr ) n if ( requires_init ) n lazy_init_for_reading ( ) n n / / mark the current position , so we can return to it if there codstr read_utf codstr end_bytesmessage_cwsia0183 "" , n null , n tc ) n jmse . init_cause ( e ) n throw jmse n } n }"	0
Q_49	identical to call code release_exceptionally reset except it be atomic	C_49_2	public void dump_unit_profiles ( ) n { n for ( map . entry < string , unit_profile > entry _profiles . entry_set ( ) ) { n log . info ( codstr + entry . get_key ( ) + codstr + entry . get_value ( ) ) n } n }	0
Q_50	create an address resource in the specify project use the data include in the request	C_50_0	beta_api n public final operation insert_address ( string region , address address_resource ) { n n insert_address_http_request request = n insert_address_http_request . new_builder ( ) n . set_region ( region ) n . set_address_resource ( address_resource ) n . build ( ) n return insert_address ( request ) n }	1
Q_50	create an address resource in the specify project use the data include in the request	C_50_1	public classification name_of ( string classification_name , string name ) { n return find_classification_meta ( ( string ) classification_name , ( ) _ > { n return codstr codstr codstr codstr codstr n } ) . name_of ( name ) n }	0
Q_50	create an address resource in the specify project use the data include in the request	C_50_2	public void set_level ( integer new_level ) { n integer old_level = level n level = new_level n if ( e_notification_required ( ) ) n e_notify ( new e_notification_impl ( this , notification . set , afplib_package . page_overlay_conditional_processing_level , old_level , level ) ) n }	0
Q_51	generate a consistency token for a table which can be use in check_consistency to check	C_51_0	public final generate_consistency_token_response generate_consistency_token ( string name ) { n n generate_consistency_token_request request = n generate_consistency_token_request . new_builder ( ) . set_name ( name ) . build ( ) n return generate_consistency_token ( request ) n }	1
Q_51	generate a consistency token for a table which can be use in check_consistency to check	C_51_1	public do_concat set ( jc_label label ) { n modify_terminal mt = modify_factory . set_label ( label ) n ast_node clause = api_object_access . get_ast_node ( mt ) n clause . set_clause_type ( clause_type . set ) n return create_concat ( clause ) n }	0
Q_51	generate a consistency token for a table which can be use in check_consistency to check	C_51_2	private void read_table ( input_stream is , synchro_table table ) throws io_exception n { n int skip = table . get_offset ( ) _ m_offset n if ( skip = codint ) n { n stream_helper . skip ( is , skip ) n m_offset + = skip n } n n string table_name = datatype_converter . get_string ( is ) n int table_name_length = codint + table_name . length ( ) n m_offset + = table_name_length n n int data_length n if ( table . get_length ( ) = = _ codint ) n { n data_length = is . available ( ) n } n else n { n data_length = table . get_length ( ) _ table_name_length n } n n synchro_logger . log ( codstr , table_name ) n n byte [ ] compressed_table_data = new byte [ data_length ] n is . read ( compressed_table_data ) n m_offset + = data_length n n inflater inflater = new inflater ( ) n inflater . set_input ( compressed_table_data ) n byte_array_output_stream output_stream = new byte_array_output_stream ( compressed_table_data . length ) n byte [ ] buffer = new byte [ codint ] n while ( inflater . finished ( ) ) n { n int count n n try n { n count = inflater . inflate ( buffer ) n } n catch ( data_format_exception ex ) n { n throw new io_exception ( ex ) n } n output_stream . write ( buffer , codint	0
Q_52	get value from int use normalize index	C_52_0	public static int int_array_get ( int [ ] a , int i ) { n try { n return a [ i ] n } catch ( throwable t ) { n return a [ default_groovy_methods_support . normalise_index ( i , a . length ) ] n } n }	1
Q_52	get value from int use normalize index	C_52_1	public t find_and_modify ( db_object query , db_object fields , db_object sort , boolean remove , db_update . builder update , boolean return_new , boolean upsert ) { n return convert_from_db_object ( db_collection . find_and_modify ( serialize_fields ( query ) , fields , sort , remove , update . serialise_and_get ( object_mapper ) , return_new , upsert ) ) n }	0
Q_52	get value from int use normalize index	C_52_2	"public static method_annotation from_foreign_method ( slashed_class_name string class_name , string method_name , string method_sig , int access_flags ) { n n class_name = class_name . to_dotted_class_name ( class_name ) n n / / create method_annotation . n / / it won "" t have source lines yet . n method_annotation method_annotation = new method_annotation ( class_name , method_name , method_sig , n ( access_flags const . acc_static ) = codint ) n n source_line_annotation source_lines = source_line_annotation . get_source_annotation_for_method ( class_name , method_name , method_sig ) n n method_annotation . set_source_lines ( source_lines ) n n return method_annotation n }"	0
Q_53	switch the builder be proxy_builder during the execution of a closure	C_53_0	public object with_builder ( factory_builder_support builder , closure closure ) { n if ( builder = = null closure = = null ) { n return null n } n n object result = null n object previous_context = get_proxy_builder ( ) . get_context ( ) n factory_builder_support previous_proxy_builder = local_proxy_builder . get ( ) n try { n local_proxy_builder . set ( builder ) n closure . set_delegate ( builder ) n result = closure . call ( ) n } n catch ( runtime_exception e ) { n / / remove contexts created after we started n local_proxy_builder . set ( previous_proxy_builder ) n if ( get_proxy_builder ( ) . get_contexts ( ) . contains ( previous_context ) ) { n map < string , object > context = get_proxy_builder ( ) . get_context ( ) n while ( context = null context = previous_context ) { n get_proxy_builder ( ) . pop_context ( ) n context = get_proxy_builder ( ) . get_context ( ) n } n } n throw e n } n finally { n local_proxy_builder . set ( previous_proxy_builder ) n } n n return result n }	1
Q_53	switch the builder be proxy_builder during the execution of a closure	C_53_1	public byte [ ] get_raw_data ( ) throws io_exception n { n int content_length = request . get_content_length ( ) n if ( content_length < codint ) { n return null n } n n byte [ ] buffer = new byte [ content_length ] n servlet_input_stream is = request . get_input_stream ( ) n for ( int i = codint i < content_length ) { n int r_len = is . read ( buffer , i , content_length _ i ) n if ( r_len = = _ codint ) { n break n } n n i + = r_len n } n n return buffer n }	0
Q_53	switch the builder be proxy_builder during the execution of a closure	C_53_2	private rest_endpoint_group get_endpoint_group ( string command_line ) { n if ( command_line = = null ) { n return null n } n string_tokenizer st = new string_tokenizer ( command_line ) n string operation = next_token ( st ) n / / if the operation doesn codstr s unknown . n if ( parsers . get_parser ( operation ) = = null ) { n return null n } n / / the operation is a http method so the next token should be a resource path n string request_uri = next_token ( st ) n return request_uri = null ? get_http_api_endpoint_group ( operation , request_uri ) null n }	0
Q_54	read the pid from the specify pid file	C_54_0	private static long get_pid ( file pid_file ) { n file_reader reader = null n buffered_reader line_reader = null n string pid_line = null n try { n reader = new file_reader ( pid_file ) n line_reader = new buffered_reader ( reader ) n pid_line = line_reader . read_line ( ) n if ( pid_line = null ) { n pid_line = pid_line . trim ( ) n } n } catch ( exception ex ) { n log . error ( codstr + pid_file . get_absolute_path ( ) + codstr , ex ) n } finally { n if ( reader = null ) try { reader . close ( ) } catch ( exception ex ) { / * no op * / } n } n try { n return long . parse_long ( pid_line ) n } catch ( exception ex ) { n return null n } n }	1
Q_54	read the pid from the specify pid file	C_54_1	override n public cp_friendly_url_entry find_by_g_c_c_m_last ( long group_id , n long class_name_id , long class_pk , boolean main , n order_by_comparator < cp_friendly_url_entry > order_by_comparator ) n throws no_such_cp_friendly_url_entry_exception { n cp_friendly_url_entry cp_friendly_url_entry = fetch_by_g_c_c_m_last ( group_id , n class_name_id , class_pk , main , order_by_comparator ) n n if ( cp_friendly_url_entry = null ) { n return cp_friendly_url_entry n } n n string_bundler msg = new string_bundler ( codint ) n n msg . append ( _no_such_entity_with_key ) n n msg . append ( codstr ) n msg . append ( group_id ) n n msg . append ( codstr ) n msg . append ( class_name_id ) n n msg . append ( codstr ) n msg . append ( class_pk ) n n msg . append ( codstr ) n msg . append ( main ) n n msg . append ( codstr ) n n throw new no_such_cp_friendly_url_entry_exception ( msg . to_string ( ) ) n }	0
Q_54	read the pid from the specify pid file	C_54_2	public account get_account_by_name ( string account_name ) { n if ( account_name = null ) { n for ( account account get_accounts ( ) ) { n if ( account_name . equals ( account . name ) ) { n return account n } n } n } n return null n }	0
Q_55	get the string content of the document be code title element	C_55_0	public string title ( ) { n / / title is a preserve whitespace tag ( for document output ) , but normalised here n element title_el = get_elements_by_tag ( codstr ) . first ( ) n return title_el = null ? string_util . normalise_whitespace ( title_el . text ( ) ) . trim ( ) codstr n }	1
Q_55	get the string content of the document be code title element	C_55_1	nullable protected < t > t get_single_resource ( final search_filter sf , n final resource_type resource_type , final class < t > type ) throws flexiant_exception { n try { n list_result result = this . get_service ( ) . list_resources ( sf , null , resource_type ) n n if ( result . get_list ( ) . size ( ) > codint ) { n throw new flexiant_exception ( codstr ) n } n n if ( result . get_list ( ) . is_empty ( ) ) { n return null n } n n / / noinspection unchecked n return ( t ) result . get_list ( ) . get ( codint ) n n } catch ( extility_exception e ) { n throw new flexiant_exception ( codstr , e ) n } n }	0
Q_55	get the string content of the document be code title element	C_55_2	action ( name = codstr , n outputs = { n output ( response ) , n output ( return_result ) , n output ( return_code ) n } , n responses = { n response ( text = success , field = return_code , value = return_code_success , match_type = match_type . compare_equal ) , n response ( text = failure , field = return_code , value = return_code_failure , match_type = match_type . compare_equal , is_on_fail = true , is_default = true ) n } ) n public map < string , string > remove_element ( param ( value = list , required = true ) string list , n param ( value = element , required = true ) string index , n param ( value = delimiter , required = true ) string delimiter ) { n map < string , string > result = new hash_map < > ( ) n try { n if ( string_utils . is_empty ( list ) string_utils . is_empty ( index ) string_utils . is_empty ( delimiter ) ) { n throw new runtime_exception ( empty_input_exception ) n } else { n string [ ] elements = string_utils . split ( list , delimiter ) n elements = array_utils . remove ( elements , integer . parse_int ( index ) ) n result . put ( response , success ) n result . put ( return_result , string_utils . join ( elements , delimiter ) ) n result	0
Q_56	read a code rule_set code from an code input_source code	C_56_0	public object read ( final input_source in ) throws sax_exception , n io_exception { n if ( this . doc_fragment = = null ) { n document_builder_factory f n try { n f = document_builder_factory . new_instance ( ) n } catch ( factory_configuration_error e ) { n / / obscure jd_knumber bug where factory_finder in the jre returns a null class_loader , so fall back to hard coded xerces . n / / https / / stg . network . org / bugzilla / show_bug . cgi ? id = codint n / / http / / bugs . sun . com / bugdatabase / view_bug . do ? bug_id = codint n try { n f = ( document_builder_factory ) class . for_name ( codstr ) . new_instance ( ) n } catch ( exception e1 ) { n throw new runtime_exception ( codstr , n e1 ) n } n } catch ( exception e ) { n throw new runtime_exception ( codstr , n e ) n } n / / xxe protection start n try { n f . set_feature ( codstr , false ) n f . set_feature ( codstr , false ) n n } catch ( parser_configuration_exception e ) { n logger . warn ( codstr , e . get_message ( ) ) n } n / / xxe protection end n try { n this . document = f . new_document_builder ( ) . new_document ( ) n } catch	1
Q_56	read a code rule_set code from an code input_source code	C_56_1	public static list < object > string_to_class_instances ( string str , string separator , class [ ] attr_types , n object [ ] attr_values ) throws disi_exception { n array_list < object > tmp = new array_list < object > ( ) n string_tokenizer string_tokenizer = new string_tokenizer ( str , separator ) n while ( string_tokenizer . has_more_tokens ( ) ) { n object obj = get_class_instance ( string_tokenizer . next_token ( ) , attr_types , attr_values ) n if ( obj = null ) { n tmp . add ( obj ) n } n } n return tmp n }	0
Q_56	read a code rule_set code from an code input_source code	C_56_2	variable get_variable ( string name ) { n var_key var_key = var_key . create ( kind . user_defined , name ) n return get_variable ( var_key ) n }	0
Q_57	par source code	C_57_0	public < n extends node > parse_result < n > parse ( parse_start < n > start , provider provider ) { n assert_not_null ( start ) n assert_not_null ( provider ) n n final generated_drl_constraint_parser parser = get_parser_for_provider ( provider ) n try { n n result_node = start . parse ( parser ) n parse_result < n > result = new parse_result < > ( result_node , parser . problems , parser . get_tokens ( ) , n parser . get_comments_collection ( ) ) n n configuration . get_post_processors ( ) . for_each ( post_processor _ > n post_processor . process ( result , configuration ) ) n n result . get_problems ( ) . sort ( problem_by_begin_position ) n n return result n } catch ( exception e ) { n final string message = e . get_message ( ) = = null ? codstr e . get_message ( ) n parser . problems . add ( new problem ( message , null , e ) ) n return new parse_result < > ( null , parser . problems , parser . get_tokens ( ) , parser . get_comments_collection ( ) ) n } finally { n try { n provider . close ( ) n } catch ( io_exception e ) { n / / since we codstr t care about any errors . n } n } n }	1
Q_57	par source code	C_57_1	public void check ( gh_pull_request ghpr , boolean is_webhook ) { n if ( helper . is_project_disabled ( ) ) { n logger . log ( level . fine , codstr ) n return n } n / / call update pr with the update pr info and no comment n update_pr ( ghpr , null / * gh_issue_comment * / , is_webhook ) n commit_author = get_pr_commit_author ( ) n check_skip_build ( ) n check_black_list_labels ( ) n check_white_list_labels ( ) n try_build ( ) n }	0
Q_57	par source code	C_57_2	override n public void validate ( ) n { n n boolean flag_a = controller . is_enable_sql_database_output ( ) n boolean flag_b = controller . is_multiple_output_files ( ) n n output_compression_enum oce = controller . get_output_compression ( ) n n enable_zip_encoding_compression . set_selected ( controller n . is_zip_compression_enabled ( ) ) n n disable_output_compression . set_selected ( oce = = output_compression_enum . none ) n n enable_b_zip2_output_compression n . set_selected ( oce = = output_compression_enum . b_zip2 ) n n activate_data_file_output . set_selected ( controller . is_enable_data_file_output ( ) ) n n output_label . set_enabled ( flag_a ) n output_path_field . set_enabled ( flag_a ) n n enable_zip_encoding_compression . set_enabled ( flag_a ) n n output_compression . set_enabled ( flag_a ) n disable_output_compression . set_enabled ( flag_a ) n n enable7_zip_output_compression . set_enabled ( flag_a n controller . is7_zip_enabled ( ) ) n n enable7_zip_output_compression n . set_selected ( oce = = output_compression_enum . seven_zip ) n n enable_b_zip2_output_compression . set_enabled ( flag_a ) n n / / enable multiple output files only for uncompressed output n enable_multiple_output_files . set_enabled ( flag_a ( oce = = output_compression_enum . none ) ) n enable_multiple_output_files . set_selected ( flag_b ) n n output_size_limit_label . set_enabled ( flag_a flag_b ( oce = = output_compression_enum . none ) ) n output_size_limit_field . set_enabled ( flag_a flag_b ( oce = = output_compression_enum . none ) ) n n n }	0
Q_58	antlr start tagstr	C_58_0	public final void m_java_letter ( ) throws recognition_exception { n try { n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint ( ( codstr . codstr codstr . codstr codstr codstr ) { . } ? ( codstr . codstr codstr . codstr ) { . } ? ( codstr . codstr ) ( codstr . codstr ) ) n int alt27 = codint n int la27_0 = input . la ( codint ) n if ( ( la27_0 = = codstr ( la27_0 > = codstr la27_0 < = codstr ) la27_0 = = codstr ( la27_0 > = codstr la27_0 < = codstr ) ) ) { n alt27 = codint n } n else if ( ( ( la27_0 > = codstr la27_0 < = codstr ) ( la27_0 > = codstr la27_0 < = codstr ) ) ) { n alt27 = codint n } n else if ( ( ( la27_0 > = codstr la27_0 < = codstr ) ) ) { n alt27 = codint n } n n else { n no_viable_alt_exception nvae = n new no_viable_alt_exception ( codstr , codint , codint , input ) n throw nvae n } n n switch ( alt27 ) { n case codint n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g	1
Q_58	antlr start tagstr	C_58_1	public com . google . api . ads . adwords . axis . v201809 . cm . campaign_label get_campaign_label ( ) { n return campaign_label n }	0
Q_58	antlr start tagstr	C_58_2	"suppress_warnings ( codstr ) n protected database_connection make_connection ( logger logger ) throws sql_exception { n properties properties = new properties ( ) n if ( username = null ) { n properties . set_property ( codstr , username ) n } n if ( password = null ) { n properties . set_property ( codstr , password ) n } n database_connection connection = new jdbc_database_connection ( driver_manager . get_connection ( url , properties ) ) n / / by default auto _ commit is set to true n connection . set_auto_commit ( true ) n if ( connection_proxy_factory = null ) { n connection = connection_proxy_factory . create_proxy ( connection ) n } n logger . debug ( "" opened connection to { } got return connection n }"	0
Q_59	initialize this builder to it default	C_59_0	private void init ( ) { n m_fade_duration = default_fade_duration n n m_desired_aspect_ratio = codint n n m_placeholder_image = null n m_placeholder_image_scale_type = default_scale_type n n m_retry_image = null n m_retry_image_scale_type = default_scale_type n n m_failure_image = null n m_failure_image_scale_type = default_scale_type n n m_progress_bar_image = null n m_progress_bar_image_scale_type = default_scale_type n n m_actual_image_scale_type = default_actual_image_scale_type n m_actual_image_matrix = null n m_actual_image_focus_point = null n m_actual_image_color_filter = null n n m_background = null n m_overlays = null n m_pressed_state_overlay = null n n m_rounding_params = null n }	1
Q_59	initialize this builder to it default	C_59_1	override n public e_class get_ifc_temperature_gradient_measure ( ) { n if ( ifc_temperature_gradient_measure_e_class = = null ) { n ifc_temperature_gradient_measure_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_temperature_gradient_measure_e_class n }	0
Q_59	initialize this builder to it default	C_59_2	public static study read_study ( final file file ) throws io_exception { n check_not_null ( file ) n try ( buffered_reader reader = new buffered_reader ( new file_reader ( file ) ) ) { n return read_study ( reader ) n } n }	0
Q_60	release resource use to display the image	C_60_0	public void on_detach ( ) { n if ( m_is_attached ) { n return n } n m_is_attached = false n for ( int i = codint i < m_holders . size ( ) + + i ) { n m_holders . get ( i ) . on_detach ( ) n } n }	1
Q_60	release resource use to display the image	C_60_1	public static object_input_stream new_object_input_stream ( path self , final class_loader class_loader ) throws io_exception { n return io_groovy_methods . new_object_input_stream ( files . new_input_stream ( self ) , class_loader ) n }	0
Q_60	release resource use to display the image	C_60_2	override n public void enter_vertex ( gdl_parser . vertex_context vertex_context ) { n string variable = get_variable ( vertex_context . header ( ) ) n vertex v n if ( variable = null user_vertex_cache . contains_key ( variable ) ) { n v = user_vertex_cache . get ( variable ) n } else { n v = init_new_vertex ( vertex_context ) n n if ( variable = null ) { n user_vertex_cache . put ( variable , v ) n } else { n variable = string . format ( anonymous_vertex_variable , v . get_id ( ) ) n auto_vertex_cache . put ( variable , v ) n } n v . set_variable ( variable ) n vertices . add ( v ) n } n update_graph_element ( v ) n set_last_seen_vertex ( v ) n update_last_seen_edge ( v ) n }	0
Q_61	escape any special char from a string represent a	C_61_0	private string sanitize_principal ( final string input ) { n string s = codstr n n for ( int i = codint i < input . length ( ) i + + ) { n char c = input . char_at ( i ) n n if ( c = = codstr ) { n / / escape asterisk n s + = codstr n } else if ( c = = codstr ) { n / / escape left parenthesis n s + = codstr n } else if ( c = = codstr ) { n / / escape right parenthesis n s + = codstr n } else if ( c = = codstr ) { n / / escape backslash n s + = codstr n } else if ( c = = codstr ) { n / / escape null char n s + = codstr n } else if ( c < = codint ) { n / / regular codint _ byte utf _ codint char n s + = string . value_of ( c ) n } else if ( c > = codint ) { n / / higher _ order codint , codint and codint _ byte utf _ codint chars n byte [ ] utf8bytes = string . value_of ( c ) . get_bytes ( standard_charsets . utf_8 ) n n for ( byte b utf8bytes ) { n s + = string . format ( locale .	1
Q_61	escape any special char from a string represent a	C_61_1	nonnull n public fine_uploader5_validation set_min_size_limit ( nonnegative final int n_min_size_limit ) n { n value_enforcer . is_ge0 ( n_min_size_limit , codstr ) n m_n_validation_min_size_limit = n_min_size_limit n return this n }	0
Q_61	escape any special char from a string represent a	C_61_2	public void add_extension ( extension_element extension ) { n if ( extension = = null ) return n string key = xmpp_string_utils . generate_key ( extension . get_element_name ( ) , extension . get_namespace ( ) ) n synchronized ( packet_extensions ) { n packet_extensions . put ( key , extension ) n } n }	0
Q_62	add a footer_drawer_item at a specific position	C_62_0	public void add_sticky_footer_item_at_position ( non_null i_drawer_item drawer_item , int position ) { n if ( m_drawer_builder . m_sticky_drawer_items = = null ) { n m_drawer_builder . m_sticky_drawer_items = new array_list < > ( ) n } n m_drawer_builder . m_sticky_drawer_items . add ( position , drawer_item ) n n drawer_utils . rebuild_sticky_footer_view ( m_drawer_builder ) n }	1
Q_62	add a footer_drawer_item at a specific position	C_62_1	override n public url_connection open_connection ( url url ) throws io_exception { n if ( url . get_path ( ) = = null url . get_path ( ) . trim ( ) . length ( ) = = codint ) { n throw new malformed_url_exception ( codstr + syntax ) n } n bpmn_xml_url = new url ( url . get_path ( ) ) n n logger . log ( level . fine , codstr + bpmn_xml_url + codstr ) n return new connection ( url ) n }	0
Q_62	add a footer_drawer_item at a specific position	C_62_2	public static byte [ ] serialize ( object obj ) throws io_exception { n if ( obj = = null ) { n return null n } n try ( byte_array_output_stream b = new byte_array_output_stream ( ) ) { n try ( object_output_stream o = new object_output_stream ( b ) ) { n o . write_object ( obj ) n } n return b . to_byte_array ( ) n } n }	0
Q_63	create a code client_proxy_factory for the supply service class	C_63_0	private < t > client_proxy_factory create_service_proxy_factory ( class < t > service ) { n client_extension client_extension = client . get_client_extension ( ) n return client_extension . create_service_proxy_factory ( service ) n }	1
Q_63	create a code client_proxy_factory for the supply service class	C_63_1	private void configure_security_context_chain ( n final map < string , string > principals , n final map < string , string > credentials , n final i_security_context security_context , n final string base_context_name ) n throws portal_security_exception { n this . set_context_parameters ( principals , credentials , base_context_name , security_context ) n n / / load principals and credentials for the sub_contexts n for ( final enumeration < string > sub_ctx_names = security_context . get_sub_context_names ( ) n sub_ctx_names . has_more_elements ( ) ) { n final string full_sub_ctx_name = sub_ctx_names . next_element ( ) n n / / strip off the base of the name n string local_sub_ctx_name = full_sub_ctx_name n if ( full_sub_ctx_name . starts_with ( base_context_name + codstr ) ) { n local_sub_ctx_name = local_sub_ctx_name . substring ( base_context_name . length ( ) + codint ) n } n n final i_security_context sc = security_context . get_sub_context ( local_sub_ctx_name ) n n this . configure_security_context_chain ( principals , credentials , sc , full_sub_ctx_name ) n } n }	0
Q_63	create a code client_proxy_factory for the supply service class	C_63_2	public static ruby_range < integer > range ( int start , int end ) { n return new ruby_range < > ( integer_successor . get_instance ( ) , start , end , n interval . closed ) n }	0
Q_64	perform the actual binding	C_64_0	suppress_warnings ( { codstr } ) n suppress_fb_warnings ( codstr ) n private synchronized boolean bind0 ( tcp_ip_connection connection , address remote_endpoint , n collection < address > remote_address_aliases , boolean reply ) { n final address remote_address = new address ( connection . get_remote_socket_address ( ) ) n if ( tcp_ip_endpoint_manager . connections_in_progress . contains ( remote_address ) ) { n / / this is the connection initiator side _ > register the connection under the address that was requested n remote_endpoint = remote_address n } n if ( remote_endpoint = = null ) { n if ( remote_address_aliases = = null ) { n throw new illegal_state_exception ( codstr ) n } else { n / / let it fail if no remote_endpoint and no aliases are defined n remote_endpoint = remote_address_aliases . iterator ( ) . next ( ) n } n } n connection . set_end_point ( remote_endpoint ) n io_service . on_successful_connection ( remote_endpoint ) n if ( reply ) { n bind_request bind_request = new bind_request ( logger , io_service , connection , remote_endpoint , false ) n bind_request . send ( ) n } n n if ( check_already_connected ( connection , remote_endpoint ) ) { n return false n } n n if ( logger . is_loggable ( level . finest ) ) { n logger . finest ( codstr + connection + codstr + remote_endpoint ) n } n boolean return_value = tcp_ip_endpoint_manager . register_connection ( remote_endpoint , connection )	1
Q_64	perform the actual binding	C_64_1	private static void id_string ( byte_buffer buffer , string_builder out ) { n out . append ( buffer . get_class ( ) . get_simple_name ( ) ) n out . append ( codstr ) n if ( buffer . has_array ( ) buffer . array_offset ( ) = = codint ) { n out . append ( codstr ) n byte [ ] array = buffer . array ( ) n type_utils . to_hex ( array [ codint ] , out ) n type_utils . to_hex ( array [ codint ] , out ) n type_utils . to_hex ( array [ codint ] , out ) n type_utils . to_hex ( array [ codint ] , out ) n } else n out . append ( integer . to_hex_string ( system . identity_hash_code ( buffer ) ) ) n }	0
Q_64	perform the actual binding	C_64_2	public void assign_task ( int task_id , int responsible ) { n get_resource_factory ( ) n . get_api_resource ( codstr + task_id + codstr ) n . entity ( new assign_value ( responsible ) , n media_type . application_json_type ) . post ( ) n }	0
Q_65	create a new backoff_idle_strategy	C_65_0	public static backoff_idle_strategy create_backoff_idle_strategy ( string config ) { n string [ ] args = config . split ( codstr ) n if ( args . length = arg_count ) { n throw new illegal_argument_exception ( n format ( codstr s codstr , config ) ) n } n long max_spins = parse_long ( args [ arg_max_spins ] ) n long max_yields = parse_long ( args [ arg_max_yields ] ) n long min_park_period_ns = parse_long ( args [ arg_min_park_period ] ) n long max_park_nanos = parse_long ( args [ arg_max_park_period ] ) n return new backoff_idle_strategy ( max_spins , max_yields , min_park_period_ns , max_park_nanos ) n }	1
Q_65	create a new backoff_idle_strategy	C_65_1	private static void print_system_properties ( ) { n system . out . println ( codstr ) n java . util . properties p = system . get_properties ( ) n java . util . enumeration keys = p . keys ( ) n while ( keys . has_more_elements ( ) ) { n string thiskey = ( string ) keys . next_element ( ) n string value = p . get_property ( thiskey ) n system . out . println ( thiskey + codstr + value ) n } n }	0
Q_65	create a new backoff_idle_strategy	C_65_2	"int read_results ( byte [ ] b , int b_pos , int b_avail ) { n if ( buffer = null ) { n int len = math . min ( avail ( ) , b_avail ) n if ( buffer = b ) { n system . arraycopy ( buffer , read_pos , b , b_pos , len ) n read_pos + = len n if ( read_pos > = pos ) { n buffer = null n } n } else { n / / re _ using the original consumer "" s output array is only n / / allowed for one round . n buffer = null n } n return len n } n return eof ? _ codint codint n }"	0
Q_66	check if open_shift be available	C_66_0	static boolean is_open_shift ( client client ) { n url master_url = client . get_master_url ( ) n if ( is_openshift . contains_key ( master_url ) ) { n return is_openshift . get ( master_url ) n } else { n root_paths root_paths = client . root_paths ( ) n if ( root_paths = null ) { n list < string > paths = root_paths . get_paths ( ) n if ( paths = null ) { n for ( string path paths ) { n / / lets detect the new api groups ap_is for open_shift n if ( path . ends_with ( codstr ) path . contains ( codstr ) ) { n uses_openshift_apigroups . put_if_absent ( master_url , true ) n is_openshift . put_if_absent ( master_url , true ) n return true n } n } n for ( string path paths ) { n if ( java . util . objects . equals ( codstr , path ) java . util . objects . equals ( codstr , path ) ) { n is_openshift . put_if_absent ( master_url , true ) n return true n } n } n } n } n } n is_openshift . put_if_absent ( master_url , false ) n return false n }	1
Q_66	check if open_shift be available	C_66_1	public void billing_account_easy_hunting_service_name_put ( string billing_account , string service_name , ovh_easy_hunting body ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , billing_account , service_name ) n exec ( q_path , codstr , sb . to_string ( ) , body ) n }	0
Q_66	check if open_shift be available	C_66_2	private void trace ( char mod , int i , int j ) n { n if ( mod = = codstr i < = codint j < = codint ) { n b1 = i + codint n b2 = j + codint n } n if ( mod = = codstr ) { n trace ( trace [ i _ codint ] [ j _ codint ] , i _ codint , j _ codint ) n rep ( ) n } n else if ( mod = = codstr ) { n trace ( trace [ i _ codint ] [ j ] , i _ codint , j ) n del ( codint ) n } n else if ( mod = = codstr ) { n trace ( dtrace [ i _ codint ] [ j ] , i _ codint , j ) n del ( codint ) n } n else if ( mod = = codstr ) { n trace ( trace [ i ] [ j _ codint ] , i , j _ codint ) n ins ( codint ) n } n else if ( mod = = codstr ) { n trace ( etrace [ i ] [ j _ codint ] , i , j _ codint ) n ins ( codint ) n } n }	0
Q_67	create a new case_insensitive pattern extractor with the give pattern	C_67_0	public static function < x509_certificate_authentication , string > pattern_extractor ( final string key , n final function < ? super x509_certificate_authentication , string > fallback ) { n require_non_null ( key , codstr ) n require_non_null ( fallback , codstr ) n final pattern pattern = pattern . compile ( key + codstr , pattern . case_insensitive ) n return authentication _ > { n final object principal = authentication . get_principal ( ) n if ( principal instanceof x500_principal ) { n final x500_principal x500_principal = ( x500_principal ) principal n final matcher matcher = pattern . matcher ( x500_principal . get_name ( ) ) n if ( matcher . find ( ) ) { n return matcher . group ( codint ) n } n } n return fallback . apply ( authentication ) n } n }	1
Q_67	create a new case_insensitive pattern extractor with the give pattern	C_67_1	public void log ( level level , string msg , object param1 ) { n if ( level . int_value ( ) < level_value level_value = = off_value ) { n return n } n log_record lr = new log_record ( level , msg ) n object params [ ] = { param1 } n lr . set_parameters ( params ) n do_log ( lr ) n }	0
Q_67	create a new case_insensitive pattern extractor with the give pattern	C_67_2	public static void export_child_order_property ( json_writer writer , resource resource ) n throws io_exception { n list < string > names = new array_list < > ( ) n iterable < resource > children = resource . get_children ( ) n for ( resource child children ) { n string name = child . get_name ( ) n if ( resource_util . content_node . equals ( name ) ) { n names . add ( name ) n } n } n if ( names . size ( ) > codint ) { n writer . name ( mapping_rules . child_order_name ) n writer . begin_array ( ) n for ( string name names ) { n if ( resource_util . content_node . equals ( name ) ) { n writer . value ( name ) n } n } n writer . end_array ( ) n } n }	0
Q_68	return a parser for a file base on the bare file extension	C_68_0	public resource_format_parser get_parser_for_file_extension ( final string extension ) throws unsupported_format_exception { n for ( final resource_format_parser resource_format_parser list_parsers ( ) ) { n if ( resource_format_parser . get_file_extensions ( ) . contains ( extension ) ) { n return resource_format_parser n } n } n throw new unsupported_format_exception ( codstr + extension ) n }	1
Q_68	return a parser for a file base on the bare file extension	C_68_1	put n path ( codstr ) n consumes ( media_type . application_json ) n produces ( media_type . application_json ) n public response update_installation ( installation entity , path_param ( codstr ) string variant_id , path_param ( codstr ) string installation_id ) { n n installation installation = client_installation_service . find_by_id ( installation_id ) n n if ( installation = = null ) { n return response . status ( response . status . not_found ) . entity ( codstr ) . build ( ) n } n n client_installation_service . update_installation ( installation , entity ) n n return response . no_content ( ) . build ( ) n n }	0
Q_68	return a parser for a file base on the bare file extension	C_68_2	vector get_counters ( elem_number number_elem ) n { n n vector counters = ( vector ) this . get ( number_elem ) n n return ( null = = counters ) ? put_elem_number ( number_elem ) counters n }	0
Q_69	return the user uuid if the token hash be find else code optional	C_69_0	public optional < string > authenticate ( string token ) { n string token_hash = token_generator . hash ( token ) n try ( db_session db_session = db_client . open_session ( false ) ) { n user_token_dto user_token = db_client . user_token_dao ( ) . select_by_token_hash ( db_session , token_hash ) n if ( user_token = = null ) { n return empty ( ) n } n user_last_connection_dates_updater . update_last_connection_date_if_needed ( user_token ) n return of ( user_token . get_user_uuid ( ) ) n } n }	1
Q_69	return the user uuid if the token hash be find else code optional	C_69_1	"private static void print ( appendable out , timestamp adjusted ) n throws io_exception n { n / / null is our first codstr to get it out of the way n if ( adjusted = = null ) { n out . append ( codstr ) n return n } n n / / so we have a real value _ we codstr t codstr _ codstr t codstr _ codstr t codstr t codstr codstr codstr z codstr _ codstr + codstr codstr _ codint codint "" ) n } n }"	0
Q_69	return the user uuid if the token hash be find else code optional	C_69_2	public vec3 multiply ( final vec3 vec ) { n return new vec3 ( n m00 * vec . x + m10 * vec . y + m20 * vec . z , n m01 * vec . x + m11 * vec . y + m21 * vec . z , n m02 * vec . x + m12 * vec . y + m22 * vec . z n ) n }	0
Q_70	all descendant in any order	C_70_0	public collection < q_profile_dto > select_descendants ( db_session db_session , collection < q_profile_dto > profiles ) { n if ( profiles . is_empty ( ) ) { n return empty_list ( ) n } n collection < q_profile_dto > children = select_children ( db_session , profiles ) n list < q_profile_dto > descendants = new array_list < > ( children ) n descendants . add_all ( select_descendants ( db_session , children ) ) n return descendants n }	1
Q_70	all descendant in any order	C_70_1	public object create_context ( object param ) throws exception { n n class < ? > [ ] params = m_constr = null ? m_constr . get_parameter_types ( ) new class [ codint ] n if ( params . length > codint merged_class . invocation_event_observer . class . equals ( params [ codint ] ) ) { n return m_constr . new_instance ( new object [ ] { n new merging_context_factory ( param ) , n new merged_class . invocation_event_observer ( ) { n public void invoked_event ( string caller , string callee , long elapsed_time ) { } n public long current_time ( ) { return codint } n } } ) n } n else { n return m_constr . new_instance ( new object [ ] { n new merging_context_factory ( param ) } ) n } n }	0
Q_70	all descendant in any order	C_70_2	public static string join ( string _delimiter , string [ ] _strings ) { n return join ( _delimiter , arrays . as_list ( _strings ) ) n }	0
Q_71	par a path value	C_71_0	suppress_warnings ( codstr ) n final void handle_path ( byte_buffer buffer , parse_state state , http_server_exchange exchange ) throws bad_request_exception { n string_builder string_builder = state . string_builder n int parse_state = state . parse_state n int canonical_path_start = state . pos n boolean url_decode_required = state . url_decode_required n n while ( buffer . has_remaining ( ) ) { n char next = ( char ) ( buffer . get ( ) codint ) n if ( allow_unescaped_characters_in_url allowed_target_character [ next ] ) { n throw new bad_request_exception ( undertow_messages . messages . invalid_character_in_request_target ( next ) ) n } n if ( next = = codstr next = = codstr ) { n if ( string_builder . length ( ) = codint ) { n final string path = string_builder . to_string ( ) n if ( parse_state = = second_slash ) { n exchange . set_request_path ( codstr ) n exchange . set_relative_path ( codstr ) n exchange . set_request_uri ( path ) n } else if ( parse_state < host_done ) { n string decoded_path = decode ( path , url_decode_required , state , allow_encoded_slash , false ) n exchange . set_request_path ( decoded_path ) n exchange . set_relative_path ( decoded_path ) n exchange . set_request_uri ( path ) n } else { n handle_full_url ( state , exchange , canonical_path_start , url_decode_required , path ) n } n exchange . set_query_string ( codstr ) n state . state = parse_state . version n state	1
Q_71	par a path value	C_71_1	public boolean matches ( int [ ] types_for_next_tokens ) throws illegal_state_exception { n if ( completed ) return false n list_iterator < token > iter = tokens . list_iterator ( token_iterator . previous_index ( ) ) n token token = null n for ( int next_expected_type types_for_next_tokens ) { n if ( iter . has_next ( ) ) return false n token = iter . next ( ) n if ( next_expected_type = = any_type ) continue n if ( token . matches ( next_expected_type ) ) return false n } n return true n }	0
Q_71	par a path value	C_71_2	public static query create ( string query ) n throws query_parser_exception n { n query_tokenizer tokenizer = new query_tokenizer_impl ( ) n query_parser parser = new query_parser_impl ( ) n n return parser . parse ( tokenizer . tokenize ( query ) ) n }	0
Q_72	convenience method for create_strict_mock follow by expect_new	C_72_0	public static synchronized < t > t create_strict_mock_and_expect_new ( class < t > type , object . arguments ) throws exception { n t mock = create_strict_mock ( type ) n expect_strict_new ( type , arguments ) . and_return ( mock ) n return mock n }	1
Q_72	convenience method for create_strict_mock follow by expect_new	C_72_1	override n public void run ( ) { n synchronized ( this ) { n started = true n } n finished = false n n final byte [ ] buf = new byte [ buffer_size ] n n try { n int length n while ( true ) { n wait_for_input ( is ) n n if ( finish thread . interrupted ( ) ) { n break n } n n length = is . read ( buf ) n if ( length < = codint thread . interrupted ( ) ) { n break n } n os . write ( buf , codint , length ) n if ( autoflush ) { n os . flush ( ) n } n if ( finish ) { / / nosonar n break n } n } n / / on completion , drain any available data ( which might be the first data available for quick executions ) n if ( finish ) { n while ( ( length = is . available ( ) ) > codint ) { n if ( thread . interrupted ( ) ) { n break n } n length = is . read ( buf , codint , math . min ( length , buf . length ) ) n if ( length < = codint ) { n break n } n os . write ( buf , codint , length ) n } n } n os	0
Q_72	convenience method for create_strict_mock follow by expect_new	C_72_2	public boolean process ( ellipse_rotated_f64 ellipse_a , ellipse_rotated_f64 ellipse_b , n point2_d_f64 tangent_a0 , point2_d_f64 tangent_a1 , n point2_d_f64 tangent_a2 , point2_d_f64 tangent_a3 , n point2_d_f64 tangent_b0 , point2_d_f64 tangent_b1 , n point2_d_f64 tangent_b2 , point2_d_f64 tangent_b3 ) n { n converged = false n n / / initialize by picking an arbitrary point on a and then finding the points on b in which n / / a line is tangent to b and passes through the point on a n if ( initialize ( ellipse_a , ellipse_b , n tangent_a0 , tangent_a1 , tangent_a2 , tangent_a3 , n tangent_b0 , tangent_b1 , tangent_b2 , tangent_b3 ) ) n return false n n / / update the location of each point until it converges or the maximum number of iterations has been exceeded n int iteration = codint n for ( iteration < max_iterations iteration + + ) { n boolean all_good = false n sum_difference = codint n n if ( select_tangent ( tangent_a0 , tangent_b0 , ellipse_b , tangent_b0 , false ) ) n return false n if ( select_tangent ( tangent_a1 , tangent_b1 , ellipse_b , tangent_b1 , true ) ) n return false n if ( select_tangent ( tangent_a2 , tangent_b2 , ellipse_b , tangent_b2 , true ) ) n return false n if ( select_tangent ( tangent_a3 , tangent_b3 , ellipse_b , tangent_b3 , false ) ) n return false n n if ( math . sqrt ( sum_difference ) / number <	0
Q_73	_ begin_user_doc _	C_73_0	override n public e_class get_ifc_derived_profile_def ( ) { n if ( ifc_derived_profile_def_e_class = = null ) { n ifc_derived_profile_def_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_derived_profile_def_e_class n }	1
Q_73	_ begin_user_doc _	C_73_1	private static resource_bundle try_bundle ( string base_name , locale locale , boolean want_base ) { n n i_cms_resource_bundle first = null / / the most specialized bundle . n i_cms_resource_bundle last = null / / the least specialized bundle . n n list < string > bundle_names = cms_locale_manager . get_locale_variants ( base_name , locale , true , true ) n for ( string bundle_name bundle_names ) { n / / break if we would try the base bundle , but we do not want it directly n if ( bundle_name . equals ( base_name ) want_base ( first = = null ) ) { n break n } n i_cms_resource_bundle found_bundle = try_bundle ( bundle_name ) n if ( found_bundle = null ) { n if ( first = = null ) { n first = found_bundle n } n n if ( last = null ) { n last . set_parent ( ( resource_bundle ) found_bundle ) n } n found_bundle . set_locale ( locale ) n n last = found_bundle n } n } n return ( resource_bundle ) first n }	0
Q_73	_ begin_user_doc _	C_73_2	public void duplicate ( text destination ) { n system . arraycopy ( chars , pos , destination . chars , destination . pos , len ) n destination . len = len n }	0
Q_74	_ begin_user_doc _	C_74_0	override n public e_class get_ifc_type_object ( ) { n if ( ifc_type_object_e_class = = null ) { n ifc_type_object_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) . get_e_classifiers ( ) n . get ( codint ) n } n return ifc_type_object_e_class n }	1
Q_74	_ begin_user_doc _	C_74_1	public illustration . builder create_illustration_builder ( ) { n if ( config . command_logging ) { n log . d ( config . command_logging_tag , codstr ) n } n n return new illustration . builder ( ) n }	0
Q_74	_ begin_user_doc _	C_74_2	public void set_parameter1 ( integer new_parameter1 ) { n integer old_parameter1 = parameter1 n parameter1 = new_parameter1 n if ( e_notification_required ( ) ) n e_notify ( new e_notification_impl ( this , notification . set , afplib_package . mmc_parameter1 , old_parameter1 , parameter1 ) ) n }	0
Q_75	_ begin_user_doc _	C_75_0	suppress_warnings ( codstr ) n override n public e_list < ifc_address > get_addresses ( ) { n return ( e_list < ifc_address > ) e_get ( ifc4_package . literals . ifc_person_addresses , true ) n }	1
Q_75	_ begin_user_doc _	C_75_1	pure n public static org . arakhne . afc . vmutil . caller . caller get_caller ( ) { n synchronized ( caller . class ) { n if ( caller = = null ) { n caller = new stack_trace_caller ( ) n } n return caller n } n }	0
Q_75	_ begin_user_doc _	C_75_2	worker_thread n public static lottie_result < lottie_composition > from_json_reader_sync ( json_reader reader , nullable string cache_key ) { n return from_json_reader_sync_internal ( reader , cache_key , true ) n }	0
Q_76	_ begin_user_doc _	C_76_0	public ifc_waste_terminal_type_enum create_ifc_waste_terminal_type_enum_from_string ( e_data_type e_data_type , string initial_value ) { n ifc_waste_terminal_type_enum result = ifc_waste_terminal_type_enum . get ( initial_value ) n if ( result = = null ) n throw new illegal_argument_exception ( n codstr codstr codstr codstr codstr ) n return result n }	1
Q_76	_ begin_user_doc _	C_76_1	override n public object convert ( string value ) { n n try { n get_property_editor ( ) . set_as_text ( value ) n n return get_property_editor ( ) . get_value ( ) n } n catch ( illegal_argument_exception cause ) { n throw new_conversion_exception ( cause , codstr , value ) n } n }	0
Q_76	_ begin_user_doc _	C_76_2	public web_socket_extension set_parameter ( string key , string value ) n { n / / check the validity of the key . n if ( token . is_valid ( key ) = = false ) n { n / / the key is not a valid token . n throw new illegal_argument_exception ( codstr key codstr ) n } n n / / if the value is not null . n if ( value = null ) n { n / / check the validity of the value . n if ( token . is_valid ( value ) = = false ) n { n / / the value is not a valid token . n throw new illegal_argument_exception ( codstr value codstr ) n } n } n n m_parameters . put ( key , value ) n n return this n }	0
Q_77	_ begin_user_doc _	C_77_0	public e_class get_ifc_arbitrary_closed_profile_def ( ) { n if ( ifc_arbitrary_closed_profile_def_e_class = = null ) { n ifc_arbitrary_closed_profile_def_e_class = ( e_class ) e_package . registry . instance n . get_e_package ( ifc2x3tc1_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return ifc_arbitrary_closed_profile_def_e_class n }	1
Q_77	_ begin_user_doc _	C_77_1	public final viewport set_pixel_size ( final int wide , final int high ) n { n m_wide = wide n n m_high = high n n get_element ( ) . get_style ( ) . set_width ( wide , unit . px ) n n get_element ( ) . get_style ( ) . set_height ( high , unit . px ) n n final n_fast_array_list < scene > scenes = get_child_nodes ( ) n n if ( null = scenes ) n { n final int size = scenes . size ( ) n n for ( int i = codint i < size i + + ) n { n final scene scene = scenes . get ( i ) n n if ( null = scene ) n { n scene . set_pixel_size ( wide , high ) n } n } n } n m_spad . set_pixel_size ( wide , high ) n n return this n }	0
Q_77	_ begin_user_doc _	C_77_2	public void reverse_animate ( ) { n on_start_animate_callback ( ) n ( codstr ) . ready ( ( ) _ > { n if ( reverse_callback = null ) { n reverse_callback . call ( ) n } else { n target_element . get_style ( ) . set_visibility ( style . visibility . hidden ) n target_element . get_style ( ) . set_opacity ( codint ) n } n detect_out_of_scope_element ( source_element , ( ) _ > js_path_animator . cta ( target_element , source_element , options , ( ) _ > on_complete_callback ( ) ) ) n } ) n }	0
Q_78	_ begin_user_doc _	C_78_0	public e_class get_ifc_type_product ( ) { n if ( ifc_type_product_e_class = = null ) { n ifc_type_product_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_type_product_e_class n }	1
Q_78	_ begin_user_doc _	C_78_1	static object get_postgre_sql_value ( entity entity , attribute attr ) { n string attr_name = attr . get_name ( ) n attribute_type attr_type = attr . get_data_type ( ) n n switch ( attr_type ) { n case bool n return entity . get_boolean ( attr_name ) n case categorical n case xref n entity xref_entity = entity . get_entity ( attr_name ) n return xref_entity = null n ? get_postgre_sql_value ( xref_entity , xref_entity . get_entity_type ( ) . get_id_attribute ( ) ) n null n case categorical_mref n case mref n case one_to_many n iterable < entity > entities = entity . get_entities ( attr_name ) n return stream ( entities ) n . map ( n mref_entity _ > n get_postgre_sql_value ( mref_entity , mref_entity . get_entity_type ( ) . get_id_attribute ( ) ) ) n . collect ( to_list ( ) ) n case date n return entity . get_local_date ( attr_name ) n case date_time n / / as a workaround for instant instant = entity . get_instant ( attr_name ) n return instant = null ? instant . truncated_to ( chrono_unit . seconds ) . at_offset ( utc ) null n case decimal n return entity . get_double ( attr_name ) n case email n case enum n case html n case hyperlink n case script n case string n case text n return entity . get_string ( attr_name ) n case file n file_meta file_entity = entity . get_entity ( attr_name ,	0
Q_78	_ begin_user_doc _	C_78_2	public static base_response unset ( nitro_service client , lbsipparameters resource , string [ ] args ) throws exception { n lbsipparameters unsetresource = new lbsipparameters ( ) n return unsetresource . unset_resource ( client , args ) n }	0
Q_79	add a give vendor to the list of evidence to remove when match	C_79_0	public void add_remove_vendor ( string source , string name , string value , boolean regex , confidence confidence ) { n remove_vendor . add ( new evidence_matcher ( source , name , value , regex , confidence ) ) n }	1
Q_79	add a give vendor to the list of evidence to remove when match	C_79_1	protected void register_bean ( final string name , final bean_definition bean_definition ) { n beans . put ( name , bean_definition ) n n if ( petite_config . is_use_alt_bean_names ( ) ) { n return n } n n class type = bean_definition . type ( ) n n if ( annotation_resolver . bean_has_annotation_name ( type ) ) { n return n } n n class [ ] interfaces = class_util . resolve_all_interfaces ( type ) n n for ( class an_interface interfaces ) { n string alt_name = annotation_resolver . resolve_bean_name ( an_interface , petite_config . get_use_full_type_names ( ) ) n n if ( name . equals ( alt_name ) ) { n continue n } n n if ( beans . contains_key ( alt_name ) ) { n continue n } n n if ( beans_alt . contains_key ( alt_name ) ) { n bean_definition existing = beans_alt . get ( alt_name ) n n if ( existing = null ) { n beans_alt . put ( alt_name , null ) / / store null as value to mark that alt name is duplicate n } n } n else { n beans_alt . put ( alt_name , bean_definition ) n } n } n }	0
Q_79	add a give vendor to the list of evidence to remove when match	C_79_2	public static < t > void on_next_dropped ( t t , context context ) { n objects . require_non_null ( t , codstr ) n objects . require_non_null ( context , codstr ) n consumer < object > hook = context . get_or_default ( hooks . key_on_next_dropped , null ) n if ( hook = = null ) { n hook = hooks . on_next_dropped_hook n } n if ( hook = null ) { n hook . accept ( t ) n } n else if ( log . is_debug_enabled ( ) ) { n log . debug ( codstr + t ) n } n }	0
Q_80	set the actual file path of the dependency on disk	C_80_0	public void set_actual_file_path ( string actual_file_path ) { n this . actual_file_path = actual_file_path n this . sha1sum = null n this . sha256sum = null n this . md5sum = null n final file file = get_actual_file ( ) n if ( file . is_file ( ) ) { n calculate_checksums ( this . get_actual_file ( ) ) n } n }	1
Q_80	set the actual file path of the dependency on disk	C_80_1	public final void save ( string dir_name , string class_name , string method_name , set < reg_data > reg_data ) { n / / research ( if statement ) . n if ( config . x_dependencies_save_v ) { n return n } n / / ensure that the directory for coverage exists . n new file ( dir_name ) . mkdir ( ) n string full_name = class_name + codstr + method_name n save ( open_file_write ( dir_name , full_name , class_name , method_name ) , reg_data ) n }	0
Q_80	set the actual file path of the dependency on disk	C_80_2	public static commerce_warehouse fetch_by_group_id_last ( long group_id , n order_by_comparator < commerce_warehouse > order_by_comparator ) { n return get_persistence ( ) . fetch_by_group_id_last ( group_id , order_by_comparator ) n }	0
Q_81	add the give amount of year to the date	C_81_0	public static < d extends comparable > date_expression < d > add_years ( date_expression < d > date , int years ) { n return expressions . date_operation ( date . get_type ( ) , ops . date_time_ops . add_years , date , constant_impl . create ( years ) ) n }	1
Q_81	add the give amount of year to the date	C_81_1	public void release ( t element ) { n try { n if ( recycle ( element ) ) { n elements . add ( element ) n } n } finally { n semaphore . release ( ) n } n }	0
Q_81	add the give amount of year to the date	C_81_2	not_null n public stream < t > filter_not ( not_null final predicate < ? super t > predicate ) { n return filter ( predicate . util . negate ( predicate ) ) n }	0
Q_82	calculate a percentile base on a continuous distribution of the column value	C_82_0	public static < t extends number > within_group < t > percentile_cont ( expression < t > arg ) { n return new within_group < t > ( arg . get_type ( ) , sql_ops . percentilecont , arg ) n }	1
Q_82	calculate a percentile base on a continuous distribution of the column value	C_82_1	public static void write_static_field ( final class < ? > cls , final string field_name , final object value ) throws illegal_access_exception { n write_static_field ( cls , field_name , value , false ) n }	0
Q_82	calculate a percentile base on a continuous distribution of the column value	C_82_2	private static void delete_database ( string path_to_db ) n { n file database = new file ( path_to_db ) n if ( database . exists ( ) ) { n delete ( database ) n } n database . delete ( ) n }	0
Q_83	implement get configuration key	C_83_0	public static int get_conf_key ( string . args ) { n switch ( args . length ) { n case codint n print_help ( codstr ) n return codint n case codint n string var_name = args [ codint ] . trim ( ) n string property_name = env_violators . get_or_default ( var_name , n var_name . to_lower_case ( ) . replace ( codstr , codstr ) ) n if ( property_key . is_valid ( property_name ) ) { n print_help ( string . format ( codstr , property_name ) ) n return codint n } n property_key key = property_key . from_string ( property_name ) n system . out . println ( key . get_name ( ) ) n break n default n print_help ( codstr ) n return codint n } n return codint n }	1
Q_83	implement get configuration key	C_83_1	public static boolean contains ( byte [ ] self , object value ) { n for ( byte next self ) { n if ( default_type_transformation . compare_equal ( value , next ) ) return true n } n return false n }	0
Q_83	implement get configuration key	C_83_2	non_null n public static put_result new_insert_result ( non_null uri inserted_uri , non_null uri affected_uri ) { n check_not_null ( inserted_uri , codstr ) n return new put_result ( inserted_uri , null , affected_uri ) n }	0
Q_84	update an inode be state	C_84_0	public void apply_and_journal ( supplier < journal_context > context , update_inode_entry entry ) { n try { n apply_update_inode ( entry ) n context . get ( ) . append ( journal_entry . new_builder ( ) . set_update_inode ( entry ) . build ( ) ) n } catch ( throwable t ) { n process_utils . fatal_error ( log , t , codstr , entry ) n throw t / / fatal_error will usually system . exit n } n }	1
Q_84	update an inode be state	C_84_1	public send_grid_content_handler register ( final class < ? extends content > clazz , final send_grid_content_handler handler ) { n if ( handler = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( clazz = = null ) { n throw new illegal_argument_exception ( codstr ) n } n n log . debug ( codstr , handler , clazz ) n return handlers . put ( clazz , handler ) n }	0
Q_84	update an inode be state	C_84_2	public task_get_options with_if_unmodified_since ( date_time if_unmodified_since ) { n if ( if_unmodified_since = = null ) { n this . if_unmodified_since = null n } else { n this . if_unmodified_since = new date_time_rfc1123 ( if_unmodified_since ) n } n return this n }	0
Q_85	merge and embed the give link load_metadata_p_options with the correspond master option	C_85_0	public static load_metadata_context merge_from ( load_metadata_p_options . builder options_builder ) { n load_metadata_p_options master_options = n file_system_options . load_metadata_defaults ( server_configuration . global ( ) ) n load_metadata_p_options . builder merged_options_builder = n master_options . to_builder ( ) . merge_from ( options_builder . build ( ) ) n return create ( merged_options_builder ) n }	1
Q_85	merge and embed the give link load_metadata_p_options with the correspond master option	C_85_1	protected final int get_next_namespace_node2 ( int base_id ) { n int type n while ( ( type = _type2 ( + + base_id ) ) = = dtm . attribute_node ) n n if ( type = = dtm . namespace_node ) n return base_id n else n return null n }	0
Q_85	merge and embed the give link load_metadata_p_options with the correspond master option	C_85_2	public static string get_stacktrace ( throwable throwable ) { n string_writer sw = new string_writer ( ) n print_writer pw = new print_writer ( sw , true ) n throwable . print_stack_trace ( pw ) n return sw . get_buffer ( ) . to_string ( ) . trim ( ) n }	0
Q_86	"retourne la locale pour le thread courant ou la locale par d faut si elle n "" a pa t d finie"	C_86_0	public static locale get_current_locale ( ) { n if ( fixed_locale = null ) { n return fixed_locale n } n final locale current_locale = locale_context . get ( ) n if ( current_locale = = null ) { n return locale . get_default ( ) n } n return current_locale n }	1
Q_86	"retourne la locale pour le thread courant ou la locale par d faut si elle n "" a pa t d finie"	C_86_1	protected static boolean matches ( final string to_match , final list < pattern > pattern_list ) { n n for ( final pattern current pattern_list ) { n if ( current . matcher ( to_match ) . matches ( ) ) { n return true n } n } n n return false n }	0
Q_86	"retourne la locale pour le thread courant ou la locale par d faut si elle n "" a pa t d finie"	C_86_2	public query execute ( vector statements , page_context pc , sql sql , int maxrows ) throws page_exception { n / / parse sql n if ( statements . size ( ) = codint ) throw new database_exception ( codstr , null , null , null ) n z_query query = ( z_query ) statements . get ( codint ) n n / / single table n if ( query . get_from ( ) . size ( ) = = codint ) { n return test_execute ( pc , sql , get_single_table ( pc , query ) , query , maxrows ) n n } n / / multiple table n throw new database_exception ( codstr , null , null , null ) n n }	0
Q_87	return true if this file should be show in the directory pane false if it should not	C_87_0	override n public boolean accept ( final file file ) { n if ( file = null ) { n if ( file . is_directory ( ) ) { n return true n } n n final string extension = get_extension ( file ) n if ( extension = null filters . contains_key ( extension ) ) { n return true n } n } n return false n }	1
Q_87	return true if this file should be show in the directory pane false if it should not	C_87_1	public simple_feature convert_dwg_point ( string type_name , string layer_name , dwg_point point , int id ) { n double [ ] p = point . get_point ( ) n point2_d pto = new point2_d . double ( p [ codint ] , p [ codint ] ) n n coordinate_list coord_list = new coordinate_list ( ) n coordinate coord = new coordinate ( pto . get_x ( ) , pto . get_y ( ) , number ) n coord_list . add ( coord ) n n simple_feature_type_builder b = new simple_feature_type_builder ( ) n b . set_name ( type_name ) n b . set_crs ( crs ) n b . add ( the_geom , multi_point . class ) n b . add ( layer , string . class ) n simple_feature_type type = b . build_feature_type ( ) n simple_feature_builder builder = new simple_feature_builder ( type ) n geometry points = g_f . create_multi_point ( coord_list . to_coordinate_array ( ) ) n object [ ] values = new object [ ] { points , layer_name } n builder . add_all ( values ) n return builder . build_feature ( type_name + codstr + id ) n }	0
Q_87	return true if this file should be show in the directory pane false if it should not	C_87_2	public static < t > multiple_stream_source < t > of_multiple ( final queue_factory < ? > q ) { n objects . require_non_null ( q ) n return new multiple_stream_source < t > ( n stream_source . of ( q ) n . create_queue ( ) ) n }	0
Q_88	simplify method form for invoke the delete_item operation	C_88_0	override n public java . util . concurrent . future < delete_item_result > delete_item_async ( string table_name , java . util . map < string , attribute_value > key ) { n n return delete_item_async ( new delete_item_request ( ) . with_table_name ( table_name ) . with_key ( key ) ) n }	1
Q_88	simplify method form for invoke the delete_item operation	C_88_1	public void create_certificate ( certificate_add_parameter certificate , iterable < batch_client_behavior > additional_behaviors ) throws batch_error_exception , io_exception { n certificate_add_options options = new certificate_add_options ( ) n behavior_manager bh_mgr = new behavior_manager ( this . custom_behaviors ( ) , additional_behaviors ) n bh_mgr . apply_request_behaviors ( options ) n n this . parent_batch_client . protocol_layer ( ) . certificates ( ) . add ( certificate , options ) n }	0
Q_88	simplify method form for invoke the delete_item operation	C_88_2	public static symbol_list to_dna_symbol_list ( final sequence sequence ) throws illegal_symbol_exception { n check_not_null ( sequence ) n return dna_tools . create_dna ( sequence . get_value ( ) . replace_all ( codstr , codstr ) ) n }	0
Q_89	marshall the give parameter object	C_89_0	public void marshall ( client_certificate client_certificate , protocol_marshaller protocol_marshaller ) { n n if ( client_certificate = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( client_certificate . get_client_certificate_id ( ) , clientcertificateid_binding ) n protocol_marshaller . marshall ( client_certificate . get_description ( ) , description_binding ) n protocol_marshaller . marshall ( client_certificate . get_pem_encoded_certificate ( ) , pemencodedcertificate_binding ) n protocol_marshaller . marshall ( client_certificate . get_created_date ( ) , createddate_binding ) n protocol_marshaller . marshall ( client_certificate . get_expiration_date ( ) , expirationdate_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_89	marshall the give parameter object	C_89_1	public void to_xml ( final string_builder builder , n final config_verification errors ) n { n n map . get ( panel_keys . panel_values ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_externals ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_input ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_output ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_sql ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_cache ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_logging ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_debug ) . to_xml ( builder , errors ) n map . get ( panel_keys . panel_filter ) . to_xml ( builder , errors ) n }	0
Q_89	marshall the give parameter object	C_89_2	override n public e set ( int index , e element ) { n if ( element = null contains ( element ) ) { n return super . set ( index , element ) n } n return get ( index ) n }	0
Q_90	set the input stream contain this object be content	C_90_0	public void set_object_content ( input_stream object_content ) { n set_object_content ( new s3_object_input_stream ( object_content , n this . object_content = null ? this . object_content . get_http_request ( ) null ) ) n }	1
Q_90	set the input stream contain this object be content	C_90_1	public void init ( string name , final string super_name , final string suffix , final string req_proxy_class_name ) { n int last_slash = name . last_index_of ( codstr ) n this . target_package = last_slash = = _ codint ? string_pool . empty name . substring ( codint , last_slash ) . replace ( codstr , codstr ) n this . target_classname = name . substring ( last_slash + codint ) n this . next_supername = super_name n this . super_name = name n n / / create proxy name n if ( req_proxy_class_name = null ) { n if ( req_proxy_class_name . starts_with ( dot ) ) { n name = name . substring ( codint , last_slash ) + codstr + req_proxy_class_name . substring ( codint ) n } else if ( req_proxy_class_name . ends_with ( dot ) ) { n name = req_proxy_class_name . replace ( codstr , codstr ) + this . target_classname n } else { n name = req_proxy_class_name . replace ( codstr , codstr ) n } n } n n / / add optional suffix n if ( suffix = null ) { n name + = suffix n } n this . this_reference = name n this . super_reference = this . super_name n }	0
Q_90	set the input stream contain this object be content	C_90_2	public static multi_column_relation create_non_in_relation ( list < column_identifier . raw > entities , operator relation_type , term . multi_column_raw values_or_marker ) n { n assert relation_type = operator . in n return new multi_column_relation ( entities , relation_type , values_or_marker , null , null ) n }	0
Q_91	marshall the give parameter object	C_91_0	public void marshall ( get_connector_definition_request get_connector_definition_request , protocol_marshaller protocol_marshaller ) { n n if ( get_connector_definition_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( get_connector_definition_request . get_connector_definition_id ( ) , connectordefinitionid_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_91	marshall the give parameter object	C_91_1	public final application update_application ( application application ) { n n update_application_request request = n update_application_request . new_builder ( ) . set_application ( application ) . build ( ) n return update_application ( request ) n }	0
Q_91	marshall the give parameter object	C_91_2	static void init ( boolean include_add_ons ) { n loaded_plugins = new array_list < > ( core_functionality . get_built_in_active_scan_rules ( ) ) n if ( include_add_ons ) { n loaded_plugins . add_all ( extension_factory . get_add_on_loader ( ) . get_active_scan_rules ( ) ) n } n / / sort by the criteria below . n collections . sort ( loaded_plugins , risk_comparator ) n n map_loaded_plugins = new hash_map < > ( ) n for ( plugin plugin loaded_plugins ) { n check_plugin_id ( plugin ) n map_loaded_plugins . put ( plugin . get_id ( ) , plugin ) n } n }	0
Q_92	simplify method form for invoke the get_user operation with an async_handler	C_92_0	override n public java . util . concurrent . future < get_user_result > get_user_async ( com . amazonaws . handlers . async_handler < get_user_request , get_user_result > async_handler ) { n n return get_user_async ( new get_user_request ( ) , async_handler ) n }	1
Q_92	simplify method form for invoke the get_user operation with an async_handler	C_92_1	public static chainable_statement keypress ( js_scope js_scope ) n { n return new default_chainable_statement ( keyboard_event . keypress . get_event_label ( ) , n js_scope . render ( ) ) n }	0
Q_92	simplify method form for invoke the get_user operation with an async_handler	C_92_2	private void obtain_validate_on_focus_lost ( non_null final typed_array typed_array ) { n validate_on_focus_lost ( typed_array n . get_boolean ( r . styleable . abstract_validateable_view_validate_on_focus_lost , n default_validate_on_focus_lost ) ) n }	0
Q_93	marshall the give parameter object	C_93_0	public void marshall ( device device , protocol_marshaller protocol_marshaller ) { n n if ( device = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( device . get_arn ( ) , arn_binding ) n protocol_marshaller . marshall ( device . get_name ( ) , name_binding ) n protocol_marshaller . marshall ( device . get_manufacturer ( ) , manufacturer_binding ) n protocol_marshaller . marshall ( device . get_model ( ) , model_binding ) n protocol_marshaller . marshall ( device . get_model_id ( ) , modelid_binding ) n protocol_marshaller . marshall ( device . get_form_factor ( ) , formfactor_binding ) n protocol_marshaller . marshall ( device . get_platform ( ) , platform_binding ) n protocol_marshaller . marshall ( device . get_os ( ) , os_binding ) n protocol_marshaller . marshall ( device . get_cpu ( ) , cpu_binding ) n protocol_marshaller . marshall ( device . get_resolution ( ) , resolution_binding ) n protocol_marshaller . marshall ( device . get_heap_size ( ) , heapsize_binding ) n protocol_marshaller . marshall ( device . get_memory ( ) , memory_binding ) n protocol_marshaller . marshall ( device . get_image ( ) , image_binding ) n protocol_marshaller . marshall ( device . get_carrier ( ) , carrier_binding ) n protocol_marshaller . marshall ( device . get_radio ( ) , radio_binding ) n protocol_marshaller . marshall ( device . get_remote_access_enabled ( ) , remoteaccessenabled_binding ) n protocol_marshaller . marshall ( device .	1
Q_93	marshall the give parameter object	C_93_1	public void set_replication ( rpc_context rpc_context , locked_inode_path inode_path , n integer replication_max , integer replication_min , long op_time_ms ) n throws file_does_not_exist_exception , invalid_path_exception { n preconditions . check_argument ( replication_min = null replication_max = null , n precondition_message . invalid_replication_max_min_value_null ) n preconditions . check_argument ( replication_min = = null replication_min > = codint , n precondition_message . invalid_replication_min_value ) n preconditions . check_state ( inode_path . get_lock_pattern ( ) . is_write ( ) ) n n inode inode = inode_path . get_inode ( ) n n if ( inode . is_file ( ) ) { n inode_file inode_file = inode . as_file ( ) n int new_max = ( replication_max = = null ) ? inode_file . get_replication_max ( ) replication_max n int new_min = ( replication_min = = null ) ? inode_file . get_replication_min ( ) replication_min n n preconditions . check_argument ( new_max = = alluxio . constants . replication_max_infinity n new_max > = new_min , n precondition_message . invalid_replication_max_smaller_than_min . to_string ( ) , n replication_max , replication_max ) n n m_state . apply_and_journal ( rpc_context , update_inode_file_entry . new_builder ( ) n . set_id ( inode . get_id ( ) ) n . set_replication_max ( new_max ) n . set_replication_min ( new_min ) n . build ( ) ) n m_state . apply_and_journal ( rpc_context , update_inode_entry . new_builder ( ) n . set_id ( inode . get_id ( ) ) n . set_pinned ( new_min > codint ) n . set_last_modification_time_ms	0
Q_93	marshall the give parameter object	C_93_2	public static vector_accumulator as_product_function_accumulator ( final double neutral , n final vector_function function ) { n return new vector_accumulator ( ) { n private final vector_accumulator product_accumulator = vectors . as_product_accumulator ( neutral ) n n override n public void update ( int i , double value ) { n product_accumulator . update ( i , function . evaluate ( i , value ) ) n } n n override n public double accumulate ( ) { n return product_accumulator . accumulate ( ) n } n } n }	0
Q_94	return information about the table include the current status of the	C_94_0	public table_description describe_table ( ) { n return db . describe_table ( n mapper . get_table_name ( model . target_type ( ) , config ) n ) . get_table ( ) n }	1
Q_94	return information about the table include the current status of the	C_94_1	public coinbase_transaction request_money_coinbase_request ( n coinbase_request_money_request transaction_request ) throws io_exception { n n final coinbase_transaction pending_transaction = n coinbase . request_money ( n new coinbase_transaction ( transaction_request ) , n exchange . get_exchange_specification ( ) . get_api_key ( ) , n signature_creator , n exchange . get_nonce_factory ( ) ) n return handle_response ( pending_transaction ) n }	0
Q_94	return information about the table include the current status of the	C_94_2	static list < j_class > all_concrete_classes ( set < class_outline > classes ) { n return all_concrete_classes ( classes , collections . empty_set ( ) ) n }	0
Q_95	marshall the give parameter object	C_95_0	public void marshall ( delete_certificate_request delete_certificate_request , protocol_marshaller protocol_marshaller ) { n n if ( delete_certificate_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( delete_certificate_request . get_certificate_arn ( ) , certificatearn_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_95	marshall the give parameter object	C_95_1	public list < axis > get_symmetry_axes ( ) { n n list < axis > symm_axes = new array_list < > ( ) n n matrix4d prior = new matrix4d ( ) n prior . set_identity ( ) n n get_symmetry_axes ( symm_axes , prior , codint , codint ) n n n return symm_axes n }	0
Q_95	marshall the give parameter object	C_95_2	override n public cp_attachment_file_entry fetch_by_c_c_t_not_st_last ( long class_name_id , n long class_pk , int type , int status , n order_by_comparator < cp_attachment_file_entry > order_by_comparator ) { n int count = count_by_c_c_t_not_st ( class_name_id , class_pk , type , status ) n n if ( count = = codint ) { n return null n } n n list < cp_attachment_file_entry > list = find_by_c_c_t_not_st ( class_name_id , n class_pk , type , status , count _ codint , count , order_by_comparator ) n n if ( list . is_empty ( ) ) { n return list . get ( codint ) n } n n return null n }	0
Q_96	build a user_exists waiter by use custom parameter waiter_parameters and other parameter define in the	C_96_0	public waiter < get_user_request > user_exists ( ) { n n return new waiter_builder < get_user_request , get_user_result > ( ) . with_sdk_function ( new get_user_function ( client ) ) n . with_acceptors ( new http_success_status_acceptor ( waiter_state . success ) , new user_exists . is_no_such_entity_matcher ( ) ) n . with_default_polling_strategy ( new polling_strategy ( new max_attempts_retry_strategy ( codint ) , new fixed_delay_strategy ( codint ) ) ) n . with_executor_service ( executor_service ) . build ( ) n }	1
Q_96	build a user_exists waiter by use custom parameter waiter_parameters and other parameter define in the	C_96_1	public static xml_builder2 create ( string name , n boolean enable_external_entities , boolean is_namespace_aware ) n { n return xml_builder2 . create ( n name , null , enable_external_entities , is_namespace_aware ) n }	0
Q_96	build a user_exists waiter by use custom parameter waiter_parameters and other parameter define in the	C_96_2	void xor ( long_bit_set other ) { n assert other . num_words < = num_words codstr + num_words + codstr + other . num_words n int pos = math . min ( num_words , other . num_words ) n while ( _ pos > = codint ) { n bits [ pos ] ^ = other . bits [ pos ] n } n }	0
Q_97	marshall the give parameter object	C_97_0	public void marshall ( kinesis_firehose_input_description kinesis_firehose_input_description , protocol_marshaller protocol_marshaller ) { n n if ( kinesis_firehose_input_description = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( kinesis_firehose_input_description . get_resource_arn ( ) , resourcearn_binding ) n protocol_marshaller . marshall ( kinesis_firehose_input_description . get_role_arn ( ) , rolearn_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_97	marshall the give parameter object	C_97_1	public element last_element_sibling ( ) { n list < element > siblings = parent ( ) . child_elements_list ( ) n return siblings . size ( ) > codint ? siblings . get ( siblings . size ( ) _ codint ) null n }	0
Q_97	marshall the give parameter object	C_97_2	map < string , user_data > get_user_data_map_for_read ( node_impl node ) { n if ( node_to_user_data = = null ) { n return collections . empty_map ( ) n } n map < string , user_data > user_data_map = node_to_user_data . get ( node ) n return user_data_map = = null n ? collections . < string , user_data > empty_map ( ) n user_data_map n }	0
Q_98	marshall the give parameter object	C_98_0	public void marshall ( output_destination output_destination , protocol_marshaller protocol_marshaller ) { n n if ( output_destination = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( output_destination . get_id ( ) , id_binding ) n protocol_marshaller . marshall ( output_destination . get_media_package_settings ( ) , mediapackagesettings_binding ) n protocol_marshaller . marshall ( output_destination . get_settings ( ) , settings_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_98	marshall the give parameter object	C_98_1	public string build_org_unit_selector ( ) { n n string_buffer html = new string_buffer ( ) n html . append ( codstr width codint codstr codint codstr ) n append_id ( html , param_oufqn ) n html . append ( codstr ) n for ( cms_organizational_unit ou get_ous ( ) ) { n string selected = codstr n if ( ou . get_name ( ) . equals ( m_oufqn ) n ( cms_string_util . is_not_empty_or_whitespace_only ( m_oufqn ) ou . get_name ( ) . equals ( m_oufqn . substring ( codint ) ) ) ) { n selected = codstr selected codstr n } n html . append ( codstr codstr codstr ) . append ( selected ) . append ( codstr ) n html . append ( ou . get_display_name ( m_locale ) ) n html . append ( codstr ) n } n html . append ( codstr ) n return html . to_string ( ) n }	0
Q_98	marshall the give parameter object	C_98_2	private void add_generated_js_resource ( faces_context context , string resource_name , string library , ui_view_root view ) { n add_generated_resource ( context , resource_name , codstr , library , view ) n }	0
Q_99	this method be intend for internal use only	C_99_0	override n public request < create_key_pair_request > get_dry_run_request ( ) { n request < create_key_pair_request > request = new create_key_pair_request_marshaller ( ) . marshall ( this ) n request . add_parameter ( codstr , boolean . to_string ( true ) ) n return request n }	1
Q_99	this method be intend for internal use only	C_99_1	override n public decompressor create_decompressor ( ) { n if ( is_native_snappy_loaded ( conf ) ) { n throw new runtime_exception ( codstr ) n } n int buffer_size = conf . get_int ( n io_compression_codec_snappy_buffersize_key , n io_compression_codec_snappy_buffersize_default ) n return new snappy_decompressor ( buffer_size ) n }	0
Q_99	this method be intend for internal use only	C_99_2	protected final void set_context ( non_null final context context ) { n condition . instance . ensure_not_null ( context , codstr ) n this . context = context n }	0
Q_100	marshall the give parameter object	C_100_0	public void marshall ( get_email_channel_request get_email_channel_request , protocol_marshaller protocol_marshaller ) { n n if ( get_email_channel_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( get_email_channel_request . get_application_id ( ) , applicationid_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_100	marshall the give parameter object	C_100_1	protected time_zone guess_time_zone ( ) { n / / todo fix using real data n / / for single _ zone countries , pick that zone n / / for others , pick the most populous zone n / / for now , just use fixed value n / / note in a few cases can do better by looking at language . n / / eg haw + us should go to pacific / honolulu n / / fr + ca should go to america / montreal n string timezone_string = territory_tzid_hack_map . get ( get_territory ( ) ) n if ( timezone_string = = null ) { n string [ ] attempt = time_zone . get_available_i_ds ( get_territory ( ) ) n if ( attempt . length = = codint ) { n timezone_string = codstr / / gotta do something n } else { n int i n / / this all needs to be fixed to use real data . but for now , do slightly better by skipping cruft n for ( i = codint i < attempt . length + + i ) { n if ( attempt [ i ] . index_of ( codstr ) > = codint ) break n } n if ( i > attempt . length ) i = codint n timezone_string = attempt [ i ] n } n } n return time_zone . get_time_zone ( timezone_string ) n }	0
Q_100	marshall the give parameter object	C_100_2	public static file get_property_file ( string wiki_id , string user ) { n string user_properties_file_name = system . get_property ( codstr ) n + codstr + user + codstr + wiki_id + codstr n file prop_file = new file ( user_properties_file_name ) n return prop_file n }	0
Q_101	marshall the give parameter object	C_101_0	public void marshall ( describe_container_request describe_container_request , protocol_marshaller protocol_marshaller ) { n n if ( describe_container_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( describe_container_request . get_container_name ( ) , containername_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_101	marshall the give parameter object	C_101_1	public array_list < ovh_route_available_action > service_name_available_route_actions_get ( string service_name ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , service_name ) n string resp = exec ( q_path , codstr , sb . to_string ( ) , null ) n return convert_to ( resp , t7 ) n }	0
Q_101	marshall the give parameter object	C_101_2	public static < e > immutable_list < e > copy_of ( e [ ] elements ) { n return ( elements . length = = codint ) n ? immutable_list . < e > of ( ) n immutable_list . < e > construct ( elements . clone ( ) ) n }	0
Q_102	marshall the give parameter object	C_102_0	public void marshall ( node node , protocol_marshaller protocol_marshaller ) { n n if ( node = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( node . get_node_id ( ) , nodeid_binding ) n protocol_marshaller . marshall ( node . get_endpoint ( ) , endpoint_binding ) n protocol_marshaller . marshall ( node . get_node_create_time ( ) , nodecreatetime_binding ) n protocol_marshaller . marshall ( node . get_availability_zone ( ) , availabilityzone_binding ) n protocol_marshaller . marshall ( node . get_node_status ( ) , nodestatus_binding ) n protocol_marshaller . marshall ( node . get_parameter_group_status ( ) , parametergroupstatus_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_102	marshall the give parameter object	C_102_1	override n public void add_session_data ( final string key , final string value ) { n session_data . put ( key , value ) n }	0
Q_102	marshall the give parameter object	C_102_2	suppress_warnings ( codstr ) n override n public e_list < ifc_composite_curve > get_using_curves ( ) { n return ( e_list < ifc_composite_curve > ) e_get ( ifc4_package . literals . ifc_composite_curve_segment_using_curves , true ) n }	0
Q_103	marshall the give parameter object	C_103_0	public void marshall ( batch_import_findings_request batch_import_findings_request , protocol_marshaller protocol_marshaller ) { n n if ( batch_import_findings_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( batch_import_findings_request . get_findings ( ) , findings_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_103	marshall the give parameter object	C_103_1	public void write_fixed64 ( final int field_number , final long value ) n throws io_exception { n write_tag ( field_number , wire_format . wiretype_fixed64 ) n write_fixed64_no_tag ( value ) n }	0
Q_103	marshall the give parameter object	C_103_2	public key_manager_configurer key_password ( string key , string password ) { n if ( key_passwords = = null ) { n key_passwords = new hash_map < > ( ) n } n key_passwords . put ( key , password ) n return this n }	0
Q_104	write the give field and the value to the json_generator	C_104_0	private void write_json_key_value ( string field_name , string value ) n throws json_generation_exception , io_exception { n generator . write_string_field ( field_name , value ) n }	1
Q_104	write the give field and the value to the json_generator	C_104_1	public static int compare ( byte_buf buffer_a , byte_buf buffer_b ) { n final int a_len = buffer_a . readable_bytes ( ) n final int b_len = buffer_b . readable_bytes ( ) n final int min_length = math . min ( a_len , b_len ) n final int uint_count = min_length codint n final int byte_count = min_length codint n int a_index = buffer_a . reader_index ( ) n int b_index = buffer_b . reader_index ( ) n n if ( uint_count > codint ) { n boolean buffer_a_is_big_endian = buffer_a . order ( ) = = byte_order . big_endian n final long res n int uint_count_increment = uint_count < < codint n n if ( buffer_a . order ( ) = = buffer_b . order ( ) ) { n res = buffer_a_is_big_endian ? compare_uint_big_endian ( buffer_a , buffer_b , a_index , b_index , uint_count_increment ) n compare_uint_little_endian ( buffer_a , buffer_b , a_index , b_index , uint_count_increment ) n } else { n res = buffer_a_is_big_endian ? compare_uint_big_endian_a ( buffer_a , buffer_b , a_index , b_index , uint_count_increment ) n compare_uint_big_endian_b ( buffer_a , buffer_b , a_index , b_index , uint_count_increment ) n } n if ( res = codint ) { n / / ensure we not overflow when cast n return ( int ) math . min ( integer . max_value , math . max ( integer . min_value , res ) ) n } n a_index + = uint_count_increment n b_index + = uint_count_increment	0
Q_104	write the give field and the value to the json_generator	C_104_2	public final void reset ( ) { n for ( int i = codint i < position . length i + + ) { n position [ i ] = i n } n perm_left = new big_integer ( perm_total . to_string ( ) ) n }	0
Q_105	marshall the give parameter object	C_105_0	public void marshall ( thing_indexing_configuration thing_indexing_configuration , protocol_marshaller protocol_marshaller ) { n n if ( thing_indexing_configuration = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( thing_indexing_configuration . get_thing_indexing_mode ( ) , thingindexingmode_binding ) n protocol_marshaller . marshall ( thing_indexing_configuration . get_thing_connectivity_indexing_mode ( ) , thingconnectivityindexingmode_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_105	marshall the give parameter object	C_105_1	public boolean is_editable_display ( final target_mode _mode ) n { n boolean ret = false n if ( this . mode2display . contains_key ( _mode ) ) { n ret = this . mode2display . get ( _mode ) . equals ( field . display . editable ) n } n return ret n }	0
Q_105	marshall the give parameter object	C_105_2	public static void encode_list_value ( faces_context context , ui_calendar uicalendar , string option_name , list < object > values ) throws io_exception { n if ( values = = null ) { n return n } n n response_writer writer = context . get_response_writer ( ) n n writer . write ( codstr + option_name + codstr ) n for ( int i = codint i < values . size ( ) i + + ) { n object item = values . get ( i ) n object pre_text = ( i = = codint ) ? codstr codstr n n if ( item instanceof date ) { n writer . write ( pre_text + codstr codstr codstr ) n } n else { n writer . write ( pre_text + codstr + item ) n } n } n n writer . write ( codstr ) n }	0
Q_106	marshall the give parameter object	C_106_0	public void marshall ( start_app_replication_request start_app_replication_request , protocol_marshaller protocol_marshaller ) { n n if ( start_app_replication_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( start_app_replication_request . get_app_id ( ) , appid_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_106	marshall the give parameter object	C_106_1	public void add_view ( category category , category_view view , category_presenter presenter ) { n views . put ( category , view ) n presenters . put ( category , presenter ) n }	0
Q_106	marshall the give parameter object	C_106_2	"public void notation_decl ( string name , string pub_id , string sys_id ) throws sax_exception { n / / todo auto _ generated method stub n try { n dt_dprolog ( ) n n m_writer . write ( codstr ) n m_writer . write ( name ) n if ( pub_id = null ) { n m_writer . write ( codstr codstr system codstr ) n m_writer . write ( sys_id ) n } n m_writer . write ( codstr > "" ) n m_writer . write ( m_line_sep , codint , m_line_sep_len ) n } catch ( io_exception e ) { n / / todo auto _ generated catch block n e . print_stack_trace ( ) n } n }"	0
Q_107	marshall the give parameter object	C_107_0	public void marshall ( delete_hapg_request delete_hapg_request , protocol_marshaller protocol_marshaller ) { n n if ( delete_hapg_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( delete_hapg_request . get_hapg_arn ( ) , hapgarn_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_107	marshall the give parameter object	C_107_1	public void mark_neighbor_edges ( ) n { n for ( int i = codint i < codint i + + ) n { n if ( c_edge [ i ] ) n { n switch ( i ) n { n case codint n if ( neighbors [ codint ] = null ) n neighbors [ codint ] . mark_constrained_edge ( points [ codint ] , points [ codint ] ) n break n case codint n if ( neighbors [ codint ] = null ) n neighbors [ codint ] . mark_constrained_edge ( points [ codint ] , points [ codint ] ) n break n case codint n if ( neighbors [ codint ] = null ) n neighbors [ codint ] . mark_constrained_edge ( points [ codint ] , points [ codint ] ) n break n } n } n } n }	0
Q_107	marshall the give parameter object	C_107_2	public static string filter_to_filter_spec ( final model_node value ) throws operation_failed_exception { n if ( value . is_defined ( ) ) { n final string_builder result = new string_builder ( ) n filter_to_filter_spec ( value , result , false ) n if ( result . length ( ) = = codint ) { n final string name = value . has_defined ( common_attributes . filter . get_name ( ) ) ? value . get ( common_attributes . filter . get_name ( ) ) . as_string ( ) value . as_string ( ) n throw logging . create_operation_failure ( logging_logger . root_logger . invalid_filter ( name ) ) n } n return result . to_string ( ) n } n return codstr n }	0
Q_108	marshall the give parameter object	C_108_0	public void marshall ( device_event device_event , protocol_marshaller protocol_marshaller ) { n n if ( device_event = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( device_event . get_type ( ) , type_binding ) n protocol_marshaller . marshall ( device_event . get_value ( ) , value_binding ) n protocol_marshaller . marshall ( device_event . get_timestamp ( ) , timestamp_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_108	marshall the give parameter object	C_108_1	public static thread start ( thread self , closure closure ) { n return create_thread ( null , false , closure ) n }	0
Q_108	marshall the give parameter object	C_108_2	public static string generate_md5 ( final byte [ ] input ) { n try { n final message_digest message_digest = message_digest . get_instance ( codstr ) n message_digest . reset ( ) n byte [ ] digest = message_digest . digest ( input ) n return new string ( hex . encode_hex ( digest ) ) n } catch ( exception e ) { n log . debug ( codstr , e ) n return null n } n }	0
Q_109	return the content encrypt key unwrap or decrypt	C_109_0	private static secret_key cek ( byte [ ] cek_secured , string key_wrap_algo , n encryption_materials materials , provider security_provider , n content_crypto_scheme content_crypto_scheme , awskms kms ) { n if ( is_kms_key_wrapped ( key_wrap_algo ) ) n return cek_by_kms ( cek_secured , key_wrap_algo , materials , content_crypto_scheme , kms ) n key kek n if ( materials . get_key_pair ( ) = null ) { n / / do envelope decryption with private key from key pair n kek = materials . get_key_pair ( ) . get_private ( ) n if ( kek = = null ) { n throw new sdk_client_exception ( codstr ) n } n } else { n / / do envelope decryption with symmetric key n kek = materials . get_symmetric_key ( ) n if ( kek = = null ) { n throw new sdk_client_exception ( codstr ) n } n } n n try { n if ( key_wrap_algo = null ) { n / / key wrapping specified n cipher cipher = security_provider = = null ? cipher n . get_instance ( key_wrap_algo ) cipher . get_instance ( n key_wrap_algo , security_provider ) n cipher . init ( cipher . unwrap_mode , kek ) n return ( secret_key ) cipher . unwrap ( cek_secured , key_wrap_algo , n cipher . secret_key ) n } n / / fall back to the encryption only ( eo ) key decrypting method n cipher cipher n if ( security_provider = null ) { n	1
Q_109	return the content encrypt key unwrap or decrypt	C_109_1	public static cms_search_field_mapping_type value_of ( string value ) { n n if ( cms_string_util . is_empty_or_whitespace_only ( value ) ) { n return null n } n value = value . trim ( ) . to_lower_case ( ) n if ( str_content . equals ( value ) ) { n return content n } else if ( str_property . equals ( value ) ) { n return property n } else if ( str_property_search . equals ( value ) ) { n return property_search n } else if ( str_item . equals ( value ) ) { n return item n } else if ( str_dynamic . equals ( value ) ) { n return dynamic n } else if ( str_attribute . equals ( value ) ) { n return attribute n } n return null n }	0
Q_109	return the content encrypt key unwrap or decrypt	C_109_2	public boolean is_up_to_date ( ) throws managed_sdk_verification_exception { n if ( files . is_regular_file ( get_gcloud_path ( ) ) ) { n return false n } n n if ( version = version . latest ) { n return true n } n n list < string > update_available_command = n arrays . as_list ( n get_gcloud_path ( ) . to_string ( ) , n codstr , n codstr , n codstr , n codstr ) n n try { n string result = command_caller . new_caller ( ) . call ( update_available_command , null , null ) n for ( cloud_sdk_component component cloud_sdk_component . from_json_list ( result ) ) { n state state = component . get_state ( ) n if ( state = null ) { n if ( codstr . equals ( state . get_name ( ) ) ) { n return false n } n } n } n return true n } catch ( command_execution_exception interrupted_exception command_exit_exception ex ) { n throw new managed_sdk_verification_exception ( ex ) n } n }	0
Q_110	marshall the give parameter object	C_110_0	public void marshall ( describe_assessment_templates_request describe_assessment_templates_request , protocol_marshaller protocol_marshaller ) { n n if ( describe_assessment_templates_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( describe_assessment_templates_request . get_assessment_template_arns ( ) , assessmenttemplatearns_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_110	marshall the give parameter object	C_110_1	override n suppress_warnings ( codstr ) n public page < fax > first_page ( final twilio_rest_client client ) { n request request = new request ( n http_method . get , n domains . fax . to_string ( ) , n codstr , n client . get_region ( ) n ) n n add_query_params ( request ) n return page_for_request ( client , request ) n }	0
Q_110	marshall the give parameter object	C_110_2	suppress_warnings ( codstr ) n private void read_object ( object_input_stream a_stream ) throws io_exception , class_not_found_exception { n absolute = a_stream . read_boolean ( ) n normalized = a_stream . read_boolean ( ) n segments = ( list < path . segment > ) a_stream . read_object ( ) n }	0
Q_111	marshall the give parameter object	C_111_0	public void marshall ( list_dominant_language_detection_jobs_request list_dominant_language_detection_jobs_request , protocol_marshaller protocol_marshaller ) { n n if ( list_dominant_language_detection_jobs_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( list_dominant_language_detection_jobs_request . get_filter ( ) , filter_binding ) n protocol_marshaller . marshall ( list_dominant_language_detection_jobs_request . get_next_token ( ) , nexttoken_binding ) n protocol_marshaller . marshall ( list_dominant_language_detection_jobs_request . get_max_results ( ) , maxresults_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_111	marshall the give parameter object	C_111_1	public void start ( ) { n / * * initial delay to execute schedule task , unit ms * / n long initial_delay = config_manager . conn_monitor_initial_delay ( ) n n / * * period of schedule task , unit ms * / n long period = config_manager . conn_monitor_period ( ) n n this . executor = new scheduled_thread_pool_executor ( codint , new named_thread_factory ( n codstr , true ) , new thread_pool_executor . abort_policy ( ) ) n monitor_task monitor_task = new monitor_task ( ) n this . executor . schedule_at_fixed_rate ( monitor_task , initial_delay , period , time_unit . milliseconds ) n }	0
Q_111	marshall the give parameter object	C_111_2	public object decode ( decoder decoder ) throws io_exception { n try { n return output_generator . read ( decoder , schema ) n } catch ( io_exception e ) { n log . error ( codstr , output_class . get_name ( ) , e ) n throw e n } n }	0
Q_112	marshall the give parameter object	C_112_0	public void marshall ( list_tags_for_certificate_request list_tags_for_certificate_request , protocol_marshaller protocol_marshaller ) { n n if ( list_tags_for_certificate_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( list_tags_for_certificate_request . get_certificate_arn ( ) , certificatearn_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	1
Q_112	marshall the give parameter object	C_112_1	private void write_buffered_vals_to_storage ( ) { n list < versioned < byte [ ] obsolete_vals = storage_engine . multi_version_put ( curr_buffered_key , n curr_buffered_vals ) n / / log obsolete versions in debug mode n if ( logger . is_debug_enabled ( ) obsolete_vals . size ( ) > codint ) { n logger . debug ( codstr n + store_utils . get_versions ( obsolete_vals ) + codstr + curr_buffered_key ) n } n curr_buffered_vals = new array_list < versioned < byte [ ] ( vals_buffer_expected_size ) n }	0
Q_112	marshall the give parameter object	C_112_2	private object execute_mutable_transaction ( managed_method_spi managed_method , object [ ] args ) throws throwable { n / / store transaction session on current thread via transactional resource utility n / / it may happen to have multiple nested transaction on current thread n / / since all are created by the same transactional resource , all are part of the same session n / / and there is no harm if store_session is invoked multiple times n / / also performance penalty is comparable with the effort to prevent this multiple write n n transaction transaction = transactional_resource . create_transaction ( ) n transactional_resource . store_session ( transaction . get_session ( ) ) n n try { n object result = managed_method . invoke ( managed_instance , args ) n transaction . commit ( ) n if ( transaction . unused ( ) ) { n log . debug ( codstr , managed_method ) n } n return result n } catch ( throwable throwable ) { n transaction . rollback ( ) n throw throwable ( throwable , codstr , managed_method ) n } finally { n if ( transaction . close ( ) ) { n / / it may happen to have multiple nested transaction on this thread n / / if this is the case , remove session from current thread only if outermost transaction is closed n / / of course if not nested transactions , remove at once n transactional_resource . release_session (	0
Q_113	log an exception be catch	C_113_0	public void catching ( throwable throwable ) { n if ( instanceof_lal ) { n ( ( location_aware_logger ) logger ) . log ( catching_marker , fqcn , location_aware_logger . error_int , codstr , null , throwable ) n } n }	1
Q_113	log an exception be catch	C_113_1	protected void apply_color ( base_ui_component comp ) { n if ( comp instanceof base_labeled_component ) { n comp . invoke ( comp . sub ( codstr ) , codstr , codstr , get_color ( ) ) n } else if ( comp = null ) { n comp . add_style ( codstr , get_color ( ) ) n } n }	0
Q_113	log an exception be catch	C_113_2	public observable < page < vpn_site_inner list_by_resource_group_async ( final string resource_group_name ) { n return list_by_resource_group_with_service_response_async ( resource_group_name ) n . map ( new func1 < service_response < page < vpn_site_inner , page < vpn_site_inner ( ) { n override n public page < vpn_site_inner > call ( service_response < page < vpn_site_inner response ) { n return response . body ( ) n } n } ) n }	0
Q_114	prefills b_box with minimum value so that it can increase	C_114_0	public static b_box create_inverse ( boolean elevation ) { n if ( elevation ) { n return new b_box ( double . max_value , _ double . max_value , double . max_value , _ double . max_value , n double . max_value , _ double . max_value , true ) n } else { n return new b_box ( double . max_value , _ double . max_value , double . max_value , _ double . max_value , n double . na_n , double . na_n , false ) n } n }	1
Q_114	prefills b_box with minimum value so that it can increase	C_114_1	public static void wrong_parameter_number ( string method_name , string class_name ) { n throw new conversion_parameter_exception ( msg . instance . message ( conversion_parameter_exception , method_name , class_name ) ) n }	0
Q_114	prefills b_box with minimum value so that it can increase	C_114_2	override n public cp_option remove_by_c_erc ( long company_id , string external_reference_code ) n throws no_such_cp_option_exception { n cp_option cp_option = find_by_c_erc ( company_id , external_reference_code ) n n return remove ( cp_option ) n }	0
Q_115	this load the translation file from the specify folder	C_115_0	public translation_map do_import ( file folder ) { n try { n for ( string locale locales ) { n translation_hash_map tr_map = new translation_hash_map ( get_locale ( locale ) ) n tr_map . do_import ( new file_input_stream ( new file ( folder , locale + codstr ) ) ) n add ( tr_map ) n } n post_import_hook ( ) n return this n } catch ( exception ex ) { n throw new runtime_exception ( ex ) n } n }	1
Q_115	this load the translation file from the specify folder	C_115_1	public observable < page < domain_inner list_by_resource_group_async ( string resource_group_name ) { n return list_by_resource_group_with_service_response_async ( resource_group_name ) . map ( new func1 < service_response < list < domain_inner , page < domain_inner ( ) { n override n public page < domain_inner > call ( service_response < list < domain_inner response ) { n page_impl < domain_inner > page = new page_impl < > ( ) n page . set_items ( response . body ( ) ) n return page n } n } ) n }	0
Q_115	this load the translation file from the specify folder	C_115_2	private static list < string > init_replicas ( n final comparable token , final session session , final i_partitioner partitioner ) { n final abstract_type tk_validator = partitioner . get_token_validator ( ) n final metadata metadata = session . get_cluster ( ) . get_metadata ( ) n n suppress_warnings ( codstr ) n set < host > replicas = metadata . get_replicas ( quote ( session . get_logged_keyspace ( ) ) , n byte_buffer . wrap ( token . to_string ( ) . get_bytes ( ) ) ) n n return lists . new_array_list ( iterables . transform ( replicas , new function < host , string > ( ) { n nullable n override n public string apply ( n nullable n host input ) { n assert input = null n return input . get_address ( ) . get_host_name ( ) n } n } ) ) n }	0
Q_116	be warn only change method name at the declaration	C_116_0	public static suggested_fix rename_method ( n method_tree tree , final string replacement , visitor_state state ) { n / / search tokens from beginning of method tree to beginning of method body . n int base_pos = ( ( jc_tree ) tree ) . get_start_position ( ) n int end_pos = n tree . get_body ( ) = null n ? ( ( jc_tree ) tree . get_body ( ) ) . get_start_position ( ) n state . get_end_position ( tree ) n list < error_prone_token > method_tokens = n error_prone_tokens . get_tokens ( n state . get_source_code ( ) . sub_sequence ( base_pos , end_pos ) . to_string ( ) , state . context ) n for ( error_prone_token token method_tokens ) { n if ( token . kind ( ) = = token_kind . identifier token . name ( ) . equals ( tree . get_name ( ) ) ) { n int name_start_position = base_pos + token . pos ( ) n int name_end_position = base_pos + token . end_pos ( ) n return suggested_fix . builder ( ) n . replace ( name_start_position , name_end_position , replacement ) n . build ( ) n } n } n / / method name not found . n throw new assertion_error ( ) n }	1
Q_116	be warn only change method name at the declaration	C_116_1	public paged_list < express_route_circuit_authorization_inner > list ( final string resource_group_name , final string circuit_name ) { n service_response < page < express_route_circuit_authorization_inner response = list_single_page_async ( resource_group_name , circuit_name ) . to_blocking ( ) . single ( ) n return new paged_list < express_route_circuit_authorization_inner > ( response . body ( ) ) { n override n public page < express_route_circuit_authorization_inner > next_page ( string next_page_link ) { n return list_next_single_page_async ( next_page_link ) . to_blocking ( ) . single ( ) . body ( ) n } n } n }	0
Q_116	be warn only change method name at the declaration	C_116_2	public com . squareup . okhttp . call get_universe_system_jumps_async ( string datasource , string if_none_match , n final api_callback < list < system_jumps_response callback ) throws api_exception { n n com . squareup . okhttp . call call = get_universe_system_jumps_validate_before_call ( datasource , if_none_match , callback ) n type local_var_return_type = new type_token < list < system_jumps_response ( ) { n } . get_type ( ) n api_client . execute_async ( call , local_var_return_type , callback ) n return call n }	0
Q_117	replace the source code between the start and end character position with a new string	C_117_0	public void replace_chars ( int start_position , int end_position , string replacement ) { n try { n source_builder . replace ( start_position , end_position , replacement ) n } catch ( string_index_out_of_bounds_exception e ) { n throw new index_out_of_bounds_exception ( n string . format ( n codstr n + codstr , n path , source_builder . length ( ) , start_position , end_position , replacement ) ) n } n }	1
Q_117	replace the source code between the start and end character position with a new string	C_117_1	int xlate_rs_concurrency ( int concurrency ) throws sql_exception { n n sql_warning w n string msg n n switch ( concurrency ) { n n case jdbc_result_set . concur_read_only { n return concurrency n } n case jdbc_result_set . concur_updatable { n msg = codstr n w = new sql_warning ( msg , codstr , n error_code . jdbc_invalid_argument ) n n add_warning ( w ) n n return jdbc_result_set . concur_read_only n } n default { n msg = codstr + concurrency n n throw util . invalid_argument ( msg ) n } n } n }	0
Q_117	replace the source code between the start and end character position with a new string	C_117_2	public static base_response add ( nitro_service client , dnsaction64 resource ) throws exception { n dnsaction64 addresource = new dnsaction64 ( ) n addresource . actionname = resource . actionname n addresource . prefix = resource . prefix n addresource . mappedrule = resource . mappedrule n addresource . excluderule = resource . excluderule n return addresource . add_resource ( client ) n }	0
Q_118	check whether the parameter be a subset of this roaring_bitmap or not	C_118_0	public boolean contains ( roaring_bitmap subset ) { n if ( subset . get_cardinality ( ) > get_cardinality ( ) ) { n return false n } n final int length1 = this . high_low_container . size n final int length2 = subset . high_low_container . size n int pos1 = codint , pos2 = codint n while ( pos1 < length1 pos2 < length2 ) { n final short s1 = this . high_low_container . get_key_at_index ( pos1 ) n final short s2 = subset . high_low_container . get_key_at_index ( pos2 ) n if ( s1 = = s2 ) { n container c1 = this . high_low_container . get_container_at_index ( pos1 ) n container c2 = subset . high_low_container . get_container_at_index ( pos2 ) n if ( c1 . contains ( c2 ) ) { n return false n } n + + pos1 n + + pos2 n } else if ( util . compare_unsigned ( s1 , s2 ) > codint ) { n return false n } else { n pos1 = subset . high_low_container . advance_until ( s2 , pos1 ) n } n } n return pos2 = = length2 n }	1
Q_118	check whether the parameter be a subset of this roaring_bitmap or not	C_118_1	public float get_float ( string key , float default_value ) { n object o = get_raw_value ( key ) n if ( o = = null ) { n return default_value n } n n return convert_to_float ( o , default_value ) n }	0
Q_118	check whether the parameter be a subset of this roaring_bitmap or not	C_118_2	public static string read_file_to_string ( file file ) throws io_exception { n n assert . is_true ( file . exists ( ) , codstr codstr codstr ) n assert . is_false ( file . is_directory ( ) , codstr codstr codstr ) n assert . is_true ( file . can_read ( ) , codstr codstr codstr ) n n file_input_stream stream = new file_input_stream ( file ) n return get_string ( stream ) n }	0
Q_119	convert this object to an interval represent the whole day	C_119_0	public interval to_interval ( date_time_zone zone ) { n zone = date_time_utils . get_zone ( zone ) n date_time start = to_date_time_at_start_of_day ( zone ) n date_time end = plus_days ( codint ) . to_date_time_at_start_of_day ( zone ) n return new interval ( start , end ) n }	1
Q_119	convert this object to an interval represent the whole day	C_119_1	override n public list < commerce_wish_list > find_by_user_id ( long user_id ) { n return find_by_user_id ( user_id , query_util . all_pos , query_util . all_pos , null ) n }	0
Q_119	convert this object to an interval represent the whole day	C_119_2	public service_future < query_response_inner > resources_async ( query_request query , final service_callback < query_response_inner > service_callback ) { n return service_future . from_response ( resources_with_service_response_async ( query ) , service_callback ) n }	0
Q_120	parse the date time tag the subsecond tag and the time offset tag to obtain a single date	C_120_0	nullable n public date get_date_digitized ( nullable time_zone time_zone ) n { n time_zone time_zone_digitized = get_time_zone ( tag_offset_time_digitized ) n return get_date ( tag_datetime_digitized , get_string ( tag_subsecond_time_digitized ) , n ( time_zone_digitized = null ) ? time_zone_digitized time_zone ) n }	1
Q_120	parse the date time tag the subsecond tag and the time offset tag to obtain a single date	C_120_1	public static schedule create_schedule_from_conventions ( n local_date reference_date , n int spot_offset_days , n string start_offset_string , n string maturity_string , n string frequency , n string daycount_convention , n string short_period_convention , n string date_roll_convention , n businessday_calendar businessday_calendar , n int fixing_offset_days , n int payment_offset_days n ) n { n / / trade_date = reference_date n return create_schedule_from_conventions ( reference_date , reference_date , spot_offset_days , start_offset_string , maturity_string , frequency , daycount_convention , short_period_convention , date_roll_convention , businessday_calendar , fixing_offset_days , payment_offset_days ) n }	0
Q_120	parse the date time tag the subsecond tag and the time offset tag to obtain a single date	C_120_2	override n public request < enable_vpc_classic_link_dns_support_request > get_dry_run_request ( ) { n request < enable_vpc_classic_link_dns_support_request > request = new enable_vpc_classic_link_dns_support_request_marshaller ( ) . marshall ( this ) n request . add_parameter ( codstr , boolean . to_string ( true ) ) n return request n }	0
Q_121	the graql compute centrality use k_core query run method	C_121_0	private stream < concept_set_measure > run_compute_coreness ( graql_compute . centrality query ) { n long k = query . where ( ) . min_k ( ) . get ( ) n n if ( k < codint ) throw graql_query_exception . k_value_smaller_than_two ( ) n n set < label > target_type_labels n n / / check if of_type is valid before returning empty_map n if ( query . of ( ) . is_empty ( ) ) { n target_type_labels = scope_type_labels ( query ) n } else { n target_type_labels = query . of ( ) . stream ( ) n . flat_map ( t _ > { n label type_label = label . of ( t ) n type type = tx . get_schema_concept ( type_label ) n if ( type = = null ) throw graql_query_exception . label_not_found ( type_label ) n if ( type . is_relation_type ( ) ) throw graql_query_exception . k_core_on_relation_type ( type_label ) n return type . subs ( ) n } ) n . map ( schema_concept label ) n . collect ( to_set ( ) ) n } n n set < label > scope_type_labels = sets . union ( scope_type_labels ( query ) , target_type_labels ) n n if ( scope_contains_instance ( query ) ) { n return stream . empty ( ) n } n n computer_result result n set < label_id > scope_type_label_i_ds = convert_labels_to_ids ( scope_type_labels ) n set < label_id > target_type_label_i_ds = convert_labels_to_ids ( target_type_labels	1
Q_121	the graql compute centrality use k_core query run method	C_121_1	public static double mean ( int [ ] values ) { n int hits n long total = codint n double mean = codint n n / / for all values n for ( int i = codint , n = values . length i < n i + + ) { n hits = values [ i ] n / / accumulate mean n mean + = i * hits n / / accumalate total n total + = hits n } n return ( total = = codint ) ? codint mean / total n }	0
Q_121	the graql compute centrality use k_core query run method	C_121_2	public static result_set execute_adaptive_query ( session session , statement statement , int fetch_size ) { n int remaining_adaptations = max_adaptations n while ( true ) { n try { n statement . set_fetch_size ( fetch_size ) n result_set result_set = session . execute ( statement ) n return new adaptive_result_set ( session , result_set , remaining_adaptations ) n } catch ( throwable t ) { n if ( is_adaptive_exception ( t ) _ remaining_adaptations = codint fetch_size > min_fetch_size ) { n / / try again with half the fetch size n fetch_size = math . max ( fetch_size / codint , min_fetch_size ) n _log . debug ( codstr , fetch_size , t . get_message ( ) ) n } else { n throw throwables . propagate ( t ) n } n } n } n }	0
Q_122	_ begin_user_doc _	C_122_0	public void set_uniform_distribution ( uniform_distribution_type new_uniform_distribution ) { n ( ( feature_map . internal ) get_mixed ( ) ) . set ( bpsim_package . literals . document_root_uniform_distribution , new_uniform_distribution ) n }	1
Q_122	_ begin_user_doc _	C_122_1	public matrix4d swap ( matrix4d other ) { n double tmp n tmp = m00 m00 = other . m00 other . m00 = tmp n tmp = m01 m01 = other . m01 other . m01 = tmp n tmp = m02 m02 = other . m02 other . m02 = tmp n tmp = m03 m03 = other . m03 other . m03 = tmp n tmp = m10 m10 = other . m10 other . m10 = tmp n tmp = m11 m11 = other . m11 other . m11 = tmp n tmp = m12 m12 = other . m12 other . m12 = tmp n tmp = m13 m13 = other . m13 other . m13 = tmp n tmp = m20 m20 = other . m20 other . m20 = tmp n tmp = m21 m21 = other . m21 other . m21 = tmp n tmp = m22 m22 = other . m22 other . m22 = tmp n tmp = m23 m23 = other . m23 other . m23 = tmp n tmp = m30 m30 = other . m30 other . m30 = tmp n tmp = m31 m31 = other . m31 other . m31 = tmp n tmp = m32 m32 = other . m32 other . m32 = tmp n tmp = m33 m33 = other . m33 other . m33 = tmp n int props = properties n this . properties = other . properties n	0
Q_122	_ begin_user_doc _	C_122_2	public static < t > t reflector ( class < t > i_class , object target ) { n class < ? > target_class = determine_target_class ( i_class ) n n constructor < ? extends t > ctor = ( constructor < ? extends t > ) cache . get ( i_class ) n try { n if ( ctor = = null ) { n class < ? extends t > reflector_class = create_reflector_class ( i_class , target_class ) n ctor = reflector_class . get_constructor ( target_class ) n ctor . set_accessible ( true ) n } n n cache . put ( i_class , ctor ) n n return ctor . new_instance ( target ) n } catch ( no_such_method_exception n instantiation_exception n illegal_access_exception n invocation_target_exception e ) { n throw new illegal_state_exception ( e ) n } n }	0
Q_123	check if the current process be a temporary phoenix process	C_123_0	public static boolean is_phoenix_process ( context context ) { n int current_pid = process . my_pid ( ) n activity_manager manager = ( activity_manager ) context . get_system_service ( context . activity_service ) n list < activity_manager . running_app_process_info > running_processes = manager . get_running_app_processes ( ) n if ( running_processes = null ) { n for ( activity_manager . running_app_process_info process_info running_processes ) { n if ( process_info . pid = = current_pid process_info . process_name . ends_with ( codstr ) ) { n return true n } n } n } n return false n }	1
Q_123	check if the current process be a temporary phoenix process	C_123_1	public static boolean is_white_space ( string_buffer buf ) n { n n int n = buf . length ( ) n n for ( int i = codint i < n i + + ) n { n if ( is_white_space ( buf . char_at ( i ) ) ) n return false n } n n return true n }	0
Q_123	check if the current process be a temporary phoenix process	C_123_2	public service_future < list < policy_definition_inner list_built_in_async ( final list_operation_callback < policy_definition_inner > service_callback ) { n return azure_service_future . from_page_response ( n list_built_in_single_page_async ( ) , n new func1 < string , observable < service_response < page < policy_definition_inner ( ) { n override n public observable < service_response < page < policy_definition_inner call ( string next_page_link ) { n return list_built_in_next_single_page_async ( next_page_link ) n } n } , n service_callback ) n }	0
Q_124	p call to indicate the connection have be open and message can now be generate for the server	C_124_0	override n public void connection_open ( ) { n lock . lock ( ) n try { n connection_open = true n n stored_payment_channel_client_states channels = ( stored_payment_channel_client_states ) wallet . get_extensions ( ) . get ( stored_payment_channel_client_states . extension_id ) n if ( channels = null ) n stored_channel = channels . get_usable_channel_for_server_id ( server_id ) n n step = init_step . waiting_for_version_negotiation n n protos . client_version . builder version_negotiation_builder = protos . client_version . new_builder ( ) n . set_major ( version_selector . get_requested_major_version ( ) ) n . set_minor ( version_selector . get_requested_minor_version ( ) ) n . set_time_window_secs ( time_window ) n n if ( stored_channel = null ) { n version_negotiation_builder . set_previous_channel_contract_hash ( byte_string . copy_from ( stored_channel . contract . get_tx_id ( ) . get_bytes ( ) ) ) n log . info ( codstr , stored_channel . contract . get_tx_id ( ) ) n } else n log . info ( codstr ) n n conn . send_to_server ( protos . two_way_channel_message . new_builder ( ) n . set_type ( protos . two_way_channel_message . message_type . client_version ) n . set_client_version ( version_negotiation_builder ) n . build ( ) ) n } finally { n lock . unlock ( ) n } n }	1
Q_124	p call to indicate the connection have be open and message can now be generate for the server	C_124_1	public list < grant_report > get_grant_report_list ( ) { n map < integer , grant_report > grant_report_map = n new tree_map < integer , grant_report > ( ) n for ( map . entry < integer , resource_grant > entry id_to_grant . entry_set ( ) ) { n grant_report_map . put ( entry . get_key ( ) , n new grant_report ( entry . get_key ( ) . int_value ( ) , n entry . get_value ( ) . get_address ( ) . to_string ( ) , n entry . get_value ( ) . get_type ( ) , n entry . get_value ( ) . get_granted_time ( ) ) ) n } n return new array_list < grant_report > ( grant_report_map . values ( ) ) n }	0
Q_124	p call to indicate the connection have be open and message can now be generate for the server	C_124_2	protected void adjust_tree ( index_tree_path < e > subtree ) { n final logging log = get_logger ( ) n if ( log . is_debugging ( ) ) { n log . debug_fine ( codstr + subtree ) n } n n / / get the root of the subtree n n node = get_node ( subtree . get_entry ( ) ) n n / / overflow in node n if ( has_overflow ( node ) ) { n / / treatment of overflow reinsertion or split n n split = overflow_treatment ( node , subtree ) n n / / node was split n if ( split = null ) { n / / if root was split create a new root that points the two n / / split nodes n if ( is_root ( node ) ) { n index_tree_path < e > new_root_path = create_new_root ( node , split ) n height + + n adjust_tree ( new_root_path ) n } n / / node is not root n else { n / / get the parent and add the new split node n n parent = get_node ( subtree . get_parent_path ( ) . get_entry ( ) ) n if ( log . is_debugging ( ) ) { n log . debug_fine ( codstr + parent ) n } n parent . add_directory_entry ( create_new_directory_entry ( split ) ) n n / / adjust the entry representing the ( old ) node , that	0
Q_125	decode the next vlq_value from the provide char_iterator	C_125_0	public static int decode ( char_iterator in ) { n int result = codint n boolean continuation n int shift = codint n do { n char c = in . next ( ) n int digit = base64 . from_base64 ( c ) n continuation = ( digit vlq_continuation_bit ) = codint n digit = vlq_base_mask n result = result + ( digit < < shift ) n shift = shift + vlq_base_shift n } while ( continuation ) n n return from_vlq_signed ( result ) n }	1
Q_125	decode the next vlq_value from the provide char_iterator	C_125_1	public static string word_slice ( evaluation_context ctx , object text , object start , integer_default ( codint ) object stop , boolean_default ( false ) object by_spaces ) { n string _text = conversions . to_string ( text , ctx ) n int _start = conversions . to_integer ( start , ctx ) n integer _stop = conversions . to_integer ( stop , ctx ) n boolean _by_spaces = conversions . to_boolean ( by_spaces , ctx ) n n if ( _start = = codint ) { n throw new runtime_exception ( codstr ) n } else if ( _start > codint ) { n _start _ = codint / / convert to a zero _ based offset n } n n if ( _stop = = codint ) { / / zero is treated as no end n _stop = null n } else if ( _stop > codint ) { n _stop _ = codint / / convert to a zero _ based offset n } n n list < string > words = get_words ( _text , _by_spaces ) n list < string > selection = expression_utils . slice ( words , _start , _stop ) n n / / re _ combine selected words with a single space n return string_utils . join ( selection , codstr ) n }	0
Q_125	decode the next vlq_value from the provide char_iterator	C_125_2	public void sweep_file ( long now , path p ) throws exception { n if ( p = = null ) { n return n } n long expiry = get_expiry_from_filename ( p . get_file_name ( ) . to_string ( ) ) n / / files with codint expiry never expire n if ( expiry > codint ( ( now _ expiry ) > = ( codint * time_unit . seconds . to_millis ( grace_period_sec ) ) ) ) { n files . delete_if_exists ( p ) n if ( log . is_debug_enabled ( ) ) { n log . debug ( codstr + p . get_file_name ( ) ) n } n } n }	0
Q_126	get the top variable name from a possibly namespaced name	C_126_0	private static string get_top_var_name ( string name ) { n int first_dot_index = name . index_of ( codstr ) n return first_dot_index = = _ codint ? name name . substring ( codint , first_dot_index ) n }	1
Q_126	get the top variable name from a possibly namespaced name	C_126_1	public void marshall ( list_backup_selections_request list_backup_selections_request , protocol_marshaller protocol_marshaller ) { n n if ( list_backup_selections_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( list_backup_selections_request . get_backup_plan_id ( ) , backupplanid_binding ) n protocol_marshaller . marshall ( list_backup_selections_request . get_next_token ( ) , nexttoken_binding ) n protocol_marshaller . marshall ( list_backup_selections_request . get_max_results ( ) , maxresults_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_126	get the top variable name from a possibly namespaced name	C_126_2	public void defrag ( ) throws io_exception { n o_log_manager . instance ( ) . debug ( this , codstr , file , file . get_file_size ( ) , n file . get_filled_up_to ( ) ) n n o_log_manager . instance ( ) . debug ( this , codstr , file , n file . get_file_size ( ) , file . get_filled_up_to ( ) ) n }	0
Q_127	replace the tagstr statement with it child expression	C_127_0	private static void convert_last_return_to_statement ( n node block , string result_name ) { n node ret = block . get_last_child ( ) n check_argument ( ret . is_return ( ) ) n node result_node = get_replacement_return_statement ( ret , result_name ) n n if ( result_node = = null ) { n block . remove_child ( ret ) n } else { n result_node . use_source_info_if_missing_from_for_tree ( ret ) n block . replace_child ( ret , result_node ) n } n }	1
Q_127	replace the tagstr statement with it child expression	C_127_1	"public void execute ( ) n { n if ( run_only_at_execution_root get_project ( ) . is_execution_root ( ) ) n { n get_log ( ) . info ( codstr s not the execution root "" ) n } n else n { n define_property ( root_location_property , session . get_top_level_project ( ) . get_basedir ( ) . get_absolute_path ( ) ) n } n }"	0
Q_127	replace the tagstr statement with it child expression	C_127_2	public void marshall ( patch_filter patch_filter , protocol_marshaller protocol_marshaller ) { n n if ( patch_filter = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( patch_filter . get_key ( ) , key_binding ) n protocol_marshaller . marshall ( patch_filter . get_values ( ) , values_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_128	do heartbeat and update local_state	C_128_0	public void do_heartbeat ( ) throws io_exception { n int cur_time = time_utils . current_time_secs ( ) n worker_heartbeat hb = new worker_heartbeat ( cur_time , topology_id , task_ids , port ) n n log . debug ( codstr + worker_id + codstr + port + codstr + hb . to_string ( ) ) n local_state state = get_worker_state ( ) n state . put ( common . ls_worker_heartbeat , hb ) n }	1
Q_128	do heartbeat and update local_state	C_128_1	pure n public iterable < bus_itinerary_halt > bus_halts ( ) { n final multi_collection < bus_itinerary_halt > halts = new multi_collection < > ( ) n halts . add_collection ( this . valid_halts ) n halts . add_collection ( this . invalid_halts ) n return collections . unmodifiable_collection ( halts ) n }	0
Q_128	do heartbeat and update local_state	C_128_2	public final thresholds_evaluator_builder with_legacy_threshold ( final string metric , final string ok_range , final string warn_range , n final string crit_range ) throws bad_threshold_exception { n legacy_range ok = null , warn = null , crit = null n n if ( ok_range = null ) { n ok = new legacy_range ( ok_range ) n } n if ( warn_range = null ) { n warn = new legacy_range ( warn_range ) n } n if ( crit_range = null ) { n crit = new legacy_range ( crit_range ) n } n n thresholds . add_threshold ( new legacy_threshold ( metric , ok , warn , crit ) ) n return this n }	0
Q_129	return an iterator over this queue be element	C_129_0	override n public iterator < e > iterator ( ) { n return new iterator < e > ( ) { n n private int index = start n private int last_returned_index = _ codint n private boolean is_first = full n n override n public boolean has_next ( ) { n return is_first index = end n } n n override n public e next ( ) { n if ( has_next ( ) ) { n throw new no_such_element_exception ( ) n } n is_first = false n last_returned_index = index n index = increment ( index ) n return elements [ last_returned_index ] n } n n override n public void remove ( ) { n if ( last_returned_index = = _ codint ) { n throw new illegal_state_exception ( ) n } n n / / first element can be removed quickly n if ( last_returned_index = = start ) { n circular_fifo_queue . this . remove ( ) n last_returned_index = _ codint n return n } n n int pos = last_returned_index + codint n if ( start < last_returned_index pos < end ) { n / / shift in one part n system . arraycopy ( elements , pos , elements , last_returned_index , end _ pos ) n } else { n / / other elements require us to shift the subsequent elements n while ( pos = end ) { n if ( pos > = max_elements ) { n	1
Q_129	return an iterator over this queue be element	C_129_1	public static string extract_resource_path ( http_servlet_request request ) { n if ( request = = null request . get_request_uri ( ) . length ( ) < = codint ) { n return codstr n } n / / get request path , strip first slash codstr n string uri = request . get_request_uri ( ) . substring ( codint ) n / / skip to the end of api version prefix codstr n int start = uri . index_of ( codstr ) n n if ( start > = codint start + codint < uri . length ( ) ) { n return uri . substring ( start + codint ) n } else { n return codstr n } n }	0
Q_129	return an iterator over this queue be element	C_129_2	public synchronized http_request_body read_request_body ( http_header http_header ) { n n int content_length = http_header . get_content_length ( ) / / _ codint = default to unlimited length until connection close n n http_request_body body = ( content_length > codint ) ? new http_request_body ( content_length ) new http_request_body ( ) n n read_body ( content_length , body ) n n return body n }	0
Q_130	provide white list entry in white list will not be show in ui list	C_130_0	public list < string > provide_white_list ( ) { n linked_list < string > white_list = new linked_list < > ( ) n white_list . add ( codstr ) n return white_list n }	1
Q_130	provide white list entry in white list will not be show in ui list	C_130_1	private string compute_convergence_name ( event_context event_context , n service_component service_component , slee_container slee_container ) throws exception { n n final sbb_component sbb_component = service_component . get_root_sbb_component ( ) n final event_entry_descriptor event_entry_descriptor = sbb_component . get_descriptor ( ) . get_event_entries ( ) . get ( event_context . get_event_type_id ( ) ) n string_builder buff = null n n / * n * an initial _ event _ selector _ method _ name element . this element is n * optional and is meaningful only if initial _ event is true . it n * identifies an in itial event selector method . the slee invokes this n * optional method to d etermine if an event of the specified event type n * is an initial event if the sbb is a root sbb of a service ( see n * section number ) . note that this method is not static . you can either n * used a pooled instance of the object or create a new instance of the n * object to run the specified method . n * / n if ( event_entry_descriptor . get_initial_event_selector_method ( ) = null ) { n / / ies method defined n / / invoke method n initial_event_selector_impl selector = new initial_event_selector_impl ( event_context , event_entry_descriptor ) n sbb_object_pool pool = slee_container . get_sbb_management ( ) . get_object_pool ( service_component . get_service_id ( ) , n sbb_component . get_sbb_id ( ) ) n sbb_object sbb_object = pool .	0
Q_130	provide white list entry in white list will not be show in ui list	C_130_2	public void set_id ( string v ) { n if ( concept_type_type . feat_ok_tst ( ( concept_type_type ) jcas_type ) . cas_feat_id = = null ) n jcas_type . jcas . throw_feat_missing ( codstr , codstr ) n jcas_type . ll_cas . ll_set_string_value ( addr , ( ( concept_type_type ) jcas_type ) . cas_feat_code_id , v ) }	0
Q_131	get the row count for a time range	C_131_0	private int get_count_for_range ( table_count_probing_context probing_context , str_substitutor sub , n map < string , string > sub_values , long start_time , long end_time ) { n string start_time_str = utils . date_to_string ( new date ( start_time ) , salesforce_extractor . salesforce_timestamp_format ) n string end_time_str = utils . date_to_string ( new date ( end_time ) , salesforce_extractor . salesforce_timestamp_format ) n n sub_values . put ( codstr , start_time_str ) n sub_values . put ( codstr , end_time_str ) n n string query = sub . replace ( probe_partition_query_template ) n n log . debug ( codstr + query ) n probing_context . probe_count + + n n json_array records = get_records_for_query ( probing_context . connector , query ) n iterator < json_element > elements = records . iterator ( ) n json_object element = elements . next ( ) . get_as_json_object ( ) n n return element . get ( codstr ) . get_as_int ( ) n }	1
Q_131	get the row count for a time range	C_131_1	protected void start_animation ( animation anim , long tick_stamp ) n { n / / account for any view scrolling that happened before this animation n / / was actually added to the view n if ( _vdx = codint _vdy = codint ) { n anim . view_location_did_change ( _vdx , _vdy ) n } n n _animmgr . register_animation ( anim ) n }	0
Q_131	get the row count for a time range	C_131_2	public void set_options ( string [ ] options ) throws exception { n string tmp_str n class_option option n n tmp_str = utils . get_option ( codstr , options ) n option = ( class_option ) m_generator . copy ( ) n if ( tmp_str . length ( ) = = codint ) n option . set_current_object ( new led_generator ( ) ) n else n option . set_current_object ( moa_utils . from_command_line ( m_generator , tmp_str ) ) n set_generator ( option ) n n super . set_options ( options ) n }	0
Q_132	this method be to get object from map give a key as string	C_132_0	private static object get_object_from_map ( map map , string key ) { n utf8 utf8_key = new utf8 ( key ) n return map . get ( utf8_key ) n }	1
Q_132	this method be to get object from map give a key as string	C_132_1	public final control_reject create_new_control_reject ( ) throws message_create_failed_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) sib_tr . entry ( tc , codstr ) n control_reject msg = null n try { n msg = new control_reject_impl ( mfp_constants . constructor_no_op ) n } n catch ( message_decode_failed_exception e ) { n / * no need to ffdc this as js_msg_object will already have done so * / n / / no ffdc code needed n throw new message_create_failed_exception ( e ) n } n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) sib_tr . exit ( tc , codstr ) n return msg n }	0
Q_132	this method be to get object from map give a key as string	C_132_2	public resource_handler build ( ) { n if ( resource_provider_factory = = null ) { n throw new illegal_state_exception ( codstr ) n } n return new resource_handler ( resource_provider_factory , path_to_serve_from , default_file , extension_to_resource_type ) n }	0
Q_133	read execution count from a specific directory	C_133_0	public long read_execution_count ( path dir ) throws io_exception { n state state = load_state ( fs , dir ) n return long . parse_long ( state . get_prop ( compaction_sla_event_helper . exec_count_total , codstr ) ) n }	1
Q_133	read execution count from a specific directory	C_133_1	public static pattern chemical_affects_protein_through_binding ( blacklist blacklist ) n { n pattern p = new pattern ( small_molecule_reference . class , codstr ) n p . add ( er_to_pe ( ) , codstr , codstr ) n p . add ( not_generic ( ) , codstr ) n if ( blacklist = null ) p . add ( new non_ubique ( blacklist ) , codstr ) n p . add ( link_to_complex ( ) , codstr , codstr ) n p . add ( new path_constraint ( codstr ) , codstr , codstr ) n p . add ( new path_constraint ( codstr ) , codstr , codstr ) n p . add ( equal ( false ) , codstr , codstr ) n p . add ( link_to_specific ( ) , codstr , codstr ) n p . add ( new type ( sequence_entity . class ) , codstr ) n p . add ( pe_to_er ( ) , codstr , codstr ) n p . add ( linked_er ( false ) , codstr , codstr ) n return p n }	0
Q_133	read execution count from a specific directory	C_133_2	public linked_list < plan_node > get_path_to ( plan_node descendant ) { n assert descendant = null n linked_list < plan_node > stack = new linked_list < plan_node > ( ) n plan_node node = descendant n while ( node = this ) { n stack . add_first ( node ) n node = node . get_parent ( ) n assert node = null codstr n } n stack . add_first ( this ) n return stack n }	0
Q_134	start this link gobblin_task_runner instance	C_134_0	public void start ( ) { n logger . info ( string . format ( codstr , this . helix_instance_name , this . task_runner_id ) ) n n / / add a shutdown hook so the task scheduler gets properly shutdown n add_shutdown_hook ( ) n n connect_helix_manager ( ) n n add_instance_tags ( ) n n / / start metric reporting n if ( this . container_metrics . is_present ( ) ) { n this . container_metrics . get ( ) n . start_metric_reporting_with_file_suffix ( config_utils . config_to_state ( this . config ) , n this . task_runner_id ) n } n n if ( this . service_manager = null ) { n this . service_manager . start_async ( ) n this . service_manager . await_stopped ( ) n } n }	1
Q_134	start this link gobblin_task_runner instance	C_134_1	public void resolve_page_urls ( ) { n n / / todo get url from resource instead of search_result ? n string page_url = result . get_original_url ( ) n string capture_date = result . get_capture_timestamp ( ) n n string existing_base_href = tag_magix . get_base_href ( sb ) n if ( existing_base_href = = null ) { n insert_at_start_of_head ( codstr codstr codstr ) n } else { n page_url = existing_base_href n } n n string markups [ ] [ ] = { n { codstr , codstr } , n { codstr , codstr } , n { codstr , codstr } , n { codstr , codstr } , n { tag_magix . any_tagname , codstr } n } n / / todo the classic wm added a js_ to the datespec , so not_in_archives n / / can return an valid javascript doc , and not cause javascript errors . n for ( string tag_attr [ ] markups ) { n tag_magix . markup_tag_reuric ( sb , uri_converter , capture_date , page_url , n tag_attr [ codint ] , tag_attr [ codint ] ) n } n tag_magix . markup_css_imports ( sb , uri_converter , capture_date , page_url ) n tag_magix . markup_style_urls ( sb , uri_converter , capture_date , page_url ) n }	0
Q_134	start this link gobblin_task_runner instance	C_134_2	override n public e_class get_string_type ( ) { n if ( string_type_e_class = = null ) { n string_type_e_class = ( e_class ) e_package . registry . instance . get_e_package ( store_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return string_type_e_class n }	0
Q_135	get payload field and convert to byte array	C_135_0	deprecated n protected byte [ ] get_payload_bytes ( generic_record input_record ) { n try { n return get_field_as_bytes ( input_record , payload_field ) n } catch ( exception e ) { n return null n } n }	1
Q_135	get payload field and convert to byte array	C_135_1	public static void invalid_range_if_not ( boolean tester , string msg , object . args ) { n if ( tester ) { n throw new invalid_range_exception ( msg , args ) n } n }	0
Q_135	get payload field and convert to byte array	C_135_2	public static void save_application_bindings ( application app ) { n n file desc_dir = new file ( app . get_directory ( ) , constants . project_dir_desc ) n file app_bindings_file = new file ( desc_dir , app_bindings_file ) n n / / convert the bindings map n map < string , string > format = new hash_map < > ( ) n for ( map . entry < string , set < string entry app . get_application_bindings ( ) . entry_set ( ) ) { n string s = utils . format ( entry . get_value ( ) , codstr ) n format . put ( entry . get_key ( ) , s ) n } n n / / save it n properties props = new properties ( ) n props . put_all ( format ) n n try { n utils . create_directory ( desc_dir ) n utils . write_properties_file ( props , app_bindings_file ) n n } catch ( io_exception e ) { n logger logger = logger . get_logger ( configuration_utils . class . get_name ( ) ) n logger . severe ( codstr + app + codstr + e . get_message ( ) ) n utils . log_exception ( logger , e ) n } n }	0
Q_136	extract all the key that start with a code prefix code in link property to a new link property	C_136_0	public static properties extract_properties_with_prefix ( properties properties , optional < string > prefix ) { n preconditions . check_not_null ( properties ) n preconditions . check_not_null ( prefix ) n n properties extracted_properties = new properties ( ) n for ( map . entry < object , object > entry properties . entry_set ( ) ) { n if ( string_utils . starts_with ( entry . get_key ( ) . to_string ( ) , prefix . or ( string_utils . empty ) ) ) { n extracted_properties . put ( entry . get_key ( ) . to_string ( ) , entry . get_value ( ) ) n } n } n n return extracted_properties n }	1
Q_136	extract all the key that start with a code prefix code in link property to a new link property	C_136_1	path ( codstr ) n get n unit_of_work n public response refresh_services ( robe_auth credentials credentials ) { n n n guice_configuration configuration = guice_bundle . get_configuration ( ) n n reflections reflections = new reflections ( configuration . get_scan_packages ( ) , this . get_class ( ) . get_class_loader ( ) ) n set < class < ? services = reflections . get_types_annotated_with ( path . class ) n int count = codint n for ( class service services ) { n string parent_path = codstr + ( ( path ) service . get_annotation ( path . class ) ) . value ( ) n for ( method method service . get_methods ( ) ) { n string http_method = if_service_get_http_method ( method ) n if ( http_method = = null ) { n continue n } n string path = parent_path n path = extract_path ( method , path ) n n io . robe . admin . hibernate . entity . service entity = service_dao . find_by_path_and_method ( path , service_entry . method . value_of ( http_method ) ) n robe_service robe_service = ( robe_service ) method . get_annotation ( robe_service . class ) n n if ( entity = null ) { n if ( robe_service = null ) { n entity . set_description ( robe_service . description ( ) ) n entity . set_group ( robe_service . group ( ) ) n service_dao . update ( entity ) n } n continue n }	0
Q_136	extract all the key that start with a code prefix code in link property to a new link property	C_136_2	public static d_matrix_r_maj add_outer_prod ( d_matrix_r_maj a , double scalar , geo_tuple3_d_f64 b , geo_tuple3_d_f64 c , d_matrix_r_maj ret ) { n if ( ret = = null ) n ret = new d_matrix_r_maj ( codint , codint ) n n ret . data [ codint ] = a . data [ codint ] + scalar * b . x * c . x n ret . data [ codint ] = a . data [ codint ] + scalar * b . x * c . y n ret . data [ codint ] = a . data [ codint ] + scalar * b . x * c . z n ret . data [ codint ] = a . data [ codint ] + scalar * b . y * c . x n ret . data [ codint ] = a . data [ codint ] + scalar * b . y * c . y n ret . data [ codint ] = a . data [ codint ] + scalar * b . y * c . z n ret . data [ codint ] = a . data [ codint ] + scalar * b . z * c . x n ret . data [ codint ] = a . data [ codint ] + scalar * b . z * c . y n ret . data [ codint ] = a . data [ codint ] + scalar *	0
Q_137	this method first try to obtain the table name from link hive_table_name	C_137_0	protected optional < string > get_table_name ( path path ) { n if ( this . props . contains ( hive_table_name ) this . props . contains ( hive_table_regex ) ) { n return optional . < string > absent ( ) n } n return optional . < string > of ( n this . table_name_prefix + get_database_or_table_name ( path , hive_table_name , hive_table_regex , this . table_name_pattern ) n + this . table_name_suffix ) n }	1
Q_137	this method first try to obtain the table name from link hive_table_name	C_137_1	"override n public int append ( readable_byte_channel channel ) throws io_exception { n assert invariant ( true ) n n int total_read = codint n n try { n n boolean done n n / / precondition the channel has data n n do { n byte_buffer dest = writable_buf ( ) n n int space = dest . remaining ( ) n assert space > codint n n int read = channel . read ( dest ) n if ( read > = codint ) { n total_read + = read n } else { n / / end of stream ( e . g . the other end closed the connection ) n remove_last_buffer_if_empty ( ) n size_changed ( ) n n assert invariant ( true ) n return _ codint n } n n / / if buffer wasn "" t filled _ > no data is available in channel n done = read < space n } while ( done ) n n } finally { n remove_last_buffer_if_empty ( ) n size_changed ( ) n assert invariant ( true ) n } n n return total_read n }"	0
Q_137	this method first try to obtain the table name from link hive_table_name	C_137_2	public jbbp_text_writer int ( final int value ) throws io_exception { n ensure_value_mode ( ) n n string converted_by_extras = null n for ( final extra e this . extras ) { n converted_by_extras = e . do_convert_int_to_str ( this , value ) n if ( converted_by_extras = null ) { n break n } n } n n if ( converted_by_extras = = null ) { n final long value_to_write n if ( this . byte_order = = jbbp_byte_order . little_endian ) { n value_to_write = jbbp_utils . reverse_byte_order ( value , codint ) n } else { n value_to_write = value n } n print_value_string ( jbbp_utils . ensure_min_text_length ( jbbp_utils . ulong2str ( value_to_write codint , this . radix , char_buffer ) , this . max_chars_radix_for_int , codstr , codint ) ) n } else { n print_value_string ( converted_by_extras ) n } n return this n }	0
Q_138	convert a value to the request descriptor	C_138_0	public static object to_result_check_if_null ( object value , string desc ) { n if ( value = = null ) { n if ( desc . length ( ) = = codint ) { n switch ( desc . char_at ( codint ) ) { n case codstr n return default_int n case codstr n return default_byte n case codstr n return default_char n case codstr n return default_short n case codstr n return default_long n case codstr n return default_float n case codstr n return default_double n case codstr n return boolean . false n default n throw new illegal_state_exception ( codstr + desc ) n } n } n else { n return null n } n } n else { n return value n } n }	1
Q_138	convert a value to the request descriptor	C_138_1	public trading_record run ( strategy strategy , order_type order_type , int start_index , int finish_index ) { n return run ( strategy , order_type , decimal . na_n , start_index , finish_index ) n }	0
Q_138	convert a value to the request descriptor	C_138_2	private static input_stream_reader get_reader ( string file ) { n string resource_path_prefix = codstr n return new input_stream_reader ( substitution_matrix_helper . class . get_resource_as_stream ( string . format ( codstr , n resource_path_prefix + file ) ) ) n }	0
Q_139	run the computation	C_139_0	public void run ( string name , config config , builder builder ) { n builder_impl bldr = ( builder_impl ) builder n topology_builder topology_builder = bldr . build ( ) n try { n heron_submitter . submit_topology ( name , config . get_heron_config ( ) , n topology_builder . create_topology ( ) ) n } catch ( already_alive_exception invalid_topology_exception e ) { n e . print_stack_trace ( ) n } n }	1
Q_139	run the computation	C_139_1	target_api ( build . version_codes . gingerbread ) n public static boolean has_barometer_sensor_feature ( context context ) { n return has_barometer_sensor_feature ( context . get_package_manager ( ) ) n }	0
Q_139	run the computation	C_139_2	public static currency get_instance ( string currency_code ) { n synchronized ( codes_to_currencies ) { n currency currency = codes_to_currencies . get ( currency_code ) n if ( currency = = null ) { n currency = new currency ( currency_code ) n codes_to_currencies . put ( currency_code , currency ) n } n return currency n } n }	0
Q_140	add a classifier to the storage	C_140_0	protected void add_to_stored ( classifier_with_memory new_classifier , double new_classifiers_weight ) { n classifier_with_memory [ ] new_stored = new classifier_with_memory [ this . ensemble . length + codint ] n double [ ] [ ] new_stored_weights = new double [ new_stored . length ] [ codint ] n n for ( int i = codint i < new_stored . length i + + ) { n if ( i < this . ensemble . length ) { n new_stored [ i ] = this . ensemble [ i ] n new_stored_weights [ i ] [ codint ] = this . weights [ i ] [ codint ] n new_stored_weights [ i ] [ codint ] = this . weights [ i ] [ codint ] n } else { n new_stored [ i ] = new_classifier n new_stored_weights [ i ] [ codint ] = new_classifiers_weight n new_stored_weights [ i ] [ codint ] = i n } n } n this . ensemble = new_stored n this . weights = new_stored_weights n }	1
Q_140	add a classifier to the storage	C_140_1	public static < t > t unmarshal ( class < t > cl , string s ) throws jaxb_exception { n return unmarshal ( cl , new string_reader ( s ) ) n }	0
Q_140	add a classifier to the storage	C_140_2	public void on_image_change ( bitmap bitmap , string local_path ) { n if ( profile_layout_view = null ) { n profile_layout_view . on_image_change ( bitmap ) n } n n / / set the image in the user settings n try { n user_utils . get_user_settings ( get_context ( ) ) . set_local_image_path ( local_path ) n } n catch ( socialize_exception e ) { n log . e ( socialize_logger . log_tag , codstr , e ) n } n }	0
Q_141	inspect the class pass in for the class level annotation specify	C_141_0	suppress_warnings ( codstr ) n public static < t extends annotation > t get_annotation ( class < ? > clazz , class < t > ann ) { n while ( true ) { n / / first check class n t a = clazz . get_annotation ( ann ) n if ( a = null ) return a n n / / check interfaces n if ( clazz . is_interface ( ) ) { n class < ? > [ ] interfaces = clazz . get_interfaces ( ) n for ( class < ? > inter interfaces ) { n a = get_annotation ( inter , ann ) n if ( a = null ) return a n } n } n n / / check superclasses n class < ? > superclass = clazz . get_superclass ( ) n if ( superclass = = null ) return null / / no where else to look n clazz = superclass n } n }	1
Q_141	inspect the class pass in for the class level annotation specify	C_141_1	public void paint ( graphics2_d gfx , int x , int y ) n { n _mirage . paint ( gfx , x , y ) n }	0
Q_141	inspect the class pass in for the class level annotation specify	C_141_2	private void create_extended_element ( string_builder sb , repository_log_record record ) { n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr common_base_event_log_record level codstr no_value codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr common_base_event_log_record name codstr string codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr ) . append ( record . get_level ( ) . get_name ( ) ) . append ( codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr common_base_event_log_record value codstr int codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr ) . append ( record . get_level ( ) . int_value ( ) ) . append ( codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr ) n sb . append ( line_separator ) . append ( indent [ codint ] ) . append ( codstr ) n }	0
Q_142	set the low bound of the counter if a bound counter be desire	C_142_0	public strong_counter_configuration_builder lower_bound ( long value ) { n attributes . attribute ( strong_counter_configuration . lower_bound ) . set ( value ) n return self ( ) n }	1
Q_142	set the low bound of the counter if a bound counter be desire	C_142_1	public static < e > error_message_factory should_be_lenient_equal_by_accepting ( object actual , list < string > rejected_fields , n list < object > expected_values , list < string > accepted_fields ) { n if ( rejected_fields . size ( ) = = codint ) { n return new should_be_lenient_equal_by_accepting ( actual , rejected_fields . get ( codint ) , expected_values . get ( codint ) , accepted_fields ) n } else { n return new should_be_lenient_equal_by_accepting ( actual , rejected_fields , expected_values , accepted_fields ) n } n }	0
Q_142	set the low bound of the counter if a bound counter be desire	C_142_2	void send_task_list_to_channels ( list < task_rec > tasks ) { n / / group by type n / / n map < string , list < task_rec grouped = new hash_map < string , list < task_rec ( ) n for ( task_rec task_rec tasks ) { n list < task_rec > tlist = grouped . get ( task_rec . name ) n if ( tlist = = null ) { n tlist = new array_list < task_rec > ( ) n grouped . put ( task_rec . name , tlist ) n } n tlist . add ( task_rec ) n } n n / / execute n / / n for ( string task_name grouped . key_set ( ) ) { n final list < task_rec > task_list = grouped . get ( task_name ) n task_rec trec1 = task_list . get ( codint ) n channel channel = context . registry . get_channel ( trec1 . channel ) n if ( channel = = null ) { / / should never happen n logger . warn ( codstr { } codstr , trec1 . channel , trec1 . name , trec1 . task_id ) n channel = context . registry . get_channel ( model . channel_main ) n } n task_config task_config = context . registry . get_task_config ( trec1 . name ) n if ( task_config = = null ) { n handle_unknown_tasks ( task_list ) n continue n } n n for ( final	0
Q_143	translate form dom to a list of video_profile	C_143_0	private static map < string , video_profile > translate_video_xml ( element video ) throws page_exception { n map < string , video_profile > profiles = new linked_hash_map < string , video_profile > ( ) n / / quality n element qd = get_child_by_name ( video , codstr , false ) n element [ ] items = get_children ( qd , codstr ) n element item n video_profile vq n string value n for ( int i = codint i < items . length i + + ) { n item = items [ i ] n vq = new video_profile_impl ( ) n / / aspect _ ratio n value = item . get_attribute ( codstr ) n if ( util . is_empty ( value ) ) vq . set_aspect_ratio ( value ) n n / / aspect _ ratio n value = item . get_attribute ( codstr ) n if ( util . is_empty ( value ) ) vq . set_audio_bitrate ( util . to_bytes ( value ) ) n n / / audio _ samplerate n value = item . get_attribute ( codstr ) n if ( util . is_empty ( value ) ) vq . set_audio_samplerate ( util . to_herz ( value ) ) n n / / dimension n string w = item . get_attribute ( codstr ) n string h = item . get_attribute ( codstr ) n if ( util . is_empty ( w ) util . is_empty ( h ) ) {	1
Q_143	translate form dom to a list of video_profile	C_143_1	public com . google . api . ads . admanager . axis . v201808 . stats get_value ( ) { n return value n }	0
Q_143	translate form dom to a list of video_profile	C_143_2	public datatype . builder mutate_standard_method_underrides ( n consumer < ? super map < standard_method , underride_level mutator ) { n / / if put_standard_method_underrides is overridden , this method will be updated to delegate to it n mutator . accept ( standard_method_underrides ) n return ( datatype . builder ) this n }	0
Q_144	return the error page	C_144_0	public error_page get_error_page ( page_exception pe , short type ) { n for ( int i = pages . size ( ) _ codint i > = codint i _ ) { n error_page_impl ep = ( error_page_impl ) pages . get ( i ) n if ( ep . get_type ( ) = = type ) { n if ( type = = error_page . type_exception ) { n if ( pe . type_equal ( ep . get_type_as_string ( ) ) ) return ep n } n else return ep n n } n } n return null n }	1
Q_144	return the error page	C_144_1	public static input_stream document_to_input_stream ( document edoc ) n throws io_exception { n n / / create the input and output for use in the transformation n final org . w3c . dom . document doc = edoc n final piped_output_stream pos = new piped_output_stream ( ) n piped_input_stream pis = new piped_input_stream ( ) n pis . connect ( pos ) n n ( new thread ( new runnable ( ) { n n public void run ( ) { n / / use the transformer . transform ( ) method to save the document n / / to a stream_result n try { n transformer_factory t_factory = transformer_factory . new_instance ( ) n / / fortify mod prevent external entity injection n t_factory . set_feature ( xml_constants . feature_secure_processing , true ) n transformer transformer = t_factory . new_transformer ( ) n transformer . set_output_property ( codstr , codstr ) n transformer . set_output_property ( codstr , codstr ) n transformer . transform ( new dom_source ( doc ) , new stream_result ( n pos ) ) n } catch ( exception e ) { n throw new runtime_exception ( n codstr n + e . get_message ( ) ) n } finally { n try { n pos . close ( ) n } catch ( io_exception e ) { n n } n } n } n } , codstr ) ) . start ( ) n n return pis n }	0
Q_144	return the error page	C_144_2	private void clear_wait_jobs ( ) { n log . debug ( codstr ) n if ( pull_and_push = null ) { n subscriber_stream . cancel_job ( pull_and_push ) n release_pending_message ( ) n pull_and_push = null n } n if ( wait_live_job = null ) { n scheduling_service . remove_scheduled_job ( wait_live_job ) n wait_live_job = null n } n }	0
Q_145	set a file value to a xml element	C_145_0	public void set_file ( element el , string key , resource value ) { n if ( value = null value . to_string ( ) . length ( ) > codint ) el . set_attribute ( key , value . get_absolute_path ( ) ) n }	1
Q_145	set a file value to a xml element	C_145_1	private static void collect_constants ( non_null class < ? > some_class , non_null json_object container ) throws json_exception { n final field [ ] fields = some_class . get_fields ( ) n for ( final field field fields ) { n try { n final object value = field . get ( null ) n if ( value = null ) { n if ( field . get_type ( ) . is_array ( ) ) { n container . put ( field . get_name ( ) , new json_array ( arrays . as_list ( ( object [ ] ) value ) ) ) n } else { n container . put ( field . get_name ( ) , value ) n } n } n } catch ( illegal_argument_exception ignored ) { n / / noop n } catch ( illegal_access_exception ignored ) { n / / noop n } n } n }	0
Q_145	set a file value to a xml element	C_145_2	public javalin routes ( not_null endpoint_group endpoint_group ) { n api_builder . set_static_javalin ( this ) n endpoint_group . add_endpoints ( ) n api_builder . clear_static_javalin ( ) n return this n }	0
Q_146	scan for newly add or already remove webcam	C_146_0	public void scan ( ) { n n webcam_discovery_listener [ ] listeners = webcam . get_discovery_listeners ( ) n n list < webcam_device > tmpnew = driver . get_devices ( ) n list < webcam_device > tmpold = null n n try { n tmpold = get_devices ( get_webcams ( long . max_value , time_unit . milliseconds ) ) n } catch ( timeout_exception e ) { n throw new webcam_exception ( e ) n } n n / / convert to linked list due to o ( codint ) on remove operation on n / / iterator versus o ( n ) for the same operation in array list n n list < webcam_device > oldones = new linked_list < webcam_device > ( tmpold ) n list < webcam_device > newones = new linked_list < webcam_device > ( tmpnew ) n n iterator < webcam_device > oi = oldones . iterator ( ) n iterator < webcam_device > ni = null n n webcam_device od = null / / old device n webcam_device nd = null / / new device n n / / reduce lists n n while ( oi . has_next ( ) ) { n n od = oi . next ( ) n ni = newones . iterator ( ) n n while ( ni . has_next ( ) ) { n n nd = ni . next ( ) n n / / remove both elements , if device name is the same	1
Q_146	scan for newly add or already remove webcam	C_146_1	"public void close ( int request_number ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) sib_tr . entry ( this , tc , codstr , request_number ) n n try n { n consumer_session cs = get_consumer_session ( ) n if ( cs = null ) cs . close ( ) n n try n { n get_conversation ( ) . send ( pool_manager . allocate ( ) , n j_fap_channel_constants . seg_close_consumer_sess_r , n request_number , n get_lowest_priority ( ) , n true , n throttling_policy . block_thread , n null ) n } n catch ( si_exception e ) n { n ffdc_filter . process_exception ( e , class_name + codstr , n comms_constants . catconsumer_close_02 , n this ) n n sib_tr . error ( tc , codstr , e ) n } n } n catch ( si_exception e ) n { n / / no ffdc code needed n / / only ffdc if we haven codstr . close codstr close "" ) n }"	0
Q_146	scan for newly add or already remove webcam	C_146_2	public static boolean debug_session_scope_life_cycle ( nonnull final logger a_logger ) n { n / / also debug scopes , if debug logging is enabled n if ( a_logger . is_debug_enabled ( ) ) n return true n n return ( is_life_cycle_debugging_enabled ( ) is_debug_session_scope_enabled ( ) ) a_logger . is_info_enabled ( ) n }	0
Q_147	list of affect link net	C_147_0	public list < member > get_changed_members ( ) n { n return changed_perm_holders . stream ( ) n . filter ( p _ > p instanceof member ) n . map ( member . class cast ) n . collect ( collectors . to_list ( ) ) n }	1
Q_147	list of affect link net	C_147_1	private void init_pager ( ) { n / / setting up pager adapter n pager_adapter = new photo_pager_adapter ( views . pager , get_settings_controller ( ) ) n n pager_listener = new view_pager . simple_on_page_change_listener ( ) { n override n public void on_page_selected ( int position ) { n on_photo_in_pager_selected ( position ) n } n } n n views . pager . set_adapter ( pager_adapter ) n views . pager . add_on_page_change_listener ( pager_listener ) n views . pager . set_page_transformer ( true , new depth_page_transformer ( ) ) n n / / setting up pager toolbar n views . pager_toolbar . set_navigation_icon ( r . drawable . ic_arrow_back_white_24dp ) n views . pager_toolbar . set_navigation_on_click_listener ( view _ > on_back_pressed ( ) ) n n / / enabling immersive mode by clicking on full screen image n pager_adapter . set_image_click_listener ( ( ) _ > { n if ( list_animator . is_leaving ( ) ) { n / / toggle immersive mode n show_system_ui ( is_system_ui_shown ( ) ) n } n } ) n get_window ( ) . get_decor_view ( ) . set_on_system_ui_visibility_change_listener ( n visibility _ > views . pager_toolbar . animate ( ) . alpha ( is_system_ui_shown ( ) ? codreal codreal ) ) n }	0
Q_147	list of affect link net	C_147_2	private void populate_currency_settings ( record record , project_properties properties ) n { n properties . set_currency_symbol ( record . get_string ( codint ) ) n properties . set_symbol_position ( record . get_currency_symbol_position ( codint ) ) n properties . set_currency_digits ( record . get_integer ( codint ) ) n n character c = record . get_character ( codint ) n if ( c = null ) n { n properties . set_thousands_separator ( c . char_value ( ) ) n } n n c = record . get_character ( codint ) n if ( c = null ) n { n properties . set_decimal_separator ( c . char_value ( ) ) n } n }	0
Q_148	the link net	C_148_0	public guild get_guild ( ) n { n text_channel channel = get_text_channel ( ) n return channel = null ? channel . get_guild ( ) null n }	1
Q_148	the link net	C_148_1	override n public boolean on_js_prompt ( web_view view , string url , string message , string default_value , js_prompt_result r ) { n n if ( message = null ( message . contains ( codstr ) message . contains ( codstr ) ) ) { n n if ( message . equals ( codstr ) ) { n web_element_creator . set_finished ( true ) n } n else { n web_element_creator . create_web_element_and_add_in_list ( message , view ) n } n r . confirm ( ) n return true n } n else { n if ( original_web_chrome_client = null ) { n return original_web_chrome_client . on_js_prompt ( view , url , message , default_value , r ) n } n return true n } n n }	0
Q_148	the link net	C_148_2	public static string get_random_string ( random rnd , int min_length , int max_length ) { n int len = rnd . next_int ( max_length _ min_length + codint ) + min_length n n char [ ] data = new char [ len ] n for ( int i = codint i < data . length i + + ) { n data [ i ] = ( char ) ( rnd . next_int ( codint ) + codint ) n } n return new string ( data ) n }	0
Q_149	unsupported combination of business_date timestamp _ business_date as_of mapping	C_149_0	private static boolean timestamp_to_asof_attribute_relationiship ( map . entry < attribute , attribute > each ) n { n return ( each . get_value ( ) = null each . get_value ( ) . is_as_of_attribute ( ) ) each . get_key ( ) . is_as_of_attribute ( ) n }	1
Q_149	unsupported combination of business_date timestamp _ business_date as_of mapping	C_149_1	public static bounded_pool_config bounded ( generic_object_pool_config < ? > config ) { n n lettuce_assert . not_null ( config , codstr ) n n return bounded_pool_config . builder ( ) . max_total ( config . get_max_total ( ) ) . max_idle ( config . get_max_idle ( ) ) n . min_idle ( config . get_min_idle ( ) ) . test_on_acquire ( config . get_test_on_borrow ( ) ) . test_on_create ( config . get_test_on_create ( ) ) n . test_on_release ( config . get_test_on_return ( ) ) . build ( ) n }	0
Q_149	unsupported combination of business_date timestamp _ business_date as_of mapping	C_149_2	public synchronized t borrow ( ) throws jms_exception n { n if ( closed ) n throw new object_pool_exception ( codstr ) n n / / object immediately available ? n int available_count = available . size ( ) n if ( available_count > codint ) n return available . remove ( available_count _ codint ) n n / / can we create one more ? n if ( all . size ( ) < max_size ) n return extend_pool ( ) n n / / pool is exhausted n switch ( exhaustion_policy ) n { n case when_exhausted_fail throw new object_pool_exception ( codstr + max_size + codstr ) n case when_exhausted_block return wait_for_availability ( ) n case when_exhausted_wait return wait_for_availability ( wait_timeout , true ) n case when_exhausted_return_null return null n case when_exhausted_wait_return_null return wait_for_availability ( wait_timeout , false ) n n default n throw new object_pool_exception ( codstr + exhaustion_policy ) n } n }	0
Q_150	handler for atom	C_150_0	private void pdb_atom_handler ( string line ) { n n if ( params . is_header_only ( ) ) n return n n / / let codstr codstr s not forget adding the last group to the finishing chain n if ( current_group = null ) { n current_chain . add_group ( current_group ) n } n } n / / we initialise the new molecule to come n current_chain = new chain_impl ( ) n / / note that the chain_id ( asym id ) is set properly later in assign_asym_ids n current_chain . set_id ( chain_name ) n current_chain . set_name ( chain_name ) n n } n n if ( start_of_model ) { n / / we add last model if there was one n if ( current_model = null ) { n all_models . add ( current_model ) n } n / / we initialise the model to come n current_model = new array_list < > ( ) n } n n n / / let codstr codstr hetatm codstr codstr found alt_loc codstr codstr more than codstr atoms in this structure , ignoring the seqres lines codstr file has more atoms than max specified in parsing parameters ( { } ) . ignoring atoms after line { } codstr ca codstr ignoring codstr < > codstr < codstr element column was empty for atom { } { } . assigning atom element codstr from chemical component dictionary information codstr element { } of atom {	1
Q_150	handler for atom	C_150_1	suppress_warnings ( codstr ) n public static cms_gallery_dialog create_dialog ( i_cms_gallery_handler gallery_handler , cms_gallery_data_bean data ) { n n cms_gallery_dialog gallery_dialog = new cms_gallery_dialog ( gallery_handler ) n new cms_gallery_controller ( new cms_gallery_controller_handler ( gallery_dialog ) , data , null ) n return gallery_dialog n }	0
Q_150	handler for atom	C_150_2	public static void sort ( dense_matrix64_f matrix , row_comparator comparator ) n { n int len = matrix . num_cols n quick_sort ( matrix . data , codint , matrix . num_rows _ codint , len , comparator , new double [ len ] , new double [ len ] ) n }	0
Q_151	a basic example how to load an mm_cif file and get a structure object	C_151_0	public void load_simple ( ) { n string pdb_id = codstr n n atom_cache cache = new atom_cache ( ) n cache . set_use_mm_cif ( true ) n n structure_io . set_atom_cache ( cache ) n n try { n structure s = structure_io . get_structure ( pdb_id ) n n system . out . println ( pdb_id + codstr + structure_tools . get_nr_atoms ( s ) ) n n } catch ( exception e ) { n e . print_stack_trace ( ) n } n }	1
Q_151	a basic example how to load an mm_cif file and get a structure object	C_151_1	public final string rewrite_xml ( n node xml_doc , n string alone_tags [ ] n ) { n return rewrite_xml ( n xml_doc , n alone_tags , n false n ) n }	0
Q_151	a basic example how to load an mm_cif file and get a structure object	C_151_2	public static type . callable substitute ( type . callable fmp , tuple < template . variable > template_parameters , n tuple < syntactic_item > template_arguments ) { n function < identifier , syntactic_item > binding = wyil_file . binding_function ( template_parameters , template_arguments ) n / / proceed with the potentially updated binding n tuple < type > parameters = wyil_file . substitute ( fmp . get_parameters ( ) , binding ) n tuple < type > returns = wyil_file . substitute ( fmp . get_returns ( ) , binding ) n / / n if ( fmp instanceof type . method ) { n type . method m = ( type . method ) fmp n / / fixme this looks wrong n return new type . method ( parameters , returns , m . get_captured_lifetimes ( ) , new tuple < > ( ) ) n } else if ( fmp instanceof type . function ) { n return new type . function ( parameters , returns ) n } else { n return new type . property ( parameters , returns ) n } n }	0
Q_152	convenient function for link set	C_152_0	public static < a extends fast_item_adapter < item > , item extends i_item > a set ( final a adapter , final list < item > items ) { n return set ( adapter , items , new diff_callback_impl < item > ( ) ) n }	1
Q_152	convenient function for link set	C_152_1	public static < t > set < t > null_to_empty ( final set < t > set ) { n return set = = null ? n . < t > empty_set ( ) set n }	0
Q_152	convenient function for link set	C_152_2	protected string format ( channel_handler_context ctx , string event_name , object arg ) { n if ( arg instanceof byte_buf ) { n return format_byte_buf ( ctx , event_name , ( byte_buf ) arg ) n } else if ( arg instanceof byte_buf_holder ) { n return format_byte_buf_holder ( ctx , event_name , ( byte_buf_holder ) arg ) n } else { n return format_simple ( ctx , event_name , arg ) n } n }	0
Q_153	generate a list of item base on it be list of model use the interceptor	C_153_0	public list < item > intercept ( list < model > models ) { n list < item > items = new array_list < > ( models . size ( ) ) n item item n for ( model model models ) { n item = intercept ( model ) n if ( item = = null ) continue n items . add ( item ) n } n return items n }	1
Q_153	generate a list of item base on it be list of model use the interceptor	C_153_1	nonnegative n public static long channel_copy ( nonnull will_not_close final readable_byte_channel a_src , n nonnull will_not_close final writable_byte_channel a_dest ) throws io_exception n { n value_enforcer . not_null ( a_src , codstr ) n value_enforcer . is_true ( a_src . is_open ( ) , codstr ) n value_enforcer . not_null ( a_dest , codstr ) n value_enforcer . is_true ( a_dest . is_open ( ) , codstr ) n n long n_bytes_written n if ( use_copy_v1 ) n n_bytes_written = _channel_copy1 ( a_src , a_dest ) n else n n_bytes_written = _channel_copy2 ( a_src , a_dest ) n return n_bytes_written n }	0
Q_153	generate a list of item base on it be list of model use the interceptor	C_153_2	public lets_encrypt_certificate_entity issue ( final string domains ) n { n / / first , prove that we own the domains n for ( string domain domains . split ( codstr ) ) n prove_ownership ( domain ) n n / / next , ( re ) generate certificates n return generate_or_renew_certificate ( domains ) n }	0
Q_154	return a dummy cache that do nothing	C_154_0	suppress_warnings ( codstr ) n public static < k , v > cache < k , v > new_null_cache ( ) { n return ( cache < k , v > ) null_cache . instance n }	1
Q_154	return a dummy cache that do nothing	C_154_1	private void error_during_transaction ( final throwable t , final method method , final string extra_error_message ) throws throwable { n final string_builder error_message_builder = new string_builder ( codstr ) n if ( t instanceof sql_exception ) { n final sql_exception sql_exception = ( sql_exception ) t n error_message_builder . append ( codstr ) n . append ( sql_exception . get_sql_state ( ) ) n . append ( codstr ) n . append ( sql_exception . get_error_code ( ) ) n . append ( codstr ) n } n if ( extra_error_message = null ) { n / / this is usually the sql statement n error_message_builder . append ( codstr ) . append ( extra_error_message ) n } n logger . warn ( error_message_builder . to_string ( ) , sql_dao_class , method . get_name ( ) ) n n / / this is to avoid throwing an exception wrapped in an undeclared_throwable_exception n if ( ( t instanceof runtime_exception ) ) { n throw new runtime_exception ( t ) n } else { n throw t n } n }	0
Q_154	return a dummy cache that do nothing	C_154_2	"private node create_stub_call ( node original_definition , int stub_id ) { n return ast_factory n . create_call ( n / / we can "" t look up the type of the stub creating method , because we add its n / / definition after type checking . n ast_factory . create_name_with_unknown_type ( stub_method_name ) , ast_factory . create_number ( stub_id ) ) n . use_source_info_if_missing_from_for_tree ( original_definition ) n }"	0
Q_155	write the manifest to the specify output_stream	C_155_0	public void write ( output_stream out ) throws io_exception { n data_output_stream dos = new data_output_stream ( out ) n / / write out the main attributes for the manifest n attr . write_main ( dos ) n / / now write out the pre _ entry attributes n iterator < map . entry < string , attributes it = entries . entry_set ( ) . iterator ( ) n while ( it . has_next ( ) ) { n map . entry < string , attributes > e = it . next ( ) n string_buffer buffer = new string_buffer ( codstr ) n string value = e . get_key ( ) n if ( value = null ) { n byte [ ] vb = value . get_bytes ( codstr ) n value = new string ( vb , codint , codint , vb . length ) n } n buffer . append ( value ) n buffer . append ( codstr ) n make72_safe ( buffer ) n dos . write_bytes ( buffer . to_string ( ) ) n e . get_value ( ) . write ( dos ) n } n dos . flush ( ) n }	1
Q_155	write the manifest to the specify output_stream	C_155_1	protected array_list get_contained_entries ( ) { n final array_list ret = new array_list ( constants . length + n attributes . length + n members . length ) n n for ( int i = codint i < constants . length + + i ) n ret . add ( constants [ i ] ) n for ( int i = codint i < attributes . length + + i ) n ret . add ( attributes [ i ] ) n for ( int i = codint i < members . length + + i ) n ret . add ( members [ i ] ) n n return ret n }	0
Q_155	write the manifest to the specify output_stream	C_155_2	protected double calc_dist_ts_and_pattern ( double [ ] ts , double [ ] p_value ) { n double inf = codreal n double best_dist = inf n int pattern_len = p_value . length n n int last_start_p = ts . length _ p_value . length + codint n if ( last_start_p < codint ) n return best_dist n n random rand = new random ( ) n int start_p = rand . next_int ( ( last_start_p _ codint _ codint ) + codint ) n n double [ ] sliding_window = new double [ pattern_len ] n n system . arraycopy ( ts , start_p , sliding_window , codint , pattern_len ) n best_dist = eculidean_dist_norm ( p_value , sliding_window ) n n for ( int i = codint i < last_start_p i + + ) { n system . arraycopy ( ts , i , sliding_window , codint , pattern_len ) n n double temp_dist = eculidean_dist_norm_e_abandon ( p_value , sliding_window , best_dist ) n n if ( temp_dist < best_dist ) { n best_dist = temp_dist n } n } n n return best_dist n }	0
Q_156	make an integer into an hh hex value	C_156_0	private static string make_hh_string ( int i ) n { n string s = integer . to_hex_string ( i ) . to_upper_case ( ) n if ( s . length ( ) = = codint ) n { n s = codstr + s n } n return s n }	1
Q_156	make an integer into an hh hex value	C_156_1	public boolean put ( t item , string item_id , int max_wait , time_unit unit ) throws exception n { n preconditions . check_argument ( is_valid_id ( item_id ) , codstr + item_id ) n n queue . check_state ( ) n n return queue . internal_put ( item , null , make_id_path ( item_id ) , max_wait , unit ) n }	0
Q_156	make an integer into an hh hex value	C_156_2	private < t extends element > void map_type_parameters ( final map < type_element , list < t map , n element element , final t holder ) { n n simple_element_visitor9 < void , void > element_visitor n = new simple_element_visitor9 < void , void > ( ) { n n private void add_parameters ( type_parameter_element e ) { n for ( type_mirror type utils . get_bounds ( e ) ) { n add_type_parameter_to_map ( map , type , holder ) n } n } n n override n public void visit_type ( type_element e , void p ) { n for ( type_parameter_element param e . get_type_parameters ( ) ) { n add_parameters ( param ) n } n return null n } n n override n public void visit_executable ( executable_element e , void p ) { n for ( type_parameter_element param e . get_type_parameters ( ) ) { n add_parameters ( param ) n } n return null n } n n override n protected void default_action ( element e , void p ) { n map_type_parameters ( map , e . as_type ( ) , holder ) n return null n } n n override n public void visit_type_parameter ( type_parameter_element e , void p ) { n add_parameters ( e ) n return null n } n } n element_visitor . visit ( element ) n }	0
Q_157	strong icu strong return the tagstr of the code point	C_157_0	public static version_info get_age ( int ch ) n { n if ( ch < min_value ch > max_value ) { n throw new illegal_argument_exception ( codstr ) n } n return u_character_property . instance . get_age ( ch ) n }	1
Q_157	strong icu strong return the tagstr of the code point	C_157_1	public e_class get_cfirg ( ) { n if ( cfirg_e_class = = null ) { n cfirg_e_class = ( e_class ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return cfirg_e_class n }	0
Q_157	strong icu strong return the tagstr of the code point	C_157_2	public immutable_map < type_variable_symbol , nullness > get_nullness_generics ( n method_invocation_tree callsite ) { n immutable_map . builder < type_variable_symbol , nullness > result = immutable_map . builder ( ) n for ( type_variable_symbol tvs n tree_info . symbol ( ( jc_tree ) callsite . get_method_select ( ) ) . get_type_parameters ( ) ) { n inference_variable iv = type_variable_inference_var . create ( tvs , callsite ) n if ( constraint_graph . nodes ( ) . contains ( iv ) ) { n get_nullness ( iv ) . if_present ( nullness _ > result . put ( tvs , nullness ) ) n } n } n return result . build ( ) n }	0
Q_158	if the stylesheet contain extension set the extension table object	C_158_0	void set_extensions_table ( stylesheet_root sroot ) n throws javax . xml . transform . transformer_exception n { n try n { n if ( sroot . get_extensions ( ) = null ) n / / only load extensions if secure_processing is disabled n if ( sroot . is_secure_processing ( ) ) n m_extensions_table = new extensions_table ( sroot ) n } n catch ( javax . xml . transform . transformer_exception te ) n { te . print_stack_trace ( ) } n }	1
Q_158	if the stylesheet contain extension set the extension table object	C_158_1	public void marshall ( job_update job_update , protocol_marshaller protocol_marshaller ) { n n if ( job_update = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( job_update . get_description ( ) , description_binding ) n protocol_marshaller . marshall ( job_update . get_log_uri ( ) , loguri_binding ) n protocol_marshaller . marshall ( job_update . get_role ( ) , role_binding ) n protocol_marshaller . marshall ( job_update . get_execution_property ( ) , executionproperty_binding ) n protocol_marshaller . marshall ( job_update . get_command ( ) , command_binding ) n protocol_marshaller . marshall ( job_update . get_default_arguments ( ) , defaultarguments_binding ) n protocol_marshaller . marshall ( job_update . get_connections ( ) , connections_binding ) n protocol_marshaller . marshall ( job_update . get_max_retries ( ) , maxretries_binding ) n protocol_marshaller . marshall ( job_update . get_allocated_capacity ( ) , allocatedcapacity_binding ) n protocol_marshaller . marshall ( job_update . get_timeout ( ) , timeout_binding ) n protocol_marshaller . marshall ( job_update . get_max_capacity ( ) , maxcapacity_binding ) n protocol_marshaller . marshall ( job_update . get_worker_type ( ) , workertype_binding ) n protocol_marshaller . marshall ( job_update . get_number_of_workers ( ) , numberofworkers_binding ) n protocol_marshaller . marshall ( job_update . get_security_configuration ( ) , securityconfiguration_binding ) n protocol_marshaller . marshall ( job_update . get_notification_property ( ) , notificationproperty_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( )	0
Q_158	if the stylesheet contain extension set the extension table object	C_158_2	public sd_variable clip_by_value ( string name , sd_variable x , double clip_value_min , double clip_value_max ) { n validate_numerical ( codstr , x ) n sd_variable ret = f ( ) . clip_by_value ( x , clip_value_min , clip_value_max ) n return update_variable_name_and_reference ( ret , name ) n }	0
Q_159	skip n byte of input	C_159_0	public long skip ( long numbytes ) throws io_exception { n if ( numbytes < = codint ) { n return codint n } n long n = numbytes n int buflen = ( int ) math . min ( codint , n ) n byte data [ ] = new byte [ buflen ] n while ( n > codint ) { n int r = read ( data , codint , ( int ) math . min ( ( long ) buflen , n ) ) n if ( r < codint ) { n break n } n n _ = r n } n return numbytes _ n n }	1
Q_159	skip n byte of input	C_159_1	suppress_warnings ( codstr ) n main_thread n public void remove_observers ( non_null final lifecycle_owner owner ) { n assert_main_thread ( codstr ) n for ( map . entry < observer < t > , observer_wrapper > entry m_observers ) { n if ( entry . get_value ( ) . is_attached_to ( owner ) ) { n remove_observer ( entry . get_key ( ) ) n } n } n }	0
Q_159	skip n byte of input	C_159_2	private void update_min_max ( number_vector feature_vector , double [ ] minima , double [ ] maxima ) { n assert ( minima . length = = feature_vector . get_dimensionality ( ) ) n for ( int d = codint d < feature_vector . get_dimensionality ( ) d + + ) { n double v = feature_vector . double_value ( d ) n if ( v = = v ) { / / avoid na_n . n maxima [ d ] = math_util . max ( v , maxima [ d ] ) n minima [ d ] = math_util . min ( v , minima [ d ] ) n } n } n }	0
Q_160	reverse the specify range of the specify array	C_160_0	private static void reverse_range ( object [ ] a , int lo , int hi ) { n hi _ n while ( lo < hi ) { n object t = a [ lo ] n a [ lo + + ] = a [ hi ] n a [ hi _ ] = t n } n }	1
Q_160	reverse the specify range of the specify array	C_160_1	private text create_conf_label_text ( modify_listener listener , n composite parent , conf_prop prop , string label_text ) { n n label label = new label ( parent , swt . none ) n if ( label_text = = null ) n label_text = prop . name n label . set_text ( label_text ) n n return create_conf_text ( listener , parent , prop ) n }	0
Q_160	reverse the specify range of the specify array	C_160_2	public map < entity , list < string validate ( entity [ ] entities ) throws api_exception , connection_exception , oid_exception { n map < entity , list < string results = new hash_map < entity , list < string ( ) n n for ( entity entity entities ) { n results . put ( entity , validate ( entity ) ) n } n n return results n }	0
Q_161	copy a substring of this object retain attribute	C_161_0	public void copy ( int start , int limit , int dest ) { n if ( start = = limit start > = codint start < = buf . length ( ) ) { n return n } n char [ ] text = new char [ limit _ start ] n get_chars ( start , limit , text , codint ) n replace ( dest , dest , text , codint , limit _ start ) n }	1
Q_161	copy a substring of this object retain attribute	C_161_1	public static tumbling_event_time_windows of ( time size , time offset ) { n return new tumbling_event_time_windows ( size . to_milliseconds ( ) , offset . to_milliseconds ( ) ) n }	0
Q_161	copy a substring of this object retain attribute	C_161_2	public object get_attribute_without_cache ( string name ) { n if ( activity . get_request_adapter ( ) = null ) { n return activity . get_request_adapter ( ) . get_attribute ( name ) n } else { n return null n } n }	0
Q_162	retain only the element in this set that be contain in the	C_162_0	public boolean retain_all ( collection < ? > c ) { n if ( ( c instanceof jumbo_enum_set ) ) n return super . retain_all ( c ) n n jumbo_enum_set < ? > es = ( jumbo_enum_set < ? > ) c n if ( es . element_type = element_type ) { n boolean changed = ( size = codint ) n clear ( ) n return changed n } n n for ( int i = codint i < elements . length i + + ) n elements [ i ] = es . elements [ i ] n return recalculate_size ( ) n }	1
Q_162	retain only the element in this set that be contain in the	C_162_1	override n public void setup_hadoop_job_properties ( ) { n if ( get_job_props ( ) . contains_key ( hadoop_global_opts ) ) { n string hadoop_global_ops = get_job_props ( ) . get_string ( hadoop_global_opts ) n if ( get_job_props ( ) . contains_key ( hadoop_opts ) ) { n string hadoop_ops = get_job_props ( ) . get_string ( hadoop_opts ) n get_job_props ( ) . put ( hadoop_opts , string . format ( codstr , hadoop_ops , hadoop_global_ops ) ) n } else { n get_job_props ( ) . put ( hadoop_opts , hadoop_global_ops ) n } n } n }	0
Q_162	retain only the element in this set that be contain in the	C_162_2	protected void add_cache ( class cls , string pkgname , list < string > classnames , list < class > classes ) { n m_cache_names . put ( cls . get_name ( ) + codstr + pkgname , classnames ) n m_cache_classes . put ( cls . get_name ( ) + codstr + pkgname , classes ) n }	0
Q_163	recalculate the size of the set	C_163_0	private boolean recalculate_size ( ) { n int old_size = size n size = codint n for ( long elt elements ) n size + = long . bit_count ( elt ) n n return size = old_size n }	1
Q_163	recalculate the size of the set	C_163_1	public raml_response response ( integer status ) { n if ( responses = = null ) { n responses = new linked_hash_map < > ( ) n } n raml_response response = responses . get ( status ) n if ( response = = null ) { n response = new raml_response ( ) n responses . put ( status , response ) n } n return response n }	0
Q_163	recalculate the size of the set	C_163_2	protected void detect_recursive_inclusion ( data_resource data_resource ) throws xml_stream_exception { n n if ( this . resource . equals ( data_resource ) ) { n throw new xml_stream_exception ( codstr + this . resource . get_path ( ) ) n } n if ( this . parent = null ) { n try { n detect_recursive_inclusion ( data_resource ) n } catch ( runtime_exception e ) { n throw new xml_stream_exception ( codstr + this . resource . get_path ( ) , e ) n } n } n }	0
Q_164	we return the give default value	C_164_0	level get_level_property ( string name , level default_value ) { n string val = get_property ( name ) n if ( val = = null ) { n return default_value n } n level l = level . find_level ( val . trim ( ) ) n return l = null ? l default_value n }	1
Q_164	we return the give default value	C_164_1	public void audit_provide_and_register_document_set_event ( rfc3881_event_outcome_codes event_outcome , n string repository_endpoint_uri , n string user_name , n string submission_set_unique_id , n string patient_id ) n { n if ( is_auditor_enabled ( ) ) { n return n } n audit_provide_and_register_event ( new ihe_transaction_event_type_codes . provide_and_register_document_set ( ) , n event_outcome , repository_endpoint_uri , n user_name , n submission_set_unique_id , patient_id , null , null ) n }	0
Q_164	we return the give default value	C_164_2	public void submit ( final metric metric ) { n if ( metric = null ) { n logger . debug ( codstr , metric ) n queue . offer ( metric ) n } n }	0
Q_165	return code true if this set contain all of the element of the	C_165_0	public boolean contains_all ( collection < ? > c ) { n return ( c instanceof set ) n ? compare_sets ( al . get_array ( ) , ( set < ? > ) c ) > = codint n al . contains_all ( c ) n }	1
Q_165	return code true if this set contain all of the element of the	C_165_1	transactional ( read_only = true ) n public collection < attack > find_all ( ) { n return em . create_query ( codstr , attack . class ) . get_result_list ( ) n }	0
Q_165	return code true if this set contain all of the element of the	C_165_2	public void set ( string [ ] attribute_names , object [ ] values ) { n if ( attribute_names = = null values = = null attribute_names . length = values . length ) { n throw new illegal_argument_exception ( codstr ) n } n n for ( int i = codint i < attribute_names . length i + + ) { n set ( attribute_names [ i ] , values [ i ] ) n } n }	0
Q_166	return the primary weight after p where index find_primary	C_166_0	long get_primary_after ( long p , int index , boolean is_compressible ) { n assert ( p = = ( elements [ index ] codint ) is_end_of_primary_range ( elements [ index + codint ] ) ) n long q = elements [ + + index ] n int step n if ( ( q sec_ter_delta_flag ) = = codint ( step = ( int ) q primary_step_mask ) = codint ) { n / / return the next primary in this range . n if ( ( p codint ) = = codint ) { n return collation . inc_two_byte_primary_by_offset ( p , is_compressible , step ) n } else { n return collation . inc_three_byte_primary_by_offset ( p , is_compressible , step ) n } n } else { n / / return the next primary in the list . n while ( ( q sec_ter_delta_flag ) = codint ) { n q = elements [ + + index ] n } n assert ( ( q primary_step_mask ) = = codint ) n return q n } n }	1
Q_166	return the primary weight after p where index find_primary	C_166_1	public void initialize ( cms_object cms ) { n n m_admin_cms = cms n / / initialize static export rfs path ( relative to web application ) n m_static_export_path = normalize_export_path ( m_static_export_path_configured ) n m_static_export_work_path = normalize_export_path ( get_export_work_path_for_configuration ( ) ) n if ( m_static_export_path . equals ( open_cms . get_system_info ( ) . get_web_application_rfs_path ( ) ) ) { n throw new cms_illegal_argument_exception ( messages . get ( ) . container ( messages . err_invalid_export_path_0 ) ) n } n / / initialize prefix variables n m_rfs_prefix = normalize_rfs_prefix ( m_rfs_prefix_configured ) n iterator < cms_static_export_rfs_rule > it_rfs_rules = m_rfs_rules . iterator ( ) n while ( it_rfs_rules . has_next ( ) ) { n cms_static_export_rfs_rule rule = it_rfs_rules . next ( ) n try { n rule . set_export_path ( normalize_export_path ( rule . get_export_path_configured ( ) ) ) n } catch ( cms_illegal_argument_exception e ) { n cms_log . init . warn ( e . get_message_container ( ) ) n rule . set_export_path ( m_static_export_path ) n } n try { n rule . set_export_work_path ( normalize_export_path ( rule . get_export_work_path_configured ( ) ) ) n } catch ( cms_illegal_argument_exception e ) { n cms_log . init . warn ( e . get_message_container ( ) ) n rule . set_export_work_path ( m_static_export_work_path ) n } n rule . set_rfs_prefix ( normalize_rfs_prefix ( rule . get_rfs_prefix_configured ( ) ) ) n } n m_vfs_prefix = insert_context_strings ( m_vfs_prefix_configured ) n m_vfs_prefix = cms_file_util . normalize_path	0
Q_166	return the primary weight after p where index find_primary	C_166_2	public static string get_output_metric ( monitoring_rule rule ) { n string param_name = metric_param_name n n for ( action action rule . get_actions ( ) . get_actions ( ) ) { n if ( output_metric_action . equals_ignore_case ( action . get_name ( ) ) ) { n parameter param = get_action_parameter ( action , param_name ) n return param . get_value ( ) n } n } n return codstr n }	0
Q_167	return an array contain all of the element in this queue in	C_167_0	public object [ ] to_array ( ) { n fully_lock ( ) n try { n int size = count . get ( ) n object [ ] a = new object [ size ] n int k = codint n for ( node < e > p = head . next p = null p = p . next ) n a [ k + + ] = p . item n return a n } finally { n fully_unlock ( ) n } n }	1
Q_167	return an array contain all of the element in this queue in	C_167_1	public static < t > p_vector_byte_buffered_integral3s16 < t > create_with_base ( n final byte_buffer b , n final mutable_long_type base , n final int offset ) n { n return new p_vector_byte_buffered_integral3s16 < > ( b , base , offset ) n }	0
Q_167	return an array contain all of the element in this queue in	C_167_2	private static map < i_atom , integer > index_map ( map < i_atom , integer > map , i_atom_container container ) { n if ( map = null ) return map n map = new hash_map < i_atom , integer > ( ) n for ( i_atom a container . atoms ( ) ) { n map . put ( a , map . size ( ) ) n } n return map n }	0
Q_168	extract the encryption algorithm name from a signature	C_168_0	public static string get_enc_alg_from_sig_alg ( string signature_algorithm ) { n signature_algorithm = signature_algorithm . to_upper_case ( locale . english ) n int with = signature_algorithm . index_of ( codstr ) n string key_algorithm = null n if ( with > codint ) { n int and = signature_algorithm . index_of ( codstr , with + codint ) n if ( and > codint ) { n key_algorithm = signature_algorithm . substring ( with + codint , and ) n } else { n key_algorithm = signature_algorithm . substring ( with + codint ) n } n if ( key_algorithm . equals_ignore_case ( codstr ) ) { n key_algorithm = codstr n } n } n return key_algorithm n }	1
Q_168	extract the encryption algorithm name from a signature	C_168_1	"render_mapping n public string initialize_view ( portlet_request req , model model ) { n final i_user_instance ui = n user_instance_manager . get_user_instance ( portal_request_utils . get_current_portal_request ( ) ) n final user_preferences_manager upm = ( user_preferences_manager ) ui . get_preferences_manager ( ) n final i_user_layout_manager ulm = upm . get_user_layout_manager ( ) n n final i_user_layout user_layout = ulm . get_user_layout ( ) n n / / todo the portlet could predicate including a non _ null marketplace portlet fname n / / on the accessing user having permission to render the portlet referenced by that fname n / / so that portlet would gracefully degrade when configured with bad marketplace portlet n / / fname n / / and also gracefully degrade when the accessing user doesn codstr marketplace_fname codstr collections codstr regular codstr favorites codstr jsp / favorites / view codstr jsp / favorites / view_zero codstr favorites portlet view mode render populated model [ { } ] for render by view { } . "" , n model , n view_name ) n return view_name n }"	0
Q_168	extract the encryption algorithm name from a signature	C_168_2	public canvas draw ( drawable image , float x , float y , float w , float h ) { n image . draw ( gc ( ) , x , y , w , h ) n is_dirty = true n return this n }	0
Q_169	return the local address after perform a security_manager check_connect	C_169_0	static inet_socket_address get_revealed_local_address ( inet_socket_address addr ) { n security_manager sm = system . get_security_manager ( ) n if ( addr = = null sm = = null ) n return addr n n if ( get_reveal_local_address ( ) ) { n / / return loopback address only if security check fails n try { n sm . check_connect ( addr . get_address ( ) . get_host_address ( ) , _ codint ) n / / security check passed n } catch ( security_exception e ) { n / / return loopback address n addr = get_loopback_address ( addr . get_port ( ) ) n } n } n return addr n }	1
Q_169	return the local address after perform a security_manager check_connect	C_169_1	public url_builder query_param ( string name , boolean value ) { n if ( value = null ) { n return query_param ( name , value . to_string ( ) ) n } else { n return null n } n }	0
Q_169	return the local address after perform a security_manager check_connect	C_169_2	get n path ( codstr ) n produces ( media_type . application_json ) n public response validate_account ( path_param ( codstr ) string token ) { n try { n if ( auth_server_logic . validate_account ( token ) ) { n return response . ok ( ) . build ( ) n } else { n return response . status ( status . not_found ) . build ( ) n } n } catch ( server_dao . dao_exception e ) { n return from_dao_expection ( e ) n } n }	0
Q_170	get the length of the collation_key	C_170_0	private int get_length ( ) n { n if ( m_length_ > = codint ) { n return m_length_ n } n int length = m_key_ . length n for ( int index = codint index < length index + + ) { n if ( m_key_ [ index ] = = codint ) { n length = index n break n } n } n m_length_ = length n return m_length_ n }	1
Q_170	get the length of the collation_key	C_170_1	private static string get_class_from_line ( string line ) { n line = line . trim ( ) n n / / skip commented lines n if ( line . length ( ) = = codint line . starts_with ( codstr [ s if ( class_name . length > = codint ) n return class_name [ codint ] n n return null n }	0
Q_170	get the length of the collation_key	C_170_2	public static double log_factorial ( int n ) { n if ( n < codint ) { n throw new illegal_argument_exception ( string . format ( codstr , n ) ) n } n n double f = number n for ( int i = codint i < = n i + + ) { n f + = math . log ( i ) n } n n return f n }	0
Q_171	remove the string property for this service from this provider be	C_171_0	private void remove_property_strings ( service s ) { n string type = s . get_type ( ) n string algorithm = s . get_algorithm ( ) n / / use super ( ) to avoid permission check and other processing n super . remove ( type + codstr + algorithm ) n for ( string alias s . get_aliases ( ) ) { n super . remove ( alias_prefix + type + codstr + alias ) n } n for ( map . entry < u_string , string > entry s . attributes . entry_set ( ) ) { n string key = type + codstr + algorithm + codstr + entry . get_key ( ) n super . remove ( key ) n } n if ( registered ) { n security . increase_version ( ) n } n }	1
Q_171	remove the string property for this service from this provider be	C_171_1	private interest_rate_swap_leg_product_descriptor get_swap_leg_product_descriptor ( element leg ) { n n / / is this a fixed rate leg ? n boolean is_fixed = leg . get_elements_by_tag_name ( codstr ) . item ( codint ) . get_attributes ( ) . get_named_item ( codstr ) . get_text_content ( ) . equals_ignore_case ( codstr ) n n / / get start and end dates of contract n local_date start_date = local_date . parse ( ( ( element ) leg . get_elements_by_tag_name ( codstr ) . item ( codint ) ) . get_elements_by_tag_name ( codstr ) . item ( codint ) . get_text_content ( ) ) n local_date maturity_date = local_date . parse ( ( ( element ) leg . get_elements_by_tag_name ( codstr ) . item ( codint ) ) . get_elements_by_tag_name ( codstr ) . item ( codint ) . get_text_content ( ) ) n n / / determine fixing / payment offset if available n int fixing_offset_days = codint n if ( leg . get_elements_by_tag_name ( codstr ) . get_length ( ) > codint ) { n fixing_offset_days = integer . parse_int ( ( ( element ) leg . get_elements_by_tag_name ( codstr ) . item ( codint ) ) . get_elements_by_tag_name ( codstr ) . item ( codint ) . get_text_content ( ) ) n } n int payment_offset_days = codint n if ( leg . get_elements_by_tag_name ( codstr ) . get_length ( ) > codint ) { n payment_offset_days = integer . parse_int ( ( ( element ) leg .	0
Q_171	remove the string property for this service from this provider be	C_171_2	public int simplify ( point_list points , int from_index , int last_index ) { n int removed = codint n int size = last_index _ from_index n if ( approx ) { n int delta = codint n int segments = size / delta + codint n int start = from_index n for ( int i = codint i < segments i + + ) { n / / start of next is end of last segment , except for the last n removed + = sub_simplify ( points , start , math . min ( last_index , start + delta ) ) n start + = delta n } n } else { n removed = sub_simplify ( points , from_index , last_index ) n } n n if ( removed > codint ) n compress_new ( points , removed ) n n return removed n }	0
Q_172	return a boolean array with the same bit value a this bit_array	C_172_0	public boolean [ ] to_boolean_array ( ) { n boolean [ ] bits = new boolean [ length ] n n for ( int i = codint i < length i + + ) { n bits [ i ] = get ( i ) n } n return bits n }	1
Q_172	return a boolean array with the same bit value a this bit_array	C_172_1	nullable n private char [ ] _peek_chars ( nonnegative final int n_pos ) n { n if ( n_pos < codint n_pos > = limit ( ) ) n return null n n final char c1 = get ( n_pos ) n if ( character . is_high_surrogate ( c1 ) n_pos < limit ( ) ) n { n final char c2 = get ( n_pos + codint ) n if ( character . is_low_surrogate ( c2 ) ) n return new char [ ] { c1 , c2 } n throw new invalid_character_exception ( c2 ) n } n n if ( character . is_low_surrogate ( c1 ) n_pos > codint ) n { n final char c2 = get ( n_pos _ codint ) n if ( character . is_high_surrogate ( c2 ) ) n return new char [ ] { c2 , c1 } n throw new invalid_character_exception ( c2 ) n } n n return new char [ ] { c1 } n }	0
Q_172	return a boolean array with the same bit value a this bit_array	C_172_2	public final void m_funct ( ) throws recognition_exception { n try { n int _type = funct n int _channel = default_token_channel n / / c project obdalib obdalib _ parent obdalib _ core src main java it unibz inf obda gui swing utils mapping_filter . g codint codint ( ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) ) n / / c project obdalib obdalib _ parent obdalib _ core src main java it unibz inf obda gui swing utils mapping_filter . g codint codint ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) ( codstr codstr ) n { n if ( input . la ( codint ) = = codstr input . la ( codint ) = = codstr ) { n input . consume ( ) n } n else { n mismatched_set_exception mse = new mismatched_set_exception ( null , input ) n recover ( mse ) n throw mse n } n n n if ( input . la ( codint ) = = codstr input . la ( codint ) = = codstr ) { n input . consume ( ) n } n else { n mismatched_set_exception mse = new mismatched_set_exception ( null , input ) n recover ( mse ) n throw mse n } n n n if ( input . la ( codint ) = = codstr input . la	0
Q_173	return the localize currency symbol for this currency in code locale	C_173_0	public string get_symbol ( locale locale ) { n if ( locale = = null ) { n throw new null_pointer_exception ( codstr ) n } n / / check the locale first , in case the locale has the same currency . n locale_data locale_data = locale_data . get ( locale ) n if ( locale_data . international_currency_symbol . equals ( currency_code ) ) { n return locale_data . currency_symbol n } n n / / try icu , and fall back to the currency code if icu has nothing . n string symbol = icu . get_currency_symbol ( locale , currency_code ) n return symbol = null ? symbol currency_code n }	1
Q_173	return the localize currency symbol for this currency in code locale	C_173_1	public string build_element_list ( ) { n n string_buffer ret_value = new string_buffer ( codint ) n ret_value . append ( codstr codint codstr ) n ret_value . append ( codstr ) n ret_value . append ( n codstr textbold codstr on codstr n + key ( messages . gui_editor_dialog_elements_pageelement_0 ) n + codstr ) n ret_value . append ( codstr textbold codstr on codstr n + key ( messages . gui_editor_dialog_elements_enabled_0 ) n + codstr ) n ret_value . append ( codstr ) n ret_value . append ( codstr codint codstr height codint px codstr ) n n try { n n / / get the list of all possible elements n list < cms_dialog_element > element_list = compute_elements ( ) n n / / get all present bodies from the temporary file n cms_file file = get_cms ( ) . read_file ( get_param_tempfile ( ) , cms_resource_filter . ignore_expiration ) n cms_xml_page page = cms_xml_page_factory . unmarshal ( get_cms ( ) , file ) n n / / show all possible elements n iterator < cms_dialog_element > i = element_list . iterator ( ) n while ( i . has_next ( ) ) { n / / get the current list element n cms_dialog_element element = i . next ( ) n / / build an element row n ret_value . append ( codstr ) n ret_value . append ( codstr white _ space nowrap codstr on codstr + element . get_nice_name ( ) ) n ret_value .	0
Q_173	return the localize currency symbol for this currency in code locale	C_173_2	suppress_warnings ( codstr ) n protected void add_post_run_dependent ( executable < ? extends indexable > executable ) { n task_group . has_task_group dependency = ( task_group . has_task_group ) executable n this . add_post_run_dependent ( dependency ) n }	0
Q_174	get all the preview feature in a provider namespace that be available through afec for the subscription	C_174_0	public paged_list < feature_result_inner > list1 ( final string resource_provider_namespace ) { n service_response < page < feature_result_inner response = list1_single_page_async ( resource_provider_namespace ) . to_blocking ( ) . single ( ) n return new paged_list < feature_result_inner > ( response . body ( ) ) { n override n public page < feature_result_inner > next_page ( string next_page_link ) { n return list1_next_single_page_async ( next_page_link ) . to_blocking ( ) . single ( ) . body ( ) n } n } n }	1
Q_174	get all the preview feature in a provider namespace that be available through afec for the subscription	C_174_1	public void marshall ( http_properties http_properties , protocol_marshaller protocol_marshaller ) { n n if ( http_properties = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( http_properties . get_http_name ( ) , httpname_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_174	get all the preview feature in a provider namespace that be available through afec for the subscription	C_174_2	public skinny_uuid get_uuid ( namespace namespace , string value ) n throws equivalencer_exception { n load_equivalencing_engine ( ) n final parameter p = new parameter ( namespace , value ) n n try { n return param_equivalencer . get_uuid ( p ) n } catch ( invalid_argument e ) { n / / todo change when param_equivalencer exception is changed n return null n } catch ( exception e ) { n final string fmt = codstr s codstr n final string msg = format ( fmt , p . to_bel_short_form ( ) ) n throw new equivalencer_exception ( msg , e ) n } n }	0
Q_175	create a virtual_wan resource if it do not exist else update the exist virtual_wan	C_175_0	public virtual_wan_inner begin_create_or_update ( string resource_group_name , string virtual_wan_name , virtual_wan_inner w_an_parameters ) { n return begin_create_or_update_with_service_response_async ( resource_group_name , virtual_wan_name , w_an_parameters ) . to_blocking ( ) . single ( ) . body ( ) n }	1
Q_175	create a virtual_wan resource if it do not exist else update the exist virtual_wan	C_175_1	public static instrumented_executor_service new_single_thread_executor ( n thread_factory thread_factory , metric_registry registry ) { n return new instrumented_executor_service ( executors . new_single_thread_executor ( thread_factory ) , registry ) n }	0
Q_175	create a virtual_wan resource if it do not exist else update the exist virtual_wan	C_175_2	inject n public void set_sampler_configuration ( nullable jaeger_sampler_configuration sampler_configuration ) { n if ( sampler_configuration = null ) { n configuration . with_sampler ( sampler_configuration . configuration ) n } n }	0
Q_176	get all network security group apply to a network interface	C_176_0	public effective_network_security_group_list_result_inner list_effective_network_security_groups ( string resource_group_name , string network_interface_name ) { n return list_effective_network_security_groups_with_service_response_async ( resource_group_name , network_interface_name ) . to_blocking ( ) . last ( ) . body ( ) n }	1
Q_176	get all network security group apply to a network interface	C_176_1	public static audit_entry_bean client_created ( client_bean bean , i_security_context security_context ) { n audit_entry_bean entry = new_entry ( bean . get_organization ( ) . get_id ( ) , audit_entity_type . client , security_context ) n entry . set_entity_id ( bean . get_id ( ) ) n entry . set_entity_version ( null ) n entry . set_data ( null ) n entry . set_what ( audit_entry_type . create ) n return entry n }	0
Q_176	get all network security group apply to a network interface	C_176_2	public static double [ ] [ ] factor_reduction_using_commons_math ( double [ ] [ ] correlation_matrix , int number_of_factors ) { n n / / extract factors corresponding to the largest eigenvalues n double [ ] [ ] factor_matrix = get_factor_matrix ( correlation_matrix , number_of_factors ) n n / / renormalize rows n for ( int row = codint row < correlation_matrix . length row + + ) { n double sum_squared = codint n for ( int factor = codint factor < number_of_factors factor + + ) { n sum_squared + = factor_matrix [ row ] [ factor ] * factor_matrix [ row ] [ factor ] n } n if ( sum_squared = codint ) { n for ( int factor = codint factor < number_of_factors factor + + ) { n factor_matrix [ row ] [ factor ] = factor_matrix [ row ] [ factor ] / math . sqrt ( sum_squared ) n } n } n else { n / / this is a rare case the factor reduction of a completely decorrelated system to codint factor n for ( int factor = codint factor < number_of_factors factor + + ) { n factor_matrix [ row ] [ factor ] = number n } n } n } n n / / orthogonalized again n double [ ] [ ] reduced_correlation_matrix = ( new array2_d_row_real_matrix ( factor_matrix ) . multiply ( new array2_d_row_real_matrix ( factor_matrix ) . transpose ( ) ) ) . get_data (	0
Q_177	update the password and expiration time of a user account on the specify compute node	C_177_0	public observable < void > update_user_async ( string pool_id , string node_id , string user_name , node_update_user_parameter node_update_user_parameter , compute_node_update_user_options compute_node_update_user_options ) { n return update_user_with_service_response_async ( pool_id , node_id , user_name , node_update_user_parameter , compute_node_update_user_options ) . map ( new func1 < service_response_with_headers < void , compute_node_update_user_headers > , void > ( ) { n override n public void call ( service_response_with_headers < void , compute_node_update_user_headers > response ) { n return response . body ( ) n } n } ) n }	1
Q_177	update the password and expiration time of a user account on the specify compute node	C_177_1	public int write_multiple_registers ( int unit_id , int ref , register [ ] registers ) throws modbus_exception { n check_transaction ( ) n if ( write_multiple_registers_request = = null ) { n write_multiple_registers_request = new write_multiple_registers_request ( ) n } n write_multiple_registers_request . set_unit_id ( unit_id ) n write_multiple_registers_request . set_reference ( ref ) n write_multiple_registers_request . set_registers ( registers ) n transaction . set_request ( write_multiple_registers_request ) n transaction . execute ( ) n return ( ( write_multiple_registers_response ) transaction . get_response ( ) ) . get_word_count ( ) n }	0
Q_177	update the password and expiration time of a user account on the specify compute node	C_177_2	"private boolean partially_inline_alias ( n ref alias , global_namespace namespace , reference_collection alias_refs , node alias_lhs_node ) { n basic_block alias_block = null n / / this initial iteration through all the alias references does two things n / / a ) find the control flow block in which the alias is assigned . n / / b ) see if the alias var is assigned to in multiple places , and return if that codstr inline_alias_if_possible codstr t replace any references if the alias is reassigned n return false n } n } n n set < ast_change > new_nodes = new linked_hash_set < > ( ) n boolean already_seen_initial_alias = false n boolean found_non_replaceable_alias = false n / / do a second iteration through all the alias references , and replace any inlinable references . n for ( reference alias_ref alias_refs ) { n node alias_ref_node = alias_ref . get_node ( ) n if ( alias_ref_node = = alias_lhs_node ) { n already_seen_initial_alias = true n continue n } else if ( alias_ref . is_declaration ( ) ) { n / / ignore any alias declarations , e . g . codstr , since there "" s nothing to inline . n continue n } n n basic_block ref_block = alias_ref . get_basic_block ( ) n if ( ( ref_block = alias_block alias_block . provably_executes_before ( ref_block ) ) n ( ref_block = = alias_block already_seen_initial_alias ) ) { n / / we replace the alias only"	0
Q_178	delete dm service instance	C_178_0	public service_future < void > begin_delete_async ( string group_name , string service_name , final service_callback < void > service_callback ) { n return service_future . from_response ( begin_delete_with_service_response_async ( group_name , service_name ) , service_callback ) n }	1
Q_178	delete dm service instance	C_178_1	override n public void apply ( final app app , final page source_page , final page new_page ) throws framework_exception { n existing_node . update_from_node ( new_node ) n }	0
Q_178	delete dm service instance	C_178_2	public static method get_declared_method ( class < ? > clazz , string name , class < ? > . params ) { n try { n return clazz . get_declared_method ( name , params ) n } catch ( exception e ) { n throw new illegal_argument_exception ( codstr + name + codstr + clazz , e ) n } n }	0
Q_179	update the security setting on a data box edge gateway device	C_179_0	public observable < void > create_or_update_security_settings_async ( string device_name , string resource_group_name , asymmetric_encrypted_secret device_admin_password ) { n return create_or_update_security_settings_with_service_response_async ( device_name , resource_group_name , device_admin_password ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	1
Q_179	update the security setting on a data box edge gateway device	C_179_1	public latitude parse_latitude ( final string latitude_string ) n throws parser_exception n { n try n { n final latitude latitude = new latitude ( parse_angle ( latitude_string ) ) n return latitude n } n catch ( final runtime_exception e ) n { n throw new parser_exception ( codstr + latitude_string ) n } n n }	0
Q_179	update the security setting on a data box edge gateway device	C_179_2	public static void random_shuffle ( array_modifiable_dbi_ds ids , random random , final int limit ) { n final int end = ids . size ( ) n for ( int i = codint i < limit i + + ) { n ids . swap ( i _ codint , i + random . next_int ( end _ i ) ) n } n }	0
Q_180	test send a push notification	C_180_0	public observable < service_response < debug_send_response_inner debug_send_with_service_response_async ( string resource_group_name , string namespace_name , string notification_hub_name ) { n if ( resource_group_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( namespace_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( notification_hub_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . subscription_id ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n final object parameters = null n return service . debug_send ( resource_group_name , namespace_name , notification_hub_name , this . client . subscription_id ( ) , parameters , this . client . api_version ( ) , this . client . accept_language ( ) , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < debug_send_response_inner ( ) { n override n public observable < service_response < debug_send_response_inner call ( response < response_body > response ) { n try { n service_response < debug_send_response_inner > client_response = debug_send_delegate ( response ) n return observable . just ( client_response ) n } catch ( throwable t ) { n return observable . error ( t ) n	1
Q_180	test send a push notification	C_180_1	nonnull n public e_change remove_function ( nonnull final q_name a_name , nonnegative final int n_arity ) n { n final x_path_function_key a_key = new x_path_function_key ( a_name , n_arity ) n return remove_function ( a_key ) n }	0
Q_180	test send a push notification	C_180_2	override n public org . apache . hadoop . mapred . input_split [ ] get_splits ( job_conf job , int num_splits ) throws io_exception { n n settings settings = hadoop_settings_manager . load_from ( job ) n collection < partition_definition > partitions = rest_service . find_partitions ( settings , log ) n es_input_split [ ] splits = new es_input_split [ partitions . size ( ) ] n n int index = codint n for ( partition_definition part partitions ) { n splits [ index + + ] = new es_input_split ( part ) n } n log . info ( string . format ( codstr , splits . length ) ) n return splits n }	0
Q_181	list site detector response	C_181_0	public service_future < list < detector_response_inner list_site_detector_responses_async ( final string resource_group_name , final string site_name , final list_operation_callback < detector_response_inner > service_callback ) { n return azure_service_future . from_page_response ( n list_site_detector_responses_single_page_async ( resource_group_name , site_name ) , n new func1 < string , observable < service_response < page < detector_response_inner ( ) { n override n public observable < service_response < page < detector_response_inner call ( string next_page_link ) { n return list_site_detector_responses_next_single_page_async ( next_page_link ) n } n } , n service_callback ) n }	1
Q_181	list site detector response	C_181_1	protected void ensure_entries_loaded ( cms_gallery_tree_item parent ) { n n cms_list < ? extends i_cms_list_item > children = parent . get_children ( ) n set < string > parent_paths = new hash_set < string > ( ) n for ( widget list_item children ) { n cms_gallery_tree_item tree_item = ( cms_gallery_tree_item ) list_item n cms_uuid entry_id = tree_item . get_entry_id ( ) n if ( m_controller . get_entry_by_id ( entry_id ) = = null ) { n parent_paths . add ( cms_resource . get_parent_folder ( tree_item . get_site_path ( ) ) ) n } n } n for ( string parent_path parent_paths ) { n m_controller . load_path ( parent_path ) n } n }	0
Q_181	list site detector response	C_181_2	private static list < string > get_rationale_permissions ( source source , string . permissions ) { n list < string > rationale_list = new array_list < > ( codint ) n for ( string permission permissions ) { n if ( source . is_show_rationale_permission ( permission ) ) { n rationale_list . add ( permission ) n } n } n return rationale_list n }	0
Q_182	query policy event for the subscription level policy set definition	C_182_0	public observable < policy_events_query_results_inner > list_query_results_for_policy_set_definition_async ( string subscription_id , string policy_set_definition_name , query_options query_options ) { n return list_query_results_for_policy_set_definition_with_service_response_async ( subscription_id , policy_set_definition_name , query_options ) . map ( new func1 < service_response < policy_events_query_results_inner > , policy_events_query_results_inner > ( ) { n override n public policy_events_query_results_inner call ( service_response < policy_events_query_results_inner > response ) { n return response . body ( ) n } n } ) n }	1
Q_182	query policy event for the subscription level policy set definition	C_182_1	public string version ( ) { n if ( es3 . contains ( this ) ) { n return codstr n } n if ( es5 . contains ( this ) ) { n return codstr n } n if ( es6_modules . contains ( this ) ) { n return codstr n } n if ( es7_modules . contains ( this ) ) { n return codstr n } n if ( es8_modules . contains ( this ) ) { n return codstr n } n if ( es2018_modules . contains ( this ) ) { n return codstr n } n if ( es2019_modules . contains ( this ) ) { n return codstr n } n if ( es_next . contains ( this ) ) { n return codstr n } n if ( es_unsupported . contains ( this ) ) { n return codstr n } n if ( typescript . contains ( this ) ) { n return codstr n } n throw new illegal_state_exception ( this . to_string ( ) ) n }	0
Q_182	query policy event for the subscription level policy set definition	C_182_2	"public static void run_example ( n ad_manager_services ad_manager_services , n ad_manager_session session , n long master_creative_id , n long companion_creative_id ) n throws remote_exception { n / / get the creative_set_service . n creative_set_service_interface creative_set_service = n ad_manager_services . get ( session , creative_set_service_interface . class ) n n creative_set creative_set = new creative_set ( ) n creative_set . set_name ( codstr a creative set with id d , master creative id d , codstr and companion creative i_ds [ s ] was created . n codstr , "" , created_creative_set . get_companion_creative_ids ( ) ) ) n }"	0
Q_183	get the specify public ip address in a specify resource group	C_183_0	public observable < public_ip_address_inner > get_by_resource_group_async ( string resource_group_name , string public_ip_address_name , string expand ) { n return get_by_resource_group_with_service_response_async ( resource_group_name , public_ip_address_name , expand ) . map ( new func1 < service_response < public_ip_address_inner > , public_ip_address_inner > ( ) { n override n public public_ip_address_inner call ( service_response < public_ip_address_inner > response ) { n return response . body ( ) n } n } ) n }	1
Q_183	get the specify public ip address in a specify resource group	C_183_1	public d1 get_coordinate_array1_d ( int time_index , int x_index , int y_index ) n throws io_exception , invalid_range_exception { n n n array_double . d3 ddata = get_coordinate_array ( time_index ) n int [ ] origin = new int [ ] { codint , y_index , x_index } n int [ ] shape = new int [ ] { ddata . get_shape ( ) [ codint ] , codint , codint } n n return ( array_double . d1 ) ddata . section ( origin , shape ) . reduce ( ) n }	0
Q_183	get the specify public ip address in a specify resource group	C_183_2	private url [ ] get_classpath ( job_instance ji , job_runner_callback cb ) throws jqm_payload_exception n { n switch ( ji . get_jd ( ) . get_path_type ( ) ) n { n case maven n return maven_resolver . resolve ( ji ) n case memory n return new url [ codint ] n case fs n default n return fs_resolver . get_libraries ( ji . get_node ( ) , ji . get_jd ( ) ) n } n }	0
Q_184	update the data lake analytics account specify to remove the specify data lake store account	C_184_0	public observable < void > delete_data_lake_store_account_async ( string resource_group_name , string account_name , string data_lake_store_account_name ) { n return delete_data_lake_store_account_with_service_response_async ( resource_group_name , account_name , data_lake_store_account_name ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	1
Q_184	update the data lake analytics account specify to remove the specify data lake store account	C_184_1	public static map < string , integer > get_cluster_sizes ( n final string project_id , n final string instance_id n ) throws io_exception , general_security_exception { n try ( bigtable_cluster_utilities cluster_util = bigtable_cluster_utilities n . for_instance ( project_id , instance_id ) ) { n return collections . unmodifiable_map ( n cluster_util . get_clusters ( ) . get_clusters_list ( ) . stream ( ) n . collect ( collectors . to_map ( n cn _ > cn . get_name ( ) . substring ( cn . get_name ( ) . index_of ( codstr ) + codint ) , n cluster get_serve_nodes ) ) ) n } n }	0
Q_184	update the data lake analytics account specify to remove the specify data lake store account	C_184_2	public boolean add_named_grouping_policy ( string ptype , string . params ) { n return add_named_grouping_policy ( ptype , arrays . as_list ( params ) ) n }	0
Q_185	reset the vpn client share key of the virtual network gateway in the specify resource group	C_185_0	public observable < void > reset_vpn_client_shared_key_async ( string resource_group_name , string virtual_network_gateway_name ) { n return reset_vpn_client_shared_key_with_service_response_async ( resource_group_name , virtual_network_gateway_name ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	1
Q_185	reset the vpn client share key of the virtual network gateway in the specify resource group	C_185_1	public date_midnight minus_months ( int months ) { n if ( months = = codint ) { n return this n } n long instant = get_chronology ( ) . months ( ) . subtract ( get_millis ( ) , months ) n return with_millis ( instant ) n }	0
Q_185	reset the vpn client share key of the virtual network gateway in the specify resource group	C_185_2	pure n inline ( value = codstr , imported = { math . class } ) n public static int pix2pix ( float pixel_coord ) { n return math . round ( pixel_coord ) n }	0
Q_186	update a event hub connection	C_186_0	public observable < event_hub_connection_inner > begin_update_async ( string resource_group_name , string cluster_name , string database_name , string event_hub_connection_name , event_hub_connection_update parameters ) { n return begin_update_with_service_response_async ( resource_group_name , cluster_name , database_name , event_hub_connection_name , parameters ) . map ( new func1 < service_response < event_hub_connection_inner > , event_hub_connection_inner > ( ) { n override n public event_hub_connection_inner call ( service_response < event_hub_connection_inner > response ) { n return response . body ( ) n } n } ) n }	1
Q_186	update a event hub connection	C_186_1	public operation_future < load_balancer_pool > update ( n load_balancer_pool load_balancer_pool , n list < load_balancer_node_metadata > nodes_list n ) { n load_balancer_pool_metadata load_balancer_pool_metadata = load_balancer_pool_service . find_by_ref ( n load_balancer_pool n ) n n load_balancer_node_client . update ( n load_balancer_pool_metadata . get_data_center_id ( ) , n load_balancer_pool_metadata . get_load_balancer_id ( ) , n load_balancer_pool_metadata . get_id ( ) , n nodes_list n ) n n return new operation_future < > ( n load_balancer_pool , n new no_waiting_job_future ( ) n ) n }	0
Q_186	update a event hub connection	C_186_2	public e peek_last ( ) { n final node < e > l = last n return ( l = = null ) ? null l . item n }	0
Q_187	get all permission the caller have for a resource	C_187_0	public observable < service_response < page < permission_inner list_for_resource_single_page_async ( final string resource_group_name , final string resource_provider_namespace , final string parent_resource_path , final string resource_type , final string resource_name ) { n if ( resource_group_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( resource_provider_namespace = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( parent_resource_path = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( resource_type = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( resource_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . subscription_id ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n return service . list_for_resource ( resource_group_name , resource_provider_namespace , parent_resource_path , resource_type , resource_name , this . client . subscription_id ( ) , this . client . api_version ( ) , this . client . accept_language ( ) , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < page < permission_inner ( ) { n override n public observable < service_response < page <	1
Q_187	get all permission the caller have for a resource	C_187_1	public void set_attributes ( string name , int attributes ) n { n check_not_sealed ( name , codint ) n find_attribute_slot ( name , codint , slot_access . modify ) . set_attributes ( attributes ) n }	0
Q_187	get all permission the caller have for a resource	C_187_2	public string convert_ifc_alarm_type_enum_to_string ( e_data_type e_data_type , object instance_value ) { n return instance_value = = null ? null instance_value . to_string ( ) n }	0
Q_188	create or update a express route circuit connection in the specify express route circuit	C_188_0	public express_route_circuit_connection_inner create_or_update ( string resource_group_name , string circuit_name , string peering_name , string connection_name , express_route_circuit_connection_inner express_route_circuit_connection_parameters ) { n return create_or_update_with_service_response_async ( resource_group_name , circuit_name , peering_name , connection_name , express_route_circuit_connection_parameters ) . to_blocking ( ) . last ( ) . body ( ) n }	1
Q_188	create or update a express route circuit connection in the specify express route circuit	C_188_1	public static collection < ? extends graph_entity > get_ascendants_of_role ( n graph_entity ge ) { n vector < graph_entity > all_ascendants = new vector < graph_entity > ( ) n try { n vector < graph_entity > ascendants = utils . get_related_elements_vector ( ge , n codstr , codstr ) n while ( ascendants . is_empty ( ) ) { n all_ascendants . add_all ( ascendants ) n ascendants . clear ( ) n for ( graph_entity ascendant all_ascendants ) { n n ascendants . add_all ( utils . get_related_elements_vector ( ascendant , n codstr , codstr ) ) n n } n ascendants . remove_all ( all_ascendants ) n } n } catch ( null_entity e ) { n / / todo auto _ generated catch block n e . print_stack_trace ( ) n } n return all_ascendants n n }	0
Q_188	create or update a express route circuit connection in the specify express route circuit	C_188_2	public map < string , object > get_application_properties ( map < string , object > properties ) n { n if ( properties = = null ) n return null n map < string , object > prop_app = new hashtable < string , object > ( ) n if ( properties . get ( db_params . language ) = null ) n prop_app . put ( db_params . language , properties . get ( db_params . language ) ) n if ( properties . get ( db_params . domain ) = null ) n prop_app . put ( db_params . domain , properties . get ( db_params . domain ) ) n return prop_app n }	0
Q_189	get the certificate associate with a certificate order	C_189_0	public observable < app_service_certificate_resource_inner > get_certificate_async ( string resource_group_name , string certificate_order_name , string name ) { n return get_certificate_with_service_response_async ( resource_group_name , certificate_order_name , name ) . map ( new func1 < service_response < app_service_certificate_resource_inner > , app_service_certificate_resource_inner > ( ) { n override n public app_service_certificate_resource_inner call ( service_response < app_service_certificate_resource_inner > response ) { n return response . body ( ) n } n } ) n }	1
Q_189	get the certificate associate with a certificate order	C_189_1	public static sendable_text_message_builder html ( string text ) { n return builder ( ) . message ( text ) . parse_mode ( parse_mode . html ) n }	0
Q_189	get the certificate associate with a certificate order	C_189_2	public cursor query ( sq_lite_database db , string [ ] columns , string group_by , string having , n string order_by , string limit ) { n assert_table ( ) n if ( columns = null ) n map_columns ( columns ) n return db . query ( m_table , columns , get_selection ( ) , get_selection_args ( ) , group_by , having , n order_by , limit ) n }	0
Q_190	get information about the prebuilt entity model	C_190_0	public service_future < list < prebuilt_entity_extractor list_prebuilts_async ( uuid app_id , string version_id , list_prebuilts_optional_parameter list_prebuilts_optional_parameter , final service_callback < list < prebuilt_entity_extractor service_callback ) { n return service_future . from_response ( list_prebuilts_with_service_response_async ( app_id , version_id , list_prebuilts_optional_parameter ) , service_callback ) n }	1
Q_190	get information about the prebuilt entity model	C_190_1	string fast_format ( double d ) { n / / ( re _ ) evaluates fast _ path status if needed . n if ( fast_path_check_needed ) n check_and_set_fast_path_status ( ) n n if ( is_fast_path ) n / / decimal_format instance is not in a fast _ path state . n return null n n if ( double . is_finite ( d ) ) n / / should not use fast _ path for infinity and na_n . n return null n n / / extracts and records sign of double value , possibly changing it n / / to a positive one , before calling fast_double_format ( ) . n boolean negative = false n if ( d < numberd ) { n negative = true n d = _ d n } else if ( d = = numberd ) { n negative = ( math . copy_sign ( numberd , d ) = = _ numberd ) n d = + numberd n } n n if ( d > max_int_as_double ) n / / filters out values that are outside expected fast _ path range n return null n else n fast_double_format ( d , negative ) n n / / returns a new string from updated fast_path_container . n return new string ( fast_path_data . fast_path_container , n fast_path_data . first_used_index , n fast_path_data . last_free_index _ fast_path_data . first_used_index ) n n }	0
Q_190	get information about the prebuilt entity model	C_190_2	public search_sms_response search_messages ( string id , string . ids ) throws io_exception , nexmo_client_exception { n list < string > id_list = new array_list < > ( ids . length + codint ) n id_list . add ( id ) n id_list . add_all ( arrays . as_list ( ids ) ) n return this . search_messages ( new sms_id_search_request ( id_list ) ) n }	0
Q_191	a job id will be return for the content post on this endpoint	C_191_0	public observable < service_response < job_id create_job_with_service_response_async ( string team_name , string content_type , string content_id , string workflow_name , string job_content_type , string content_value , string call_back_endpoint ) { n if ( this . client . base_url ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( team_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( content_type = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( content_id = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( workflow_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( job_content_type = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( content_value = = null ) { n throw new illegal_argument_exception ( codstr ) n } n content content = new content ( ) n content . with_content_value ( content_value ) n string parameterized_host = joiner . on ( codstr ) . join ( codstr , this . client . base_url ( ) ) n return service . create_job ( team_name , content_type , content_id , workflow_name , call_back_endpoint , job_content_type , this . client . accept_language ( ) , content , parameterized_host , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body >	1
Q_191	a job id will be return for the content post on this endpoint	C_191_1	public observable < service_response < order_inner create_or_update_with_service_response_async ( string device_name , string resource_group_name , order_inner order ) { n if ( device_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . subscription_id ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( resource_group_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( order = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n validator . validate ( order ) n observable < response < response_body observable = service . create_or_update ( device_name , this . client . subscription_id ( ) , resource_group_name , order , this . client . api_version ( ) , this . client . accept_language ( ) , this . client . user_agent ( ) ) n return client . get_azure_client ( ) . get_put_or_patch_result_async ( observable , new type_token < order_inner > ( ) { } . get_type ( ) ) n }	0
Q_191	a job id will be return for the content post on this endpoint	C_191_2	public void remove_and_try_close ( connection connection ) { n if ( null = = connection ) { n return n } n boolean res = this . conns . remove ( connection ) n if ( res ) { n connection . decrease_ref ( ) n } n if ( connection . no_ref ( ) ) { n connection . close ( ) n } n }	0
Q_192	stop all container in a container group	C_192_0	public observable < void > stop_async ( string resource_group_name , string container_group_name ) { n return stop_with_service_response_async ( resource_group_name , container_group_name ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	1
Q_192	stop all container in a container group	C_192_1	public list < emblem > get_all_emblem_info ( emblem . type type , int [ ] ids ) throws guild_wars2_exception { n is_param_valid ( new param_checker ( ids ) ) n if ( ids . length > codint ) n throw new guild_wars2_exception ( error_code . id , codstr ) n try { n response < list < emblem response = gw2_api . get_all_emblem_info ( type . name ( ) , process_ids ( ids ) ) . execute ( ) n if ( response . is_successful ( ) ) throw_error ( response . code ( ) , response . error_body ( ) ) n return response . body ( ) n } catch ( io_exception e ) { n throw new guild_wars2_exception ( error_code . network , codstr + e . get_message ( ) ) n } n }	0
Q_192	stop all container in a container group	C_192_2	protected t process_line ( mapping_strategy < t > mapper , string [ ] line ) throws reflective_operation_exception , introspection_exception { n t bean = mapper . create_bean ( ) n for ( int col = codint col < line . length col + + ) { n if ( mapper . is_annotation_driven ( ) ) { n process_field ( mapper , line , bean , col ) n } else { n process_property ( mapper , line , bean , col ) n } n } n return bean n }	0
Q_193	recover the delete secret to the late version	C_193_0	public observable < secret_bundle > recover_deleted_secret_async ( string vault_base_url , string secret_name ) { n return recover_deleted_secret_with_service_response_async ( vault_base_url , secret_name ) . map ( new func1 < service_response < secret_bundle > , secret_bundle > ( ) { n override n public secret_bundle call ( service_response < secret_bundle > response ) { n return response . body ( ) n } n } ) n }	1
Q_193	recover the delete secret to the late version	C_193_1	protected void install_loose_config_war ( maven_project proj , loose_config_data config ) throws exception { n / / return error if webapp contains java source but it is not compiled yet . n file dir = new file ( proj . get_build ( ) . get_output_directory ( ) ) n if ( dir . exists ( ) contains_java_source ( proj ) ) { n throw new mojo_execution_exception ( n message_format . format ( messages . get_string ( codstr ) , proj . get_id ( ) ) ) n } n n loose_war_application loose_war = new loose_war_application ( proj , config ) n loose_war . add_source_dir ( proj ) n loose_war . add_output_dir ( loose_war . get_document_root ( ) , new file ( proj . get_build ( ) . get_output_directory ( ) ) , n codstr ) n n / / retrieves dependent library jar files n add_embedded_lib ( loose_war . get_document_root ( ) , proj , loose_war , codstr ) n n / / add manifest file n file manifest_file = maven_project_util . get_manifest_file ( proj , codstr ) n loose_war . add_manifest_file ( manifest_file ) n }	0
Q_193	recover the delete secret to the late version	C_193_2	public void run_sync_on_new_thread ( thread new_thread ) { n lock . write_lock ( ) . lock ( ) n try { n if ( this . timeout_task = = null ) { n throw new illegal_state_exception ( tr . format_message ( tc , codstr ) ) n } n stop ( ) n this . stopped = false n n long remaining = check ( ) n runnable timeout_task = ( ) _ > { n new_thread . interrupt ( ) n } n n start ( timeout_task , remaining ) n } finally { n lock . write_lock ( ) . unlock ( ) n } n }	0
Q_194	list the certificate contact for a specify key vault	C_194_0	public observable < contacts > get_certificate_contacts_async ( string vault_base_url ) { n return get_certificate_contacts_with_service_response_async ( vault_base_url ) . map ( new func1 < service_response < contacts > , contacts > ( ) { n override n public contacts call ( service_response < contacts > response ) { n return response . body ( ) n } n } ) n }	1
Q_194	list the certificate contact for a specify key vault	C_194_1	override n public boolean e_is_set ( int feature_id ) n { n switch ( feature_id ) n { n case types_package . jvm_annotation_annotation_value_values n return values = null values . is_empty ( ) n } n return super . e_is_set ( feature_id ) n }	0
Q_194	list the certificate contact for a specify key vault	C_194_2	public static sparse_vector random ( int length , double density , random random ) { n return compressed_vector . random ( length , density , random ) n }	0
Q_195	update a certificate operation	C_195_0	public observable < certificate_operation > update_certificate_operation_async ( string vault_base_url , string certificate_name , boolean cancellation_requested ) { n return update_certificate_operation_with_service_response_async ( vault_base_url , certificate_name , cancellation_requested ) . map ( new func1 < service_response < certificate_operation > , certificate_operation > ( ) { n override n public certificate_operation call ( service_response < certificate_operation > response ) { n return response . body ( ) n } n } ) n }	1
Q_195	update a certificate operation	C_195_1	private alert _construct_warden_alert_for_user ( principal_user user , policy_counter counter ) { n string metric_exp = _construct_warden_metric_expression ( codstr , user , counter ) n alert alert = new alert ( _admin_user , _admin_user , _construct_warden_alert_name ( user , counter ) , metric_exp , codstr ) n list < trigger > triggers = new array_list < > ( ) n entity_manager em = emf . get ( ) n double limit = policy_limit . get_limit_by_user_and_counter ( em , user , counter ) n trigger trigger = new trigger ( alert , counter . get_trigger_type ( ) , codstr + counter . get_trigger_type ( ) . to_string ( ) + codstr , n limit , number , codint ) n n triggers . add ( trigger ) n n list < notification > notifications = new array_list < > ( ) n notification notification = new notification ( notification_name , alert , _get_warden_notifier_class ( counter ) , new array_list < string > ( ) , codint ) n list < string > metric_annotation_list = new array_list < string > ( ) n n string warden_metric_annotation = message_format . format ( codstr { codstr } codstr , counter . warden_triggers . get_scope ( ) , n counter . warden_triggers . get_metric ( ) , user . get_user_name ( ) ) n n metric_annotation_list . add ( warden_metric_annotation ) n notification . set_metrics_to_annotate ( metric_annotation_list ) n notification . set_triggers ( triggers ) n notifications . add ( notification ) n alert .	0
Q_195	update a certificate operation	C_195_2	"override n public void set_parameters ( parameters parameters ) { n final live_query live_query n synchronized ( lock ) { n this . parameters = parameters = null ? parameters . readonly_copy ( ) null n live_query = this . query n } n n / / https / / github . com / couchbase / couchbase _ lite _ android / issues / codint n / / shouldn "" t call start ( ) method inside the lock to prevent deadlock n if ( live_query = null ) { live_query . start ( ) } n }"	0
Q_196	sign marketplace term	C_196_0	public service_future < agreement_terms_inner > sign_async ( string publisher_id , string offer_id , string plan_id , final service_callback < agreement_terms_inner > service_callback ) { n return service_future . from_response ( sign_with_service_response_async ( publisher_id , offer_id , plan_id ) , service_callback ) n }	1
Q_196	sign marketplace term	C_196_1	public static mutable_long_tuple reversed ( mutable_long_tuple t ) n { n objects . require_non_null ( t , codstr ) n return new abstract_mutable_long_tuple ( ) n { n override n public int get_size ( ) n { n return t . get_size ( ) n } n n override n public long get ( int index ) n { n return t . get ( t . get_size ( ) _ codint _ index ) n } n n override n public void set ( int index , long value ) n { n t . set ( t . get_size ( ) _ codint _ index , value ) n } n } n }	0
Q_196	sign marketplace term	C_196_2	beta_api n public final operation insert_instance_template ( n project_name project , instance_template instance_template_resource ) { n n insert_instance_template_http_request request = n insert_instance_template_http_request . new_builder ( ) n . set_project ( project = = null ? null project . to_string ( ) ) n . set_instance_template_resource ( instance_template_resource ) n . build ( ) n return insert_instance_template ( request ) n }	0
Q_197	move an app service environment to a different vnet	C_197_0	public observable < page < site_inner change_vnet_next_async ( final string next_page_link ) { n return change_vnet_next_with_service_response_async ( next_page_link ) n . map ( new func1 < service_response < page < site_inner , page < site_inner ( ) { n override n public page < site_inner > call ( service_response < page < site_inner response ) { n return response . body ( ) n } n } ) n }	1
Q_197	move an app service environment to a different vnet	C_197_1	public static list < list < css_selector parse ( final string query ) { n string [ ] single_queries = string_util . splitc ( query , codstr ) n list < list < css_selector selectors = new array_list < > ( single_queries . length ) n n for ( string single_query single_queries ) { n selectors . add ( new cs_selly ( single_query ) . parse ( ) ) n } n n return selectors n }	0
Q_197	move an app service environment to a different vnet	C_197_2	public file get_standalone_profile_configuration_directory ( ) { n val file = environment . get_property ( codstr , file . class ) n if ( file = null file . exists ( ) ) { n logger . trace ( codstr , file ) n return file n } n n return arrays . stream ( default_cas_config_directories ) n . filter ( file exists ) n . find_first ( ) n . or_else ( null ) n }	0
Q_198	set the time at which the resource be last modify	C_198_0	public pool_get_all_lifetime_statistics_headers with_last_modified ( date_time last_modified ) { n if ( last_modified = = null ) { n this . last_modified = null n } else { n this . last_modified = new date_time_rfc1123 ( last_modified ) n } n return this n }	1
Q_198	set the time at which the resource be last modify	C_198_1	private static collection < string > list_package_resources ( url package_url , string package_path , string file_names_pattern ) n { n if ( codstr . equals ( package_url . get_protocol ( ) ) ) { n filtered_strings resources = new filtered_strings ( file_names_pattern ) n try { n if ( package_path . is_empty ( ) ) { n package_path + = codstr n } n resources . add_all ( package_path , new file ( package_url . to_uri ( ) ) . list ( ) ) n } n catch ( uri_syntax_exception e ) { n throw new bug_error ( codstr , package_url ) n } n return resources n } n n if ( package_url . to_external_form ( ) . starts_with ( codstr ) ) { n string path = package_url . get_path ( ) n string jar_path = path . substring ( codint , path . index_of ( codstr ) ) n n jar_file jar = null n try { n jar = new jar_file ( jar_path ) n n filtered_strings resources = new filtered_strings ( file_names_pattern ) n assert jar = null n enumeration < jar_entry > entries = jar . entries ( ) n while ( entries . has_more_elements ( ) ) { n resources . add ( entries . next_element ( ) . get_name ( ) ) n } n return resources n } n catch ( io_exception e ) { n / / we are here for not well formed archive or file reading errors	0
Q_198	set the time at which the resource be last modify	C_198_2	static boolean is_include_value ( event_filter filter ) { n / / the order of the following ifs is important n / / query_event_filter is instance of entry_event_filter n if ( filter instanceof event_listener_filter ) { n filter = ( ( event_listener_filter ) filter ) . get_event_filter ( ) n } n if ( filter instanceof true_event_filter ) { n return true n } n if ( filter instanceof query_event_filter ) { n return ( ( query_event_filter ) filter ) . is_include_value ( ) n } n if ( filter instanceof entry_event_filter ) { n return ( ( entry_event_filter ) filter ) . is_include_value ( ) n } n throw new illegal_argument_exception ( codstr + filter . get_class ( ) . get_canonical_name ( ) + codstr ) n }	0
Q_199	get file information	C_199_0	public project_file_inner get ( string group_name , string service_name , string project_name , string file_name ) { n return get_with_service_response_async ( group_name , service_name , project_name , file_name ) . to_blocking ( ) . single ( ) . body ( ) n }	1
Q_199	get file information	C_199_1	public void get_wv_w_match_stat ( int world_id , callback < wv_w_match_stat > callback ) throws null_pointer_exception { n gw2_api . get_wv_w_match_stat_using_world ( integer . to_string ( world_id ) ) . enqueue ( callback ) n }	0
Q_199	get file information	C_199_2	public synchronized map < string , ml_array > read ( input_stream stream ) throws io_exception n { n return read ( stream , new mat_file_filter ( ) ) n }	0
Q_200	construct an future_t from an any_m that wrap a monad contain future	C_200_0	public static < w extends witness_type < w > , t , r > reader_t < w , t , r > of ( final any_m < w , reader < t , r monads ) { n return new reader_t < > ( n monads ) n }	1
Q_200	construct an future_t from an any_m that wrap a monad contain future	C_200_1	public byte [ ] sign ( key_store_chooser key_store_chooser , private_key_chooser_by_alias private_key_chooser_by_alias , byte [ ] message ) { n signer signer = cache . get ( cache_key ( key_store_chooser , private_key_chooser_by_alias ) ) n n if ( signer = null ) { n return signer . sign ( message ) n } n n signer_impl signer_impl = new signer_impl ( ) n signer_impl . set_algorithm ( algorithm ) n signer_impl . set_provider ( provider ) n private_key private_key = private_key_registry_by_alias . get ( key_store_chooser , private_key_chooser_by_alias ) n n if ( private_key = = null ) { n throw new signature_exception ( codstr n + key_store_chooser . get_key_store_name ( ) + codstr + private_key_chooser_by_alias . get_alias ( ) ) n } n n signer_impl . set_private_key ( private_key ) n cache . put ( cache_key ( key_store_chooser , private_key_chooser_by_alias ) , signer_impl ) n return signer_impl . sign ( message ) n }	0
Q_200	construct an future_t from an any_m that wrap a monad contain future	C_200_2	public void set_value ( char [ ] chars , int offset , int len ) { n check_not_null ( chars ) n if ( offset < codint len < codint offset > chars . length _ len ) { n throw new index_out_of_bounds_exception ( ) n } n n ensure_size ( len ) n system . arraycopy ( chars , offset , this . value , codint , len ) n this . len = len n this . hash_code = codint n }	0
Q_201	select the first mono to complete	C_201_0	public static < t > mono < t > any_of ( mono < t > . fts ) { n return mono . from ( future . any_of ( futures ( fts ) ) ) n n }	1
Q_201	select the first mono to complete	C_201_1	public float get ( layout . axis axis ) { n switch ( axis ) { n case x n return x n case y n return y n case z n return z n default n throw new runtime_assertion ( codstr , axis ) n } n }	0
Q_201	select the first mono to complete	C_201_2	"public static double user_true_distance_from_step ( point users_raw_location , leg_step step ) { n / / check that the leg step contains geometry . n if ( text_utils . is_empty ( step . geometry ( ) ) ) { n return codint n } n n / / get the line_string from the step geometry . n line_string line_string = line_string . from_polyline ( step . geometry ( ) , constants . precision_6 ) n n / / make sure that the step coordinates isn "" t less than size codint . if the points equal each other , n / / the distance is obviously zero , so return codint to avoid executing additional unnecessary code . n if ( line_string . coordinates ( ) . is_empty ( ) n users_raw_location . equals ( line_string . coordinates ( ) . get ( codint ) ) ) { n return codint n } n if ( line_string . coordinates ( ) . size ( ) = = codint ) { n return turf_measurement . distance ( users_raw_location , line_string . coordinates ( ) . get ( codint ) , n unit_meters ) n } n n feature feature = turf_misc . nearest_point_on_line ( users_raw_location , line_string . coordinates ( ) ) n point snapped_point = ( point ) feature . geometry ( ) n n if ( snapped_point = = null ) { n return codint n } n if ( double . is_infinite ( snapped_point . latitude ( )"	0
Q_202	parse the command line argument	C_202_0	protected void parse_arguments ( string [ ] arguments ) { n linked_list < string > args = new linked_list < string > ( arrays . as_list ( arguments ) ) n n boolean valid = true n while ( args . is_empty ( ) ) { n string arg = args . remove_first ( ) n n boolean handled = false n for ( option option options ) { n if ( option . process_option ( arg , args ) ) { n handled = true n break n } n } n if ( handled ) { n system . out . println ( codstr + arg ) n system . out . println ( ) n valid = false n break n } n } n if ( valid ) { n show_options ( ) n completed ( ) n } n }	1
Q_202	parse the command line argument	C_202_1	private void notify_on_validation_failure ( non_null final validator < char_sequence > validator ) { n for ( validation_listener < char_sequence > validation_listener validation_listeners ) { n validation_listener . on_validation_failure ( this , validator ) n } n }	0
Q_202	parse the command line argument	C_202_2	public static < t extends named_element > element_matcher . junction < t > name_starts_with ( string prefix ) { n return new name_matcher < t > ( new string_matcher ( prefix , string_matcher . mode . starts_with ) ) n }	0
Q_203	create an uploader from it fully qualify class name	C_203_0	public static uploader create_uploader ( string class_name ) throws exception { n class < ? > clazz = class . for_name ( class_name ) n if ( uploader . class . is_assignable_from ( clazz ) ) { n throw new illegal_argument_exception ( string . format ( codstr s codstr s codstr , n class_name , uploader . class . get_name ( ) ) ) n } n n return ( uploader ) clazz . new_instance ( ) n }	1
Q_203	create an uploader from it fully qualify class name	C_203_1	public static void purge_cache ( configuration conf , n mr_async_disk_service service ) throws io_exception { n synchronized ( cached_archives ) { n local_file_system local_fs = file_system . get_local ( conf ) n for ( map . entry < string , cache_status > f cached_archives . entry_set ( ) ) { n try { n delete_local_path ( service , local_fs , f . get_value ( ) . localized_load_path ) n } catch ( io_exception ie ) { n log . debug ( codstr , ie ) n } n } n cached_archives . clear ( ) n } n }	0
Q_203	create an uploader from it fully qualify class name	C_203_2	protected message_channel get_destination_channel ( test_context context ) { n if ( endpoint_configuration . get_channel ( ) = null ) { n return endpoint_configuration . get_channel ( ) n } else if ( string_utils . has_text ( endpoint_configuration . get_channel_name ( ) ) ) { n return resolve_channel_name ( endpoint_configuration . get_channel_name ( ) , context ) n } else { n throw new citrus_runtime_exception ( codstr + n codstr ) n } n }	0
Q_204	change the end time of the entry interval	C_204_0	public final void change_end_time ( local_time time , boolean keep_duration ) { n require_non_null ( time ) n n interval interval = get_interval ( ) n n local_date_time new_end_date_time = get_end_as_local_date_time ( ) . with ( time ) n local_date_time start_date_time = get_start_as_local_date_time ( ) n n if ( keep_duration ) { n start_date_time = new_end_date_time . minus ( get_duration ( ) ) n set_interval ( start_date_time , new_end_date_time , get_zone_id ( ) ) n } else { n / * n * we might have a problem if the new end time is before the current start time . n * / n if ( new_end_date_time . is_before ( start_date_time . plus ( get_minimum_duration ( ) ) ) ) { n interval = interval . with_start_date_time ( new_end_date_time . minus ( get_minimum_duration ( ) ) ) n } n n set_interval ( interval . with_end_time ( time ) ) n } n }	1
Q_204	change the end time of the entry interval	C_204_1	public static < t > t with_writer ( file file , closure_params ( value = simple_type . class , options = codstr ) closure < t > closure ) throws io_exception { n return io_groovy_methods . with_writer ( new_writer ( file ) , closure ) n }	0
Q_204	change the end time of the entry interval	C_204_2	public void set_headers ( map < string , string > map ) { n headers = new metadata_map < string , string > ( ) n for ( map . entry < string , string > entry map . entry_set ( ) ) { n string [ ] values = entry . get_value ( ) . split ( codstr ) n for ( string v values ) { n if ( v . length ( ) = codint ) { n headers . add ( entry . get_key ( ) , v ) n } n } n } n }	0
Q_205	create a shadow_compat_operation to draw compatibility shadow under the matrix transform for	C_205_0	"shadow_compat_operation create_shadow_compat_operation ( final matrix transform ) { n / / if the shadow_compat_operations don "" t end on the desired end_shadow_angle , add an arc to do so . n add_connecting_shadow_if_necessary ( end_shadow_angle ) n final list < shadow_compat_operation > operations = new array_list < > ( shadow_compat_operations ) n return new shadow_compat_operation ( ) { n override n public void draw ( n matrix matrix , shadow_renderer shadow_renderer , int shadow_elevation , canvas canvas ) { n for ( shadow_compat_operation op operations ) { n op . draw ( transform , shadow_renderer , shadow_elevation , canvas ) n } n } n } n }"	1
Q_205	create a shadow_compat_operation to draw compatibility shadow under the matrix transform for	C_205_1	void set_field ( int accessor , object value ) { n try { n jmf_part . set_value ( accessor , value ) n } catch ( jmf_exception e ) { n ffdc_filter . process_exception ( e , codstr , codstr , this ) n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) sib_tr . debug ( this , tc , codstr + e ) n } n }	0
Q_205	create a shadow_compat_operation to draw compatibility shadow under the matrix transform for	C_205_2	public static long calculate_offset_in_ms ( int interval_in_minutes , int offset_in_minutes ) { n while ( offset_in_minutes < codint ) { n offset_in_minutes = interval_in_minutes + offset_in_minutes n } n while ( offset_in_minutes > interval_in_minutes ) { n offset_in_minutes _ = interval_in_minutes n } n return offset_in_minutes * minute_in_ms n }	0
Q_206	compute target value that be dependent on bound	C_206_0	private void compute_bounded_target_values ( ) { n m_target_x = ( m_clamped_starting_x _ m_bounds . exact_center_x ( ) ) * . codreal n m_target_y = ( m_clamped_starting_y _ m_bounds . exact_center_y ( ) ) * . codreal n m_target_radius = m_bounded_radius n }	1
Q_206	compute target value that be dependent on bound	C_206_1	protected static url build_url ( url sonar_url , query query ) throws malformed_url_exception , illegal_argument_exception { n if ( query . get_sonar_key ( ) = = null query . get_sonar_key ( ) . length ( ) = = codint ) { n throw new illegal_argument_exception ( codstr ) n } n string sonar_path_with_resource = string . format ( sonar_format_path , query . get_sonar_key ( ) ) n return new url ( sonar_url , sonar_path_with_resource ) n }	0
Q_206	compute target value that be dependent on bound	C_206_2	upload_task get_task ( intent intent ) { n string task_class = intent . get_string_extra ( param_task_class ) n n if ( task_class = = null ) { n return null n } n n upload_task upload_task = null n n try { n class < ? > task = class . for_name ( task_class ) n n if ( upload_task . class . is_assignable_from ( task ) ) { n upload_task = upload_task . class . cast ( task . new_instance ( ) ) n upload_task . init ( this , intent ) n } else { n logger . error ( tag , task_class + codstr ) n } n n logger . debug ( tag , codstr + task_class ) n n } catch ( exception exc ) { n logger . error ( tag , codstr , exc ) n } n n return upload_task n }	0
Q_207	look up the image which be close specify sigma	C_207_0	public image_scale lookup ( double sigma ) { n image_scale best = null n double best_value = double . max_value n n for ( int i = codint i < used_scales . size ( ) i + + ) { n image_scale image = used_scales . get ( i ) n double difference = math . abs ( sigma _ image . sigma ) n if ( difference < best_value ) { n best_value = difference n best = image n } n } n return best n }	1
Q_207	look up the image which be close specify sigma	C_207_1	suppress_warnings ( codstr ) n public static < t extends element > t element ( class < t > type , locator locator ) { n if ( type . is_interface ( ) ) { n throw new illegal_argument_exception ( codstr + type ) n } n n invocation_handler invocation_handler = new element_handler ( type , locator ) n n return ( t ) proxy . new_proxy_instance ( elements . class . get_class_loader ( ) , n new class [ ] { type , has_element_context . class , wraps_element . class } , n invocation_handler ) n }	0
Q_207	look up the image which be close specify sigma	C_207_2	public void on_save_filter ( address_template address , string name , map changeset ) { n operation_delegate . on_save_resource ( address , name , changeset , default_save_op_callbacks ) n }	0
Q_208	compute the min_max value for each block in the image	C_208_0	protected void compute_statistics ( t input , int inner_width , int inner_height ) { n original . init ( block_width , block_height , threshold_from_local_blocks ) n n int stat_pixel_stride = stats . get_image_type ( ) . get_num_bands ( ) n n int index_stats = codint n for ( int y = codint y < inner_height y + = block_height ) { n for ( int x = codint x < inner_width x + = block_width , index_stats + = stat_pixel_stride ) { n original . compute_block_statistics ( x , y , block_width , block_height , index_stats , input , stats ) n } n / / handle the case where the image codstr t evenly divisible by the block codstr s height isn codstr s height n if ( inner_height = input . height ) { n int y = inner_height n int block_height = input . height _ inner_height n for ( int x = codint x < inner_width x + = block_width , index_stats + = stat_pixel_stride ) { n original . compute_block_statistics ( x , y , block_width , block_height , index_stats , input , stats ) n } n if ( inner_width = input . width ) { n original . compute_block_statistics ( inner_width , y , input . width _ inner_width , block_height , index_stats , input , stats ) n } n } n }	1
Q_208	compute the min_max value for each block in the image	C_208_1	private void index_domains ( ) throws io_exception { n domains_file_lock . write_lock ( ) . lock ( ) n logger . trace ( codstr ) n try { n if ( all_domains = = null ) { n ensure_domains_file_installed ( ) n } n n / / leave enough space for all pd_bs as of codint n domain_map = new hash_map < string , list < ecod_domain ( ( int ) ( codint / . codint ) , . codreal ) n n / / index with domain_map n for ( ecod_domain d all_domains ) { n / / get the pdb id , either directly or from the domain id n string pdb_id = d . get_pdb_id ( ) n if ( pdb_id = = null ) { n string ecod_id = d . get_domain_id ( ) n if ( ecod_id = null ecod_id . is_empty ( ) ) { n matcher match = ecod_re . matcher ( ecod_id ) n pdb_id = match . group ( codint ) n } n } n n / / add current domain to the map n list < ecod_domain > curr_domains n if ( domain_map . contains_key ( pdb_id ) ) { n curr_domains = domain_map . get ( pdb_id ) n } else { n curr_domains = new linked_list < ecod_domain > ( ) n domain_map . put ( pdb_id , curr_domains ) n } n curr_domains . add ( d ) n } n } finally { n	0
Q_208	compute the min_max value for each block in the image	C_208_2	many_to_one ( target_entity = org . openprovenance . prov . sql . qualified_name . class , cascade = { n cascade_type . all n } ) n join_column ( name = codstr ) n public org . openprovenance . prov . model . qualified_name get_plan ( ) { n return plan n }	0
Q_209	get outside corner polygon around the grid	C_209_0	public void bounding_polygon_ccw ( square_grid grid , polygon2_d_f64 bounding ) { n int w = grid . columns n int h = grid . rows n n if ( w = = codint h = = codint ) { n square_node n = grid . get ( codint , codint ) n bounding . get ( codint ) . set ( n . square . get ( codint ) ) n bounding . get ( codint ) . set ( n . square . get ( codint ) ) n bounding . get ( codint ) . set ( n . square . get ( codint ) ) n bounding . get ( codint ) . set ( n . square . get ( codint ) ) n } else if ( w = = codint ) { n order_node ( grid . get ( codint , codint ) , grid . get ( h _ codint , codint ) , false ) n bounding . get ( codint ) . set ( ordered [ codint ] ) n bounding . get ( codint ) . set ( ordered [ codint ] ) n order_node ( grid . get ( h _ codint , codint ) , grid . get ( codint , codint ) , false ) n bounding . get ( codint ) . set ( ordered [ codint ] ) n bounding . get ( codint ) . set ( ordered [ codint ] ) n	1
Q_209	get outside corner polygon around the grid	C_209_1	public predictor month ( int nyear , month . months ) n { n object [ ] arr = new object [ months . length + codint ] n arr [ codint ] = nyear n int index = codint n for ( month m months ) n { n arr [ index + + ] = double . value_of ( m . get_value ( ) ) n } n input . add ( new command_line < > ( month , codint , arr ) ) n return this n }	0
Q_209	get outside corner polygon around the grid	C_209_2	xml_element_decl ( namespace = codstr , name = codstr , scope = get_object . class ) n public jaxb_element < boolean > create_get_object_include_acl ( boolean value ) { n return new jaxb_element < boolean > ( n _get_object_of_latest_version_include_acl_qname , boolean . class , n get_object . class , value ) n }	0
Q_210	specify transform from pixel to normalize image coordinate	C_210_0	public void set_lens_distortion ( point2_transform2_f64 pixel_to_norm , point2_transform2_f64 undist_to_dist ) { n if ( pixel_to_norm = = null ) { n this . pixel_to_norm = new do_nothing2_transform2_f64 ( ) n this . undist_to_dist = new do_nothing2_transform2_f64 ( ) n } else { n this . pixel_to_norm = pixel_to_norm n this . undist_to_dist = undist_to_dist n } n }	1
Q_210	specify transform from pixel to normalize image coordinate	C_210_1	private sheet import_file ( string path , string file , string content_type , string sheet_name , integer header_row_index , n integer primary_row_index ) throws smartsheet_exception { n util . throw_if_null ( path , file , content_type ) n util . throw_if_empty ( path , file , content_type ) n n file f = new file ( file ) n hash_map < string , object > parameters = new hash_map ( ) n if ( sheet_name = = null ) { n sheet_name = f . get_name ( ) n } n parameters . put ( codstr , sheet_name ) n parameters . put ( codstr , header_row_index ) n parameters . put ( codstr , primary_row_index ) n path = query_util . generate_url ( path , parameters ) n http_request request = create_http_request ( this . smartsheet . get_base_uri ( ) . resolve ( path ) , http_method . post ) n request . get_headers ( ) . put ( codstr , codstr ) n request . get_headers ( ) . put ( codstr , content_type ) n n input_stream is = null n try { n is = new file_input_stream ( f ) n } catch ( file_not_found_exception e ) { n throw new smartsheet_exception ( e ) n } n n http_entity entity = new http_entity ( ) n entity . set_content_type ( content_type ) n entity . set_content ( is ) n entity . set_content_length ( f . length ( ) ) n request . set_entity	0
Q_210	specify transform from pixel to normalize image coordinate	C_210_2	public void add ( pattern p ) n { n if ( has_label ( p . get_label ( codint ) ) ) throw new illegal_argument_exception ( codstr + n codstr codstr codstr ) n n for ( mapped_const mc p . get_constraints ( ) ) n { n add ( mc . get_constr ( ) , p . convert_inds_to_labels ( mc . get_inds ( ) ) ) n } n }	0
Q_211	copy all the point in the set into the specify list	C_211_0	public void get_set ( int which , fast_queue < point2_d_i32 > list ) { n list . reset ( ) n n block_index_length set = sets . get ( which ) n n for ( int i = codint i < set . length i + + ) { n int index = set . start + i * codint n int block_index = set . block + index / block_length n index = block_length n n int block [ ] = blocks . get ( block_index ) n list . grow ( ) . set ( block [ index ] , block [ index + codint ] ) n } n }	1
Q_211	copy all the point in the set into the specify list	C_211_1	static void export ( string path , db_conn cnx ) throws jqm_xml_exception n { n if ( cnx = = null ) n { n throw new illegal_argument_exception ( codstr ) n } n export ( path , job_def . select ( cnx , codstr ) , cnx ) n }	0
Q_211	copy all the point in the set into the specify list	C_211_2	public void init ( servlet_config config , servlet_context context , string logic_pkg ) n { n / / keep this around for later n _context = context n n / / stick ourselves into an application attribute so that we can be accessed by velocity n / / plugins n velocity . set_application_attribute ( velocity_attr_key , this ) n n / / let the derived application do pre _ init stuff n will_init ( config ) n n / / remove any trailing dot n if ( logic_pkg . ends_with ( codstr ) ) { n _logic_pkg = logic_pkg . substring ( codint , logic_pkg . length ( ) _ codint ) n } else { n _logic_pkg = logic_pkg n } n n / / create our site identifier n _site_ident = create_site_identifier ( _context ) n n / / create a site resource loader if the user set up the site _ specific jar file path n string site_jar_path = get_init_parameter ( config , site_jar_path_key ) n if ( string_util . is_blank ( site_jar_path ) ) { n _site_loader = new site_resource_loader ( _site_ident , site_jar_path ) n } n n / / instantiate our message manager if the application wants one n string bundle_path = get_init_parameter ( config , message_bundle_path_key ) n if ( string_util . is_blank ( bundle_path ) ) { n _msgmgr = create_message_manager ( bundle_path ) n } n n / / if we have a site _ specific resource loader , configure	0
Q_212	send client request	C_212_0	protected void send_client_request ( http_message request ) { n builder_support < http_action_builder > action = builder _ > { n http_client_action_builder . http_client_send_action_builder send_builder = builder . client ( http_client ) . send ( ) n http_client_request_action_builder request_builder n n if ( request . get_request_method ( ) = = null request . get_request_method ( ) . equals ( http_method . post ) ) { n request_builder = send_builder . post ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals ( http_method . get ) ) { n request_builder = send_builder . get ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals ( http_method . put ) ) { n request_builder = send_builder . put ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals ( http_method . delete ) ) { n request_builder = send_builder . delete ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals ( http_method . head ) ) { n request_builder = send_builder . head ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals ( http_method . trace ) ) { n request_builder = send_builder . trace ( ) . message ( request ) n } else if ( request . get_request_method ( ) . equals	1
Q_212	send client request	C_212_1	private boolean insert_history_principals ( cms_setup_db db_con ) throws sql_exception { n n system . out . println ( new exception ( ) . get_stack_trace ( ) [ codint ] . to_string ( ) ) n n create_hist_principals_table ( db_con ) n n boolean update_user_date_deleted = false n if ( is_keep_history ( ) has_data ( db_con ) ) { n db_con . update_sql_statement ( read_query ( query_history_principals_resources ) , null , null ) n db_con . update_sql_statement ( read_query ( query_history_principals_projects_groups ) , null , null ) n db_con . update_sql_statement ( read_query ( query_history_principals_projects_managergroups ) , null , null ) n db_con . update_sql_statement ( read_query ( query_history_principals_projects_published ) , null , null ) n db_con . update_sql_statement ( read_query ( query_history_principals_projects_users ) , null , null ) n update_user_date_deleted = true / / update the colum user_dateteleted n } n n return update_user_date_deleted n }	0
Q_212	send client request	C_212_2	public static double copy_sign ( double magnitude , double sign ) { n long m = double . double_to_long_bits ( magnitude ) n long s = double . double_to_long_bits ( sign ) n if ( ( m > = codint s > = codint ) ( m < codint s < codint ) ) { / / sign is currently ok n return magnitude n } n return _ magnitude / / flip sign n }	0
Q_213	extract cookie param from cookie string as it be provide by tagstr header	C_213_0	private string get_cookie_param ( string param , string cookie_string ) { n if ( param . equals ( name ) ) { n return cookie_string . substring ( codint , cookie_string . index_of ( codstr ) ) n } n n if ( param . equals ( value ) ) { n if ( cookie_string . contains ( codstr ) ) { n return cookie_string . substring ( cookie_string . index_of ( codstr ) + codint , cookie_string . index_of ( codstr ) ) n } else { n return cookie_string . substring ( cookie_string . index_of ( codstr ) + codint ) n } n } n n if ( contains_flag ( secure , param , cookie_string ) contains_flag ( http_only , param , cookie_string ) ) { n return string . value_of ( true ) n } n n if ( cookie_string . contains ( param + codstr ) ) { n final int end_param = cookie_string . index_of ( codstr , cookie_string . index_of ( param + codstr ) ) n final int begin_index = cookie_string . index_of ( param + codstr ) + param . length ( ) + codint n if ( end_param > codint ) { n return cookie_string . substring ( begin_index , end_param ) n } else { n return cookie_string . substring ( begin_index ) n } n } n n throw new citrus_runtime_exception ( string . format ( n codstr s codstr , param , cookie_string ) ) n }	1
Q_213	extract cookie param from cookie string as it be provide by tagstr header	C_213_1	void clear_privileges ( ) { n n roles . clear ( ) n direct_rights_map . clear ( ) n granted_rights_map . clear ( ) n full_rights_map . clear ( ) n n is_admin = false n }	0
Q_213	extract cookie param from cookie string as it be provide by tagstr header	C_213_2	public java . awt . image create_awt_image ( color foreground , color background ) { n if ( image = = null ) n return null n int f = foreground . get_rgb ( ) n int g = background . get_rgb ( ) n canvas canvas = new canvas ( ) n n int w = width + codint * ws n int h = height + codint * ws n int pix [ ] = new int [ w * h ] n int stride = ( w + codint ) / codint n int ptr = codint n for ( int k = codint k < h + + k ) { n int p = k * stride n for ( int j = codint j < w + + j ) { n int b = image [ p + ( j / codint ) ] codint n b < < = j codint n pix [ ptr + + ] = ( b codint ) = = codint ? g f n } n } n java . awt . image img = canvas . create_image ( new memory_image_source ( w , h , pix , codint , w ) ) n return img n }	0
Q_214	add new message creator pojo instance from type	C_214_0	public void add_type ( string type ) { n try { n message_creators . add ( class . for_name ( type ) . new_instance ( ) ) n } catch ( class_not_found_exception illegal_access_exception e ) { n throw new citrus_runtime_exception ( codstr + type , e ) n } catch ( instantiation_exception e ) { n throw new citrus_runtime_exception ( codstr + type , e ) n } n }	1
Q_214	add new message creator pojo instance from type	C_214_1	public static http_client_connection_manager wrap n ( http_client_connection_manager orig ) { n if ( orig instanceof wrapped ) n throw new illegal_argument_exception ( ) n final class < ? > [ ] interfaces n if ( orig instanceof conn_pool_control ) { n interfaces = new class < ? > [ ] { n http_client_connection_manager . class , n conn_pool_control . class , n wrapped . class n } n } else { n interfaces = new class < ? > [ ] { n http_client_connection_manager . class , n wrapped . class n } n } n return ( http_client_connection_manager ) proxy . new_proxy_instance ( n / / https / / github . com / aws / aws _ sdk _ java / pull / codint client_connection_manager_factory . class . get_class_loader ( ) , n interfaces , n new handler ( orig ) ) n }	0
Q_214	add new message creator pojo instance from type	C_214_2	public com . google . api . ads . admanager . axis . v201811 . custom_criteria_set_logical_operator get_logical_operator ( ) { n return logical_operator n }	0
Q_215	cast the name_class_pair to a search_result and pas it attribute to the	C_215_0	public t get_object_from_name_class_pair ( name_class_pair name_class_pair ) { n if ( ( name_class_pair instanceof search_result ) ) { n throw new illegal_argument_exception ( codstr ) n } n n search_result search_result = ( search_result ) name_class_pair n attributes attributes = search_result . get_attributes ( ) n try { n return mapper . map_from_attributes ( attributes ) n } n catch ( javax . naming . naming_exception e ) { n throw ldap_utils . convert_ldap_exception ( e ) n } n }	1
Q_215	cast the name_class_pair to a search_result and pas it attribute to the	C_215_1	public static void same ( object obj1 , object obj2 ) { n same ( obj1 , obj2 , codstr , obj1 , obj2 ) n }	0
Q_215	cast the name_class_pair to a search_result and pas it attribute to the	C_215_2	public void begin ( interpretation_context ec , string name , attributes attributes ) { n / / let us forget about previous errors ( in this instance ) n in_error = false n evaluator = null n n string class_name = attributes . get_value ( class_attribute ) n if ( option_helper . is_empty ( class_name ) ) { n class_name = default_class_name ( ) n add_info ( codstr + class_name + codstr ) n } n n if ( option_helper . is_empty ( class_name ) ) { n class_name = default_class_name ( ) n in_error = true n add_error ( codstr codstr codstr ) n return n } n n string evaluator_name = attributes . get_value ( action . name_attribute ) n if ( option_helper . is_empty ( evaluator_name ) ) { n in_error = true n add_error ( codstr codstr codstr ) n return n } n try { n evaluator = ( event_evaluator < ? > ) option_helper . instantiate_by_class_name ( n class_name , ch . qos . logback . core . boolex . event_evaluator . class , context ) n n evaluator . set_context ( this . context ) n evaluator . set_name ( evaluator_name ) n n ec . push_object ( evaluator ) n add_info ( codstr + evaluator_name n + codstr ) n n } catch ( exception oops ) { n in_error = true n add_error ( codstr + class_name + codstr , oops ) n } n }	0
Q_216	build the html for the give response	C_216_0	protected string build ( response response ) { n string_builder sb = new string_builder ( ) n sb . append ( codstr container codstr ) n sb . append ( codstr row _ fluid codstr ) n sb . append ( codstr span12 codstr ) n sb . append ( build_json_response_box ( response ) ) n if ( response . _status = = response . status . done ) response . to_java ( sb ) n sb . append ( build_response_header ( response ) ) n builder builder = response . get_builder_for ( root_object ) n if ( builder = = null ) { n sb . append ( codstr + name ( ) + codstr ) n builder = object_builder n } n for ( string h response . get_headers ( ) ) sb . append ( h ) n if ( response . _response = = null ) { n boolean done = response . _req . to_html ( sb ) n if ( done ) { n json_parser parser = new json_parser ( ) n string json = new string ( response . _req . write_json ( new auto_buffer ( ) ) . buf ( ) ) n json_object o = ( json_object ) parser . parse ( json ) n sb . append ( builder . build ( response , o , codstr ) ) n } n } else sb . append ( builder . build ( response , response . _response , codstr	1
Q_216	build the html for the give response	C_216_1	public void close ( ) { n for ( iterator < archive > i = archives . values ( ) . iterator ( ) i . has_next ( ) ) { n archive a = i . next ( ) n i . remove ( ) n try { n a . close ( ) n } catch ( io_exception e ) { n } n } n }	0
Q_216	build the html for the give response	C_216_2	public void release ( ) { n if ( m_egl_display = egl14 . egl_no_display ) { n / / android is unusual in that it uses a reference _ counted egl_display . so for n / / every egl_initialize ( ) we need an egl_terminate ( ) . n egl14 . egl_make_current ( m_egl_display , egl14 . egl_no_surface , egl14 . egl_no_surface , egl14 . egl_no_context ) n egl14 . egl_destroy_context ( m_egl_display , m_egl_context ) n egl14 . egl_release_thread ( ) n egl14 . egl_terminate ( m_egl_display ) n } n n m_egl_display = egl14 . egl_no_display n m_egl_context = egl14 . egl_no_context n m_egl_config = null n }	0
Q_217	get next data byte with length encode prefix	C_217_0	public byte [ ] get_length_encoded_bytes ( ) { n int type = this . buf [ this . position + + ] codint n int length n switch ( type ) { n case codint n return null n case codint n length = codint read_short ( ) n break n case codint n length = codint read24bitword ( ) n break n case codint n length = ( int ) ( ( buf [ position + + ] codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) n + ( ( long ) ( buf [ position + + ] codint ) < < codint ) ) n break n default n length = type n break n } n n byte [ ] tmp_buf = new byte [ length ] n system . arraycopy ( buf , position , tmp_buf	1
Q_217	get next data byte with length encode prefix	C_217_1	public map < string , integer > get_java_script_config ( ) { n / / for now this is a simple mapping from { test_name to bucket_value } n final map < string , integer > groups = maps . new_hash_map_with_expected_size ( proctor_result . get_buckets ( ) . size ( ) ) n for ( final entry < string , test_bucket > entry proctor_result . get_buckets ( ) . entry_set ( ) ) { n final string test_name = entry . get_key ( ) n final test_bucket test_bucket = entry . get_value ( ) n / / mirrors append_test_groups method by skipping * inactive * tests n if ( test_bucket . get_value ( ) < codint ) { n continue n } n groups . put ( test_name , test_bucket . get_value ( ) ) n } n return groups n }	0
Q_217	get next data byte with length encode prefix	C_217_2	private string right_aligned_zero ( string s , int len ) n { n if ( len = = s . length ( ) ) return s n n string_buffer sb = new string_buffer ( s ) n n while ( sb . length ( ) < len ) n { n sb . insert ( codint , codstr ) n } n n return sb . to_string ( ) n }	0
Q_218	start the new render cycle update all mount	C_218_0	public static void render ( ) { n / / if anvil . render ( ) is called on a non _ ui thread , use ui handler n if ( looper . my_looper ( ) = looper . get_main_looper ( ) ) { n synchronized ( anvil . class ) { n if ( anvil_ui_handler = = null ) { n anvil_ui_handler = new handler ( looper . get_main_looper ( ) ) n } n } n anvil_ui_handler . remove_callbacks_and_messages ( null ) n anvil_ui_handler . post ( anvil_render_runnable ) n return n } n set < mount > set = new hash_set < > ( ) n set . add_all ( mounts . values ( ) ) n for ( mount m set ) { n render ( m ) n } n }	1
Q_218	start the new render cycle update all mount	C_218_1	public static string default_device_for_thread ( ) { n integer device_for_thread = nd4j . get_affinity_manager ( ) . get_device_for_thread ( thread . current_thread ( ) ) n string device_name = null n / / gpu n if ( nd4j . get_backend ( ) . get_class ( ) . get_name ( ) . contains ( codstr ) ) { n device_name = codstr + device_for_thread n } n else { n device_name = codstr + device_for_thread n } n n n return device_name n }	0
Q_218	start the new render cycle update all mount	C_218_2	public static string product_info ( file install_directory , string action ) throws plugin_execution_exception { n process pr = null n input_stream is = null n scanner s = null n worker worker = null n try { n string command n if ( os_util . is_windows ( ) ) { n command = install_directory + codstr + action n } else { n command = install_directory + codstr + action n } n pr = runtime . get_runtime ( ) . exec ( command ) n worker = new worker ( pr ) n worker . start ( ) n worker . join ( codint ) n if ( worker . exit = = null ) { n throw new plugin_execution_exception ( codstr ) n } n int exit_value = pr . exit_value ( ) n if ( exit_value = codint ) { n throw new plugin_execution_exception ( codstr + exit_value ) n } n n is = pr . get_input_stream ( ) n s = new scanner ( is ) n / / use regex to match the beginning of the input n s . use_delimiter ( codstr ) n if ( s . has_next ( ) ) { n return s . next ( ) n } n return null n } catch ( io_exception ex ) { n throw new plugin_execution_exception ( codstr + ex ) n } catch ( interrupted_exception ex ) { n worker . interrupt ( ) n thread . current_thread ( )	0
Q_219	helper function to translate null _ null_data when call soy_java_print_directives that may	C_219_0	public static soy_value apply_print_directive ( n soy_java_print_directive directive , soy_value value , list < soy_value > args ) { n value = value = = null ? null_data . instance value n for ( int i = codint i < args . size ( ) i + + ) { n if ( args . get ( i ) = = null ) { n args . set ( i , null_data . instance ) n } n } n return directive . apply_for_java ( value , args ) n }	1
Q_219	helper function to translate null _ null_data when call soy_java_print_directives that may	C_219_1	public < r > single_output_stream_operator < r > flat_map ( n co_flat_map_function < in1 , in2 , r > co_flat_mapper ) { n n type_information < r > out_type_info = type_extractor . get_binary_operator_return_type ( n co_flat_mapper , n co_flat_map_function . class , n codint , n codint , n codint , n type_extractor . no_index , n get_type1 ( ) , n get_type2 ( ) , n utils . get_call_location_name ( ) , n true ) n n return transform ( codstr , out_type_info , new co_stream_flat_map < > ( input_stream1 . clean ( co_flat_mapper ) ) ) n }	0
Q_219	helper function to translate null _ null_data when call soy_java_print_directives that may	C_219_2	protected void append_constrained_extends ( n generation_context context , n jvm_generic_type owner , class < ? > default_jvm_type , class < ? extends xtend_type_declaration > default_sarl_type , n list < ? extends jvm_parameterized_type_reference > supertypes ) { n boolean explicit_type = false n final string owner_id = owner . get_identifier ( ) n for ( final jvm_parameterized_type_reference super_type supertypes ) { n string super_type_id n try { n super_type_id = super_type . get_identifier ( ) n } catch ( exception ex ) { n log_internal_error ( ex ) n super_type_id = null n } n if ( objects . equal ( owner_id , super_type_id ) n super_type . get_type ( ) instanceof jvm_generic_type n / * this . inheritance_helper . is_proxy_or_sub_type_of ( super_type , default_jvm_type , default_sarl_type , is_interface ) * / ) { n owner . get_super_types ( ) . add ( this . type_builder . clone_with_proxies ( super_type ) ) n context . increment_serial ( super_type . get_identifier ( ) . hash_code ( ) ) n explicit_type = true n } n } n if ( explicit_type ) { n final jvm_type_reference type = this . _type_reference_builder . type_ref ( default_jvm_type ) n if ( ( type instanceof jvm_unknown_type_reference ) ) { n owner . get_super_types ( ) . add ( type ) n } n context . increment_serial ( type . get_identifier ( ) . hash_code ( ) ) n } n }	0
Q_220	return the c product before and after the current c product in the order set where uuid tagint	C_220_0	override n public c_product [ ] find_by_uuid_prev_and_next ( long c_product_id , string uuid , n order_by_comparator < c_product > order_by_comparator ) n throws no_such_c_product_exception { n c_product c_product = find_by_primary_key ( c_product_id ) n n session session = null n n try { n session = open_session ( ) n n c_product [ ] array = new c_product_impl [ codint ] n n array [ codint ] = get_by_uuid_prev_and_next ( session , c_product , uuid , n order_by_comparator , true ) n n array [ codint ] = c_product n n array [ codint ] = get_by_uuid_prev_and_next ( session , c_product , uuid , n order_by_comparator , false ) n n return array n } n catch ( exception e ) { n throw process_exception ( e ) n } n finally { n close_session ( session ) n } n }	1
Q_220	return the c product before and after the current c product in the order set where uuid tagint	C_220_1	public document get_document ( long document_id ) throws data_access_exception { n try { n db . open_connection ( ) n return this . get_document ( document_id , false ) n } catch ( sql_exception ex ) { n throw new data_access_exception ( codstr + document_id , ex ) n } finally { n db . close_connection ( ) n } n }	0
Q_220	return the c product before and after the current c product in the order set where uuid tagint	C_220_2	synchronized void update ( block_info block_info , int cur_replicas , n int decommissioned_replicas , n int cur_expected_replicas , n int cur_replicas_delta , int expected_replicas_delta ) { n int old_replicas = cur_replicas _ cur_replicas_delta n int old_expected_replicas = cur_expected_replicas _ expected_replicas_delta n int cur_pri = get_priority ( block_info , cur_replicas , decommissioned_replicas , cur_expected_replicas ) n int old_pri = get_priority ( block_info , old_replicas , decommissioned_replicas , old_expected_replicas ) n if ( name_node . state_change_log . is_debug_enabled ( ) ) { n name_node . state_change_log . debug ( codstr + n block_info + n codstr + cur_replicas + n codstr + cur_expected_replicas + n codstr + old_replicas + n codstr + old_expected_replicas + n codstr + cur_pri + n codstr + old_pri ) n } n if ( old_pri = level old_pri = cur_pri ) { n remove ( block_info , old_pri ) n } n if ( cur_pri = level priority_queues . get ( cur_pri ) . add ( block_info ) ) { n if ( name_node . state_change_log . is_debug_enabled ( ) ) { n name_node . state_change_log . debug ( n codstr n + block_info n + codstr + cur_replicas n + codstr + cur_expected_replicas n + codstr n + codstr + cur_pri ) n } n } n }	0
Q_221	update the cp definition option value rel in the database or add it if it do not yet exist	C_221_0	public static com . liferay . commerce . product . model . cp_definition_option_value_rel update_cp_definition_option_value_rel ( n com . liferay . commerce . product . model . cp_definition_option_value_rel cp_definition_option_value_rel ) { n return get_service ( ) n . update_cp_definition_option_value_rel ( cp_definition_option_value_rel ) n }	1
Q_221	update the cp definition option value rel in the database or add it if it do not yet exist	C_221_1	private static consistency_level consistency_for_user ( string username ) n { n if ( username . equals ( default_superuser_name ) ) n return consistency_level . quorum n else n return consistency_level . local_one n }	0
Q_221	update the cp definition option value rel in the database or add it if it do not yet exist	C_221_2	public static list < history > find_history_by_job ( entity_manager em , big_integer job_id , int limit ) { n require_argument ( em = null , codstr ) n require_argument ( job_id = null , codstr ) n require_argument ( limit > codint , codstr ) n n typed_query < history > query = em . create_named_query ( codstr , history . class ) n query . set_max_results ( limit ) n n try { n query . set_parameter ( codstr , job_id ) n return query . get_result_list ( ) n } catch ( no_result_exception ex ) { n return new array_list < history > ( codint ) n } n }	0
Q_222	return the first commerce address in the order set where group_id tagint and class_name_id tagint and class_pk tagint	C_222_0	override n public commerce_address fetch_by_g_c_c_first ( long group_id , long class_name_id , n long class_pk , order_by_comparator < commerce_address > order_by_comparator ) { n list < commerce_address > list = find_by_g_c_c ( group_id , class_name_id , class_pk , n codint , codint , order_by_comparator ) n n if ( list . is_empty ( ) ) { n return list . get ( codint ) n } n n return null n }	1
Q_222	return the first commerce address in the order set where group_id tagint and class_name_id tagint and class_pk tagint	C_222_1	private object on_auto_generator ( entity_metadata m , client < ? > client , object e ) n { n object autogenerator = get_auto_gen_clazz ( client ) n n if ( autogenerator instanceof auto_generator ) n { n n object generated_id = ( ( auto_generator ) autogenerator ) . generate ( client , m . get_id_attribute ( ) . get_java_type ( ) . get_simple_name ( ) ) n try n { n generated_id = property_accessor_helper . from_source_to_target_class ( m . get_id_attribute ( ) . get_java_type ( ) , n generated_id . get_class ( ) , generated_id ) n property_accessor_helper . set_id ( e , m , generated_id ) n return generated_id n } n catch ( illegal_argument_exception iae ) n { n log . error ( codstr + m . get_id_attribute ( ) . get_java_type ( ) ) n throw new kundera_exception ( codstr + m . get_id_attribute ( ) . get_java_type ( ) , iae ) n } n } n throw new illegal_argument_exception ( generation_type . class . get_simple_name ( ) + codstr + generation_type . auto n + codstr + client . get_class ( ) . get_name ( ) ) n }	0
Q_222	return the first commerce address in the order set where group_id tagint and class_name_id tagint and class_pk tagint	C_222_2	"protected closeable_blob_store create_local_fs_blob_store ( pm_context context ) n throws exception { n / * * n * store blob codstr blobs "" ) ) n blob_fs . init ( ) n return new fs_blob_store ( blob_fs ) n }"	0
Q_223	return the commerce ship method with the primary key or return code null code if it could not be find	C_223_0	override n public commerce_shipping_method fetch_by_primary_key ( serializable primary_key ) { n serializable serializable = entity_cache . get_result ( commerce_shipping_method_model_impl . entity_cache_enabled , n commerce_shipping_method_impl . class , primary_key ) n n if ( serializable = = null_model ) { n return null n } n n commerce_shipping_method commerce_shipping_method = ( commerce_shipping_method ) serializable n n if ( commerce_shipping_method = = null ) { n session session = null n n try { n session = open_session ( ) n n commerce_shipping_method = ( commerce_shipping_method ) session . get ( commerce_shipping_method_impl . class , n primary_key ) n n if ( commerce_shipping_method = null ) { n cache_result ( commerce_shipping_method ) n } n else { n entity_cache . put_result ( commerce_shipping_method_model_impl . entity_cache_enabled , n commerce_shipping_method_impl . class , primary_key , null_model ) n } n } n catch ( exception e ) { n entity_cache . remove_result ( commerce_shipping_method_model_impl . entity_cache_enabled , n commerce_shipping_method_impl . class , primary_key ) n n throw process_exception ( e ) n } n finally { n close_session ( session ) n } n } n n return commerce_shipping_method n }	1
Q_223	return the commerce ship method with the primary key or return code null code if it could not be find	C_223_1	private void do_resource ( http_servlet_request req , http_servlet_response resp ) throws io_exception n { n boolean success = true n string resource = ( string ) req . get_parameter ( codstr ) n if ( is_empty ( resource ) ) n { n if ( resource . ends_with ( codstr ) ) n { n resp . set_content_type ( codstr ) n } else if ( resource . ends_with ( codstr ) ) n { n resp . set_content_type ( codstr ) n } else if ( resource . ends_with ( codstr ) ) n { n resp . set_content_type ( codstr ) n } else n { n resp . set_content_type ( codstr ) n } n n string contents = resource_loader . get_resource ( resource , resource_replacements ) n if ( contents = null ) n { n if ( resource_cache_hours > codint ) n { n calendar c = calendar . get_instance ( ) n c . add ( calendar . hour , resource_cache_hours ) n resp . set_header ( codstr , codstr ) n resp . set_header ( codstr , new simple_date_format ( codstr ) . format ( c . get_time ( ) ) ) n } else n { n resp . set_header ( codstr , codstr ) n } n n print_writer w = resp . get_writer ( ) n w . print ( contents ) n } else n { n success = false n } n } n if ( success	0
Q_223	return the commerce ship method with the primary key or return code null code if it could not be find	C_223_2	override n public void do_render ( final w_component component , final web_xml_render_context render_context ) { n w_text text = ( w_text ) component n xml_string_builder xml = render_context . get_writer ( ) n n string text_string = text . get_text ( ) n n if ( text_string = null ) { n if ( text . is_encode_text ( ) ) { n xml . print ( web_utilities . encode ( text_string ) ) n } else { n / / if we are outputting unencoded content it must be xml valid . n xml . print ( html_to_xml_util . unescape_to_xml ( text_string ) ) n } n } n }	0
Q_224	return an order range of all the cpd availability estimate where commerce_availability_estimate_id tagint	C_224_0	public static list < cpd_availability_estimate > find_by_commerce_availability_estimate_id ( n long commerce_availability_estimate_id , int start , int end , n order_by_comparator < cpd_availability_estimate > order_by_comparator ) { n return get_persistence ( ) n . find_by_commerce_availability_estimate_id ( commerce_availability_estimate_id , n start , end , order_by_comparator ) n }	1
Q_224	return an order range of all the cpd availability estimate where commerce_availability_estimate_id tagint	C_224_1	static set < dot_name > get_potential_view_interfaces ( class_info bean_class ) { n dot_name [ ] interfaces = bean_class . interfaces ( ) n if ( interfaces = = null ) { n return collections . empty_set ( ) n } n final set < dot_name > names = new hash_set < dot_name > ( ) n for ( dot_name dot_name interfaces ) { n string name = dot_name . to_string ( ) n / / ejb number fr number bullet number n / / fr number n if ( name . equals ( serializable . class . get_name ( ) ) n name . equals ( externalizable . class . get_name ( ) ) n name . starts_with ( codstr ) n name . starts_with ( codstr ) ) { n continue n } n names . add ( dot_name ) n } n return names n }	0
Q_224	return an order range of all the cpd availability estimate where commerce_availability_estimate_id tagint	C_224_2	public static money of ( currency_unit currency , double amount ) { n return money . of ( currency , big_decimal . value_of ( amount ) ) n }	0
Q_225	return the first commerce wish list item in the order set where commerce_wish_list_id tagint	C_225_0	override n public commerce_wish_list_item find_by_commerce_wish_list_id_first ( n long commerce_wish_list_id , n order_by_comparator < commerce_wish_list_item > order_by_comparator ) n throws no_such_wish_list_item_exception { n commerce_wish_list_item commerce_wish_list_item = fetch_by_commerce_wish_list_id_first ( commerce_wish_list_id , n order_by_comparator ) n n if ( commerce_wish_list_item = null ) { n return commerce_wish_list_item n } n n string_bundler msg = new string_bundler ( codint ) n n msg . append ( _no_such_entity_with_key ) n n msg . append ( codstr ) n msg . append ( commerce_wish_list_id ) n n msg . append ( codstr ) n n throw new no_such_wish_list_item_exception ( msg . to_string ( ) ) n }	1
Q_225	return the first commerce wish list item in the order set where commerce_wish_list_id tagint	C_225_1	public void set_gamma ( double gamma ) n { n if ( gamma < codint double . is_na_n ( gamma ) double . is_infinite ( gamma ) ) n throw new illegal_argument_exception ( codstr + gamma ) n this . gamma = gamma n }	0
Q_225	return the first commerce wish list item in the order set where commerce_wish_list_id tagint	C_225_2	public iterable < d_contact > query_by_home_phone ( object parent , java . lang . string home_phone ) { n return query_by_field ( parent , d_contact_mapper . field . homephone . get_field_name ( ) , home_phone ) n }	0
Q_226	return the cp definition before and after the current cp definition in the order set where company_id tagint	C_226_0	public static cp_definition [ ] find_by_company_id_prev_and_next ( n long cp_definition_id , long company_id , n order_by_comparator < cp_definition > order_by_comparator ) n throws com . liferay . commerce . product . exception . no_such_cp_definition_exception { n return get_persistence ( ) n . find_by_company_id_prev_and_next ( cp_definition_id , company_id , n order_by_comparator ) n }	1
Q_226	return the cp definition before and after the current cp definition in the order set where company_id tagint	C_226_1	public response < configuration_setting > set_setting ( string key , string value ) { n return set_setting ( new configuration_setting ( ) . key ( key ) . value ( value ) ) n }	0
Q_226	return the cp definition before and after the current cp definition in the order set where company_id tagint	C_226_2	int link_node ( int index , int last_lookup ) { n n / / get the first reclaimed slot n int lookup = reclaimed_node_pointer n n / / a volt_db extension to diagnose array_out_of_bounds . n boolean volt_d_breclaimed = ( reclaimed_node_pointer = _ codint ) n / / keep a history of events , wrapping to the start of the buffer when capacity runs out n / / so the most recent events are never lost . n volt_d_bhistory [ volt_d_bhistory_depth + + volt_d_bhistory_capacity ] = index n / / end of volt_db extension n if ( lookup = = _ codint ) { n lookup = new_node_pointer + + n } else { n n / / reset the first reclaimed slot n reclaimed_node_pointer = link_table [ lookup ] n } n n / / link the node n if ( last_lookup = = _ codint ) { n hash_table [ index ] = lookup n } else { n link_table [ last_lookup ] = lookup n } n n / / a volt_db extension to diagnose array_out_of_bounds . n if ( lookup > = link_table . length ) { n string_builder report = new string_builder ( ) n report . append ( codstr ) . append ( link_table . length ) n report . append ( volt_d_breclaimed ? codstr codstr ) . append ( codstr ) . append ( lookup ) n report . append ( codstr ) n for ( int link link_table ) { n	0
Q_227	return the last commerce discount rel in the order set where class_name_id tagint and class_pk tagint	C_227_0	override n public commerce_discount_rel find_by_cn_cpk_last ( long class_name_id , n long class_pk , order_by_comparator < commerce_discount_rel > order_by_comparator ) n throws no_such_discount_rel_exception { n commerce_discount_rel commerce_discount_rel = fetch_by_cn_cpk_last ( class_name_id , n class_pk , order_by_comparator ) n n if ( commerce_discount_rel = null ) { n return commerce_discount_rel n } n n string_bundler msg = new string_bundler ( codint ) n n msg . append ( _no_such_entity_with_key ) n n msg . append ( codstr ) n msg . append ( class_name_id ) n n msg . append ( codstr ) n msg . append ( class_pk ) n n msg . append ( codstr ) n n throw new no_such_discount_rel_exception ( msg . to_string ( ) ) n }	1
Q_227	return the last commerce discount rel in the order set where class_name_id tagint and class_pk tagint	C_227_1	public void stop ( ) { n stop_writes ( ) n stop_reads ( ) n if ( timer_ref = null timer_ref . get ( ) = null ) { n timer_ref . get ( ) . shutdown_now ( ) n timer_ref . set ( null ) n } n nd_bench_monitor . reset_stats ( ) n }	0
Q_227	return the last commerce discount rel in the order set where class_name_id tagint and class_pk tagint	C_227_2	public void println ( string text , color color ) { n final label label = new label ( text , skin , codstr ) n label . set_color ( color ) n label . set_wrap ( true ) n add_label ( label ) n }	0
Q_228	convert the soap model instance into normal model instance	C_228_0	public static list < commerce_shipping_fixed_option_rel > to_models ( n commerce_shipping_fixed_option_rel_soap [ ] soap_models ) { n if ( soap_models = = null ) { n return null n } n n list < commerce_shipping_fixed_option_rel > models = new array_list < commerce_shipping_fixed_option_rel > ( soap_models . length ) n n for ( commerce_shipping_fixed_option_rel_soap soap_model soap_models ) { n models . add ( to_model ( soap_model ) ) n } n n return models n }	1
Q_228	convert the soap model instance into normal model instance	C_228_1	public void marshall ( get_web_acl_request get_web_acl_request , protocol_marshaller protocol_marshaller ) { n n if ( get_web_acl_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( get_web_acl_request . get_web_acl_id ( ) , webaclid_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_228	convert the soap model instance into normal model instance	C_228_2	override n public user_profile convert ( file file ) n { n if ( file = = null ) n return null n n try n { n string text = io . read_file ( file ) n n if ( text = = null text . length ( ) = = codint ) n return null n n return converter . convert ( text ) n } n catch ( io_exception e ) n { n throw new system_exception ( codstr + n file . get_absolute_path ( ) + codstr + e . get_message ( ) , e ) n } n }	0
Q_229	return a range of all the commerce warehouse where group_id tagint and commerce_country_id tagint	C_229_0	public static list < commerce_warehouse > find_by_g_c ( long group_id , n long commerce_country_id , int start , int end ) { n return get_persistence ( ) . find_by_g_c ( group_id , commerce_country_id , start , end ) n }	1
Q_229	return a range of all the commerce warehouse where group_id tagint and commerce_country_id tagint	C_229_1	private void append_ruby_elements ( rendersnake_html_canvas html , n list < subtitle_item . inner > elements ) throws io_exception { n for ( subtitle_item . inner element elements ) { n string kanji = element . get_kanji ( ) n if ( kanji = null ) { n html . ruby ( ) n html . span_kanji ( kanji ) n html . rt ( element . get_text ( ) ) n html . _ruby ( ) n } else { n html . write ( element . get_text ( ) ) n } n } n }	0
Q_229	return a range of all the commerce warehouse where group_id tagint and commerce_country_id tagint	C_229_2	public compound_constraint add_all ( list constraints ) { n algorithms . instance ( ) . for_each ( constraints , new block ( ) { n protected void handle ( object o ) { n add ( ( constraint ) o ) n } n } ) n return this n }	0
Q_230	remove all the cp specification option where group_id tagint from the database	C_230_0	override n public void remove_by_group_id ( long group_id ) { n for ( cp_specification_option cp_specification_option find_by_group_id ( n group_id , query_util . all_pos , query_util . all_pos , null ) ) { n remove ( cp_specification_option ) n } n }	1
Q_230	remove all the cp specification option where group_id tagint from the database	C_230_1	protected void close_quietly ( http_url_connection http_url_connection ) { n if ( http_url_connection = = null ) { n return n } n try { n http_url_connection . disconnect ( ) n } catch ( exception t ) { n http_logger . warn ( codstr , http_url_connection , t ) n } n }	0
Q_230	remove all the cp specification option where group_id tagint from the database	C_230_2	override n public response delete_resource ( operation_context context ) { n context . n check_operation_support ( ) . n check_preconditions ( ) n try { n context . resource ( ) . delete ( ) n return response . no_content ( ) . build ( ) n } catch ( application_execution_exception e ) { n throw diagnose_application_execution_exception ( context , e ) n } catch ( application_context_exception e ) { n throw new internal_server_exception ( context , e ) n } n }	0
Q_231	remove all the cp option category where uuid tagint and company_id tagint from the database	C_231_0	override n public void remove_by_uuid_c ( string uuid , long company_id ) { n for ( cp_option_category cp_option_category find_by_uuid_c ( uuid , company_id , n query_util . all_pos , query_util . all_pos , null ) ) { n remove ( cp_option_category ) n } n }	1
Q_231	remove all the cp option category where uuid tagint and company_id tagint from the database	C_231_1	public static synchronized x_data_manager get_instance_for ( xmpp_connection connection ) { n x_data_manager x_data_manager = instances . get ( connection ) n if ( x_data_manager = = null ) { n x_data_manager = new x_data_manager ( connection ) n instances . put ( connection , x_data_manager ) n } n return x_data_manager n }	0
Q_231	remove all the cp option category where uuid tagint and company_id tagint from the database	C_231_2	public boolean delete ( marker marker ) { n boolean deleted = false n if ( contains ( marker ) ) { n deleted = true n shape_markers shape_markers = shape_markers_map . remove ( marker . get_id ( ) ) n if ( shape_markers = null ) { n shape_markers . delete ( marker ) n } n marker . remove ( ) n } n return deleted n }	0
Q_232	add the cp definition link to the database	C_232_0	override n public com . liferay . commerce . product . model . cp_definition_link add_cp_definition_link ( n com . liferay . commerce . product . model . cp_definition_link cp_definition_link ) { n return _cp_definition_link_local_service . add_cp_definition_link ( cp_definition_link ) n }	1
Q_232	add the cp definition link to the database	C_232_1	public final promise clean ( string match ) { n scan_args args = new scan_args ( ) n args . limit ( codint ) n boolean single_star = match . index_of ( codstr ) > _ codint n boolean double_star = match . contains ( codstr ) n if ( double_star ) { n args . match ( match . replace ( codstr , codstr ) ) n } else if ( single_star ) { n if ( match . length ( ) > codint match . index_of ( codstr ) = = _ codint ) { n match + = codstr n } n args . match ( match ) n } else { n args . match ( match ) n } n if ( single_star double_star ) { n match = null n } n if ( client = null ) { n return new promise ( clean ( client . scan ( args ) , args , match ) ) n } n if ( clustered_client = null ) { n return new promise ( clean ( clustered_client . scan ( args ) , args , match ) ) n } n return promise . resolve ( ) n }	0
Q_232	add the cp definition link to the database	C_232_2	public box_authentication_info get_auth_info ( string user_id , context context ) { n return user_id = = null ? null get_auth_info_map ( context ) . get ( user_id ) n }	0
Q_233	return a range of all the commerce address restriction where commerce_country_id tagint	C_233_0	override n public list < commerce_address_restriction > find_by_commerce_country_id ( n long commerce_country_id , int start , int end ) { n return find_by_commerce_country_id ( commerce_country_id , start , end , null ) n }	1
Q_233	return a range of all the commerce address restriction where commerce_country_id tagint	C_233_1	public static string shadefloat ( float d , float max ) { n int a = ( int ) math . floor ( d * codint / max + number ) n if ( a > codint a < codint ) { n string x = lnf . format ( d ) n a = codint _ x . length ( ) n for ( int i = codint i < a i + + ) { n x + = codstr n } n return codstr + x + codstr n } n return codstr + shades [ a ] + codstr n }	0
Q_233	return a range of all the commerce address restriction where commerce_country_id tagint	C_233_2	void log_container_state_changes_and_reset ( ) { n container_state_change_report change_report = create_container_state_change_report ( true ) n n if ( change_report = null ) { n final string msg = create_change_report_log_message ( change_report , false ) n root_logger . info ( msg ) n } n }	0
Q_234	remove the commerce warehouse with the primary key from the database	C_234_0	override n public commerce_warehouse remove ( serializable primary_key ) n throws no_such_warehouse_exception { n session session = null n n try { n session = open_session ( ) n n commerce_warehouse commerce_warehouse = ( commerce_warehouse ) session . get ( commerce_warehouse_impl . class , n primary_key ) n n if ( commerce_warehouse = = null ) { n if ( _log . is_debug_enabled ( ) ) { n _log . debug ( _no_such_entity_with_primary_key + primary_key ) n } n n throw new no_such_warehouse_exception ( _no_such_entity_with_primary_key + n primary_key ) n } n n return remove ( commerce_warehouse ) n } n catch ( no_such_warehouse_exception nsee ) { n throw nsee n } n catch ( exception e ) { n throw process_exception ( e ) n } n finally { n close_session ( session ) n } n }	1
Q_234	remove the commerce warehouse with the primary key from the database	C_234_1	override n protected void populate_model ( model_node operation , model_node strict_max_pool_model ) throws operation_failed_exception { n for ( attribute_definition attr strict_max_pool_resource_definition . attributes . values ( ) ) { n attr . validate_and_set ( operation , strict_max_pool_model ) n } n }	0
Q_234	remove the commerce warehouse with the primary key from the database	C_234_2	public static list < quat_symmetry_results > calc_local_symmetries ( n structure structure , quat_symmetry_parameters symm_params , n subunit_clusterer_parameters cluster_params ) { n n stoichiometry composition = subunit_clusterer . cluster ( structure , cluster_params ) n return calc_local_symmetries ( composition , symm_params ) n }	0
Q_235	create an email template	C_235_0	public request < email_template > create ( email_template template ) { n asserts . assert_not_null ( template , codstr ) n n string url = base_url n . new_builder ( ) n . add_path_segments ( codstr ) n . build ( ) n . to_string ( ) n custom_request < email_template > request = new custom_request < > ( this . client , url , codstr , new type_reference < email_template > ( ) { n } ) n request . add_header ( codstr , codstr + api_token ) n request . set_body ( template ) n return request n }	1
Q_235	create an email template	C_235_1	public static string create_hash ( char [ ] password ) throws no_such_algorithm_exception , invalid_key_spec_exception { n n final secure_random random = new secure_random ( ) n final byte [ ] salt = new byte [ salt_bytes ] n random . next_bytes ( salt ) n n final byte [ ] hash = pbkdf2 ( password , salt , pbkdf2_iterations , hash_bytes ) n / / format iterations salt hash n return pbkdf2_iterations + codstr + to_hex ( salt ) + codstr + to_hex ( hash ) n }	0
Q_235	create an email template	C_235_2	public < c extends abstract_component_controller < ? , ? , ? void store_in_cache ( c controller ) { n controller_factory . get ( ) n . store_in_cache ( controller ) n controller . set_cached ( true ) n }	0
Q_236	return a new link order_aware_plugin_registry with the order of the plugins revert	C_236_0	public order_aware_plugin_registry < t , s > reverse ( ) { n n list < t > copy = new array_list < > ( get_plugins ( ) ) n return of ( copy , comparator . reversed ( ) ) n }	1
Q_236	return a new link order_aware_plugin_registry with the order of the plugins revert	C_236_1	public static < t > list < t > unmarshal_collection ( class < t > cl , source s ) throws jaxb_exception { n jaxb_context ctx = jaxb_context . new_instance ( jaxb_collection . class , cl ) n unmarshaller u = ctx . create_unmarshaller ( ) n jaxb_collection < t > collection = u . unmarshal ( s , jaxb_collection . class ) . get_value ( ) n return collection . get_items ( ) n }	0
Q_236	return a new link order_aware_plugin_registry with the order of the plugins revert	C_236_2	public boolean handle_event ( event e ) { n n switch ( e . id ) { n n case event . scroll_line_up n case event . scroll_line_down n case event . scroll_page_up n case event . scroll_page_down n case event . scroll_absolute n i_x = sb_horiz . get_value ( ) n i_y = i_row_height * sb_vert . get_value ( ) n n repaint ( ) n n return true n } n n return super . handle_event ( e ) n }	0
Q_237	update the union by add a set of entry from a give sketch	C_237_0	public void update ( final array_of_doubles_sketch sketch_in ) { n if ( sketch_in = = null ) { return } n util . check_seed_hashes ( seed_hash_ , sketch_in . get_seed_hash ( ) ) n if ( sketch_ . get_num_values ( ) = sketch_in . get_num_values ( ) ) { n throw new sketches_argument_exception ( codstr n + sketch_ . get_num_values ( ) + codstr + sketch_in . get_num_values ( ) ) n } n if ( sketch_in . is_empty ( ) ) { return } n if ( sketch_in . get_theta_long ( ) < theta_ ) { theta_ = sketch_in . get_theta_long ( ) } n final array_of_doubles_sketch_iterator it = sketch_in . iterator ( ) n while ( it . next ( ) ) { n sketch_ . merge ( it . get_key ( ) , it . get_values ( ) ) n } n }	1
Q_237	update the union by add a set of entry from a give sketch	C_237_1	public service_future < vpn_site_inner > begin_create_or_update_async ( string resource_group_name , string vpn_site_name , vpn_site_inner vpn_site_parameters , final service_callback < vpn_site_inner > service_callback ) { n return service_future . from_response ( begin_create_or_update_with_service_response_async ( resource_group_name , vpn_site_name , vpn_site_parameters ) , service_callback ) n }	0
Q_237	update the union by add a set of entry from a give sketch	C_237_2	edu . umd . cs . findbugs . annotations . suppress_fb_warnings ( value = codstr , justification = codstr ) n override n public void saw_opcode ( int seen ) { n object user_object = null n n / / saving and restoring the userobject of the top item , works around a n / / bug in findbugs proper n if ( stack . get_stack_depth ( ) > codint ) { n user_object = stack . get_stack_item ( codint ) . get_user_value ( ) n } n stack . precomputation ( this ) n if ( stack . get_stack_depth ( ) > codint ) { n stack . get_stack_item ( codint ) . set_user_value ( user_object ) n user_object = null n } n n try { n switch ( seen ) { n case const . invokespecial n user_object = saw_invoke_special ( user_object ) n break n case const . invokeinterface n case const . invokevirtual n saw_invoke_interface_virtual ( ) n break n case const . invokestatic n user_object = saw_invoke_static ( user_object ) n / / fall _ through n case const . invokedynamic n process_method_parms ( ) n break n case const . areturn n if ( stack . get_stack_depth ( ) > codint ) { n opcode_stack . item item = stack . get_stack_item ( codint ) n clear_user_value ( item ) n } else { n / / bad findbugs bug , which clears the stack after an aload , in some cases	0
Q_238	validate that the give node type definition be valid under the mode_shape and jcr type rule within the give context	C_238_0	protected void validate ( jcr_node_type node_type , n list < jcr_node_type > supertypes , n list < jcr_node_type > pending_types ) throws repository_exception { n validate_supertypes ( supertypes ) n n list < name > supertype_names = new array_list < name > ( supertypes . size ( ) ) n for ( jcr_node_type supertype supertypes ) { n supertype_names . add ( supertype . get_internal_name ( ) ) n } n n boolean found_exact = false n boolean found_residual = false n boolean found_sns = false n name primary_item_name = node_type . get_internal_primary_item_name ( ) n n for ( jcr_node_definition node node_type . get_declared_child_node_definitions ( ) ) { n validate_child_node_definition ( node , supertype_names , pending_types ) n if ( node . is_residual ( ) ) { n found_residual = true n } n n if ( primary_item_name = null primary_item_name . equals ( node . get_internal_name ( ) ) ) { n found_exact = true n } n n if ( node . allows_same_name_siblings ( ) ) { n found_sns = true n } n } n n for ( jcr_property_definition prop node_type . get_declared_property_definitions ( ) ) { n validate_property_definition ( prop , supertype_names , pending_types ) n if ( prop . is_residual ( ) ) { n found_residual = true n } n if ( primary_item_name = null primary_item_name . equals ( prop . get_internal_name ( ) ) ) { n if ( found_exact ) { n throw new repository_exception ( jcr_i18n . ambiguous_primary_item_name . text	1
Q_238	validate that the give node type definition be valid under the mode_shape and jcr type rule within the give context	C_238_1	protected < l extends jql_base_listener > void analyze_variable_statement_internal ( jql_context jql_context , final string jql , l listener ) { n walker . walk ( listener , prepare_variable_statement ( jql_context , jql ) . value0 ) n }	0
Q_238	validate that the give node type definition be valid under the mode_shape and jcr type rule within the give context	C_238_2	nullable n public executable_element concrete_constructor_for ( type_element class_element , annotation_utils annotation_utils ) { n list < executable_element > constructors = find_non_private_constructors ( class_element ) n if ( constructors . is_empty ( ) ) { n return null n } n if ( constructors . size ( ) = = codint ) { n return constructors . get ( codint ) n } n n optional < executable_element > element = constructors . stream ( ) . filter ( ctor _ > { n final annotation_metadata annotation_metadata = annotation_utils . get_annotation_metadata ( ctor ) n return annotation_metadata . has_stereotype ( inject . class ) annotation_metadata . has_stereotype ( creator . class ) n } n ) . find_first ( ) n if ( element . is_present ( ) ) { n element = constructors . stream ( ) . filter ( ctor _ > n ctor . get_modifiers ( ) . contains ( public ) n ) . find_first ( ) n } n return element . or_else ( null ) n }	0
Q_239	return the link repository instance with the give name	C_239_0	public static repository get_repository ( string repository_name ) throws no_such_repository_exception { n repository repository = null n try { n repository = repositories_container . get_repository ( repository_name , collections . unmodifiable_map ( factory_params ) ) n } catch ( repository_exception e ) { n throw new no_such_repository_exception ( web_jcr_i18n . cannot_initialize_repository . text ( repository_name ) , e ) n } n n if ( repository = = null ) { n throw new no_such_repository_exception ( web_jcr_i18n . repository_not_found . text ( repository_name ) ) n } n return repository n }	1
Q_239	return the link repository instance with the give name	C_239_1	public com . google . api . ads . adwords . axis . v201809 . cm . asset_link get_long_headline ( ) { n return long_headline n }	0
Q_239	return the link repository instance with the give name	C_239_2	private static set < equivalent_address_group > strip_attrs ( list < equivalent_address_group > group_list ) { n set < equivalent_address_group > addrs = new hash_set < > ( group_list . size ( ) ) n for ( equivalent_address_group group group_list ) { n addrs . add ( new equivalent_address_group ( group . get_addresses ( ) ) ) n } n return addrs n }	0
Q_240	handle the removal of a node	C_240_0	protected void remove_node ( string workspace_name , n node_key key , n node_key parent_key , n path path , n name primary_type , n set < name > mixin_types ) { n n }	1
Q_240	handle the removal of a node	C_240_1	public static string path ( char_sequence s ) throws illegal_argument_exception n { n try n { n final uri uri = new uri ( codstr , codstr , codstr + s , null ) n return uri . to_ascii_string ( ) . substring ( codint ) n } n catch ( uri_syntax_exception e ) n { n throw new illegal_argument_exception ( e ) n } n }	0
Q_240	handle the removal of a node	C_240_2	"gwt_incompatible ( codstr ) n public static string strip_accents ( final string input ) { n if ( input = = null ) { n return null n } n final pattern pattern = pattern . compile ( codstr ) / / non _ nls _ codint n final string_builder decomposed = new string_builder ( normalizer . normalize ( input , normalizer . form . nfd ) ) n convert_remaining_accent_characters ( decomposed ) n / / note that this doesn "" t correctly remove ligatures . n return pattern . matcher ( decomposed ) . replace_all ( string_utils . empty ) n }"	0
Q_241	start this engine to make it available for use	C_241_0	"public void start ( ) { n if ( state = = state . running ) return n final lock lock = this . lock . write_lock ( ) n try { n lock . lock ( ) n this . state = state . starting n n / / create an executor service that we codstr modeshape _ start _ repo "" ) n repository_starter_service = executors . new_cached_thread_pool ( thread_factory ) n n state = state . running n } catch ( runtime_exception e ) { n state = state . not_running n throw e n } finally { n lock . unlock ( ) n } n }"	1
Q_241	start this engine to make it available for use	C_241_1	protected void add_lightning_global_attributes ( netcdf_file ncfile ) { n super . add_lightning_global_attributes ( ncfile ) n ncfile . add_attribute ( null , n new attribute ( codstr , codstr ) ) n n ncfile . add_attribute ( null , new attribute ( cdm . conventions , codstr ) ) n }	0
Q_241	start this engine to make it available for use	C_241_2	public one_login_response < long > get_users_assigned_to_privileges_batch ( string id , int batch_size , string after_cursor ) n throws o_auth_system_exception , o_auth_problem_exception , uri_syntax_exception { n extraction_context context = extract_resource_batch ( ( object ) id , batch_size , after_cursor , constants . get_users_assigned_to_privilege_url ) n list < long > user_ids = new array_list < long > ( batch_size ) n after_cursor = get_users_assigned_to_privileges_batch ( user_ids , context . url , context . bearer_request , context . o_auth2_response ) n return new one_login_response < long > ( user_ids , after_cursor ) n }	0
Q_242	generate a member from the grammar	C_242_0	protected list < string_concatenation_client > generate_member ( code_element_extractor . element_description member_description , n top_element_description top_element_description , boolean for_interface , boolean for_appender , boolean named_member ) { n if ( named_member ) { n return generate_named_member ( member_description , top_element_description , for_interface , for_appender ) n } n return generate_unnamed_member ( member_description , top_element_description , for_interface , for_appender ) n }	1
Q_242	generate a member from the grammar	C_242_1	private void process_resource_data ( ) throws io_exception n { n directory_entry rsc_dir = ( directory_entry ) m_project_dir . get_entry ( codstr ) n fix_fix rsc_fixed_data = new fix_fix ( codint , new document_input_stream ( ( ( document_entry ) rsc_dir . get_entry ( codstr ) ) ) ) n fix_defer_fix rsc_var_data = null n extended_data rsc_ext_data = null n n int resources = rsc_fixed_data . get_item_count ( ) n byte [ ] data n int id n resource resource n string notes n project_calendar calendar n n for ( int loop = codint loop < resources loop + + ) n { n data = rsc_fixed_data . get_byte_array_value ( loop ) n n / / n / / test for a valid unique id n / / n id = mpp_utility . get_int ( data , codint ) n if ( id < codint ) n { n continue n } n n / / n / / blank rows can be present in mpp files . the following flag n / / appears to indicate that a row is blank , and should be n / / ignored . n / / n if ( ( data [ codint ] codint ) = codint ) n { n continue n } n n / / n / / test to ensure this resource has not been deleted n / / this may be an array of bit flags , as per the task n / / record . i	0
Q_242	generate a member from the grammar	C_242_2	protected static < u > u checked_call ( callable < u > callable ) { n try { n return callable . call ( ) n } catch ( throwable ex ) { n if ( ex instanceof runtime_exception ) { n throw ( runtime_exception ) ex n } n if ( ex instanceof error ) { n throw ( error ) ex n } n throw new runtime_exception ( ex ) n } n }	0
Q_243	delete i_entity_locks from the underlie store that have expire as of code expiration code	C_243_0	private void prim_delete_expired ( n date expiration , class entity_type , string entity_key , connection conn ) n throws locking_exception , sql_exception { n statement stmnt = null n timestamp ts = new timestamp ( expiration . get_time ( ) ) n n string_buffer buff = new string_buffer ( codint ) n buff . append ( codstr + lock_table + codstr + expiration_time_column + lt ) n buff . append ( print_timestamp ( ts ) ) n if ( entity_type = null ) { n integer type_id = entity_types_locator . get_entity_types ( ) . get_entity_id_from_type ( entity_type ) n buff . append ( codstr + entity_type_column + eq + type_id ) n } n if ( entity_key = null ) { n buff . append ( codstr + entity_key_column + eq + sql_quote ( entity_key ) ) n } n n string sql = buff . to_string ( ) n n if ( log . is_debug_enabled ( ) ) log . debug ( codstr + sql ) n n try { n stmnt = conn . create_statement ( ) n int rc = stmnt . execute_update ( sql ) n if ( log . is_debug_enabled ( ) ) { n string msg = codstr + rc + codstr n log . debug ( codstr + msg ) n } n n } catch ( sql_exception sqle ) { n throw new locking_exception ( codstr , sqle ) n } finally { n if ( stmnt = null ) stmnt	1
Q_243	delete i_entity_locks from the underlie store that have expire as of code expiration code	C_243_1	public int cost ( vertex < t > dest ) n { n if ( dest = = this ) n return codint n n edge < t > e = find_edge ( dest ) n int cost = integer . max_value n if ( e = null ) n cost = e . get_cost ( ) n return cost n }	0
Q_243	delete i_entity_locks from the underlie store that have expire as of code expiration code	C_243_2	public static void scale_down_to_fit ( rectangle2_d rect_to_fit_in , rectangle2_d to_scale ) { n double fit_width = rect_to_fit_in . get_width ( ) n double fit_height = rect_to_fit_in . get_height ( ) n n double to_scale_width = to_scale . get_width ( ) n double to_scale_height = to_scale . get_height ( ) n n if ( to_scale_width > fit_width ) { n double factor = to_scale_width / fit_width n to_scale_width = fit_width n to_scale_height = to_scale_height / factor n } n if ( to_scale_height > fit_height ) { n double factor = to_scale_height / fit_height n to_scale_height = fit_height n to_scale_width = to_scale_width / factor n } n to_scale . set_rect ( codint , codint , to_scale_width , to_scale_height ) n }	0
Q_244	remove the parameter from a channel in both the ilf and plf use the appropriate mechanism	C_244_0	override n public void perform ( ) throws portal_exception { n / / push the change into the plf n if ( node_id . starts_with ( constants . fragment_id_user_prefix ) ) { n / / we are dealing with an incorporated node n parameter_edit_manager . remove_parm_edit_directive ( node_id , name , person ) n } else { n / / node owned by user so add parameter child directly n document plf = rdbm_distributed_layout_store . get_plf ( person ) n element plf_node = plf . get_element_by_id ( node_id ) n remove_parameter_child ( plf_node , name ) n } n / / push the change into the ilf n remove_parameter_child ( ilf_node , name ) n }	1
Q_244	remove the parameter from a channel in both the ilf and plf use the appropriate mechanism	C_244_1	public e_class get_bpf ( ) { n if ( bpf_e_class = = null ) { n bpf_e_class = ( e_class ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return bpf_e_class n }	0
Q_244	remove the parameter from a channel in both the ilf and plf use the appropriate mechanism	C_244_2	public observable < workflow_version_inner > get_async ( string resource_group_name , string workflow_name , string version_id ) { n return get_with_service_response_async ( resource_group_name , workflow_name , version_id ) . map ( new func1 < service_response < workflow_version_inner > , workflow_version_inner > ( ) { n override n public workflow_version_inner call ( service_response < workflow_version_inner > response ) { n return response . body ( ) n } n } ) n }	0
Q_245	a common helper to process result response	C_245_0	static public result_output process_result ( result_input result_data , n sf_session sf_session ) n throws snowflake_sql_exception n { n result_output result_output = new result_output ( ) n n logger . debug ( codstr ) n json_node root_node = result_data . result_json n n snowflake_util . check_error_and_throw_exception ( root_node ) n n / / get the query id n result_output . query_id = root_node . path ( codstr ) . path ( codstr ) . as_text ( ) n n json_node database_node = root_node . path ( codstr ) . path ( codstr ) n result_output . final_database_name = database_node . is_null ( ) ? null database_node . as_text ( ) n n json_node schema_node = root_node . path ( codstr ) . path ( codstr ) n result_output . final_schema_name = schema_node . is_null ( ) ? null schema_node . as_text ( ) n n json_node role_node = root_node . path ( codstr ) . path ( codstr ) n result_output . final_role_name = role_node . is_null ( ) ? null role_node . as_text ( ) n n json_node warehouse_node = root_node . path ( codstr ) . path ( codstr ) n result_output . final_warehouse_name = warehouse_node . is_null ( ) ? null warehouse_node . as_text ( ) n n result_output . statement_type = sf_statement_type . look_up_type_by_id ( n root_node . path ( codstr ) . path ( codstr ) . as_long ( ) ) n n result_output . total_row_count_truncated n = root_node . path ( codstr ) .	1
Q_245	a common helper to process result response	C_245_1	override n protected void do_cells ( list < fit_cell > cells ) { n this . cells = cells n this . appender = get_appender ( ) n n if ( appender = null ) { n try { n execute_command ( ) n } catch ( final illegal_argument_exception e ) { n cells . get ( command_column ) . exception ( codstr ) n } n } n }	0
Q_245	a common helper to process result response	C_245_2	public static cms_relation_target_list_bean get_containerpage_relation_targets ( n cms_object cms , n cms_uuid source , n list < cms_uuid > additional_ids , n boolean cancel_if_changed ) n throws cms_exception { n n cms_relation_target_list_bean result = new cms_relation_target_list_bean ( ) n cms_resource content = cms . read_resource ( source , cms_resource_filter . all ) n boolean is_container_page = cms_resource_type_xml_container_page . is_container_page ( content ) n if ( additional_ids = null ) { n for ( cms_uuid structure_id additional_ids ) { n try { n cms_resource res = cms . read_resource ( structure_id , cms_resource_filter . all ) n result . add ( res ) n if ( res . get_state ( ) . is_changed ( ) cancel_if_changed ) { n return result n } n } catch ( cms_exception e ) { n log . error ( e . get_localized_message ( ) , e ) n } n } n } n list < cms_relation > relations = cms . read_relations ( cms_relation_filter . relations_from_structure_id ( source ) ) n for ( cms_relation relation relations ) { n if ( relation . get_type ( ) = = cms_relation_type . xsd ) { n continue n } n try { n cms_resource target = relation . get_target ( cms , cms_resource_filter . all ) n i_cms_resource_type type = open_cms . get_resource_manager ( ) . get_resource_type ( target ) n if ( is_container_page ( type instanceof cms_resource_type_jsp ) ) { n / / ignore formatters for container pages , as the normal user probably	0
Q_246	get back a from date and to date give a time_range_string create from box_date_form	C_246_0	public static date [ ] get_time_range_dates ( string time_range_string ) { n if ( sdk_utils . is_empty_string ( time_range_string ) ) { n return null n } n string [ ] date_strings = time_range_string . split ( codstr ) n date [ ] dates = new date [ codint ] n try { n dates [ codint ] = parse ( date_strings [ codint ] ) n } catch ( parse_exception e ) { n } catch ( array_index_out_of_bounds_exception e ) { n } n try { n dates [ codint ] = parse ( date_strings [ codint ] ) n } catch ( parse_exception e ) { n } catch ( array_index_out_of_bounds_exception e ) { n } n return dates n n }	1
Q_246	get back a from date and to date give a time_range_string create from box_date_form	C_246_1	public synchronized reallocator < t > get_reallocator ( ) { n if ( allocator = = null ) { n return null n } n if ( allocator instanceof reallocator ) { n return ( reallocator < t > ) allocator n } n return new reallocating_adaptor < > ( ( allocator < t > ) allocator ) n }	0
Q_246	get back a from date and to date give a time_range_string create from box_date_form	C_246_2	override public final void init_from_bytes ( ) { n _start = _ codint _cidx = _ codint n set_len ( _mem . length3 ) n assert _mem . length = = _len < < codint n }	0
Q_247	disable orientation update	C_247_0	public void disable_compass ( ) { n m_is_compass_enabled = false n n if ( m_orientation_provider = null ) { n m_orientation_provider . stop_orientation_provider ( ) n } n n / / reset values n m_azimuth = float . na_n n n / / update the screen to see changes take effect n if ( m_map_view = null ) { n this . invalidate_compass ( ) n } n }	1
Q_247	disable orientation update	C_247_1	public static base_response unset ( nitro_service client , nsconfig resource , string [ ] args ) throws exception { n nsconfig unsetresource = new nsconfig ( ) n return unsetresource . unset_resource ( client , args ) n }	0
Q_247	disable orientation update	C_247_2	public void commence ( http_servlet_request req , http_servlet_response resp , authentication_exception auth_exception ) throws io_exception , servlet_exception { n n string redirect_url = null n logger . debug ( codstr ) n n authorization_code_flow flow = o_auth2_util . new_authorization_code_flow ( ) n generic_url url = flow . new_authorization_url ( ) . set_redirect_uri ( get_callback_url ( ) ) n url . set ( codstr , codstr ) n redirect_url = url . build ( ) n redirect_strategy . send_redirect ( req , resp , redirect_url ) n n }	0
Q_248	simple function to scan for path that match something osmdroid	C_248_0	protected static set < file > find_map_files ( ) { n set < file > maps = new hash_set < > ( ) n list < storage_utils . storage_info > storage_list = storage_utils . get_storage_list ( ) n for ( int i = codint i < storage_list . size ( ) i + + ) { n file f = new file ( storage_list . get ( i ) . path + file . separator + codstr + file . separator ) n if ( f . exists ( ) ) { n maps . add_all ( scan ( f ) ) n } n } n return maps n }	1
Q_248	simple function to scan for path that match something osmdroid	C_248_1	public boolean has_next_short ( int radix ) { n set_radix ( radix ) n boolean result = has_next ( integer_pattern ( ) ) n if ( result ) { / / cache it n try { n string s = ( matcher . group ( simple_group_index ) = = null ) ? n process_integer_token ( has_next_result ) n has_next_result n type_cache = short . parse_short ( s , radix ) n } catch ( number_format_exception nfe ) { n result = false n } n } n return result n }	0
Q_248	simple function to scan for path that match something osmdroid	C_248_2	public void set_file_size ( ) { n if ( arr [ daten_film . film_groesse ] . is_empty ( ) ) n arr [ daten_film . film_groesse ] = file_size . laenge_string ( arr [ daten_film . film_url ] ) n }	0
Q_249	if currently visit a field get the field be slash_formatted signature	C_249_0	public string get_field_sig ( ) { n if ( visiting_field ) { n throw new illegal_state_exception ( codstr ) n } n if ( field_sig = = null ) { n field_sig = get_string_from_index ( field . get_signature_index ( ) ) n } n return field_sig n }	1
Q_249	if currently visit a field get the field be slash_formatted signature	C_249_1	public observable < service_response < subscription_media_service_inner get_by_subscription_with_service_response_async ( string account_name ) { n if ( this . client . subscription_id ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( account_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . client . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n return service . get_by_subscription ( this . client . subscription_id ( ) , account_name , this . client . api_version ( ) , this . client . accept_language ( ) , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < subscription_media_service_inner ( ) { n override n public observable < service_response < subscription_media_service_inner call ( response < response_body > response ) { n try { n service_response < subscription_media_service_inner > client_response = get_by_subscription_delegate ( response ) n return observable . just ( client_response ) n } catch ( throwable t ) { n return observable . error ( t ) n } n } n } ) n }	0
Q_249	if currently visit a field get the field be slash_formatted signature	C_249_2	public rule_update set_parameters ( map < string , string > params ) { n check_custom_rule ( ) n this . parameters . clear ( ) n this . parameters . put_all ( params ) n this . change_parameters = true n return this n }	0
Q_250	look up a variable definition in give binding_set	C_250_0	public static variable lookup ( string var_name , binding_set binding_set ) { n if ( binding_set = = null ) { n return null n } n binding binding = binding_set . lookup ( var_name ) n return ( binding = null ) ? binding . get_variable ( ) null n }	1
Q_250	look up a variable definition in give binding_set	C_250_1	private void wait_for_identify_rate_limit ( ) { n string token = api . get_prefixed_token ( ) n connection_delay_semaphore_per_account . compute_if_absent ( token , key _ > new semaphore ( codint ) ) . acquire_uninterruptibly ( ) n for ( long delay = codint _ ( system . current_time_millis ( ) _ last_identification_per_account . get_or_default ( token , codint ) ) n delay > codint n delay = codint _ ( system . current_time_millis ( ) _ last_identification_per_account . get_or_default ( token , codint ) ) ) { n logger . debug ( codstr , delay ) n try { n thread . sleep ( delay ) n } catch ( interrupted_exception ignored ) { } n } n }	0
Q_250	look up a variable definition in give binding_set	C_250_2	suppress_warnings ( codstr ) n visible_for_testing n js_type eval ( node ttl_ast , immutable_map < string , js_type > type_vars , n immutable_map < string , string > name_vars ) { n js_type result = eval_internal ( ttl_ast , new name_resolver ( type_vars , name_vars ) ) n return result . is_empty_type ( ) ? get_unknown_type ( ) result n }	0
Q_251	check if the the give method be user_generated	C_251_0	public static boolean is_user_generated ( final class_member m ) { n return m . is_synthetic ( ) ( m instanceof x_method could_be_lambda ( ( x_method ) m ) ) n }	1
Q_251	check if the the give method be user_generated	C_251_1	public static list < cp_definition > to_models ( cp_definition_soap [ ] soap_models ) { n if ( soap_models = = null ) { n return null n } n n list < cp_definition > models = new array_list < cp_definition > ( soap_models . length ) n n for ( cp_definition_soap soap_model soap_models ) { n models . add ( to_model ( soap_model ) ) n } n n return models n }	0
Q_251	check if the the give method be user_generated	C_251_2	public static class < ? extends command < ? extends cli_context get_command_class ( n cli_context context , string command_name ) { n return context . get_host_application ( ) . get_commands ( ) . get ( command_name . to_lower_case ( ) ) n }	0
Q_252	p the get_property_info method be intend to allow a generic gui tool to discover what property	C_252_0	override n public driver_property_info [ ] get_property_info ( string url , properties info ) { n properties copy = new properties ( info ) n properties parse = parse_url ( url , copy ) n if ( parse = null ) { n copy = parse n } n n pg_property [ ] known_properties = pg_property . values ( ) n driver_property_info [ ] props = new driver_property_info [ known_properties . length ] n for ( int i = codint i < props . length + + i ) { n props [ i ] = known_properties [ i ] . to_driver_property_info ( copy ) n } n n return props n }	1
Q_252	p the get_property_info method be intend to allow a generic gui tool to discover what property	C_252_1	public final void add_close_listener ( non_null final close_listener listener ) { n condition . instance . ensure_not_null ( listener , codstr ) n listeners . add ( listener ) n }	0
Q_252	p the get_property_info method be intend to allow a generic gui tool to discover what property	C_252_2	suppress_warnings ( codstr ) n public void execute ( i_progress_monitor monitor ) { n try { n pull_operation . execute ( monitor ) n results . put_all ( pull_operation . get_results ( ) ) n } n catch ( core_exception e ) { n if ( e . get_status ( ) . get_severity ( ) = = i_status . cancel ) n results . put_all ( pull_operation . get_results ( ) ) n else n repo_node . handle_exception ( ( throwable ) e ) n } n }	0
Q_253	time stamp add	C_253_0	public static string sqltimestampadd ( list < ? > parsed_args ) throws sql_exception { n if ( parsed_args . size ( ) = codint ) { n throw new psql_exception ( n gt . tr ( codstr , codstr ) , n psql_state . syntax_error ) n } n string interval = escaped_functions . constant_to_interval ( parsed_args . get ( codint ) . to_string ( ) , n parsed_args . get ( codint ) . to_string ( ) ) n string_builder buf = new string_builder ( ) n buf . append ( codstr ) . append ( interval ) . append ( codstr ) n buf . append ( parsed_args . get ( codint ) ) . append ( codstr ) n return buf . to_string ( ) n }	1
Q_253	time stamp add	C_253_1	public connected_streams < in1 , in2 > key_by ( int key_position1 , int key_position2 ) { n return new connected_streams < > ( this . environment , input_stream1 . key_by ( key_position1 ) , n input_stream2 . key_by ( key_position2 ) ) n }	0
Q_253	time stamp add	C_253_2	"private boolean check_side_size ( polygon2_d_f64 p ) { n double max = codint , min = double . max_value n n for ( int i = codint i < p . size ( ) i + + ) { n double l = p . get_side_length ( i ) n max = math . max ( max , l ) n min = math . min ( min , l ) n } n n / / see if a side is too small to decode n if ( min < codint ) n return false n n / / see if it "" s under extreme perspective distortion and unlikely to be readable n return ( min / max < threshold_side_ratio ) n }"	0
Q_254	curtime to current_time translation	C_254_0	public static void sqlcurtime ( string_builder buf , list < ? extends char_sequence > parsed_args ) throws sql_exception { n zero_argument_function_call ( buf , codstr , codstr , parsed_args ) n }	1
Q_254	curtime to current_time translation	C_254_1	public static boolean create_path ( file root , string relative_path_to_create ) { n file target = new file ( root , relative_path_to_create ) n n if ( target . exists ( ) ) { n return target . mkdirs ( ) n } else { n return true n } n }	0
Q_254	curtime to current_time translation	C_254_2	private static void create_grid_cell_filter ( final string [ ] column_order , final grid grid , final class data_type ) { n if ( column_order = null ) { n final grid_cell_filter filter = new grid_cell_filter ( grid , data_type ) n for ( final string column column_order ) { n if ( grid . get_column ( column ) = null ) { n filter . set_text_filter ( column , true , true ) n } n } n } n }	0
Q_255	handle panel _ keyboard	C_255_0	public int [ ] process_on_measure ( int width_measure_spec , int height_measure_spec ) { n if ( m_is_hide ) { n panel_layout . set_visibility ( view . gone ) n / * n * the current frame will be visible nil . n * / n width_measure_spec = view . measure_spec . make_measure_spec ( codint , view . measure_spec . exactly ) n height_measure_spec = view . measure_spec . make_measure_spec ( codint , view . measure_spec . exactly ) n } n n final int [ ] processed_measure_wh_spec = new int [ codint ] n processed_measure_wh_spec [ codint ] = width_measure_spec n processed_measure_wh_spec [ codint ] = height_measure_spec n n return processed_measure_wh_spec n }	1
Q_255	handle panel _ keyboard	C_255_1	override n suppress_warnings ( codstr ) n public page < terminating_sip_domain > first_page ( final twilio_rest_client client ) { n request request = new request ( n http_method . get , n domains . trunking . to_string ( ) , n codstr + this . path_trunk_sid + codstr , n client . get_region ( ) n ) n n add_query_params ( request ) n return page_for_request ( client , request ) n }	0
Q_255	handle panel _ keyboard	C_255_2	public static node get_parent_of_node ( node node ) n { n node parent = node . get_parent_node ( ) n if ( parent = = null ( node . attribute_node = = node . get_node_type ( ) ) ) n parent = ( ( attr ) node ) . get_owner_element ( ) n return parent n }	0
Q_256	return all link service_configuration s of type match the class pass in	C_256_0	public < t extends service_configuration < ? list < t > get_existing_service_configurations ( class < t > clazz ) { n array_list < t > results = new array_list < > ( ) n for ( service_configuration < ? > service_configuration service_configurations ) { n if ( clazz . equals ( service_configuration . get_class ( ) ) ) { n results . add ( clazz . cast ( service_configuration ) ) n } n } n return results n }	1
Q_256	return all link service_configuration s of type match the class pass in	C_256_1	protected final void print_usage ( ) { n st usage = this . stg . get_instance_of ( codstr ) n usage . add ( codstr , this . app_name ) n usage . add ( codstr , this . package_filter ) n usage . add ( codstr , this . jar_filter ) n usage . add ( codstr , new tree_set < > ( arrays . as_list ( new cf ( ) . excluded_names ) ) ) n system . out . println ( usage . render ( ) ) n }	0
Q_256	return all link service_configuration s of type match the class pass in	C_256_2	public static declared_dependencies to_declared_dependencies ( map < dependency_descriptor , set < dependency_descriptor dep_map ) { n declared_dependencies dependencies = new declared_dependencies ( ) n dep_map . for_each ( ( direct_dep , resolved_deps ) _ > { n artifact_spec parent = to_artifact_spec ( direct_dep ) n dependencies . add_resolved ( parent ) n if ( resolved_deps = null ) { n resolved_deps . for_each ( d _ > dependencies . add_resolved ( parent , to_artifact_spec ( d ) ) ) n } n } ) n return dependencies n }	0
Q_257	set the file position for the row	C_257_0	public void set_pos ( int pos ) { n n position = pos n n node_avl n = n_primary_node n n while ( n = null ) { n ( ( node_avl_disk ) n ) . i_data = position n n = n . n_next n } n }	1
Q_257	set the file position for the row	C_257_1	public void get_bytes ( byte [ ] val ) throws io_exception { n if ( ( val . length = codint ) ( buffer . read ( val ) = val . length ) ) { n throw new io_exception ( codstr ) n } n }	0
Q_257	set the file position for the row	C_257_2	public cmp_field_type < entity_bean_type < t get_or_create_cmp_field ( ) n { n list < node > node_list = child_node . get ( codstr ) n if ( node_list = null node_list . size ( ) > codint ) n { n return new cmp_field_type_impl < entity_bean_type < t ( this , codstr , child_node , node_list . get ( codint ) ) n } n return create_cmp_field ( ) n }	0
Q_258	log the content of the hash array	C_258_0	public static string description ( int [ ] hashes , int m_hash_mismatch_pos ) { n assert ( hashes = null ) n assert ( hashes . length > = codint ) n string_builder sb = new string_builder ( ) n n sb . append ( codstr ) . append ( hashes [ codint ] ) n sb . append ( codstr ) . append ( hashes [ codint ] ) n sb . append ( codstr ) . append ( hashes [ codint ] / codint ) n n int included_hashes = math . min ( hashes [ codint ] , max_hashes_count ) n int pos = codint n for ( int i = header_offset i < header_offset + included_hashes i + = codint ) { n sb . append ( codstr ) . append ( hashes [ i ] ) n sb . append ( codstr ) . append ( hashes [ i + codint ] ) n if ( pos = = m_hash_mismatch_pos ) { n sb . append ( codstr ) n } n pos + + n } n if ( hashes [ codint ] > max_hashes_count ) { n sb . append ( codstr ) n if ( m_hash_mismatch_pos = = determinism_hash . hash_not_include ) { n sb . append ( codstr n + codstr _ dmax_statements_with_detail = < hashcount > codstr n + codstr ) n } n } n return sb . to_string ( ) n }	1
Q_258	log the content of the hash array	C_258_1	public assembly_files get_assembly_files ( string name , build_image_configuration build_config , mojo_parameters mojo_params , logger log ) n throws invalid_assembler_configuration_exception , archive_creation_exception , assembly_formatting_exception , mojo_execution_exception { n n build_dirs build_dirs = create_build_dirs ( name , mojo_params ) n n assembly_configuration assembly_config = build_config . get_assembly_configuration ( ) n string assembly_name = assembly_config . get_name ( ) n docker_assembly_configuration_source source = n new docker_assembly_configuration_source ( mojo_params , build_dirs , assembly_config ) n assembly assembly = get_assembly_config ( assembly_config , source ) n n n synchronized ( track_archiver ) { n mapping_track_archiver ta = ( mapping_track_archiver ) track_archiver n ta . init ( log , assembly_name ) n assembly . set_id ( codstr ) n assembly_archiver . create_archive ( assembly , assembly_name , codstr , source , false , null ) n return ta . get_assembly_files ( mojo_params . get_session ( ) ) n } n }	0
Q_258	log the content of the hash array	C_258_2	public static ack_error_code of ( values value ) { n if ( value = = values . sdk_unknown ) { n throw new illegal_argument_exception ( codstr + n codstr ) n } n return value = = null ? null new ack_error_code ( value , value . to_string ( ) ) n }	0
Q_259	read a decimal accord to the four dot four encoding specification	C_259_0	static public big_decimal decode_decimal ( final byte_buffer bb ) { n final int scale = bb . get ( ) n final int precision_bytes = bb . get ( ) n final byte [ ] bytes = new byte [ precision_bytes ] n bb . get ( bytes ) n return new big_decimal ( new big_integer ( bytes ) , scale ) n }	1
Q_259	read a decimal accord to the four dot four encoding specification	C_259_1	public war_probe_option exclude ( string . exclude_reg_exp ) { n use_classpath = true n for ( string exclude exclude_reg_exp ) { n classpath_filters . add ( exclude ) n } n return this n }	0
Q_259	read a decimal accord to the four dot four encoding specification	C_259_2	private object convert_list_to_array ( class p_type , list p_list ) { n class value_type = p_type . get_component_type ( ) n object ret = array . new_instance ( value_type , p_list . size ( ) ) n int i = codint n for ( object value p_list ) { n if ( value = = null ) { n if ( value_type . is_primitive ( ) ) { n array . set ( ret , i + + , null ) n } else { n throw new illegal_argument_exception ( codstr + value_type . get_simple_name ( ) ) n } n } else { n if ( value_type . is_assignable_from ( value . get_class ( ) ) ) { n / / can be set directly n array . set ( ret , i + + , value ) n } else { n / / try to convert from string n array . set ( ret , i + + , convert_from_string ( value_type . get_canonical_name ( ) , value . to_string ( ) ) ) n } n } n } n return ret n }	0
Q_260	static method to change the log4j config globally	C_260_0	public static void configure ( string xml_config , file voltroot ) { n try { n class < ? > logger_clz = class . for_name ( codstr ) n assert ( logger_clz = null ) n method configure_method = logger_clz . get_method ( codstr , string . class , file . class ) n configure_method . invoke ( null , xml_config , voltroot ) n } catch ( exception e ) { } n }	1
Q_260	static method to change the log4j config globally	C_260_1	public string check_messaging_connection_for_the_dm ( string message ) n throws debug_ws_exception { n n this . logger . finer ( codstr + message ) n n web_resource path = this . resource . path ( url_constants . debug ) . path ( codstr ) n if ( message = null ) n path = path . query_param ( codstr , message ) n n client_response response = this . ws_client . create_builder ( path ) . get ( client_response . class ) n if ( family . successful = response . get_status_info ( ) . get_family ( ) ) { n string value = response . get_entity ( string . class ) n this . logger . finer ( response . get_status_info ( ) + codstr + value ) n throw new debug_ws_exception ( response . get_status_info ( ) . get_status_code ( ) , value ) n } n n this . logger . finer ( string . value_of ( response . get_status_info ( ) ) ) n return response . get_entity ( string . class ) n }	0
Q_260	static method to change the log4j config globally	C_260_2	private void create_neighborhoods ( ) { n neighbours = new array_list < list < integer ( solution_list_size ) n n for ( int i = codint i < solution_list_size i + + ) { n neighbours . add ( new array_list < integer > ( ) ) n neighbours . get ( i ) . add ( i ) n } n }	0
Q_261	application entry point	C_261_0	public static void main ( string args [ ] ) n { n system . set_property ( codstr , codstr ) n int exit_code = main_with_return_code ( args ) n system . exit ( exit_code ) n }	1
Q_261	application entry point	C_261_1	public static string byte_array_to_string ( byte [ ] b ) { n final int l = b . length / codint n if ( l * codint = b . length ) throw new illegal_argument_exception ( ) n string_buffer result = new string_buffer ( l ) n int o = codint n for ( int i = codint i < l i + + ) n { n int i1 = b [ o + + ] codint n int i2 = b [ o + + ] codint n i2 = i2 < < codint n i1 = i1 i2 n result . append ( ( char ) i1 ) n } n return ( result . to_string ( ) ) n }	0
Q_261	application entry point	C_261_2	protected super_toast set_on_dismiss_listener ( string tag , n non_null on_dismiss_listener on_dismiss_listener ) { n this . m_on_dismiss_listener = on_dismiss_listener n this . m_style . dismiss_tag = tag n this . m_style . dismiss_token = null n return this n }	0
Q_262	compare two list of acls	C_262_0	private boolean list_acl_equals ( list < acl > lista , list < acl > listb ) { n if ( lista . size ( ) = listb . size ( ) ) { n return false n } n for ( int i = codint i < lista . size ( ) i + + ) { n acl a = lista . get ( i ) n acl b = listb . get ( i ) n if ( a . equals ( b ) ) { n return false n } n } n return true n }	1
Q_262	compare two list of acls	C_262_1	public map < string , string > get_resource_value_map ( ) { n n if ( ( m_resource_value_map = = null ) ( m_resource_value = null ) ) { n / / use lazy initializing of the map n m_resource_value_map = create_map_from_value ( m_resource_value ) n m_resource_value_map = collections . unmodifiable_map ( m_resource_value_map ) n } n return m_resource_value_map n }	0
Q_262	compare two list of acls	C_262_2	public static bounded_overlay get_bounded_overlay ( tile_dao tile_dao , float density ) { n n bounded_overlay overlay = null n n if ( tile_dao . is_google_tiles ( ) ) { n overlay = new google_api_geo_package_overlay ( tile_dao ) n } else { n overlay = new geo_package_overlay ( tile_dao , density ) n } n n return overlay n }	0
Q_263	traverse an iterator and remove every element that belong to the	C_263_0	can_ignore_return_value n public static boolean remove_all ( iterator < ? > remove_from , collection < ? > elements_to_remove ) { n return remove_if ( remove_from , in ( elements_to_remove ) ) n }	1
Q_263	traverse an iterator and remove every element that belong to the	C_263_1	private file create_new_file ( string path ) throws io_exception { n n / / in windows , pathnames with spaces are returned as codint n if ( path . contains ( codstr ) ) n path = path . replace_all ( codstr , codstr ) n file new_file = new file ( path ) n n if ( new_file . exists ( ) new_file . create_new_file ( ) ) { n throw new bundling_process_exception ( codstr + path ) n } n n if ( logger . is_debug_enabled ( ) ) n logger . debug ( codstr + new_file . get_canonical_path ( ) ) n return new_file n }	0
Q_263	traverse an iterator and remove every element that belong to the	C_263_2	public object get_variable ( final string name , final boolean recurse ) n throws util_eval_error { n final variable var = this . get_variable_impl ( name , recurse ) n return this . unwrap_variable ( var ) n }	0
Q_264	convenience method to make sure image index be within bound	C_264_0	protected void check_bounds ( int index ) throws io_exception { n assert_input ( ) n if ( index < get_min_index ( ) ) { n throw new index_out_of_bounds_exception ( codstr ) n } n n int num_images = get_num_images ( false ) n if ( num_images = _ codint index > = num_images ) { n throw new index_out_of_bounds_exception ( codstr + index + codstr + num_images + codstr ) n } n }	1
Q_264	convenience method to make sure image index be within bound	C_264_1	public static void delete_file_if_exists ( under_file_system ufs , string path ) { n try { n if ( ufs . is_file ( path ) ) { n ufs . delete_file ( path ) n } n } catch ( io_exception e ) { n throw new runtime_exception ( e ) n } n }	0
Q_264	convenience method to make sure image index be within bound	C_264_2	public void store ( jcr_node_type node_type , n boolean update_existing ) { n mutable_cached_node node_types_node = mutable_node_types_node ( ) n store ( node_type , node_types_node , update_existing ) n }	0
Q_265	find the subset of the link method_info object in this list for which the give filter predicate be true	C_265_0	public method_info_list filter ( final method_info_filter filter ) { n final method_info_list method_info_filtered = new method_info_list ( ) n for ( final method_info resource this ) { n if ( filter . accept ( resource ) ) { n method_info_filtered . add ( resource ) n } n } n return method_info_filtered n }	1
Q_265	find the subset of the link method_info object in this list for which the give filter predicate be true	C_265_1	dom_implementation_ls build_dom3_load_and_save_factory ( ) { n dom_implementation_ls factory = null n try { n dom_implementation_registry dom_registry = dom_implementation_registry . new_instance ( ) n factory = ( dom_implementation_ls ) dom_registry . get_dom_implementation ( codstr ) n } catch ( exception e ) { n logr . log ( level . warning , codstr , e ) n } n return factory n }	0
Q_265	find the subset of the link method_info object in this list for which the give filter predicate be true	C_265_2	public void marshall ( start_next_pending_job_execution_request start_next_pending_job_execution_request , protocol_marshaller protocol_marshaller ) { n n if ( start_next_pending_job_execution_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( start_next_pending_job_execution_request . get_thing_name ( ) , thingname_binding ) n protocol_marshaller . marshall ( start_next_pending_job_execution_request . get_status_details ( ) , statusdetails_binding ) n protocol_marshaller . marshall ( start_next_pending_job_execution_request . get_step_timeout_in_minutes ( ) , steptimeoutinminutes_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_266	log a log message at the give level	C_266_0	public void log ( java . util . logging . level level , char_sequence message ) { n log_record rec = new elki_log_record ( level , message ) n logger . log ( rec ) n }	1
Q_266	log a log message at the give level	C_266_1	public synchronized packet_builder with_double ( final double d ) n { n check_built ( ) n try n { n data_output_stream . write_double ( d ) n } n catch ( final io_exception e ) n { n logger . error ( codstr , e . get_class ( ) , e . get_message ( ) ) n } n return this n }	0
Q_266	log a log message at the give level	C_266_2	public double rad_angle ( term_angle spec ) n { n float nval = spec . get_value ( ) n final term_length . unit unit = spec . get_unit ( ) n if ( spec instanceof term_calc_angle_impl ) n { n final calc_args args = ( ( term_calc ) spec ) . get_args ( ) n return args . evaluate ( get_rad_eval ( ) ) n } n else n { n if ( unit = = null ) n return codint n switch ( unit ) n { n case deg n return ( nval * math . pi ) / number n case grad n return ( nval * math . pi ) / number n case rad n return nval n case turn n return nval * codint * math . pi n default n return codint n } n } n }	0
Q_267	set a svg attribute	C_267_0	public static void set_att ( element el , string name , int d ) { n el . set_attribute ( name , integer . to_string ( d ) ) n }	1
Q_267	set a svg attribute	C_267_1	public void add_listener ( final o_record_listener i_listener ) { n if ( _listeners = = null ) n _listeners = collections . new_set_from_map ( new weak_hash_map < o_record_listener , boolean > ( ) ) n n _listeners . add ( i_listener ) n }	0
Q_267	set a svg attribute	C_267_2	public string read_string ( ) { n if ( read_var_int_flag ( ) ) return read_ascii_string ( ) / / ascii . n / / null , empty , or utf8 . n int char_count = read_var_int_flag ( true ) n switch ( char_count ) { n case codint n return null n case codint n return codstr n } n char_count _ n read_utf8_chars ( char_count ) n return new string ( chars , codint , char_count ) n }	0
Q_268	generic command line invocation	C_268_0	public static void run_cli_application ( class < ? > cls , string [ ] args ) { n serialized_parameterization params = new serialized_parameterization ( args ) n flag help_f = new flag ( parameterizer . help_id ) n params . grab ( help_f ) n flag help_long_f = new flag ( parameterizer . help_long_id ) n params . grab ( help_long_f ) n try { n class_parameter < object > description_p = new class_parameter < > ( parameterizer . description_id , object . class , true ) n params . grab ( description_p ) n if ( description_p . is_defined ( ) ) { n params . clear_errors ( ) n print_description ( description_p . get_value ( ) ) n system . exit ( codint ) n } n / / parse debug parameter n string_parameter debug_p = new string_parameter ( parameterizer . debug_id ) . set_optional ( true ) n params . grab ( debug_p ) n if ( debug_p . is_defined ( ) ) { n parameterizer . parse_debug_parameter ( debug_p ) n } n / / fail silently on errors . n if ( params . get_errors ( ) . size ( ) > codint ) { n params . log_and_clear_reported_errors ( ) n system . exit ( codint ) n } n } n catch ( exception e ) { n print_error_message ( e ) n system . exit ( codint ) n } n try { n track_parameters config = new track_parameters ( params	1
Q_268	generic command line invocation	C_268_1	override n public commerce_discount fetch_by_g_c_first ( long group_id , string coupon_code , n order_by_comparator < commerce_discount > order_by_comparator ) { n list < commerce_discount > list = find_by_g_c ( group_id , coupon_code , codint , codint , n order_by_comparator ) n n if ( list . is_empty ( ) ) { n return list . get ( codint ) n } n n return null n }	0
Q_268	generic command line invocation	C_268_2	public static < t extends view_traverse < t map < string , object > replace_data_references ( n final map < string , object > input , n final t current_context , n final bi_function < integer , string , t > view_map , n final converter < string , string > converter , n final multi_data_context < t , data_context > data n ) n { n return replace_data_references ( input , current_context , view_map , converter , data , false , false ) n }	0
Q_269	last snapshot with commit_id give date	C_269_0	public optional < cdo_snapshot > get_historical ( global_id global_id , local_date_time time_point ) { n arguments_are_not_null ( global_id , time_point ) n n return delegate . get_state_history ( global_id , query_params_builder . with_limit ( codint ) . to ( time_point ) . build ( ) ) n . stream ( ) . find_first ( ) n }	1
Q_269	last snapshot with commit_id give date	C_269_1	private optional < value > value_or_default ( key key , optional < value > value ) { n / / if value is present simply return it n if ( value . is_present ( ) ) { n return value n } n n if ( cache_missing_values ) { n delegate . invalidate ( key ) n } n n return default_value n }	0
Q_269	last snapshot with commit_id give date	C_269_2	public static void write ( file file , byte [ ] data , boolean append ) throws io_exception { n file_output_stream stream = new file_output_stream ( file , append ) n try { n stream . write ( data ) n } finally { n stream . close ( ) n } n }	0
Q_270	return true if both argument be equal or within the range of allow	C_270_0	public static boolean is_equals ( final double x , final double y , final int max_ulps ) { n n final long x_int = double . double_to_raw_long_bits ( x ) n final long y_int = double . double_to_raw_long_bits ( y ) n n final boolean is_equal n if ( ( ( x_int ^ y_int ) sgn_mask ) = = codint ) { n / / number have same sign , there is no risk of overflow n is_equal = math . abs ( x_int _ y_int ) < = max_ulps n } else { n / / number have opposite signs , take care of overflow n final long delta_plus n final long delta_minus n if ( x_int < y_int ) { n delta_plus = y_int _ positive_zero_double_bits n delta_minus = x_int _ negative_zero_double_bits n } else { n delta_plus = x_int _ positive_zero_double_bits n delta_minus = y_int _ negative_zero_double_bits n } n n if ( delta_plus > max_ulps ) { n is_equal = false n } else { n is_equal = delta_minus < = ( max_ulps _ delta_plus ) n } n } n n return is_equal double . is_na_n ( x ) double . is_na_n ( y ) n n }	1
Q_270	return true if both argument be equal or within the range of allow	C_270_1	public static list < string > get ( string name , nullable integer value ) { n return args . integer ( name , value ) n }	0
Q_270	return true if both argument be equal or within the range of allow	C_270_2	public observable < service_response < role_definition_inner create_or_update_with_service_response_async ( string scope , string role_definition_id , role_definition_inner role_definition ) { n if ( scope = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( role_definition_id = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( role_definition = = null ) { n throw new illegal_argument_exception ( codstr ) n } n validator . validate ( role_definition ) n final string api_version = codstr n return service . create_or_update ( scope , role_definition_id , role_definition , api_version , this . client . accept_language ( ) , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < role_definition_inner ( ) { n override n public observable < service_response < role_definition_inner call ( response < response_body > response ) { n try { n service_response < role_definition_inner > client_response = create_or_update_delegate ( response ) n return observable . just ( client_response ) n } catch ( throwable t ) { n return observable . error ( t ) n } n } n } ) n }	0
Q_271	extract all the direct link link s and link affordance _based link from a link representation_model	C_271_0	private static list < uber_data > extract_links ( representation_model < ? > resource ) { n n list < uber_data > data = new array_list < > ( ) n n list < uber_data > links = extract_links ( resource . get_links ( ) ) n list < uber_data > affordance_based_links = extract_affordances ( resource . get_links ( ) ) n n if ( affordance_based_links . is_empty ( ) ) { n data . add_all ( links ) n } else { n data . add_all ( merge_declared_links_into_affordance_links ( affordance_based_links , links ) ) n } n n return data n }	1
Q_271	extract all the direct link link s and link affordance _based link from a link representation_model	C_271_1	public t delete ( string entity_id , mno_http_client http_client ) throws authentication_exception , api_exception { n string json_body = http_client . delete ( get_instance_url ( entity_id ) ) n n type parsing_type = new mno_account_response_parameterized_type ( entitity_class ) n mno_account_response < t > resp = gson . from_json ( json_body , parsing_type ) n n return resp . get_data ( ) n }	0
Q_271	extract all the direct link link s and link affordance _based link from a link representation_model	C_271_2	void set_lexer_and_parser ( final lexer lexer , final parser_with_formula parser ) { n this . lexer = lexer n this . parser = parser n this . parser . set_formula_factory ( this . f ) n this . lexer . remove_error_listeners ( ) n this . parser . remove_error_listeners ( ) n this . parser . set_error_handler ( new bail_error_strategy ( ) ) n }	0
Q_272	shortcut for link set_routing_keyspace	C_272_0	non_null n public self_t set_routing_keyspace ( nullable string routing_keyspace_name ) { n return set_routing_keyspace ( n routing_keyspace_name = = null ? null cql_identifier . from_cql ( routing_keyspace_name ) ) n }	1
Q_272	shortcut for link set_routing_keyspace	C_272_1	public static string_buffer pack ( serialized_record sr ) { n string_buffer sb = new string_buffer ( ) n n array_list < string > keys = new array_list < string > ( sr . fields . key_set ( ) ) n n if ( sr . is_valid ( ) ) n serialized_record . arrange_keys ( keys ) n n for ( int i = codint i < keys . size ( ) i + + ) { n string value = sr . fields . get ( keys . get ( i ) ) n sb . append ( keys . get ( i ) + codstr + value ) n sb . append ( field_separator ) n } n return sb n }	0
Q_272	shortcut for link set_routing_keyspace	C_272_2	public static void to_armeria ( io . netty . handler . codec . http . http_headers in_headers , http_headers out ) { n final iterator < entry < char_sequence , char_sequence iter = in_headers . iterator_char_sequence ( ) n / / choose codint as a default size because it is unlikely we will see more than codint connection headers values , n / / but still allowing for codstr space in the map to reduce the chance of hash code collision . n final char_sequence_map connection_blacklist = n to_lowercase_map ( in_headers . value_char_sequence_iterator ( http_header_names . connection ) , codint ) n string_joiner cookie_joiner = null n while ( iter . has_next ( ) ) { n final entry < char_sequence , char_sequence > entry = iter . next ( ) n final ascii_string a_name = http_header_names . of ( entry . get_key ( ) ) . to_lower_case ( ) n if ( http_to_http2_header_blacklist . contains ( a_name ) connection_blacklist . contains ( a_name ) ) { n continue n } n n / / https / / tools . ietf . org / html / rfc7540 if ( a_name . equals ( http_header_names . te ) ) { n to_http2_headers_filter_te ( entry , out ) n continue n } n n / / cookies must be concatenated into a single octet string . n / / https / / tools . ietf . org / html / rfc7540 final char_sequence value = entry . get_value ( ) n	0
Q_273	exact same metric have already be register	C_273_0	private boolean register_metric_descriptor ( n io . opencensus . metrics . export . metric_descriptor metric_descriptor ) { n string metric_name = metric_descriptor . get_name ( ) n io . opencensus . metrics . export . metric_descriptor existing_metric_descriptor = n registered_metric_descriptors . get ( metric_name ) n if ( existing_metric_descriptor = null ) { n if ( existing_metric_descriptor . equals ( metric_descriptor ) ) { n / / ignore metric_descriptor that are already registered . n return true n } else { n logger . log ( n level . warning , n codstr n + existing_metric_descriptor ) n return false n } n } n registered_metric_descriptors . put ( metric_name , metric_descriptor ) n if ( is_built_in_metric ( metric_name ) ) { n return true / / skip creating metric descriptor for stackdriver built _ in metrics . n } n n span span = tracer . get_current_span ( ) n span . add_annotation ( codstr ) n metric_descriptor stack_driver_metric_descriptor = n stackdriver_export_utils . create_metric_descriptor ( n metric_descriptor , project_id , domain , display_name_prefix , constant_labels ) n n create_metric_descriptor_request request = n create_metric_descriptor_request . new_builder ( ) n . set_name ( project_name . to_string ( ) ) n . set_metric_descriptor ( stack_driver_metric_descriptor ) n . build ( ) n try { n metric_service_client . create_metric_descriptor ( request ) n span . add_annotation ( codstr ) n return true n } catch ( api_exception e ) { n logger . log ( level . warning , codstr , e	1
Q_273	exact same metric have already be register	C_273_1	private void check_identity ( ssl_session session , x509_certificate cert ) throws certificate_exception { n if ( session = = null ) { n throw new certificate_exception ( codstr ) n } n n if ( endpoint_identification_algorithm . https = = identity_alg ) { n string hostname = session . get_peer_host ( ) n api_name_checker . verify_and_throw ( hostname , cert ) n } n }	0
Q_273	exact same metric have already be register	C_273_2	public static < t > void is_null_or_empty ( t [ ] array , string message ) { n n is_true ( array = = null array . length = = codint , message ) n }	0
Q_274	set the concrete strategy for access and manipulate the context	C_274_0	public static void set_context_strategy ( context_strategy context_strategy ) { n if ( context_trampoline . context_strategy = null ) { n throw new illegal_state_exception ( codstr ) n } n n if ( context_strategy = = null ) { n throw new null_pointer_exception ( codstr ) n } n n context_trampoline . context_strategy = context_strategy n }	1
Q_274	set the concrete strategy for access and manipulate the context	C_274_1	override n public notification_chain e_basic_remove_from_container_feature ( notification_chain msgs ) n { n switch ( e_container_feature_id ( ) ) n { n case types_package . jvm_type_constraint_owner n return e_internal_container ( ) . e_inverse_remove ( this , types_package . jvm_constraint_owner_constraints , jvm_constraint_owner . class , msgs ) n } n return super . e_basic_remove_from_container_feature ( msgs ) n }	0
Q_274	set the concrete strategy for access and manipulate the context	C_274_2	public static permission_dialog_fragment get_instance ( perm_bean bean , int request_code ) { n if ( bean = = null ) throw new null_pointer_exception ( codstr ) n bundle extras = new bundle ( codint ) n n / / convert map to two arrays . n hash_map < permission , string > map = ( hash_map < permission , string > ) bean . get_permissions ( ) n n / / put arrays in extras . n extras . put_serializable ( permission , map ) n extras . put_int ( request , request_code ) n n / / set extras in fragment and return . n permission_dialog_fragment fragment = new permission_dialog_fragment ( ) n fragment . set_arguments ( extras ) n return fragment n }	0
Q_275	release the proxy connect write buffer	C_275_0	protected void release_proxy_write_buffer ( ) { n ws_byte_buffer buffer = conn_link . get_write_interface ( ) . get_buffer ( ) n if ( null = buffer ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr + buffer ) n } n buffer . release ( ) n conn_link . get_write_interface ( ) . set_buffer ( null ) n } n }	1
Q_275	release the proxy connect write buffer	C_275_1	public double response ( double [ ] sample ) { n if ( sample . length = a . num_cols ) n throw new illegal_argument_exception ( codstr ) n n d_matrix_r_maj dots = new d_matrix_r_maj ( num_components , codint ) n d_matrix_r_maj s = d_matrix_r_maj . wrap ( a . num_cols , codint , sample ) n n common_ops_ddrm . mult ( v_t , s , dots ) n n return norm_ops_ddrm . norm_f ( dots ) n }	0
Q_275	release the proxy connect write buffer	C_275_2	public static int [ ] remove_from_int_array ( int [ ] a , int value ) { n n if ( a = = null ) { n throw new null_pointer_exception ( codstr ) n } n n int index = _ codint n for ( int i = codint i < a . length i + + ) { n if ( a [ i ] = = value ) { n index = i n break n } n } n if ( index < codint ) { n throw new illegal_argument_exception ( string . format ( codstr , value ) ) n } n n int [ ] array = new int [ a . length _ codint ] n if ( index > codint ) { n system . arraycopy ( a , codint , array , codint , index ) n } n if ( index < a . length ) { n system . arraycopy ( a , index + codint , array , index , array . length _ index ) n } n n return array n }	0
Q_276	write a java object to the stream message	C_276_0	override n public void write_object ( object value ) throws jms_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( tc , codstr ) n n / / check if the producer has promised not to modify the payload after it codstr write_object ( object ) codstr jms_bytes_message_impl . write_object / / check that we are in write mode ( doing this test here ensures n / / any error message refers to the correct method ) n check_body_writeable ( codstr ) n n if ( value instanceof byte [ ] ) n write_bytes ( ( byte [ ] ) value ) n else if ( value instanceof string ) n write_utf ( ( string ) value ) n else if ( value instanceof integer ) n write_int ( ( ( integer ) value ) . int_value ( ) ) n else if ( value instanceof byte ) n write_byte ( ( ( byte ) value ) . byte_value ( ) ) n else if ( value instanceof short ) n write_short ( ( ( short ) value ) . short_value ( ) ) n else if ( value instanceof long ) n write_long ( ( ( long ) value ) . long_value ( ) ) n else if ( value instanceof float ) n write_float ( ( ( float ) value ) . float_value ( ) ) n else if ( value instanceof double ) n write_double	1
Q_276	write a java object to the stream message	C_276_1	public < t extends roc_multi_class > t evaluate_roc_multi_class ( java_rdd < data_set > data , int threshold_steps , int evaluation_minibatch_size ) { n return ( t ) do_evaluation ( data , new org . deeplearning4j . eval . roc_multi_class ( threshold_steps ) , evaluation_minibatch_size ) n }	0
Q_276	write a java object to the stream message	C_276_2	private void flush ( boolean end_of_record ) throws io_exception { n if ( buffer = = null ) { n if ( end_of_record eor_sent ) { n return n } n ensure_buffer_available ( ) n } n if ( buffer . position ( ) = = codint ( end_of_record eor_sent ) ) { n / / nothing to flush n buffer . unlock_buffer ( ) n } else { n if ( send_input_events ) { n event_pipeline . fire ( input . from_sink ( buffer , end_of_record ) , n channel ) n } else { n event_pipeline . fire ( output . from_sink ( buffer , end_of_record ) , n channel ) n } n eor_sent = end_of_record n } n buffer = null n }	0
Q_277	inject_and_post_construct base on a class add for cdi tagint	C_277_0	private static object inject_and_post_construct ( object injection_provider , class klass , list injected_bean_storage ) n { n object instance = null n if ( injection_provider = null ) n { n try n { n n object managed_object = _factory_finder_provider_factory . injection_provider_inject_class_method . invoke ( injection_provider , klass ) n n instance = _factory_finder_provider_factory . managed_object_get_object_method . invoke ( managed_object , null ) n n if ( instance = null ) { n n object creation_meta_data = _factory_finder_provider_factory . managed_object_get_context_data_method . invoke n ( managed_object , creational_context . class ) n n add_bean_entry ( instance , creation_meta_data , injected_bean_storage ) n n _factory_finder_provider_factory . injection_provider_post_construct_method . invoke ( n injection_provider , instance , creation_meta_data ) n } n } catch ( exception ex ) n { n throw new faces_exception ( ex ) n } n } n return instance n }	1
Q_277	inject_and_post_construct base on a class add for cdi tagint	C_277_1	public observable < page < job_execution_inner list_by_step_async ( final string resource_group_name , final string server_name , final string job_agent_name , final string job_name , final uuid job_execution_id , final string step_name ) { n return list_by_step_with_service_response_async ( resource_group_name , server_name , job_agent_name , job_name , job_execution_id , step_name ) n . map ( new func1 < service_response < page < job_execution_inner , page < job_execution_inner ( ) { n override n public page < job_execution_inner > call ( service_response < page < job_execution_inner response ) { n return response . body ( ) n } n } ) n }	0
Q_277	inject_and_post_construct base on a class add for cdi tagint	C_277_2	private int parse_offset_fields_with_pattern ( string text , int start , object [ ] pattern_items , boolean force_single_hour_digit , int fields [ ] ) { n assert ( fields = null fields . length > = codint ) n fields [ codint ] = fields [ codint ] = fields [ codint ] = codint n n boolean failed = false n int offset_h , offset_m , offset_s n offset_h = offset_m = offset_s = codint n int idx = start n int [ ] tmp_parsed_len = { codint } n for ( int i = codint i < pattern_items . length i + + ) { n if ( pattern_items [ i ] instanceof string ) { n string pat_str = ( string ) pattern_items [ i ] n int len = pat_str . length ( ) n if ( text . region_matches ( true , idx , pat_str , codint , len ) ) { n failed = true n break n } n idx + = len n } else { n assert ( pattern_items [ i ] instanceof gmt_offset_field ) n gmt_offset_field field = ( gmt_offset_field ) pattern_items [ i ] n char field_type = field . get_type ( ) n if ( field_type = = codstr ) { n int max_digits = force_single_hour_digit ? codint codint n offset_h = parse_offset_field_with_localized_digits ( text , idx , codint , max_digits , codint , max_offset_hour , tmp_parsed_len ) n } else if ( field_type = = codstr )	0
Q_278	specify that the app should fail to start and that the give failure message should be see during app startup	C_278_0	public app_validator fails_with ( string expected_failure ) { n strings_to_find . add ( expected_failure ) n strings_to_find . add ( app_fail_code ) n server . add_ignored_errors ( collections . singleton_list ( expected_failure ) ) n return this n }	1
Q_278	specify that the app should fail to start and that the give failure message should be see during app startup	C_278_1	public version parse_version ( final string version ) { n check_not_null ( version ) n try { n return version_scheme . parse_version ( version ) n } n catch ( invalid_version_specification_exception e ) { n throw throwables . propagate ( e ) n } n }	0
Q_278	specify that the app should fail to start and that the give failure message should be see during app startup	C_278_2	public static class < ? > get_outer_class ( class < ? > cl ) { n class < ? > enclosing_class n while ( ( enclosing_class = cl . get_enclosing_class ( ) ) = null ) { n cl = enclosing_class n } n return cl n }	0
Q_279	copy the reader to the writer	C_279_0	public static void copy ( xml_stream_reader reader , xml_stream_writer writer ) throws xml_stream_exception { n copy ( reader , writer , false , false ) n }	1
Q_279	copy the reader to the writer	C_279_1	public static < k , v > map < k , v > to_inverted_map ( iterable < ? extends k > keys , function1 < ? super k , v > compute_values ) { n return iterator_extensions . to_inverted_map ( keys . iterator ( ) , compute_values ) n }	0
Q_279	copy the reader to the writer	C_279_2	public static synchronized void migrate ( project_manager project_manager , command_executor executor ) { n require_non_null ( project_manager , codstr ) n require_non_null ( executor , codstr ) n n final repository_support < project_metadata > metadata_repo = n new repository_support < > ( project_manager , executor , n entry _ > convert_with_jackson ( entry , project_metadata . class ) ) n n final user_and_timestamp user_and_timestamp = user_and_timestamp . of ( author ) n n / / check whether tokens are migrated or not . n final entry < ? > token_entry = project_manager . get ( internal_proj ) . repos ( ) n . get ( project . repo_dogma ) n . get_or_null ( revision . head , token_json ) . join ( ) n final collection < token > migrated_tokens = n token_entry = = null ? migrate_tokens ( project_manager , executor ) immutable_set . of ( ) n migrated_tokens . for_each ( token _ > logger . info ( codstr { } codstr , token . id ( ) ) ) n n / / create a metadata . json file if it does not exist in the meta repository of the project . n / / use safe_project_manager in order not to migrate internal projects . n final safe_project_manager safe_project_manager = new safe_project_manager ( project_manager ) n n / / check whether codstr exists or not in case of upgrading from number . n safe_project_manager . list ( ) . values ( ) . for_each ( p	0
Q_280	write this object to the object_output_stream	C_280_0	private void write_object ( object_output_stream out ) throws io_exception { n n final boolean is_trace_on = trace_component . is_any_tracing_enabled ( ) n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . entry ( tc , codstr + this ) n n / / use v1 unless features are present that require v2 . n int version = constants . timer_task_v1 n if ( parsed_schedule = null ) { n version = constants . timer_task_v2 n } n n out . default_write_object ( ) n n / / write out header information first . n out . write ( eyecatcher ) n out . write_short ( platform ) n out . write_short ( version ) n n / / write out the instance data . n out . write_object ( j2ee_name . get_bytes ( ) ) n out . write_object ( user_info_bytes ) n n switch ( version ) { n n case constants . timer_task_v1 n out . write_long ( expiration ) n out . write_long ( interval ) n break n n case constants . timer_task_v2 n out . write_object ( parsed_schedule ) n out . write_int ( method_id ) n out . write_object ( automatic_method_name ) n out . write_object ( automatic_class_name ) n break n n default n / / cannot occur since initialize above n break n } n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . exit ( tc , codstr ) n }	1
Q_280	write this object to the object_output_stream	C_280_1	public static < t extends tree > matcher < t > is_primitive_array_type ( ) { n return new matcher < t > ( ) { n override n public boolean matches ( tree t , visitor_state state ) { n type type = get_type ( t ) n return type = null n state . get_types ( ) . is_array ( type ) n state . get_types ( ) . elemtype ( type ) . is_primitive ( ) n } n } n }	0
Q_280	write this object to the object_output_stream	C_280_2	private static long _channel_copy2 ( nonnull will_not_close final readable_byte_channel a_src , n nonnull will_not_close final writable_byte_channel a_dest ) throws io_exception n { n long n_bytes_written = codint n final byte_buffer a_buffer = byte_buffer . allocate_direct ( codint * codint ) n while ( a_src . read ( a_buffer ) = _ codint ) n { n / / prepare the buffer to be drained n a_buffer . flip ( ) n n / / make sure that the buffer was fully drained n while ( a_buffer . has_remaining ( ) ) n n_bytes_written + = a_dest . write ( a_buffer ) n n / / make the buffer empty , ready for filling n a_buffer . clear ( ) n } n return n_bytes_written n }	0
Q_281	call security code to read the subject name from the key in the keystore	C_281_0	private string get_certicate_subject ( atomic_service_reference < object > service_ref , properties ssl_properties ) { n string certificate_dn = null n try { n certificate_dn = ssl_helper . get_client_key_cert_subject ( service_ref , ssl_properties ) n } catch ( key_store_exception ke ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . error ( tc , codstr , mongo , id , ke ) n } n throw new runtime_exception ( tr . format_message ( tc , codstr , mongo , id , ke ) ) n } catch ( certificate_exception ce ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . error ( tc , codstr , mongo , id , ce ) n } n throw new runtime_exception ( tr . format_message ( tc , codstr , mongo , id , ce ) ) n } n n / / handle null . cannot find the client key n if ( certificate_dn = = null ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . error ( tc , codstr , mongo , id ) n } n throw new runtime_exception ( tr . format_message ( tc , codstr , mongo , id ) ) n } n n return certificate_dn n }	1
Q_281	call security code to read the subject name from the key in the keystore	C_281_1	public boolean is_user_authorized ( string request_id , string user_id , singularity_authorization_scope scope ) { n final function < string , string > request_uri = ( host ) _ > string . format ( auth_check_user_format , get_api_base ( host ) , request_id , user_id ) n map < string , object > params = collections . singleton_map ( codstr , scope . name ( ) ) n http_response response = execute_get_single_with_params ( request_uri , codstr , codstr , optional . of ( params ) ) n return response . is_success ( ) n }	0
Q_281	call security code to read the subject name from the key in the keystore	C_281_2	override n public set < header_field > get_headers ( ) { n hash_set < header_field > header_fields = new hash_set < header_field > ( ) n n if ( _headers . size ( ) > codint ) { n iterator < string > header_names = _headers . key_set ( ) . iterator ( ) n while ( header_names . has_next ( ) ) { n iterator < http_header_field > headers = _headers . get ( header_names . next ( ) ) . iterator ( ) n while ( headers . has_next ( ) ) { n http_header_field field = headers . next ( ) n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr , codstr + field . get_name ( ) + codstr + field . as_string ( ) ) n } n header_fields . add ( field ) n } n } n } n n return header_fields n }	0
Q_282	get the js_msg_part which contain the jmf message describe by the	C_282_0	synchronized final js_msg_part get_api_if_fluffed ( ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n if ( api = = null ) n sib_tr . debug ( this , tc , codstr ) n } n return api n }	1
Q_282	get the js_msg_part which contain the jmf message describe by the	C_282_1	override n suppress_warnings ( codstr ) n public void write ( channel_handler_context ctx , object msg , channel_promise promise ) { n if ( fail_cause = null ) { n promise . set_failure ( fail_cause ) n reference_count_util . release ( msg ) n } else { n buffered_writes . add ( new channel_write ( msg , promise ) ) n } n }	0
Q_282	get the js_msg_part which contain the jmf message describe by the	C_282_2	public e_enum get_rendering_intent_ocri ( ) { n if ( rendering_intent_ocrie_enum = = null ) { n rendering_intent_ocrie_enum = ( e_enum ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return rendering_intent_ocrie_enum n }	0
Q_283	set the boolean tagstr of one of the flag in the flag field of th message	C_283_0	private final void set_flag_value ( byte flag_bit , boolean value ) { n if ( value ) { n flags = ( byte ) ( get_flags ( ) flag_bit ) n } n else { n flags = ( byte ) ( get_flags ( ) ( flag_bit ) ) n } n }	1
Q_283	set the boolean tagstr of one of the flag in the flag field of th message	C_283_1	public static text_element code ( string text ) { n text_element element = text ( text ) n element . text_styles . add ( text_style . code ) n return element n }	0
Q_283	set the boolean tagstr of one of the flag in the flag field of th message	C_283_2	public static list < string > get_available_locale_suffixes_for_bundle ( string message_bundle_path , string file_suffix ) { n return get_available_locale_suffixes_for_bundle ( message_bundle_path , file_suffix , null ) n }	0
Q_284	give a wsbb we be add a byte value to the last buffer	C_284_0	static public ws_byte_buffer [ ] put_byte_array ( ws_byte_buffer [ ] buffers , byte [ ] value , bnf_headers_impl bnf_obj ) { n / / lidb2356 _ codint byte [ ] / offset / length support n return put_byte_array ( buffers , value , codint , value . length , bnf_obj ) n }	1
Q_284	give a wsbb we be add a byte value to the last buffer	C_284_1	public static class < ? > resolve_return_type_argument ( method method , class < ? > generic_ifc ) { n assert . not_null ( method , codstr ) n type return_type = method . get_return_type ( ) n type generic_return_type = method . get_generic_return_type ( ) n if ( return_type . equals ( generic_ifc ) ) { n if ( generic_return_type instanceof parameterized_type ) { n parameterized_type target_type = ( parameterized_type ) generic_return_type n type [ ] actual_type_arguments = target_type . get_actual_type_arguments ( ) n type type_arg = actual_type_arguments [ codint ] n if ( ( type_arg instanceof wildcard_type ) ) { n return ( class < ? > ) type_arg n } n } n else { n return null n } n } n return resolve_type_argument ( ( class < ? > ) return_type , generic_ifc ) n }	0
Q_284	give a wsbb we be add a byte value to the last buffer	C_284_2	public void check_type_declaration ( decl . type decl ) { n environment environment = new environment ( ) n / / check type is contractive n check_contractive ( decl ) n / / check variable declaration is not empty n check_variable_declaration ( decl . get_variable_declaration ( ) , environment ) n / / check the type invariant n check_conditions ( decl . get_invariant ( ) , true , environment ) n }	0
Q_285	default non persistent mapping be express_nonpersistent null non persistent mapping be	C_285_0	override n public void set_non_persistent_mapping ( string non_persistent_mapping ) throws jms_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( this , tc , codstr , non_persistent_mapping ) n n if ( non_persistent_mapping = = null ) { n throw ( jms_exception ) jms_error_utils . new_throwable ( n jms_exception . class , n codstr , n new object [ ] { codstr , null } , n tc n ) n } n n if ( non_persistent_mapping . equals ( api_jms_constants . mapping_best_effort_nonpersistent ) n non_persistent_mapping . equals ( api_jms_constants . mapping_express_nonpersistent ) n non_persistent_mapping . equals ( api_jms_constants . mapping_reliable_nonpersistent ) n non_persistent_mapping . equals ( api_jms_constants . mapping_reliable_persistent ) n non_persistent_mapping . equals ( api_jms_constants . mapping_assured_persistent ) n non_persistent_mapping . equals ( api_jms_constants . mapping_none ) ) { n jca_managed_connection_factory . set_non_persistent_mapping ( non_persistent_mapping ) n } n else if ( non_persistent_mapping . equals ( api_jms_constants . mapping_as_sib_destination ) ) { n jca_managed_connection_factory . set_non_persistent_mapping ( api_jms_constants . mapping_none ) n } n else { n throw ( jms_exception ) jms_error_utils . new_throwable ( n jms_exception . class , n codstr , n new object [ ] { codstr , non_persistent_mapping } , n tc n ) n } n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( this , tc , codstr ) n }	1
Q_285	default non persistent mapping be express_nonpersistent null non persistent mapping be	C_285_1	public string get_mount_point ( alluxio_uri uri ) throws invalid_path_exception { n string path = uri . get_path ( ) n string last_mount = root n try ( lock_resource r = new lock_resource ( m_read_lock ) ) { n for ( map . entry < string , mount_info > entry m_state . get_mount_table ( ) . entry_set ( ) ) { n string mount = entry . get_key ( ) n / / we choose a new candidate path if the previous candidatepath is a prefix n / / of the current alluxio_path and the alluxio_path is a prefix of the path n if ( mount . equals ( root ) path_utils . has_prefix ( path , mount ) n path_utils . has_prefix ( mount , last_mount ) ) { n last_mount = mount n } n } n return last_mount n } n }	0
Q_285	default non persistent mapping be express_nonpersistent null non persistent mapping be	C_285_2	public static matcher < object > has_single_failure_containing ( final string string ) { n return new base_matcher < object > ( ) { n public boolean matches ( object item ) { n return item . to_string ( ) . contains ( string ) failure_count_is ( codint ) . matches ( item ) n } n n public void describe_to ( description description ) { n description . append_text ( codstr + string ) n } n } n }	0
Q_286	call by d to activate this service	C_286_0	protected void activate ( component_context compcontext ) { n if ( tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr + this . get_class ( ) . get_name ( ) ) n } n this . user_transaction . activate ( compcontext ) n this . transaction_manager . activate ( compcontext ) n }	1
Q_286	call by d to activate this service	C_286_1	private void print_warning ( source_position pos , string msg ) { n configuration . root . print_warning ( pos , msg ) n }	0
Q_286	call by d to activate this service	C_286_2	private boolean remove_file ( file f ) { n if ( utils . file_is_file ( f ) ) { n return utils . delete_file ( f ) n } else { n / / delete directory f . n boolean ok = true n / / remove all the children . n file children [ ] = utils . list_files ( f ) n if ( children = null ) { n for ( file child children ) { n ok = remove_file ( child ) n } n } n / / once children are deleted , remove the directory n if ( ok ) { n ok = utils . delete_file ( f ) n } n return ok n } n }	0
Q_287	lazy activation and retrieval of the message_router	C_287_0	protected ws_trace_router_impl get_trace_router ( ) { n if ( trace_router = = null ) { n / / first activation . n trace_router = ws_trace_router_singleton . singleton n n / / pass the message_router to the tr_service via the tr_configurator . n tr_configurator . set_trace_router ( trace_router ) n } n n return trace_router n }	1
Q_287	lazy activation and retrieval of the message_router	C_287_1	public static string to_upper_case ( u_locale locale , string str ) { n return to_upper_case ( get_case_locale ( locale ) , str ) n }	0
Q_287	lazy activation and retrieval of the message_router	C_287_2	public static float string_to_float ( string str_string , int ib_scale ) throws exception n { n number obj_data n init_globals ( ) / / make sure you have the utilities n if ( ( str_string = = null ) ( str_string . equals ( constant . blank ) ) ) n return null n str_string = data_converters . strip_non_number ( str_string ) n try { n synchronized ( g_number_format ) n { n obj_data = g_number_format . parse ( str_string ) n } n if ( ( obj_data instanceof float ) ) n { n if ( obj_data instanceof number ) n obj_data = new float ( obj_data . float_value ( ) ) n else n obj_data = null n } n } catch ( parse_exception ex ) { n obj_data = null n } n if ( obj_data = = null ) n { n try { n obj_data = new float ( str_string ) n } catch ( number_format_exception ex ) { n throw ex n } n } n if ( ib_scale = _ codint ) n obj_data = new float ( math . floor ( ( ( float ) obj_data ) . float_value ( ) * math . pow ( codint , ib_scale ) + number ) / math . pow ( codint , ib_scale ) ) n return ( float ) obj_data n }	0
Q_288	validate that there be no unknown argument or value specify	C_288_0	"protected void validate_argument_list ( string [ ] args ) { n check_required_arguments ( args ) n n / / skip the first argument as it is the task name n / / arguments and values come in pairs ( expect _ password ) . n / / anything outside of that pattern is invalid . n / / loop through , jumping in pairs except when we encounter n / / _ password _ that may be an interactive prompt which won codstr = codstr = codstr invalid_arg codstr missing_value "" , arg ) ) n } n } n } n }"	1
Q_288	validate that there be no unknown argument or value specify	C_288_1	public list < path > get_services ( ) { n return ( services = = null ) n ? null n services . stream ( ) . map ( file to_path ) . collect ( collectors . to_list ( ) ) n }	0
Q_288	validate that there be no unknown argument or value specify	C_288_2	protected void register_bean ( final string name , final bean_definition bean_definition ) { n beans . put ( name , bean_definition ) n n if ( petite_config . is_use_alt_bean_names ( ) ) { n return n } n n class type = bean_definition . type ( ) n n if ( annotation_resolver . bean_has_annotation_name ( type ) ) { n return n } n n class [ ] interfaces = class_util . resolve_all_interfaces ( type ) n n for ( class an_interface interfaces ) { n string alt_name = annotation_resolver . resolve_bean_name ( an_interface , petite_config . get_use_full_type_names ( ) ) n n if ( name . equals ( alt_name ) ) { n continue n } n n if ( beans . contains_key ( alt_name ) ) { n continue n } n n if ( beans_alt . contains_key ( alt_name ) ) { n bean_definition existing = beans_alt . get ( alt_name ) n n if ( existing = null ) { n beans_alt . put ( alt_name , null ) / / store null as value to mark that alt name is duplicate n } n } n else { n beans_alt . put ( alt_name , bean_definition ) n } n } n }	0
Q_289	this walk the hash table and set the internal count of object	C_289_0	private void count_objects ( ) n throws io_exception , n eof_exception , n file_manager_exception , n class_not_found_exception , n hashtable_on_disk_exception { n println ( codstr + filename + codstr ) n n iteration_lock . p ( ) n n int count = codint n try { n for ( int i = codint i < header . tablesize ( ) i + + ) { n n / / n / / we want to drop the lock between each iteration so that other n / / threads can continue to work n / / n long next = get_htindex ( i , header . current_table_id ( ) ) / / jrc codint / codint / codint use cached entry n n while ( next = codint ) { n count + + n if ( ( count codint ) = = codint ) { n if ( debug ) n print ( codstr ) n } n n filemgr . seek ( next ) n next = filemgr . read_long ( ) n } n } n n header . set_num_objects ( count ) n header . write ( ) n } finally { n iteration_lock . v ( ) n } n println ( codstr + count + codstr ) n }	1
Q_289	this walk the hash table and set the internal count of object	C_289_1	private void save_matrix ( ) { n n for ( string chain_id current_chain_i_ds ) { n biological_assembly_transformation transformation = new biological_assembly_transformation ( ) n transformation . set_rotation_matrix ( current_matrix . get_array ( ) ) n transformation . set_translation ( shift ) n transformation . set_id ( string . value_of ( model_number ) ) n transformation . set_chain_id ( chain_id ) n transformations . add ( transformation ) n } n n if ( transformation_map . contains_key ( current_bio_molecule ) ) { n bio_assembly_info bio_assembly = new bio_assembly_info ( ) n bio_assembly . set_id ( current_bio_molecule ) n bio_assembly . set_transforms ( transformations ) n transformation_map . put ( current_bio_molecule , bio_assembly ) n } n }	0
Q_289	this walk the hash table and set the internal count of object	C_289_2	public boolean is_open_in_results ( ) { n n if ( i_cms_gallery_provider_constants . gallery_tab_id . cms_tab_results . name ( ) . equals ( m_search_object . get_tab_id ( ) ) ) { n return true n } n return false n }	0
Q_290	get a hashtable of value from the subject without trace the subject or hashtable	C_290_0	sensitive n public hashtable < string , ? > get_sensitive_hashtable_from_subject ( sensitive final subject subject ) { n if ( system . get_security_manager ( ) = = null ) { n return get_hashtable_from_subject ( subject ) n } else { n return access_controller . do_privileged ( new get_hashtable_privileged_action ( subject ) ) n } n }	1
Q_290	get a hashtable of value from the subject without trace the subject or hashtable	C_290_1	public void pause_job ( string name ) throws mangoo_scheduler_exception { n objects . require_non_null ( name , required . name . to_string ( ) ) n n try { n job_key job_key = get_job_key ( name ) n this . quartz_scheduler . pause_job ( job_key ) n } catch ( scheduler_exception mangoo_scheduler_exception e ) { n throw new mangoo_scheduler_exception ( e ) n } n }	0
Q_290	get a hashtable of value from the subject without trace the subject or hashtable	C_290_2	public static web_socket_client_handshaker new_handshaker ( n uri web_socket_url , web_socket_version version , string subprotocol , n boolean allow_extensions , http_headers custom_headers , int max_frame_payload_length , n boolean perform_masking , boolean allow_mask_mismatch , long force_close_timeout_millis ) { n if ( version = = v13 ) { n return new web_socket_client_handshaker13 ( n web_socket_url , v13 , subprotocol , allow_extensions , custom_headers , n max_frame_payload_length , perform_masking , allow_mask_mismatch , force_close_timeout_millis ) n } n if ( version = = v08 ) { n return new web_socket_client_handshaker08 ( n web_socket_url , v08 , subprotocol , allow_extensions , custom_headers , n max_frame_payload_length , perform_masking , allow_mask_mismatch , force_close_timeout_millis ) n } n if ( version = = v07 ) { n return new web_socket_client_handshaker07 ( n web_socket_url , v07 , subprotocol , allow_extensions , custom_headers , n max_frame_payload_length , perform_masking , allow_mask_mismatch , force_close_timeout_millis ) n } n if ( version = = v00 ) { n return new web_socket_client_handshaker00 ( n web_socket_url , v00 , subprotocol , custom_headers , max_frame_payload_length , force_close_timeout_millis ) n } n n throw new web_socket_handshake_exception ( codstr + version + codstr ) n }	0
Q_291	handle all the task involve in perform the ssl handshake	C_291_0	public static ssl_engine_result handle_handshake ( ssl_connection_link conn_link , n ws_byte_buffer net_buffer , n ws_byte_buffer decrypted_net_buffer , n ws_byte_buffer encrypted_app_buffer , n ssl_engine_result in_result , n ssl_handshake_completed_callback handshake_callback , n boolean from_callback ) throws io_exception , read_only_buffer_exception { n final boolean b_trace = trace_component . is_any_tracing_enabled ( ) n if ( b_trace tc . is_entry_enabled ( ) ) { n tr . entry ( tc , codstr + conn_link . get_ssl_engine ( ) . hash_code ( ) ) n } n ssl_engine_result result = in_result n n ssl_engine engine = conn_link . get_ssl_engine ( ) n tcp_read_request_context device_read_context = conn_link . get_device_read_interface ( ) n tcp_write_request_context device_write_context = conn_link . get_device_write_interface ( ) n jsse_helper jsse_helper = conn_link . get_channel ( ) . get_jsse_helper ( ) n n / / check to see if any alpn negotiator is on the classpath if so , and if this is the first time through this n / / method for the current connection ( not a callback ) , register the current engine and link n n int amount_to_write = codint n boolean first_pass = true n handshake_status hsstatus = handshake_status . need_wrap n status status = status . ok n if ( null = result ) { n hsstatus = result . get_handshake_status ( ) n status = result . get_status ( ) n } n status initial_status = status n / / handle unique case where a callback re _ enters after a buffer_underflow . need to reset buffers .	1
Q_291	handle all the task involve in perform the ssl handshake	C_291_1	public static action charset ( final string charset ) { n return new action ( r _ > { n r . set_character_encoding ( charset ) n return r n } ) n }	0
Q_291	handle all the task involve in perform the ssl handshake	C_291_2	suppress_warnings ( { codstr , codstr } ) n public contributor get_people ( string login , log logger ) { n for ( final developer devel get_developers ( ) ) { n if ( devel = null ) { n if ( logger = null logger . is_debug_enabled ( ) ) { n logger . debug ( n codstr codstr to the developer [ id = codstr name = codstr email = codstr ] codstr id codstr login codstr selecting the developer [ id = codstr name = codstr email = codstr ] codstr comparing codstr + login / / non _ nls _ codint n + codstr + contrib . get_name ( ) / / non _ nls _ codint n + codstr + contrib . get_email ( ) / / non _ nls _ codint n + codstr ) / / non _ nls _ codint n } n string idprop = null n final properties props = contrib . get_properties ( ) n if ( props = null ) { n idprop = props . get_property ( codstr , null ) / / non _ nls _ codint n if ( idprop = = null ) { n idprop = props . get_property ( codstr , null ) / / non _ nls _ codint n } n } n if ( login . equals ( contrib . get_name ( ) ) n login . equals ( contrib . get_email ( ) ) n login .	0
Q_292	this method be call after a call be make to adjust_buffers_for_jsse follow by a	C_292_0	"public static void reset_buffers_after_jsse ( ws_byte_buffer [ ] buffers , int [ ] limit_info ) { n / / handle case where not changes were made in recent call to adjust_buffers_for_jsse n if ( limit_info = = null ) { n return n } n n int buffer_index = limit_info [ codint ] n int buffer_limit = limit_info [ codint ] n / / ensure buffer index is within array bounds . n if ( buffers . length > buffer_index ) { n ws_byte_buffer buffer = buffers [ buffer_index ] n / / ensure the buffer is not null and the limit won codstr reset_buffers_after_jsse buffer [ codstr ] from codstr to "" + buffer_limit ) n } n / / make the adjustment . n buffer . limit ( buffer_limit ) n } n } n }"	1
Q_292	this method be call after a call be make to adjust_buffers_for_jsse follow by a	C_292_1	incubating n public static < a , b , c , d , e , f > answer < void > answer_void ( void_answer6 < a , b , c , d , e , f > answer ) { n return to_answer ( answer ) n }	0
Q_292	this method be call after a call be make to adjust_buffers_for_jsse follow by a	C_292_2	public g get_gene ( ) { n assert _chromosomes = null n assert _chromosomes . get ( codint ) = null n n return _chromosomes . get ( codint ) . get_gene ( ) n }	0
Q_293	todo move these method into the dedicate utility class	C_293_0	protected static string_builder handle_exception_start ( exception e ) { n log . warning ( exception_utils . get_stack_trace ( e ) ) n string_builder sb = new string_builder ( ) n if ( e . get_message ( ) = null ) { n sb . append ( e . get_message ( ) ) . append ( codstr ) n } n if ( e . get_cause ( ) = null e . get_cause ( ) . get_message ( ) = null ) { n sb . append ( e . get_cause ( ) . get_message ( ) ) . append ( codstr ) n } n return sb n }	1
Q_293	todo move these method into the dedicate utility class	C_293_1	boolean is_task ( int sequence ) { n int index = to_index ( sequence ) n check_sequence ( index , sequence ) n return is_task [ index ] n }	0
Q_293	todo move these method into the dedicate utility class	C_293_2	private void all_relation ( options opt , relation_type rt , class_doc from ) { n string tagname = rt . lower n for ( tag tag from . tags ( tagname ) ) { n string t [ ] = tokenize ( tag . text ( ) ) / / l _ src label l _ dst target n t = t . length = = codint ? new string [ ] { codstr , codstr , codstr , t [ codint ] } t / / shorthand n if ( t . length = codint ) { n system . err . println ( codstr + from + codstr + tagname + codstr + tag . text ( ) ) n return n } n class_doc to = from . find_class ( t [ codint ] ) n if ( to = null ) { n if ( hidden ( to ) ) n continue n relation ( opt , rt , from , to , t [ codint ] , t [ codint ] , t [ codint ] ) n } else { n if ( hidden ( t [ codint ] ) ) n continue n relation ( opt , rt , from , from . to_string ( ) , to , t [ codint ] , t [ codint ] , t [ codint ] , t [ codint ] ) n } n } n }	0
Q_294	invoke by timer_handler or timer_np_listener upon timer expiration	C_294_0	public void invoke_callback ( timer timer , int method_id , boolean persistent_global_tx ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n tr . entry ( tc , codstr + timer ) n n ejs_deployed_support s = new ejs_deployed_support ( ) n s . is_persistent_timeout_global_tx = persistent_global_tx / / rtc126471 n try n { n / / the codstr wrapper now uses the ejb number style pre_invoke , n / / to support poj_os that implement timed_object . dnumber n n ejb_method_info_impl method_info = method_infos [ method_id ] n object [ ] args = ( method_info . iv_number_of_method_parms = = codint ) ? new object [ ] { timer } new object [ codint ] / / f743 _ codint n object timed_obj = container . ejb_pre_invoke ( this , method_id , s , args ) / / f743 _ codint n n if ( method_info . get_around_interceptor_proxies ( ) = null ) / / f743 _ codint , f743 _ number n { n container . invoke ( s , timer ) n } n else n { n / / if the ejb implements timed_object , then the codstr method is n / / invoked directly ( better performance ) otherwise , reflections is n / / used to call the user specified codstr method . dnumber n / / f743 _ codint _ this optimization is only relevant for programmatically n / / created timers . n if	1
Q_294	invoke by timer_handler or timer_np_listener upon timer expiration	C_294_1	public request < guardian_templates > get_templates ( ) { n string url = base_url n . new_builder ( ) n . add_path_segments ( codstr ) n . build ( ) n . to_string ( ) n custom_request < guardian_templates > request = new custom_request < > ( client , url , codstr , new type_reference < guardian_templates > ( ) { n } ) n request . add_header ( codstr , codstr + api_token ) n return request n }	0
Q_294	invoke by timer_handler or timer_np_listener upon timer expiration	C_294_2	override n public void render ( gui_renderer renderer ) n { n update ( ) n if ( string_utils . is_empty ( cache ) ) n return n n int x = screen_position . x ( ) n int y = screen_position . y ( ) n int z = z_index . get_as_int ( ) n clip_area area = null n if ( parent instanceof ui_component ) n z + = parent . get_z_index ( ) n if ( parent instanceof i_clipable ) n area = ( ( i_clipable ) parent ) . get_clip_area ( ) n render ( renderer , x , y , z , area ) n }	0
Q_295	get the uuid for this consumer manager	C_295_0	public sib_uuid8 get_uuid ( ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n { n sib_tr . entry ( tc , codstr ) n sib_tr . exit ( tc , codstr , _cm_uuid ) n } n n return _cm_uuid n }	1
Q_295	get the uuid for this consumer manager	C_295_1	public element_base register ( string path , plugin_definition def , i_property_provider property_source ) throws exception { n if ( def . is_forbidden ( ) ) { n log . info ( codstr + def . get_name ( ) + codstr ) n return null n } n n if ( def . is_disabled ( ) ) { n log . info ( codstr + def . get_name ( ) + codstr ) n return null n } n n element_base parent = parent_from_path ( path ) n element_base plugin = parent = = null ? null def . create_element ( parent , property_source , false ) n string def_plugin_id = get_default_plugin_id ( ) n n if ( plugin instanceof element_ui def_plugin_id . is_empty ( ) n ( def_plugin_id . equals_ignore_case ( def . get_id ( ) ) def_plugin_id . equals_ignore_case ( def . get_name ( ) ) ) ) { n ( ( element_ui ) plugin ) . activate ( true ) n } n return plugin n }	0
Q_295	get the uuid for this consumer manager	C_295_2	protected intent get_service_intent ( ) { n final intent intent = new intent ( google_play . vending_action ) n intent . set_package ( google_play . android_installer ) n return intent n }	0
Q_296	the callback from the alarm thread	C_296_0	void fire_internal_alarm ( ) n { n / / what time is it now ? n long now = system . current_time_millis ( ) n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( tc , codstr , new object [ ] { this , long . value_of ( now ) } ) n n / / lock the lists n synchronized ( _fired_alarms_lock ) n { n synchronized ( _pending_alarms_lock ) n { n / / find the next alarm to be run n mp_alarm_impl alarm = ( mp_alarm_impl ) _pending_alarms . get_first ( ) n / / while cancel_all has not been called and n / / the list of pending alarms is not empty and n / / the current alarm codstr pending codstr firing codstr alarm fire codstr s context object n alarm_listener . alarm ( alarm_context ) n } n catch ( throwable e ) n { n / / ffdc the problem with the alarm but swallow the exception n / / and carry on , in the hope that the me can limp on regardless n ffdc_filter . process_exception ( n e , n codstr , n codstr , n new object [ ] { this , alarm_listener , alarm_context } ) n n sib_tr . exception ( tc , e ) n } n } / / if it does have a group listener which is not in the list for	1
Q_296	the callback from the alarm thread	C_296_1	public final void set_line_dash ( float [ ] array , float phase ) { n content . append ( codstr ) n for ( int i = codint i < array . length i + + ) { n content . append ( array [ i ] ) n if ( i < array . length _ codint ) content . append ( codstr ) n } n content . append ( codstr ) . append ( phase ) . append ( codstr ) . append_i ( separator ) n }	0
Q_296	the callback from the alarm thread	C_296_2	suppress_fb_warnings ( value = codstr , n justification = codstr ) n protected object read_resolve ( ) { n if ( allow_empty_archive = = null ) { n this . allow_empty_archive = system_properties . get_boolean ( artifact_archiver . class . get_name ( ) + codstr ) n } n if ( default_excludes = = null ) { n default_excludes = true n } n if ( case_sensitive = = null ) { n case_sensitive = true n } n return this n }	0
Q_297	notify the enclose jsp tag of the id of this facet be id	C_297_0	private void add_facet_name_to_parent_tag ( ui_component_classic_tag_base parent_tag , string facet_name ) n { n if ( parent_tag . _facets_added = = null ) n { n parent_tag . _facets_added = new array_list < string > ( ) n } n parent_tag . _facets_added . add ( facet_name ) n }	1
Q_297	notify the enclose jsp tag of the id of this facet be id	C_297_1	public static void add_action_error ( servlet_request request , string property_name , string message_key , n object message_arg1 , object message_arg2 ) n { n object [ ] message_args = new object [ ] { message_arg1 , message_arg2 } n internal_utils . add_action_error ( property_name , new action_message ( message_key , message_args ) , request ) n }	0
Q_297	notify the enclose jsp tag of the id of this facet be id	C_297_2	private static string encode_form_fields ( final string content , final string charset ) { n if ( content = = null ) { n return null n } n return url_encode ( content , charset = null ? charset . for_name ( charset ) string_utils . utf8 , urlencoder , true ) n }	0
Q_298	execute the http request and return the http response	C_298_0	suppress_warnings ( codstr ) n public http_response execute ( ) throws io_exception { n boolean retry_request = false n preconditions . check_argument ( num_retries > = codint ) n int retries_remaining = num_retries n if ( back_off_policy = null ) { n / / reset the back_off_policy at the start of each execute . n back_off_policy . reset ( ) n } n http_response response = null n io_exception execute_exception n n preconditions . check_not_null ( request_method ) n preconditions . check_not_null ( url ) n n span span = n tracer n . span_builder ( open_census_utils . span_name_http_request_execute ) n . set_record_events ( open_census_utils . is_record_event ( ) ) n . start_span ( ) n do { n span . add_annotation ( codstr _ request _ codstr codstr curl _ v _ compressed codstr _ x codstr codstr content _ type codstr _ h codstr + header + codstr codstr content _ encoding codstr _ h codstr + header + codstr codstr content _ length codstr _ d codstr codstr _ codstr ) n curlbuf . append ( url_string . replace_all ( codstr codstr codstr codstr codstr ) ) n curlbuf . append ( codstr codstr < < codstr must_be_closed_checker codstr exception thrown while executing request codstr t have the potential to retry , we might want to run the n / / handler to fix conditions ( like expired tokens ) that might cause us n / / trouble on our next request n error_handled = unsuccessful_response_handler	1
Q_298	execute the http request and return the http response	C_298_1	int insert ( int element , envelope2_d bounding_box , int hint_index ) { n if ( m_root = = _ codint ) n create_root_ ( ) n n if ( m_b_store_duplicates ) { n int success = insert_duplicates_ ( element , bounding_box , codint , m_extent , m_root , false , _ codint ) n n if ( success = _ codint ) { n if ( m_data_extent . is_empty ( ) ) n m_data_extent . set_coords ( bounding_box ) n else n m_data_extent . merge ( bounding_box ) n } n return success n } n n int quad_handle n n if ( hint_index = = _ codint ) n quad_handle = m_root n else n quad_handle = get_quad_ ( hint_index ) n n int quad_height = get_height ( quad_handle ) n envelope2_d quad_extent = get_extent ( quad_handle ) n n int element_handle = insert_ ( element , bounding_box , quad_height , quad_extent , quad_handle , false , _ codint ) n n if ( element_handle = _ codint ) { n if ( m_data_extent . is_empty ( ) ) n m_data_extent . set_coords ( bounding_box ) n else n m_data_extent . merge ( bounding_box ) n } n n return element_handle n }	0
Q_298	execute the http request and return the http response	C_298_2	public static float_matrix gemm ( float alpha , float_matrix a , n float_matrix b , float beta , float_matrix c ) { n native_blas . sgemm ( codstr , codstr , c . rows , c . columns , a . columns , alpha , a . data , codint , n a . rows , b . data , codint , b . rows , beta , c . data , codint , c . rows ) n return c n }	0
Q_299	with the exterior of line b	C_299_0	private void boundary_line_exterior_line_ ( int half_edge , int id_a , int id_b , n int cluster_index_a , int predicate ) { n if ( m_matrix [ predicate ] = = codint ) n return n n if ( m_topo_graph . get_half_edge_user_index ( m_topo_graph n . get_half_edge_prev ( m_topo_graph . get_half_edge_twin ( half_edge ) ) , n m_visited_index ) = codint ) { n int cluster = m_topo_graph . get_half_edge_to ( half_edge ) n int cluster_parentage = m_topo_graph . get_cluster_parentage ( cluster ) n n if ( ( cluster_parentage id_b ) = = codint ) { n int index = m_topo_graph . get_cluster_user_index ( cluster , n cluster_index_a ) n assert ( index = _ codint ) n n if ( index codint = codint ) { n assert ( ( m_topo_graph . get_cluster_parentage ( cluster ) id_a ) = codint ) n m_matrix [ predicate ] = codint n } n } n } n }	1
Q_299	with the exterior of line b	C_299_1	override n public get_campaigns_result get_campaigns ( get_campaigns_request request ) { n request = before_client_execution ( request ) n return execute_get_campaigns ( request ) n }	0
Q_299	with the exterior of line b	C_299_2	public application_report_model get_main_application_report_for_file ( file_model file_model ) n { n project_model root_project_model = file_model . get_project_model ( ) n if ( root_project_model = = null ) n { n return null n } n else n { n root_project_model = root_project_model . get_root_project_model ( ) n } n graph_traversal < vertex , vertex > pipe = new graph_traversal_source ( get_graph_context ( ) . get_graph ( ) ) . v ( root_project_model . get_element ( ) ) n pipe . in ( application_report_model . report_to_project_model ) n pipe . has ( application_report_model . main_application_report , true ) n n application_report_model main_app_report = null n for ( vertex v pipe . to_list ( ) ) n { n application_report_model app_report = frame ( v ) n n if ( main_app_report = null ) { n log . warning ( codstr + file_model . get_file_path ( ) + codstr n + codstr ) n } n main_app_report = app_report n } n return main_app_report n }	0
Q_300	return sign distance of point from infinite line represent by	C_300_0	double offset ( / * const * / point2_d pt1 , / * const * / point2_d pt2 ) { n double new_distance = distance ( pt1 , pt2 ) n point2_d p = construct ( x , y ) n if ( new_distance = = number ) n return distance ( p , pt1 ) n n / / get vectors relative to pt_1 n point2_d p2 = new point2_d ( ) n p2 . set_coords ( pt2 ) n p2 . sub ( pt1 ) n p . sub ( pt1 ) n n double cross = p . cross_product ( p2 ) n return cross / new_distance n }	1
Q_300	return sign distance of point from infinite line represent by	C_300_1	private boolean read_raw_data ( qr_code qr ) { n qr_code . version_info info = qr_code . version_info [ qr . version ] n n qr . rawbits = new byte [ info . codewords ] n n / / predeclare memory n bits . resize ( info . codewords * codint ) n n / / read bits from memory n list < point2_d_i32 > location_bits = qr_code . location_bits [ qr . version ] n / / end at bits . size instead of location_bits . size because location might point to useless bits n for ( int i = codint i < bits . size i + + ) { n point2_d_i32 b = location_bits . get ( i ) n read_data_matrix ( i , b . y , b . x , qr . mask ) n } n n / / system . out . println ( codstr + qr . version ) n / / system . out . println ( codstr + bits8 . size + codstr + location_bits . size ( ) ) n / / bits8 . print ( ) n n / / copy over the results n system . arraycopy ( bits . data , codint , qr . rawbits , codint , qr . rawbits . length ) n n return true n }	0
Q_300	return sign distance of point from infinite line represent by	C_300_2	public folder_items_response list_items ( string account_id , string folder_id , folders_api . list_items_options options ) throws api_exception { n object local_var_post_body = codstr n n / / verify the required parameter codstr is set n if ( account_id = = null ) { n throw new api_exception ( codint , codstr account_id codstr ) n } n n / / verify the required parameter codstr is set n if ( folder_id = = null ) { n throw new api_exception ( codint , codstr folder_id codstr ) n } n n / / create path and map variables n string local_var_path = codstr . replace_all ( codstr , codstr ) n . replace_all ( codstr + codstr + codstr , api_client . escape_string ( account_id . to_string ( ) ) ) n . replace_all ( codstr + codstr + codstr , api_client . escape_string ( folder_id . to_string ( ) ) ) n n / / query params n java . util . list < pair > local_var_query_params = new java . util . array_list < pair > ( ) n java . util . map < string , string > local_var_header_params = new java . util . hash_map < string , string > ( ) n java . util . map < string , object > local_var_form_params = new java . util . hash_map < string , object > ( ) n n if ( options = null ) { n local_var_query_params . add_all ( api_client . parameter_to_pairs	0
Q_301	middleware that serialize the payload of the result response of the inner handler use	C_301_0	public static < t > middleware < async_handler < response < t , async_handler < response < byte_string n json_serialize_response ( object_writer object_writer ) { n return handler _ > n request_context _ > handler . invoke ( request_context ) n . then_apply ( response _ > serialize ( object_writer , response ) n . with_header ( content_type , json ) ) n }	1
Q_301	middleware that serialize the payload of the result response of the inner handler use	C_301_1	visible_for_testing n public static record_events_span_impl start_span ( n span_context context , n string name , n nullable kind kind , n nullable span_id parent_span_id , n nullable boolean has_remote_parent , n trace_params trace_params , n start_end_handler start_end_handler , n nullable timestamp_converter timestamp_converter , n clock clock ) { n record_events_span_impl span = n new record_events_span_impl ( n context , n name , n kind , n parent_span_id , n has_remote_parent , n trace_params , n start_end_handler , n timestamp_converter , n clock ) n / / call on_start here instead of calling in the constructor to make sure the span is completely n / / initialized . n start_end_handler . on_start ( span ) n return span n }	0
Q_301	middleware that serialize the payload of the result response of the inner handler use	C_301_2	public void set_user_led_blinking ( final boolean user_led_blinking ) { n this . user_led_blinking = user_led_blinking n if ( user_led_blinking ) { n user_led_blinking_timer . start ( ) n } else { n set_current_user_led_image ( get_user_led_image_off ( ) ) n user_led_blinking_timer . stop ( ) n } n }	0
Q_302	return the single element wrap by code optional_int class	C_302_0	not_null n public optional_int find_single ( ) { n if ( iterator . has_next ( ) ) { n int single_candidate = iterator . next_int ( ) n if ( iterator . has_next ( ) ) { n throw new illegal_state_exception ( codstr ) n } else { n return optional_int . of ( single_candidate ) n } n } else { n return optional_int . empty ( ) n } n }	1
Q_302	return the single element wrap by code optional_int class	C_302_1	public final embed_builder set_description ( char_sequence description ) n { n this . description . set_length ( codint ) n if ( description = null description . length ( ) > = codint ) n append_description ( description ) n return this n }	0
Q_302	return the single element wrap by code optional_int class	C_302_2	boolean is_inherited_and_not_public ( type_element concrete_class , type_element declaring_class , element method_or_field ) { n package_element package_of_declaring_class = element_utils . get_package_of ( declaring_class ) n package_element package_of_concrete_class = element_utils . get_package_of ( concrete_class ) n n return declaring_class = concrete_class n package_of_declaring_class . get_qualified_name ( ) . equals ( package_of_concrete_class . get_qualified_name ( ) ) n ( is_protected ( method_or_field ) is_public ( method_or_field ) ) n }	0
Q_303	return a copy of this code local_date with the specify period in month add	C_303_0	public local_date plus_months ( long months_to_add ) { n if ( months_to_add = = codint ) { n return this n } n long month_count = year * codint + ( month _ codint ) n long calc_months = month_count + months_to_add / / safe overflow n int new_year = year . check_valid_int_value ( jdk8_methods . floor_div ( calc_months , codint ) ) n int new_month = jdk8_methods . floor_mod ( calc_months , codint ) + codint n return resolve_previous_valid ( new_year , new_month , day ) n }	1
Q_303	return a copy of this code local_date with the specify period in month add	C_303_1	protected void process_builds ( pipeline pipeline , list < build > builds , list < commit > commits ) { n / / sort again in case code changes in future to be safe n list < build > sorted_builds = new array_list < > ( builds ) n collections . sort ( sorted_builds , build_number_compatator ) n multimap < object_id , commit > build_commits = build_build_to_commits_map ( sorted_builds , commits ) n n if ( logger . is_debug_enabled ( ) ) { n string_builder sb = new string_builder ( ) n sb . append ( codstr ) n for ( build build sorted_builds ) { n sb . append ( codstr + build . get_build_url ( ) + codstr ) n n collection < commit > commits_for_build = build_commits . get ( build . get_id ( ) ) n n if ( commits_for_build = null commits_for_build . is_empty ( ) ) { n boolean has_printed = false n for ( commit commit commits_for_build ) { n if ( has_printed ) { n sb . append ( codstr ) n } n n sb . append ( commit . get_id ( ) ) n n has_printed = true n } n } else { n sb . append ( codstr ) n } n n sb . append ( codstr ) n } n n logger . debug ( sb . to_string ( ) ) n } n n set < string > seen_revision_numbers = new hash_set < >	0
Q_303	return a copy of this code local_date with the specify period in month add	C_303_2	public entity_role get_closed_list_entity_role ( uuid app_id , string version_id , uuid entity_id , uuid role_id ) { n return get_closed_list_entity_role_with_service_response_async ( app_id , version_id , entity_id , role_id ) . to_blocking ( ) . single ( ) . body ( ) n }	0
Q_304	"convert include "" long"	C_304_0	public static long load_3 ( byte [ ] in , int index ) { n long result n result = ( ( long ) in [ index + codint ] ) codint n result = ( ( ( long ) in [ index + codint ] ) < < codint ) codint n result = ( ( ( long ) in [ index + codint ] ) < < codint ) codint n return result n }	1
Q_304	"convert include "" long"	C_304_1	public static object [ ] add_all ( object [ ] array1 , object [ ] array2 ) { n if ( array1 = = null ) { n return clone ( array2 ) n } else if ( array2 = = null ) { n return clone ( array1 ) n } n object [ ] joined_array = ( object [ ] ) array . new_instance ( array1 . get_class ( ) . get_component_type ( ) , n array1 . length + array2 . length ) n system . arraycopy ( array1 , codint , joined_array , codint , array1 . length ) n try { n system . arraycopy ( array2 , codint , joined_array , array1 . length , array2 . length ) n } catch ( array_store_exception ase ) { n / / check if problem was due to incompatible types n / * n * we do this here , rather than before the copy because n * _ it would be a wasted check most of the time n * _ safer , in case check turns out to be too strict n * / n final class type1 = array1 . get_class ( ) . get_component_type ( ) n final class type2 = array2 . get_class ( ) . get_component_type ( ) n if ( type1 . is_assignable_from ( type2 ) ) { n throw new illegal_argument_exception ( codstr + type2 . get_name ( ) + codstr + type1 . get_name ( )	0
Q_304	"convert include "" long"	C_304_2	private list < claimed_task > claim_migration_range_tasks ( int max ) { n try { n date claim_time = new date ( ) n list < scan_range_task > migration_range_tasks = _workflow . claim_scan_range_tasks ( max , queue_claim_ttl ) n if ( migration_range_tasks . is_empty ( ) ) { n return immutable_list . of ( ) n } n n list < claimed_task > newly_claimed_tasks = lists . new_array_list_with_capacity ( migration_range_tasks . size ( ) ) n n for ( scan_range_task task migration_range_tasks ) { n final claimed_task claimed_task = new claimed_task ( task , claim_time ) n n / / record that the task is claimed locally n boolean already_claimed = _claimed_tasks . put_if_absent ( task . get_id ( ) , claimed_task ) = null n if ( already_claimed ) { n _log . warn ( codstr , task ) n / / do not acknowledge the task , let it expire naturally . eventually it should come up again n / / after the previous claim has been released . n } else { n _log . info ( codstr , task ) n newly_claimed_tasks . add ( claimed_task ) n n / / schedule a follow _ up to ensure the scanning service assigns it a thread n / / in a reasonable amount of time . n _background_service . schedule ( n new runnable ( ) { n override n public void run ( ) { n validate_claimed_task_has_started ( claimed_task ) n } n } , n	0
Q_305	edit group be title	C_305_0	not_null n objective_c_name ( codstr ) n public promise < void > edit_group_title ( final int gid , final string title ) { n return modules . get_groups_module ( ) . edit_title ( gid , title ) n }	1
Q_305	edit group be title	C_305_1	public final void add_listener ( n non_null final listener < data_type , key_type , view_type , param_type > listener ) { n listeners . add ( listener ) n }	0
Q_305	edit group be title	C_305_2	public void register_bot ( webhook_bot bot ) throws telegram_api_request_exception { n if ( use_webhook ) { n webhook . register_webhook ( bot ) n bot . set_webhook ( external_url + bot . get_bot_path ( ) , path_to_certificate ) n } n }	0
Q_306	private method that actually parse the input to read a chem_file	C_306_0	private i_chem_file read_chem_file ( i_chem_file chem_file ) { n i_chem_sequence chem_sequence n i_chem_model chem_model n i_crystal crystal n n try { n string line = read_line ( ) n while ( input . ready ( ) line = null ) { n if ( line . starts_with ( codstr ) ) { n / / parse header section n while ( input . ready ( ) line = null ( line . starts_with ( codstr ) ) ) { n if ( line . starts_with ( codstr ) ) { n string version = read_line ( ) . trim ( ) n if ( version . equals ( codstr ) ) { n logger . error ( codstr ) n return null n } n } n line = read_line ( ) n } n } else if ( line . starts_with ( codstr ) ) { n / / parse model section n model_structure = chem_file . get_builder ( ) . new_instance ( i_atom_container . class ) n while ( input . ready ( ) line = null ( line . starts_with ( codstr ) ) ) { n matcher obj_header_matcher = obj_header . matcher ( line ) n if ( obj_header_matcher . matches ( ) ) { n string object = obj_header_matcher . group ( codint ) n construct_object ( chem_file . get_builder ( ) , object ) n int id = integer . parse_int ( obj_header_matcher . group ( codint ) ) n / / logger	1
Q_306	private method that actually parse the input to read a chem_file	C_306_1	public static < k , v > map < k , v > index_by ( iterable < v > groupies , function < v , k > indexer ) { n dbc . precondition ( groupies = null , codstr ) n return new index_by < > ( indexer , new hash_map_factory < > ( ) ) . apply ( groupies . iterator ( ) ) n }	0
Q_306	private method that actually parse the input to read a chem_file	C_306_2	deprecated n public static way_point of ( n final latitude latitude , n final longitude longitude , n final length elevation , n final speed speed , n final zoned_date_time time , n final degrees magnetic_variation , n final length geoid_height , n final string name , n final string comment , n final string description , n final string source , n final list < link > links , n final string symbol , n final string type , n final fix fix , n final u_int sat , n final double hdop , n final double vdop , n final double pdop , n final duration age_of_gps_data , n final dgps_station dgps_id n ) { n return new way_point ( n latitude , n longitude , n elevation , n speed , n time , n magnetic_variation , n geoid_height , n name , n comment , n description , n source , n links , n symbol , n type , n fix , n sat , n hdop , n vdop , n pdop , n age_of_gps_data , n dgps_id , n null n ) n }	0
Q_307	extract the information from a line which contain hose_id energy	C_307_0	private static list < string > extract_info ( string str ) { n int beg = codint n int end = codint n int len = str . length ( ) n list < string > parts = new array_list < > ( ) n while ( end < len character . is_space_char ( str . char_at ( end ) ) ) n end + + n parts . add ( str . substring ( beg , end ) ) n while ( end < len character . is_space_char ( str . char_at ( end ) ) ) n end + + n beg = end n while ( end < len character . is_space_char ( str . char_at ( end ) ) ) n end + + n parts . add ( str . substring ( beg , end ) ) n return parts n }	1
Q_307	extract the information from a line which contain hose_id energy	C_307_1	public void report ( final writer writer , final string title ) throws io_exception { n report ( writer , title , null ) n }	0
Q_307	extract the information from a line which contain hose_id energy	C_307_2	public void insert_block ( abstract_base_dt_node < i , d > block_root ) { n block_root . remove_from_block_list ( ) n n block_root . set_next_element ( next ) n if ( get_next_element ( ) = null ) { n next . set_prev_element ( block_root ) n } n block_root . set_prev_element ( this ) n next = block_root n }	0
Q_308	generate coordinate for a give ring which be fuse to another ring	C_308_0	public void place_fused_ring ( i_ring ring , n i_atom_container shared_atoms , n vector2d ring_center_vector , n double bond_length ) { n logger . debug ( codstr ) n n final i_atom beg = shared_atoms . get_atom ( codint ) n final i_atom end = shared_atoms . get_atom ( codint ) n n final vector2d p_beg = new vector2d ( beg . get_point2d ( ) ) n final vector2d p_end = new vector2d ( end . get_point2d ( ) ) n n / / fuse the ring perpendicular to the bond , ring center is not n / / sub _ optimal if non _ regular / convex polygon ( e . g . macro cycle ) n ring_center_vector = get_perpendicular ( p_beg , p_end , ring_center_vector ) n n n double radius = get_native_ring_radius ( ring , bond_length ) n double new_ring_perpendicular = math . sqrt ( math . pow ( radius , codint ) _ math . pow ( bond_length / codint , codint ) ) n ring_center_vector . normalize ( ) n logger . debug ( codstr + ring_center_vector . length ( ) ) n ring_center_vector . scale ( new_ring_perpendicular ) n final point2d ring_center = get_mid_point ( p_beg , p_end ) n ring_center . add ( ring_center_vector ) n n final vector2d origin_ring_center_vector = new vector2d ( ring_center ) n n p_beg . sub ( origin_ring_center_vector ) n p_end . sub ( origin_ring_center_vector ) n n final double occupied_angle = angle ( p_beg , p_end )	1
Q_308	generate coordinate for a give ring which be fuse to another ring	C_308_1	private static class < ? > [ ] desc2class_array ( class_loader cl , string desc ) n throws class_not_found_exception { n if ( desc . length ( ) = = codint ) n return empty_class_array n n list < class < ? cs = new array_list < class < ? ( ) n matcher m = desc_pattern . matcher ( desc ) n while ( m . find ( ) ) n cs . add ( desc2class ( cl , m . group ( ) ) ) n return cs . to_array ( empty_class_array ) n }	0
Q_308	generate coordinate for a give ring which be fuse to another ring	C_308_2	public static void get_all_interfaces ( list all_ifaces , class c ) n { n while ( c = null ) n { n class [ ] ifaces = c . get_interfaces ( ) n for ( int n = codint n < ifaces . length n + + ) n { n all_ifaces . add ( ifaces [ n ] ) n } n c = c . get_superclass ( ) n } n }	0
Q_309	build link batching_settings base on link bulk_options configuration	C_309_0	private static void build_bulk_mutations_settings ( builder builder , n bigtable_options options ) { n bulk_options bulk_options = options . get_bulk_options ( ) n batching_settings . builder batch_builder = n builder . bulk_mutate_rows_settings ( ) . get_batching_settings ( ) . to_builder ( ) n n long auto_flush_ms = bulk_options . get_autoflush_ms ( ) n long bulk_max_row_key_count = bulk_options . get_bulk_max_row_key_count ( ) n long max_inflight_rpcs = bulk_options . get_max_inflight_rpcs ( ) n n if ( auto_flush_ms > codint ) { n batch_builder . set_delay_threshold ( of_millis ( auto_flush_ms ) ) n } n flow_control_settings . builder flow_control_builder = flow_control_settings . new_builder ( ) n if ( max_inflight_rpcs > codint ) { n flow_control_builder n . set_max_outstanding_request_bytes ( bulk_options . get_max_memory ( ) ) n . set_max_outstanding_element_count ( max_inflight_rpcs * bulk_max_row_key_count ) n } n n batch_builder n . set_is_enabled ( bulk_options . use_bulk_api ( ) ) n . set_element_count_threshold ( long . value_of ( bulk_options . get_bulk_max_row_key_count ( ) ) ) n . set_request_byte_threshold ( bulk_options . get_bulk_max_request_size ( ) ) n . set_flow_control_settings ( flow_control_builder . build ( ) ) n n retry_settings retry_settings = n build_idempotent_retry_settings ( builder . bulk_mutate_rows_settings ( ) . get_retry_settings ( ) , options ) n n / / todo ( rahulkql ) implement bulk_mutation_throttling bulk_mutation_rpc_target_ms , once available n builder . bulk_mutate_rows_settings ( ) n . set_batching_settings ( batch_builder . build ( ) ) n . set_retry_settings ( retry_settings ) n . set_retryable_codes ( build_retry_codes ( options . get_retry_options ( ) ) )	1
Q_309	build link batching_settings base on link bulk_options configuration	C_309_1	xml_element_decl ( namespace = codstr , name = codstr , scope = grundstueck_empfohlene_nutzung . class ) n public jaxb_element < object > create_grundstueck_empfohlene_nutzung_bauerwartungsland ( object value ) { n return new jaxb_element < object > ( _grundstueck_empfohlene_nutzung_bauerwartungsland_qname , object . class , grundstueck_empfohlene_nutzung . class , value ) n }	0
Q_309	build link batching_settings base on link bulk_options configuration	C_309_2	private void set_targets ( trellis_node [ ] [ ] trellis , double [ ] scaling , int [ ] label ) { n trellis_node [ ] t0 = trellis [ codint ] n n / / finding the normalizer for our first codstr in the matrix n double normalizer = number n for ( int i = codint i < num_classes i + + ) { n normalizer + = t0 [ i ] . exp_scores [ codint ] * t0 [ i ] . beta n } n n for ( int i = codint i < num_classes i + + ) { n if ( label [ codint ] = = i ) { n t0 [ i ] . target [ codint ] = codint _ t0 [ i ] . exp_scores [ codint ] * t0 [ i ] . beta / normalizer n } else { n t0 [ i ] . target [ codint ] = _ t0 [ i ] . exp_scores [ codint ] * t0 [ i ] . beta / normalizer n } n } n n for ( int t = codint t < label . length t + + ) { n normalizer = number n trellis_node [ ] tt = trellis [ t ] n trellis_node [ ] tt1 = trellis [ t _ codint ] n for ( int i = codint i < num_classes i + + ) { n normalizer + = tt	0
Q_310	set the value of the give field	C_310_0	public string set_value ( field field , string value ) { n return set_value ( field . get_name ( ) , value ) n }	1
Q_310	set the value of the give field	C_310_1	string prev_link ( ) { n if ( current_offset = = codint current_limit = = codint ) { n return null n } n n return url_with_updated_pagination ( math . max ( codint , current_offset _ current_limit ) , current_limit ) n }	0
Q_310	set the value of the give field	C_310_2	public static raw_data sp2nbsp ( object data ) { n return new raw_data ( string_escape_utils . escape_html4 ( str ( data ) ) . replace ( codstr , codstr ) ) n }	0
Q_311	execute the request blocking	C_311_0	public rest_request_result execute_blocking ( ) throws exception { n request . builder request_builder = new request . builder ( ) n http_url . builder http_url_builder = endpoint . get_ok_http_url ( url_parameters ) . new_builder ( ) n query_parameters . for_each ( http_url_builder add_query_parameter ) n request_builder . url ( http_url_builder . build ( ) ) n n request_body request_body n if ( multipart_body = null ) { n request_body = multipart_body n } else if ( body = null ) { n request_body = request_body . create ( media_type . parse ( codstr ) , body ) n } else { n request_body = request_body . create ( null , new byte [ codint ] ) n } n n switch ( method ) { n case get n request_builder . get ( ) n break n case post n request_builder . post ( request_body ) n break n case put n request_builder . put ( request_body ) n break n case delete n request_builder . delete ( request_body ) n break n case patch n request_builder . patch ( request_body ) n break n default n throw new illegal_argument_exception ( codstr ) n } n if ( include_authorization_header ) { n request_builder . add_header ( codstr , api . get_prefixed_token ( ) ) n } n headers . for_each ( request_builder add_header ) n logger . debug ( codstr , n method name , ( ) _ > endpoint . get_full_url ( url_parameters ) , ( ) _	1
Q_311	execute the request blocking	C_311_1	protected boolean init_url ( string data ) { n if ( get_url ( ) = = null ) { n if ( log . is_loggable ( level . fine ) ) { n log . fine ( string . format ( codstr , data ) ) n } n try { n set_url ( binding_helper . url_parser . convert ( data ) ) n return true n } catch ( vector_print_runtime_exception ex ) { n if ( log . is_loggable ( level . warning ) ) { n log . warning ( string . format ( codstr , data ) ) n } n } n } n return false n }	0
Q_311	execute the request blocking	C_311_2	private void cache_class ( class_source class_source , string outer_class_name ) { n if ( class_cache_mode = user_code_deployment_config . class_cache_mode . off ) { n class_source_map . put ( outer_class_name , class_source ) n } else { n thread_local_class_cache . store ( outer_class_name , class_source ) n } n }	0
Q_312	gather the op either up to the first space or the first carraige return	C_312_0	void gather_op ( int max_pos ) throws io_exception { n try { n while ( this . buffer_position < max_pos ) { n byte b = this . buffer [ this . buffer_position ] n this . buffer_position + + n n if ( got_cr ) { n if ( b = = nats_connection . lf ) { / / got crlf , jump to parsing n this . op = op_for ( op_array , op_pos ) n this . got_cr = false n this . op_pos = codint n this . mode = mode . parse_proto n break n } else { n throw new illegal_state_exception ( codstr ) n } n } else if ( b = = space b = = tab ) { / / got a space , get the rest of the protocol line n this . op = op_for ( op_array , op_pos ) n this . op_pos = codint n if ( this . op = = nats_connection . op_msg ) { n this . msg_line_position = codint n this . mode = mode . gather_msg_proto n } else { n this . mode = mode . gather_proto n } n break n } else if ( b = = nats_connection . cr ) { n this . got_cr = true n } else { n this . op_array [ op_pos ] = ( char ) b n this . op_pos + + n } n } n } catch (	1
Q_312	gather the op either up to the first space or the first carraige return	C_312_1	override n public void deliver ( write_stream os , out_http2 out_http ) n throws io_exception n { n out_http . write_block ( _stream_id ) n }	0
Q_312	gather the op either up to the first space or the first carraige return	C_312_2	public static status value_of ( string name ) { n if ( name = = null ) { n return undefined n } n for ( status status instances . values ( ) ) { n if ( name . equals ( status . get_name ( ) ) ) { n return status n } n } n return undefined n }	0
Q_313	return a sequential code double_stream_ex contain the result of	C_313_0	public static double_stream_ex zip ( double [ ] first , double [ ] second , double_binary_operator mapper ) { n return of ( new range_based_spliterator . zip_double ( codint , check_length ( first . length , second . length ) , mapper , first , n second ) ) n }	1
Q_313	return a sequential code double_stream_ex contain the result of	C_313_1	public void move ( robot robot ) { n if ( robots_position . contains_key ( robot ) ) { n throw new illegal_argument_exception ( codstr t exist codstr robot can codstr ) n } n n point new_position = get_reference_field ( robot , codint ) n if ( is_occupied ( new_position ) ) { n point old_position = robots_position . get ( robot ) n robots_position . put ( robot , new_position ) n event_dispatcher . fire_event ( new robot_moved_event ( robot , old_position , new_position ) ) n } n n }	0
Q_313	return a sequential code double_stream_ex contain the result of	C_313_2	public static unicode_emoji_impl from_string ( string emoji ) { n return unicode_emojis . compute_if_absent ( emoji , key _ > new unicode_emoji_impl ( emoji ) ) n }	0
Q_314	transfer byte from an input stream to an output stream	C_314_0	public static void transfer ( input_stream in , output_stream out ) throws io_exception n { n byte [ ] bytes = new byte [ transfer_buffer ] n int count n while ( ( count = in . read ( bytes ) ) = _ codint ) n { n out . write ( bytes , codint , count ) n } n }	1
Q_314	transfer byte from an input stream to an output stream	C_314_1	private point calculate_item_positions ( ) { n / / create an arc that starts from start_angle and ends at end_angle n / / in an area that is as large as codint * radius ^ codint n final point center = get_action_view_center ( ) n rect_f area = new rect_f ( center . x _ radius , center . y _ radius , center . x + radius , center . y + radius ) n n path orbit = new path ( ) n orbit . add_arc ( area , start_angle , end_angle _ start_angle ) n n path_measure measure = new path_measure ( orbit , false ) n n / / prevent overlapping when it is a full circle n int divisor n if ( math . abs ( end_angle _ start_angle ) > = codint sub_action_items . size ( ) < = codint ) { n divisor = sub_action_items . size ( ) n } n else { n divisor = sub_action_items . size ( ) _ codint n } n n / / measure this path , in order to find points that have the same distance between each other n for ( int i = codint i < sub_action_items . size ( ) i + + ) { n float [ ] coords = new float [ ] { codreal , codreal } n measure . get_pos_tan ( ( i ) * measure . get_length ( ) / divisor , coords , null )	0
Q_314	transfer byte from an input stream to an output stream	C_314_2	public static typesafe_config_module from_config_with_reflections ( config config , reflections reflections ) { n return new typesafe_config_module ( config , new reflections_reflector ( reflections ) ) n }	0
Q_315	set the link task_status for the job identify by code job_id	C_315_0	override n public void set_task_status ( final job_id job_id , final task_status status ) n throws interrupted_exception { n log . debug ( codstr , status ) n task_statuses . put ( job_id . to_string ( ) , status . to_json_bytes ( ) ) n if ( history_writer = null ) { n try { n history_writer . save_history_item ( status ) n } catch ( exception e ) { n / / log error here and keep going as saving task history is not critical . n / / this is to prevent bad data in the queue from screwing up the actually important helios n / / agent operations . n log . error ( codstr , status , e ) n } n } n final task_status_event event = new task_status_event ( status , system . current_time_millis ( ) , agent ) n final byte [ ] message = event . to_json_bytes ( ) n for ( final event_sender sender event_senders ) { n sender . send ( task_status_event_topic , message ) n } n }	1
Q_315	set the link task_status for the job identify by code job_id	C_315_1	public static job_operator get_job_operator ( ) { n job_operator job_operator = null n if ( system . get_security_manager ( ) = = null ) { n for ( job_operator op service_loader . load ( job_operator . class ) ) { n job_operator = op n break n } n } else { n job_operator = access_controller . do_privileged ( new privileged_action < job_operator > ( ) { n public job_operator run ( ) { n for ( job_operator op service_loader . load ( job_operator . class ) ) { n return op n } n return null n } n } ) n } n n if ( job_operator = = null ) { n throw new batch_runtime_exception ( codstr ) n } n return job_operator n }	0
Q_315	set the link task_status for the job identify by code job_id	C_315_2	public e_list < annotation > get_annotations ( ) { n if ( annotations = = null ) { n annotations = new e_object_containment_e_list < annotation > ( annotation . class , this , xtext_package . abstract_rule_annotations ) n } n return annotations n }	0
Q_316	generate tagstr statement simultaneous set value	C_316_0	public < s > anima_query < t > in ( string column , list < s > args ) { n return this . in ( column , args . to_array ( ) ) n }	1
Q_316	generate tagstr statement simultaneous set value	C_316_1	private void clear_element_arrays ( final int from , final int to ) { n n if ( is_int_key ) { n int counter = to n n while ( _ counter > = from ) { n int_key_table [ counter ] = codint n } n } else if ( is_long_key ) { n int counter = to n n while ( _ counter > = from ) { n long_key_table [ counter ] = codint n } n } else if ( is_object_key ) { n int counter = to n n while ( _ counter > = from ) { n object_key_table [ counter ] = null n } n } n n if ( is_int_value ) { n int counter = to n n while ( _ counter > = from ) { n int_value_table [ counter ] = codint n } n } else if ( is_long_value ) { n int counter = to n n while ( _ counter > = from ) { n long_value_table [ counter ] = codint n } n } else if ( is_object_value ) { n int counter = to n n while ( _ counter > = from ) { n object_value_table [ counter ] = null n } n } n n if ( access_table = null ) { n int counter = to n n while ( _ counter > = from ) { n access_table [ counter ] = codint n } n }	0
Q_316	generate tagstr statement simultaneous set value	C_316_2	public cms_client_property get_effective_property_object ( cms_client_sitemap_entry entry , string name ) { n n map < string , cms_client_property > df_props = entry . get_default_file_properties ( ) n cms_client_property result = safe_lookup ( df_props , name ) n if ( cms_client_property . is_property_empty ( result ) ) { n return result . with_origin ( entry . get_site_path ( ) ) n } n result = safe_lookup ( entry . get_own_properties ( ) , name ) n if ( cms_client_property . is_property_empty ( result ) ) { n return result . with_origin ( entry . get_site_path ( ) ) n } n return get_inherited_property_object ( entry , name ) n }	0
Q_317	write a frame to i out i	C_317_0	private void write_block ( final writable_byte_channel out , byte_buffer data , n boolean compressed , int crc32c ) n throws io_exception n { n n header_buffer . clear ( ) n header_buffer . put ( ( byte ) ( compressed ? compressed_data_flag n uncompressed_data_flag ) ) n n / / the length written out to the header is both the checksum and the n / / frame n final int header_length = data . remaining ( ) + codint n n / / write length n header_buffer . put ( ( byte ) header_length ) n header_buffer . put ( ( byte ) ( header_length codint ) ) n header_buffer . put ( ( byte ) ( header_length codint ) ) n n / / write crc32c of user input data n header_buffer . put_int ( crc32c ) n n header_buffer . flip ( ) n n / / write the header n out . write ( header_buffer ) n / / write the raw data n out . write ( data ) n }	1
Q_317	write a frame to i out i	C_317_1	check_return_value n scheduler_support ( scheduler_support . none ) n public final < t2 > observable < t2 > dematerialize ( ) { n suppress_warnings ( codstr ) n observable < notification < t2 m = ( observable < notification < t2 ) this n return rx_java_plugins . on_assembly ( new observable_dematerialize < t2 > ( m ) ) n }	0
Q_317	write a frame to i out i	C_317_2	private string extract_string_value ( xml_object xmlo ) { n if ( xmlo instanceof xs_string ) { n return ( ( xs_string ) xmlo ) . get_value ( ) n } else if ( xmlo instanceof xs_any_impl ) { n return ( ( xs_any_impl ) xmlo ) . get_text_content ( ) n } n logger . warn ( codstr , n xmlo . get_class ( ) ) n return null n }	0
Q_318	uncompress the input offset offset length as a string	C_318_0	public static string uncompress_string ( byte [ ] input , int offset , int length ) n throws io_exception n { n try { n return uncompress_string ( input , offset , length , codstr ) n } n catch ( unsupported_encoding_exception e ) { n throw new illegal_state_exception ( codstr ) n } n }	1
Q_318	uncompress the input offset offset length as a string	C_318_1	public void load ( ) throws io_exception { n final file nodes_dir = get_nodes_dir ( ) n final file [ ] subdirs = nodes_dir . list_files ( new file_filter ( ) { n public boolean accept ( file child ) { n return child . is_directory ( ) n } n } ) n final map < string , node > new_nodes = new tree_map < > ( ) n if ( subdirs = null ) { n for ( file subdir subdirs ) { n try { n xml_file xml_file = new xml_file ( jenkins . xstream , new file ( subdir , codstr ) ) n if ( xml_file . exists ( ) ) { n node node = ( node ) xml_file . read ( ) n new_nodes . put ( node . get_node_name ( ) , node ) n } n } catch ( io_exception e ) { n logger . get_logger ( nodes . class . get_name ( ) ) . log ( level . warning , codstr + subdir , e ) n } n } n } n queue . with_lock ( new runnable ( ) { n override n public void run ( ) { n nodes . entry_set ( ) . remove_if ( string_node_entry _ > ( string_node_entry . get_value ( ) instanceof ephemeral_node ) ) n nodes . put_all ( new_nodes ) n jenkins . update_computer_list ( ) n jenkins . trim_labels ( ) n } n } )	0
Q_318	uncompress the input offset offset length as a string	C_318_2	public optional < string > find_generate_key_column_name ( final string logic_table_name ) { n for ( table_rule each table_rules ) { n if ( each . get_logic_table ( ) . equals_ignore_case ( logic_table_name ) null = each . get_generate_key_column ( ) ) { n return optional . of ( each . get_generate_key_column ( ) ) n } n } n return optional . absent ( ) n }	0
Q_319	return the stat information about a file	C_319_0	public file_status get_file_status ( final path f , final boolean use_standby ) n throws io_exception { n return new standby_caller < file_status > ( ) { n override n file_status call ( distributed_file_system fs ) throws io_exception { n return fs . get_file_status ( f ) n } n } . call_fs ( use_standby ) n }	1
Q_319	return the stat information about a file	C_319_1	private void persist_enabled_version ( long version ) throws persistence_failure_exception { n file disabled_marker = get_disabled_marker_file ( version ) n if ( disabled_marker . exists ( ) ) { n if ( disabled_marker . delete ( ) ) { n throw new persistence_failure_exception ( codstr + n disabled_marker . get_absolute_path ( ) + codstr + n codstr ) n } n } n }	0
Q_319	return the stat information about a file	C_319_2	private topic_subscriber create_durable_subscriber ( topic topic , string name , string message_selector , boolean no_local , boolean is_shared_durable , boolean is_non_shared_durable ) throws jms_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( this , tc , codstr , new object [ ] { topic , name , message_selector , no_local , is_shared_durable , is_non_shared_durable } ) n n check_not_closed ( ) n if ( topic = = null ) { n throw ( invalid_destination_exception ) jms_error_utils . new_throwable ( invalid_destination_exception . class , n codstr , n new object [ ] { codstr , codstr } , n tc n ) n } n n if ( ( name = = null ) ( codstr . equals ( name ) ) ) { n throw ( invalid_destination_exception ) jms_error_utils . new_throwable ( invalid_destination_exception . class , n codstr , n new object [ ] { codstr , name } , n tc n ) n } n n / / check that this is not a foreign implementation . n / / note that in some situations this method call can return a _different_ n / / destination than the one passed in as the parameter ( e . g . spring ) . n jms_destination_impl native_dest = jms_destination_impl . check_native_instance ( topic ) n n / / check that this destination is not blocked n jms_destination_impl . check_blocked_status ( native_dest ) n n / / client	0
Q_320	as the processing rate	C_320_0	override n public double get_reduce_processing_rate ( long current_time ) { n phase phase = get_phase ( ) n n if ( phase = phase . reduce ) { n return codint n } n n suppress_warnings ( codstr ) n long bytes_processed = super . get_counters ( ) . find_counter n ( task . counter . reduce_input_bytes ) . get_counter ( ) n long time_spent_in_reduce = codint n long sort_finish_time = get_sort_finish_time ( ) n if ( sort_finish_time > = current_time ) { n log . error ( codstr + sort_finish_time + n codstr + current_time + n codstr + this . get_task_id ( ) ) n return codint n } n time_spent_in_reduce = current_time _ sort_finish_time n n reduce_processing_rate = bytes_processed / time_spent_in_reduce n return reduce_processing_rate n }	1
Q_320	as the processing rate	C_320_1	private void add_flat_select_example ( ) { n add ( new w_heading ( heading_level . h3 , codstr ) ) n add ( new explanatory_text ( codstr n + codstr ) ) n final w_check_box_select select = new w_check_box_select ( codstr ) n select . set_tool_tip ( codstr ) n select . set_button_layout ( w_check_box_select . layout_flat ) n add ( select ) n }	0
Q_320	as the processing rate	C_320_2	public list < cms_log_entry > get_log_entries ( cms_request_context context , cms_log_filter filter ) throws cms_exception { n n list < cms_log_entry > result = null n cms_db_context dbc = m_db_context_factory . get_db_context ( context ) n try { n result = m_driver_manager . get_log_entries ( dbc , filter ) n } catch ( exception e ) { n dbc . report ( null , messages . get ( ) . container ( messages . err_read_log_entries_0 ) , e ) n } finally { n dbc . clear ( ) n } n return result n }	0
Q_321	the list of all configure policy	C_321_0	void set_policy_info ( collection < policy_info > all ) throws io_exception { n this . all = all n this . path_to_policy . clear ( ) n n / / keep a reverse map from all top _ level paths to policies n for ( policy_info pinfo all ) { n path_to_policy . add ( new path_to_policy ( pinfo . get_src_path ( ) , pinfo ) ) n for ( path_info d pinfo . get_dest_paths ( ) ) { n path_to_policy . add ( new path_to_policy ( d . rpath , pinfo ) ) n } n } n n / / keep all paths sorted in revere lexicographical order so that n / / we longest path is first . n comparator < path_to_policy > comp = new comparator < path_to_policy > ( ) { n public int compare ( path_to_policy p1 , path_to_policy p2 ) { n return codint _ p1 . spath . compare_to ( p2 . spath ) n } n } n collections . sort ( path_to_policy , comp ) n }	1
Q_321	the list of all configure policy	C_321_1	public map < string , list < string get_chat_metadata ( string session_id ) throws xmpp_exception , not_connected_exception , interrupted_exception { n chat_metadata request = new chat_metadata ( ) n request . set_type ( iq . type . get ) n request . set_to ( workgroup_jid ) n request . set_session_id ( session_id ) n n chat_metadata response = connection . create_stanza_collector_and_send ( request ) . next_result ( ) n n return response . get_metadata ( ) n }	0
Q_321	the list of all configure policy	C_321_2	public boolean get_box_bound ( float [ ] corners ) n { n int rc n if ( ( corners = = null ) ( corners . length = codint ) n ( ( rc = native_vertex_buffer . get_bounding_volume ( get_native ( ) , corners ) ) < codint ) ) n { n throw new illegal_argument_exception ( codstr ) n } n return rc = codint n }	0
Q_322	call ioprio_get for this thread	C_322_0	public static int ioprio_get_if_possible ( ) throws io_exception { n if ( native_loaded ioprio_possible ) { n try { n return ioprio_get ( ) n } catch ( unsupported_operation_exception uoe ) { n log . warn ( codstr , uoe ) n ioprio_possible = false n } catch ( unsatisfied_link_error ule ) { n log . warn ( codstr , ule ) n ioprio_possible = false n } catch ( native_io_exception nie ) { n log . warn ( codstr , nie ) n throw nie n } n } n return _ codint n }	1
Q_322	call ioprio_get for this thread	C_322_1	public static string get_default_file_or_detail_type ( cms_object cms , cms_resource resource ) { n n string type = null n n if ( resource . is_folder ( ) n ( open_cms . get_resource_manager ( ) . get_resource_type ( resource ) instanceof cms_resource_type_folder_extended ) n cms_jsp_nav_builder . is_nav_level_folder ( cms , resource ) ) { n try { n cms_resource default_file = cms . read_default_file ( resource , cms_resource_filter . only_visible_no_deleted ) n if ( default_file = null ) { n type = get_detail_type ( cms , default_file , resource ) n if ( type = = null ) { n type = open_cms . get_resource_manager ( ) . get_resource_type ( default_file ) . get_type_name ( ) n } n n } n } catch ( cms_security_exception e ) { n / / ignore n } n } else if ( cms_resource_type_xml_container_page . is_container_page ( resource ) ) { n type = get_detail_type ( cms , resource , null ) n n } n return type n n }	0
Q_322	call ioprio_get for this thread	C_322_2	public resource_list get_resources_with_path ( final string resource_path ) { n if ( closed . get ( ) ) { n throw new illegal_argument_exception ( codstr ) n } n final resource_list all_whitelisted_resources = get_all_resources ( ) n if ( all_whitelisted_resources . is_empty ( ) ) { n return resource_list . empty_list n } else { n final string path = file_utils . sanitize_entry_path ( resource_path , / * remove_initial_slash = * / true ) n final resource_list resource_list = get_all_resources_as_map ( ) . get ( path ) n return ( resource_list = = null ? new resource_list ( codint ) resource_list ) n } n }	0
Q_323	map a key_value pair to a shard_and_intermediate form pair	C_323_0	public void map ( k key , v value , n output_collector < shard , intermediate_form > output , reporter reporter ) n throws io_exception { n n synchronized ( this ) { n local_analysis . map ( key , value , tmp_collector , reporter ) n n if ( tmp_key = null tmp_value = null ) { n document_and_op doc = tmp_value n intermediate_form form = new intermediate_form ( ) n form . configure ( iconf ) n form . process ( doc , analyzer ) n form . close_writer ( ) n n if ( doc . get_op ( ) = = document_and_op . op . insert ) { n int chosen_shard = distribution_policy . choose_shard_for_insert ( tmp_key ) n if ( chosen_shard > = codint ) { n / / insert into one shard n output . collect ( shards [ chosen_shard ] , form ) n } else { n throw new io_exception ( codstr ) n } n n } else if ( doc . get_op ( ) = = document_and_op . op . delete ) { n int chosen_shard = distribution_policy . choose_shard_for_delete ( tmp_key ) n if ( chosen_shard > = codint ) { n / / delete from one shard n output . collect ( shards [ chosen_shard ] , form ) n } else { n / / broadcast delete to all shards n for ( int i = codint i < shards . length i + + ) {	1
Q_323	map a key_value pair to a shard_and_intermediate form pair	C_323_1	public list < jaxb_element < object get_generic_application_property_of_water_boundary_surface ( ) { n if ( _generic_application_property_of_water_boundary_surface = = null ) { n _generic_application_property_of_water_boundary_surface = new array_list < jaxb_element < object ( ) n } n return this . _generic_application_property_of_water_boundary_surface n }	0
Q_323	map a key_value pair to a shard_and_intermediate form pair	C_323_2	protected void abort ( ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_event_enabled ( ) ) { n tr . event ( tc , codstr ) n } n this . aborted = true n }	0
Q_324	get the number of occupy map slot	C_324_0	public int count_occupied_map_slots ( ) { n int map_slots_count = codint n for ( iterator < task_status > it = task_reports . iterator ( ) it . has_next ( ) ) { n task_status ts = ( task_status ) it . next ( ) n if ( ts . get_is_map ( ) is_task_running ( ts ) ) { n map_slots_count + = ts . get_num_slots ( ) n } n } n return map_slots_count n }	1
Q_324	get the number of occupy map slot	C_324_1	public string verify_x_path_expression ( final iterable < xml_ns_scheme > xml_ns_schemes , final string xpath_expression ) n { n log . trace ( codstr , xpath_expression ) n final x_path_compiler x_path_compiler = processor . new_x_path_compiler ( ) n for ( final xml_ns_scheme xml_ns_scheme xml_ns_schemes ) n { n final string local_part = xml_ns_scheme . get_q_name ( ) . get_local_part ( ) n final string namespace_uri = xml_ns_scheme . get_q_name ( ) . get_namespace_uri ( ) n log . trace ( codstr , local_part , namespace_uri ) n x_path_compiler . declare_namespace ( local_part , namespace_uri ) n } n try n { n x_path_compiler . compile ( xpath_expression ) n } n catch ( final saxon_api_exception e ) n { n return e . get_cause ( ) . get_message ( ) n } n return codstr n }	0
Q_324	get the number of occupy map slot	C_324_2	private byte [ ] get_content ( input_stream in ) throws fms_exception { n byte_array_output_stream baos = new byte_array_output_stream ( ) n byte [ ] content = null n try { n int n_read n byte [ ] data = new byte [ codint ] n while ( ( n_read = in . read ( data , codint , data . length ) ) = _ codint ) { n baos . write ( data , codint , n_read ) n } n baos . flush ( ) n content = baos . to_byte_array ( ) n } catch ( io_exception e ) { n throw new fms_exception ( codstr , e ) n } finally { n close ( baos ) n close ( in ) n } n return content n }	0
Q_325	call by metrics_record_impl	C_325_0	protected void remove ( metrics_record_impl record ) { n string record_name = record . get_record_name ( ) n tag_map tag_table = record . get_tag_table ( ) n n record_map record_map = get_record_map ( record_name ) n synchronized ( record_map ) { n iterator < tag_map > it = record_map . key_set ( ) . iterator ( ) n while ( it . has_next ( ) ) { n tag_map row_tags = it . next ( ) n if ( row_tags . contains_all ( tag_table ) ) { n it . remove ( ) n } n } n } n }	1
Q_325	call by metrics_record_impl	C_325_1	public static list < entity > to_entities ( app_engine_transaction transaction , n com . google . appengine . api . datastore . key parent ) { n list < entity > entities = new array_list < entity > ( ) n com . google . appengine . api . datastore . key key n = keys . create ( parent , transaction_kind , transaction . id ( ) ) n entities . add ( new entity ( key ) ) n n for ( log log transaction . logs ( ) ) { n entity entity = new entity ( keys . create ( key , log_kind , log . sequence ( ) ) ) n entity . set_unindexed_property ( operation_property , log . operation ( ) . name ( ) ) n entity . set_unindexed_property ( class_property , log . entity ( ) . get_class ( ) . get_name ( ) ) n list < blob > blobs = new array_list < blob > ( ) n entity . set_unindexed_property ( proto_property , blobs ) n entities . add ( entity ) n n for ( entity e to_entities ( log . entity ( ) ) ) { n entity_proto proto = entity_translator . convert_to_pb ( e ) n byte [ ] bytes = proto . to_byte_array ( ) n blobs . add ( new blob ( bytes ) ) n } n } n n return entities n }	0
Q_325	call by metrics_record_impl	C_325_2	public void print_sample_start_info ( string sample_name ) { n text_view view = ( text_view ) find_view_by_id ( r . id . text_view ) n clear_text ( view ) n output_text ( view , string . format ( n codstr , n sample_name ) ) n }	0
Q_326	print statistic about path in specify format	C_326_0	"void stat ( char [ ] fmt , string src ) throws io_exception { n path src_path = new path ( src ) n file_system src_fs = src_path . get_file_system ( get_conf ( ) ) n file_status glob [ ] = src_fs . glob_status ( src_path ) n if ( null = = glob ) n throw new io_exception ( codstr + src + codstr no such file or directory codstr codstr b codstr f codstr directory codstr regular file codstr n codstr o codstr r codstr y codstr y "" n buf . append ( f . get_modification_time ( ) ) n break n default n buf . append ( fmt [ i ] ) n break n } n } n } n system . out . println ( buf . to_string ( ) ) n } n }"	1
Q_326	print statistic about path in specify format	C_326_1	public static string extension ( string file ) { n if ( string_utils . is_null_or_blank ( file ) ) { n return string_utils . empty n } n file = string_utils . trim ( file ) n int index = index_of_file_extension ( file ) n if ( index = = _ codint ) { n return string_utils . empty n } n return file . substring ( index + codint ) n }	0
Q_326	print statistic about path in specify format	C_326_2	public declared_type find_supertype ( type_mirror type , string qualified_name ) { n type_element element = as_type_element ( type ) n if ( element = null element . get_qualified_name ( ) . to_string ( ) . equals ( qualified_name ) ) { n return ( declared_type ) type n } n for ( type_mirror t direct_supertypes ( type ) ) { n declared_type result = find_supertype ( t , qualified_name ) n if ( result = null ) { n return result n } n } n return null n }	0
Q_327	lookup whether a mapping be require for this call	C_327_0	private operation_map_info get_operation_map_info ( string p_operation , string [ ] p_signature ) { n list < operation_map_info > op_map_info_list = operation_info_map . get ( p_operation ) n operation_map_info op_map_info = null n if ( op_map_info_list = null ) { n for ( operation_map_info i op_map_info_list ) { n if ( i . match_signature ( p_signature ) ) { n op_map_info = i n break n } n } n } n return op_map_info n }	1
Q_327	lookup whether a mapping be require for this call	C_327_1	private static void remove_data_event_listener_from_peer ( peer peer , peer_data_event_listener listener ) { n peer . remove_blocks_downloaded_event_listener ( listener ) n peer . remove_chain_download_started_event_listener ( listener ) n peer . remove_get_data_event_listener ( listener ) n peer . remove_pre_message_received_event_listener ( listener ) n }	0
Q_327	lookup whether a mapping be require for this call	C_327_2	deprecated n public static boolean equals_chars ( char_sequence a , char_sequence b ) { n / / do length test first for fast path n return a . length ( ) = = b . length ( ) compare ( a , b ) = = codint n }	0
Q_328	if an empty list as allowed_principals be give no one be allow to access	C_328_0	"private void check_cert_for_client_usage ( x509_certificate client_cert ) { n try { n / / we required that the extended key usage must be present if we are using n / / client cert authentication n if ( extended_client_check n ( client_cert . get_extended_key_usage ( ) = = null n client_cert . get_extended_key_usage ( ) . contains ( clientauth_oid ) ) ) { n throw new security_exception ( codstr ) n } n } catch ( certificate_parsing_exception e ) { n throw new security_exception ( codstr t parse client cert "" ) n } n }"	1
Q_328	if an empty list as allowed_principals be give no one be allow to access	C_328_1	protected final synchronized void set_state ( int old_state , int new_state ) n throws invalid_bean_o_state_exception , bean_not_reentrant_exception / / lidb2775 _ number n { n / / _ n / / inlined assert_state ( old_state ) for performance . dnumber n / / _ n if ( state = old_state ) { n throw new invalid_bean_o_state_exception ( get_state_name ( state ) , n get_state_name ( old_state ) ) n } n n if ( trace_component . is_any_tracing_enabled ( ) / / d527372 n te_bean_life_cycle_info . is_trace_enabled ( ) ) n te_bean_life_cycle_info . trace_bean_state ( state , get_state_name ( state ) , new_state , n get_state_name ( new_state ) ) / / d167264 n n / / _ n / / inlined set_state ( new_state ) for performance . dnumber n / / _ n state = new_state n }	0
Q_328	if an empty list as allowed_principals be give no one be allow to access	C_328_2	public static telemetry create_telemetry ( connection conn , int flush_size ) n { n try n { n return create_telemetry ( conn . unwrap ( snowflake_connection_v1 . class ) . get_sf_session ( ) , flush_size ) n } n catch ( sql_exception ex ) n { n logger . debug ( codstr ) n return null n } n }	0
Q_329	create a ip_address_updater to execute update	C_329_0	public static ip_address_updater updater ( final string path_account_sid , n final string path_ip_access_control_list_sid , n final string path_sid ) { n return new ip_address_updater ( path_account_sid , path_ip_access_control_list_sid , path_sid ) n }	1
Q_329	create a ip_address_updater to execute update	C_329_1	void delete_new_and_old_files ( ) { n n fa . remove_element ( file_name + codstr + codstr ) n fa . remove_element ( file_name + codstr + codstr ) n fa . remove_element ( file_name + codstr + codstr ) n fa . remove_element ( script_file_name + codstr ) n }	0
Q_329	create a ip_address_updater to execute update	C_329_2	public void marshall ( linux_parameters linux_parameters , protocol_marshaller protocol_marshaller ) { n n if ( linux_parameters = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( linux_parameters . get_capabilities ( ) , capabilities_binding ) n protocol_marshaller . marshall ( linux_parameters . get_devices ( ) , devices_binding ) n protocol_marshaller . marshall ( linux_parameters . get_init_process_enabled ( ) , initprocessenabled_binding ) n protocol_marshaller . marshall ( linux_parameters . get_shared_memory_size ( ) , sharedmemorysize_binding ) n protocol_marshaller . marshall ( linux_parameters . get_tmpfs ( ) , tmpfs_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_330	_ private method _	C_330_0	private void read_waypoint ( final element waypoint , final list < graph_object_map > result_list ) { n n final graph_object_map item = read_point ( waypoint ) n if ( item = null ) { n n result_list . add ( item ) n } n }	1
Q_330	_ private method _	C_330_1	public static map < string , object > parse_command_args ( string arg_string , string [ ] param_keys ) { n return parse_args_array ( arg_string . split ( codstr ) , null , null , arrays . as_list ( param_keys ) ) n }	0
Q_330	_ private method _	C_330_2	static < t > list < t > freeze ( list < t > list ) { n return list = = null ? null collections . unmodifiable_list ( list ) n }	0
Q_331	return a set of all modify key	C_331_0	public set < property_key > get_modified_properties ( ) { n n hash_set < property_key > modified_keys = new hash_set < > ( ) n n for ( graph_object_modification_state state get_sorted_modifications ( ) ) { n n for ( property_key key state . get_modified_properties ( ) . key_set ( ) ) { n n if ( modified_keys . contains ( key ) ) { n n modified_keys . add ( key ) n n } n n } n n } n n return modified_keys n n }	1
Q_331	return a set of all modify key	C_331_1	public void unsubscribe_in_background ( final av_live_query_subscribe_callback callback ) { n map < string , object > map = new hash_map < > ( ) n map . put ( subscribe_id , get_subscribe_id ( ) ) n map . put ( query_id , query_id ) n n realtime_client . get_instance ( ) . unsubscribe_live_query ( map ) . subscribe ( new observer < json_object > ( ) { n override n public void on_subscribe ( disposable disposable ) { n } n n override n public void on_next ( json_object json_object ) { n live_query_set . remove ( av_live_query . this ) n query_id = codstr n if ( null = callback ) { n callback . internal_done ( null ) n } n } n n override n public void on_error ( throwable throwable ) { n if ( null = callback ) { n callback . internal_done ( new av_exception ( throwable ) ) n } n } n n override n public void on_complete ( ) { n } n } ) n }	0
Q_331	return a set of all modify key	C_331_2	public converter get_external_converter ( string id ) { n for ( external_converters ec get_external_converters ( ) ) { n for ( converter_wrapper cw ec . get_converters ( ) ) { n if ( cw . get_id ( ) . equals ( id ) ) { n return cw . get_converter ( ) n } n } n } n return null n }	0
Q_332	validate the owner name and return the owner object	C_332_0	protected principal_user validate_and_get_owner ( http_servlet_request req , string owner_name ) { n principal_user remote_user = get_remote_user ( req ) n n n if ( owner_name = = null owner_name . is_empty ( ) owner_name . equals_ignore_case ( remote_user . get_user_name ( ) ) ) { n / / if owner_name is not present or if it is present and equal to remote username , then return remote_user . n return remote_user n } else if ( remote_user . is_privileged ( ) ) { n principal_user owner n n owner = user_service . find_user_by_username ( owner_name ) n if ( owner = = null ) { n throw new web_application_exception ( owner_name + codstr , status . not_found ) n } else { n return owner n } n } n throw new web_application_exception ( status . forbidden . get_reason_phrase ( ) , status . forbidden ) n }	1
Q_332	validate the owner name and return the owner object	C_332_1	void close ( ) { n if ( this . project = null ) { n util . logger ( ) . log ( level . fine , codstr , n this . project_identifier ) n n for ( iterator < project_listener > itr = n this . project_listeners . iterator ( ) itr . has_next ( ) ) { n this . project . remove_project_listener ( itr . next ( ) ) n itr . remove ( ) n } n try { n this . project . dispose ( ) n util . logger ( ) . fine ( codstr ) n } catch ( illegal_state_exception e ) { n / * n * protege registers a shutdown hook that is removed when n * dispose ( ) is called on a project . however , we might call this n * method during an already started shutdown process . see n * documentation for java . lang . runtime . remove_shutdown_hook . this n * exception should be harmless , unless there are other reasons n * dispose ( ) could throw this exception ? n * / n util . logger ( ) . fine ( codstr ) n } finally { n this . project = null n } n n } n }	0
Q_332	validate the owner name and return the owner object	C_332_2	public static string parse_server ( string xmpp_address ) { n if ( xmpp_address = = null ) { n return null n } n int at_index = xmpp_address . last_index_of ( codstr ) n / / if the string ends with codstr , return the empty string . n if ( at_index + codint > xmpp_address . length ( ) ) { n return codstr n } n int slash_index = xmpp_address . index_of ( codstr ) n if ( slash_index > codint slash_index > at_index ) { n return xmpp_address . substring ( at_index + codint , slash_index ) n } else { n return xmpp_address . substring ( at_index + codint ) n } n }	0
Q_333	set an entity manager property or hint	C_333_0	override n public void set_property ( string param_string , object param_object ) n { n check_closed ( ) n if ( get_properties ( ) = = null ) n { n this . properties = new hash_map < string , object > ( ) n } n n this . properties . put ( param_string , param_object ) n get_persistence_delegator ( ) . populate_client_properties ( this . properties ) n }	1
Q_333	set an entity manager property or hint	C_333_1	public flux < service_message > request_many ( service_message request , class < ? > response_type ) { n return flux . defer ( n ( ) _ > { n string qualifier = request . qualifier ( ) n if ( method_registry . contains_invoker ( qualifier ) ) { / / local service . n return method_registry n . get_invoker ( request . qualifier ( ) ) n . invoke_many ( request , service_message_codec decode_data ) n . map ( this throw_if_error ) n } else { n return address_lookup ( request ) n . flat_map_many ( n address _ > request_many ( request , response_type , address ) ) / / remote service n } n } ) n }	0
Q_333	set an entity manager property or hint	C_333_2	public boolean is_set ( _fields field ) { n if ( field = = null ) { n throw new illegal_argument_exception ( ) n } n n switch ( field ) { n case topology n return is_set_topology ( ) n case components n return is_set_components ( ) n case tasks n return is_set_tasks ( ) n case metrics n return is_set_metrics ( ) n } n throw new illegal_state_exception ( ) n }	0
Q_334	set the layout gravity x and y offset for the super_toast	C_334_0	public super_toast set_gravity ( style . gravity_style int gravity , int x_offset , int y_offset ) { n this . m_style . gravity = gravity n this . m_style . x_offset = x_offset n this . m_style . y_offset = y_offset n return this n }	1
Q_334	set the layout gravity x and y offset for the super_toast	C_334_1	public void resume_job ( nonnull final trigger_key a_trigger_key ) n { n value_enforcer . not_null ( a_trigger_key , codstr ) n try n { n m_a_scheduler . resume_trigger ( a_trigger_key ) n logger . info ( codstr + a_trigger_key . to_string ( ) ) n } n catch ( final scheduler_exception ex ) n { n logger . error ( codstr + a_trigger_key . to_string ( ) , ex ) n } n }	0
Q_334	set the layout gravity x and y offset for the super_toast	C_334_2	public certificate_get_options with_ocp_date ( date_time ocp_date ) { n if ( ocp_date = = null ) { n this . ocp_date = null n } else { n this . ocp_date = new date_time_rfc1123 ( ocp_date ) n } n return this n }	0
Q_335	create link core_container via it constructor solr tagint	C_335_0	private core_container create_core_container_via_constructor ( string solr_home_directory , file solr_xml_file ) { n constructor < core_container > constructor = class_utils . get_constructor_if_available ( core_container . class , string . class , n file . class ) n return bean_utils . instantiate_class ( constructor , solr_home_directory , solr_xml_file ) n }	1
Q_335	create link core_container via it constructor solr tagint	C_335_1	public static int validate_and_compute_length ( final direct_buffer_vector [ ] vectors ) n { n int message_length = codint n for ( final direct_buffer_vector vector vectors ) n { n vector . validate ( ) n message_length + = vector . length n n if ( message_length < codint ) n { n throw new illegal_state_exception ( codstr + arrays . to_string ( vectors ) ) n } n } n n return message_length n }	0
Q_335	create link core_container via it constructor solr tagint	C_335_2	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < notprsubset_type > create_notprsubset ( notprsubset_type value ) { n return new jaxb_element < notprsubset_type > ( _notprsubset_qname , notprsubset_type . class , null , value ) n }	0
Q_336	return true if the give method have a possibly match static method with the give name and argument	C_336_0	"public boolean has_possible_static_method ( string name , expression arguments ) { n int count = codint n n if ( arguments instanceof tuple_expression ) { n tuple_expression tuple = ( tuple_expression ) arguments n / / todo this won "" t strictly be true when using list expansion in argument calls n count = tuple . get_expressions ( ) . size ( ) n } else if ( arguments instanceof map_expression ) { n count = codint n } n n for ( method_node method get_methods ( name ) ) { n if ( method . is_static ( ) ) { n parameter [ ] parameters = method . get_parameters ( ) n if ( parameters . length = = count ) return true n n / / handle varargs case n if ( parameters . length > codint parameters [ parameters . length _ codint ] . get_type ( ) . is_array ( ) ) { n if ( count > = parameters . length _ codint ) return true n } n n / / handle parameters with default values n int non_default_parameters = codint n for ( parameter parameter parameters ) { n if ( parameter . has_initial_expression ( ) ) { n non_default_parameters + + n } n } n n if ( count < parameters . length non_default_parameters < = count ) { n return true n } n } n } n return false n }"	1
Q_336	return true if the give method have a possibly match static method with the give name and argument	C_336_1	public object get_default_value ( class type_hint ) { n for ( int i = codint i < codint i + + ) { n boolean try_to_string n if ( type_hint = = script_runtime . string_class ) { n try_to_string = ( i = = codint ) n } else { n try_to_string = ( i = = codint ) n } n n string method_name n object [ ] args n if ( try_to_string ) { n method_name = codstr n args = script_runtime . empty_args n } else { n method_name = codstr n args = new object [ codint ] n string hint n if ( type_hint = = null ) { n hint = codstr n } else if ( type_hint = = script_runtime . string_class ) { n hint = codstr n } else if ( type_hint = = script_runtime . scriptable_class ) { n hint = codstr n } else if ( type_hint = = script_runtime . function_class ) { n hint = codstr n } else if ( type_hint = = script_runtime . boolean_class n type_hint = = boolean . type ) n { n hint = codstr n } else if ( type_hint = = script_runtime . number_class n type_hint = = script_runtime . byte_class n type_hint = = byte . type n type_hint = = script_runtime . short_class n type_hint = = short . type n type_hint = = script_runtime . integer_class n type_hint = = integer . type n type_hint	0
Q_336	return true if the give method have a possibly match static method with the give name and argument	C_336_2	public cassandra do_with_cluster_builder ( final consumer < cluster . builder > configurer ) { n require_non_null ( configurer , codstr ) n return do_with_cluster_builder ( ( b , c ) _ > configurer . accept ( b ) ) n }	0
Q_337	find and return the date for the give event summary and year within the give ic file	C_337_0	private date seasonal_date_from_ics ( string ics_file_name , string event_summary , int year ) { n map < integer , date > dates = get_dates_from_ics ( ics_file_name , event_summary , year , year ) n return dates . get ( year _ ( event_summary . equals ( holiday . new_years_eve . get_summary ( ) ) ? codint codint ) ) n }	1
Q_337	find and return the date for the give event summary and year within the give ic file	C_337_1	static void create_file_from_resource ( string resource , resource file , string password ) throws io_exception { n system_out . print_date ( system_util . get_print_writer ( system_util . out ) , codstr + file ) n file . delete ( ) n n input_stream is = info_impl . class . get_resource_as_stream ( resource ) n if ( is = = null ) throw new io_exception ( codstr + resource + codstr ) n file . create_new_file ( ) n io_util . copy ( is , file , true ) n }	0
Q_337	find and return the date for the give event summary and year within the give ic file	C_337_2	private void deliver_beat_announcement ( final beat beat ) { n for ( final master_listener listener get_master_listeners ( ) ) { n try { n listener . new_beat ( beat ) n } catch ( throwable t ) { n logger . warn ( codstr , t ) n } n } n }	0
Q_338	if the file be compress handle this so that the stream be ready to read	C_338_0	private input_stream prepare_input_stream ( input_stream stream ) throws io_exception n { n input_stream result n buffered_input_stream bis = new buffered_input_stream ( stream ) n read_header_properties ( bis ) n if ( is_compressed ( ) ) n { n result = new inflater_input_stream ( bis ) n } n else n { n result = bis n } n return result n }	1
Q_338	if the file be compress handle this so that the stream be ready to read	C_338_1	public void error ( string msg , throwable e ) { n do_log ( msg , log_error , null , e ) n }	0
Q_338	if the file be compress handle this so that the stream be ready to read	C_338_2	static void print_usage ( ) { n system . err . println ( codstr + n codstr + n codstr + n codstr + n codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr + n codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr ) n system . err . println ( codstr + n codstr ) n system . err . println ( codstr + n codstr + n codstr + n codstr ) n tool_runner . print_generic_command_usage ( system . err ) n }	0
Q_339	calculate start date for a yearly relative recurrence	C_339_0	private void get_yearly_relative_dates ( calendar calendar , list < date > dates ) n { n long start_date = calendar . get_time_in_millis ( ) n calendar . set ( calendar . day_of_month , codint ) n calendar . set ( calendar . month , number_helper . get_int ( m_month_number ) _ codint ) n n int day_number = number_helper . get_int ( m_day_number ) n while ( more_dates ( calendar , dates ) ) n { n if ( day_number > codint ) n { n set_calendar_to_last_relative_day ( calendar ) n } n else n { n set_calendar_to_ordinal_relative_day ( calendar , day_number ) n } n n if ( calendar . get_time_in_millis ( ) > start_date ) n { n dates . add ( calendar . get_time ( ) ) n if ( more_dates ( calendar , dates ) ) n { n break n } n } n calendar . set ( calendar . day_of_month , codint ) n calendar . add ( calendar . year , codint ) n } n }	1
Q_339	calculate start date for a yearly relative recurrence	C_339_1	public static object invoke_static_method ( class < ? > object_class , string method_name , object [ ] args ) n throws no_such_method_exception , illegal_access_exception , invocation_target_exception { n if ( args = = null ) { n args = empty_object_array n } n int arguments = args . length n class < ? > [ ] param_types = new class < ? > [ arguments ] n for ( int i = codint i < arguments i + + ) { n param_types [ i ] = args [ i ] . get_class ( ) n } n return invoke_static_method ( object_class , method_name , args , param_types ) n }	0
Q_339	calculate start date for a yearly relative recurrence	C_339_2	deprecated n override n suppress_warnings ( codstr ) n protected void rollback_runtime ( operation_context context , model_node operation , model_node model , list < service_controller < ? controllers ) { n revert_reload ( context ) n }	0
Q_340	accessor method use to retrieve a string object represent the	C_340_0	public string get_string ( int field ) n { n string result n n if ( field < m_fields . length ) n { n result = m_fields [ field ] n n if ( result = null ) n { n result = result . replace ( mpx_constants . eol_placeholder , codstr ) n } n } n else n { n result = null n } n n return ( result ) n }	1
Q_340	accessor method use to retrieve a string object represent the	C_340_1	suppress_warnings ( codstr ) n public stmt column ( final string _column_name , n final big_decimal _value ) n { n this . column_with_values . add ( new abstract_sql_insert_update . abstract_column_with_value < big_decimal > ( _column_name , _value ) { n override n public void set ( final int _index , final prepared_statement _stmt ) n throws sql_exception n { n if ( get_value ( ) = = null ) { n _stmt . set_null ( _index , types . decimal ) n } else { n _stmt . set_big_decimal ( _index , get_value ( ) ) n } n } n } ) n return ( stmt ) this n }	0
Q_340	accessor method use to retrieve a string object represent the	C_340_2	public void element_decl ( string name , string model ) n throws sax_exception n { n if ( null = m_result_decl_handler ) n m_result_decl_handler . element_decl ( name , model ) n }	0
Q_341	this could be a self_extracting archive	C_341_0	private project_file handle_dos_exe_file ( input_stream stream ) throws exception n { n file file = input_stream_helper . write_stream_to_temp_file ( stream , codstr ) n input_stream is = null n n try n { n is = new file_input_stream ( file ) n if ( is . available ( ) > codint ) n { n stream_helper . skip ( is , codint ) n n / / bytes at offset codint n byte [ ] data = new byte [ codint ] n is . read ( data ) n n if ( matches_fingerprint ( data , windows_ne_exe_fingerprint ) ) n { n stream_helper . skip ( is , codint ) n n / / bytes at offset codint n data = new byte [ codint ] n is . read ( data ) n if ( matches_fingerprint ( data , prx_fingerprint ) ) n { n is . close ( ) n is = null n return read_project_file ( new p3_prx_file_reader ( ) , file ) n } n } n n if ( matches_fingerprint ( data , stx_fingerprint ) ) n { n stream_helper . skip ( is , codint ) n / / bytes at offset codint n data = new byte [ codint ] n is . read ( data ) n if ( matches_fingerprint ( data , prx3_fingerprint ) ) n { n is . close ( ) n is = null n return read_project_file ( new sure_trak_stx_file_reader ( ) , file ) n	1
Q_341	this could be a self_extracting archive	C_341_1	public static int get_optimal_drawer_width ( context context ) { n int possible_min_drawer_width = ui_utils . get_screen_width ( context ) _ ui_utils . get_action_bar_height ( context ) n int max_drawer_width = context . get_resources ( ) . get_dimension_pixel_size ( r . dimen . material_drawer_width ) n return math . min ( possible_min_drawer_width , max_drawer_width ) n }	0
Q_341	this could be a self_extracting archive	C_341_2	public static synchronized void remove_default_resource ( string name ) { n if ( default_resources . contains ( name ) ) { n default_resources . remove ( name ) n for ( configuration conf registry . key_set ( ) ) { n if ( conf . load_defaults ) { n conf . reload_configuration ( ) n } n } n } n }	0
Q_342	reset the helper be state	C_342_0	non_null n suppress_warnings ( { codstr , codstr } ) / / for library users n public searcher reset ( ) { n last_response_page = codint n last_request_page = codint n last_response_id = codint n end_reached = false n clear_facet_refinements ( ) n cancel_pending_requests ( ) n numeric_refinements . clear ( ) n return this n }	1
Q_342	reset the helper be state	C_342_1	public q_name to_q_name ( string qname ) { n string prefix = codstr n string local_name = qname n n int colon = qname . index_of ( codstr ) n if ( colon = _ codint ) { n prefix = qname . substring ( codint , colon ) n local_name = qname . substring ( colon + codint ) n } n string ns = get_namespace_uri ( prefix ) n if ( ns = = null ) n throw new illegal_argument_exception ( codstr + prefix ) n n return new q_name ( ns , local_name , prefix ) n }	0
Q_342	reset the helper be state	C_342_2	public synchronized void close ( ) throws io_exception { n if ( client_running ) { n leasechecker . close ( ) n leasechecker . close_renewal ( ) n if ( block_location_renewal = null ) { n block_location_renewal . stop ( ) n } n client_running = false n try { n leasechecker . interrupt_and_join ( ) n if ( block_location_renewal = null ) { n block_location_renewal . join ( ) n } n } catch ( interrupted_exception ie ) { n } n n / / close connections to the namenode n rpc . stop_proxy ( rpc_namenode ) n } n }	0
Q_343	read the n_triples file from the reader push statement into	C_343_0	public static void parse ( reader src , statement_handler handler ) n throws io_exception { n new n_triples_parser ( src , handler ) . parse ( ) n }	1
Q_343	read the n_triples file from the reader push statement into	C_343_1	public static string non_strict_format ( string message , object . format_args ) n { n if ( format_args = = null format_args . length = = codint ) { n return message n } n try { n return string . format ( locale . english , message , format_args ) n } n catch ( illegal_format_exception e ) { n string_builder bob = new string_builder ( message ) n for ( object format_arg format_args ) { n bob . append ( codstr ) . append ( format_arg ) n } n return bob . to_string ( ) n } n }	0
Q_343	read the n_triples file from the reader push statement into	C_343_2	public void render_lines_impl ( float [ ] points , int count , float w ) { n float width = w / codint n n float lastx1 = codint n float lasty1 = codint n float lastx2 = codint n float lasty2 = codint n n gl . gl_begin ( sgl . gl_quads ) n for ( int i = codint i < count + codint i + + ) { n int current = i n int next = i + codint n int prev = i _ codint n if ( prev < codint ) { n prev + = count n } n if ( next > = count ) { n next _ = count n } n if ( current > = count ) { n current _ = count n } n n float x1 = points [ ( current * codint ) ] n float y1 = points [ ( current * codint ) + codint ] n float x2 = points [ ( next * codint ) ] n float y2 = points [ ( next * codint ) + codint ] n n / / draw the next segment n float dx = x2 _ x1 n float dy = y2 _ y1 n n if ( ( dx = = codint ) ( dy = = codint ) ) { n continue n } n n float d2 = ( dx * dx ) + ( dy * dy	0
Q_344	load the open_cms configuration from the give xml url	C_344_0	private void load_xml_configuration ( url url , i_cms_xml_configuration configuration ) throws sax_exception , io_exception { n n / / generate the file url for the xml input n url file_url = new url ( url , configuration . get_xml_file_name ( ) ) n cms_log . init . info ( messages . get ( ) . get_bundle ( ) . key ( messages . init_load_config_xmlfile_1 , file_url ) ) n / / check transformation rule here so we have the xml file / xslt file log output together n boolean has_transformation = has_transformation ( ) n n / / create a backup of the configuration n backup_xml_configuration ( configuration ) n n / / instantiate digester and enable xml validation n m_digester = new digester ( ) n m_digester . set_use_context_class_loader ( true ) n / / todo for this to work with transformed configurations , we need to add the correct doctype declarations to the transformed files n m_digester . set_validating ( true ) n m_digester . set_entity_resolver ( new cms_xml_entity_resolver ( null ) ) n m_digester . set_rule_namespace_uri ( null ) n m_digester . set_error_handler ( new cms_xml_error_handler ( file_url . get_file ( ) ) ) n n / / add this class to the digester n m_digester . push ( configuration ) n n configuration . add_xml_digester_rules ( m_digester ) n n input_source input_source = null n if ( has_transformation ) { n try { n input_source = transform_configuration ( url , configuration ) n } catch	1
Q_344	load the open_cms configuration from the give xml url	C_344_1	public http_client_verify_builder with_header ( string header , matcher < string > matcher ) { n rule_builder . add_condition ( new header_condition ( header , matcher ) ) n return this n }	0
Q_344	load the open_cms configuration from the give xml url	C_344_2	public vault_extended_info_resource_inner update ( string resource_group_name , string vault_name , vault_extended_info_resource_inner resource_resource_extended_info_details ) { n return update_with_service_response_async ( resource_group_name , vault_name , resource_resource_extended_info_details ) . to_blocking ( ) . single ( ) . body ( ) n }	0
Q_345	send a new notification that will be remove automatically	C_345_0	public void send ( type type , final string message ) { n n final cms_notification_message notification_message = new cms_notification_message ( mode . normal , type , message ) n m_messages . add ( notification_message ) n if ( has_widget ( ) ) { n m_widget . add_message ( notification_message ) n } n timer timer = new timer ( ) { n n override n public void run ( ) { n n remove_message ( notification_message ) n } n } n timer . schedule ( codint * ( type = = type . normal ? codint codint ) ) n n }	1
Q_345	send a new notification that will be remove automatically	C_345_1	suppress_warnings ( codstr ) n public < t > o_binary_serializer < t > get_object_serializer ( final o_type type ) { n return ( o_binary_serializer < t > ) serializer_type_map . get ( type ) n }	0
Q_345	send a new notification that will be remove automatically	C_345_2	public boolean contains ( interval < t > another ) { n if ( another = = null is_empty ( ) another . is_empty ( ) ) { n return false n } n interval < t > intersection = get_intersection ( another ) n return intersection = null intersection . equals ( another ) n }	0
Q_346	create the list info bean for a tree item from a category bean	C_346_0	public static cms_list_info_bean create_category_list_info ( cms_category_tree_entry entry ) { n n cms_list_info_bean info = new cms_list_info_bean ( entry . get_title ( ) , entry . get_path ( ) , null ) n info . set_big_icon_classes ( entry . get_big_icon_classes ( ) ) n info . set_resource_type ( codstr ) n return info n }	1
Q_346	create the list info bean for a tree item from a category bean	C_346_1	public synchronized void shutdown_immediately ( ) { n n if ( this . is_shutdown ) { n final thread runner = this . task_runner_thread n n this . is_shutdown = true n n if ( runner = null runner . is_alive ( ) ) { n runner . interrupt ( ) n } n n this . task_queue . cancel_all_tasks ( ) n } n }	0
Q_346	create the list info bean for a tree item from a category bean	C_346_2	override n public com . liferay . commerce . product . model . cp_display_layout get_cp_display_layout ( n long cp_display_layout_id ) n throws com . liferay . portal . kernel . exception . portal_exception { n return _cp_display_layout_local_service . get_cp_display_layout ( cp_display_layout_id ) n }	0
Q_347	add an entry to the modify list	C_347_0	public void add_modified ( cms_client_sitemap_entry entry ) { n n if ( m_modifications . contains_key ( entry . get_id ( ) ) ) { n m_modifications . remove ( entry . get_id ( ) ) n } n m_modifications . put ( entry . get_id ( ) , entry ) n check_map_size ( m_modifications ) n }	1
Q_347	add an entry to the modify list	C_347_1	suppress_warnings ( codstr ) n override n public e_list < ifc_rel_space_boundary > get_bounded_by ( ) { n return ( e_list < ifc_rel_space_boundary > ) e_get ( ifc4_package . literals . ifc_space_bounded_by , true ) n }	0
Q_347	add an entry to the modify list	C_347_2	public rest_api_config enable_groups ( rest_endpoint_group . endpoint_groups ) { n if ( endpoint_groups = null ) { n enabled_groups . add_all ( arrays . as_list ( endpoint_groups ) ) n } n return this n }	0
Q_348	set the give property with the give value to the give resource	C_348_0	private list set_property_in_folder ( n string resource_root_path , n string property_definition , n string new_value , n boolean recursive ) throws cms_exception , cms_vfs_exception { n n cms_object cms = get_cms ( ) n n / / collect the resources to look up n list resources = new array_list ( ) n if ( recursive ) { n resources = cms . read_resources ( resource_root_path , cms_resource_filter . ignore_expiration ) n } else { n resources . add ( resource_root_path ) n } n n list changed_resources = new array_list ( resources . size ( ) ) n cms_property new_property = new cms_property ( property_definition , null , null ) n / / create permission set and filter to check each resource n for ( int i = codint i < resources . size ( ) i + + ) { n / / loop through found resources and check property values n cms_resource res = ( cms_resource ) resources . get ( i ) n cms_property property = cms . read_property_object ( res , property_definition , false ) n if ( property . is_null_property ( ) ) { n / / change structure value n new_property . set_structure_value ( new_value ) n new_property . set_name ( property_definition ) n cms . write_property_object ( cms . get_request_context ( ) . remove_site_root ( res . get_root_path ( ) ) , new_property ) n changed_resources . add ( res ) n } else { n / / nop n } n	1
Q_348	set the give property with the give value to the give resource	C_348_1	protected list < jc_diagnostic > get_where_clauses ( ) { n list < jc_diagnostic > clauses = list . nil ( ) n for ( where_clause_kind kind where_clause_kind . values ( ) ) { n list < jc_diagnostic > lines = list . nil ( ) n for ( map . entry < type , jc_diagnostic > entry where_clauses . get ( kind ) . entry_set ( ) ) { n lines = lines . prepend ( entry . get_value ( ) ) n } n if ( lines . is_empty ( ) ) { n string key = kind . key ( ) n if ( lines . size ( ) > codint ) n key + = codstr n jc_diagnostic d = diags . fragment ( key , where_clauses . get ( kind ) . key_set ( ) ) n d = new jc_diagnostic . multiline_diagnostic ( d , lines . reverse ( ) ) n clauses = clauses . prepend ( d ) n } n } n return clauses . reverse ( ) n }	0
Q_348	set the give property with the give value to the give resource	C_348_2	override n protected void append ( logging_event logging_event ) n { n java . util . logging . logger logger = java . util . logging . logger . get_logger ( logging_event . get_logger_name ( ) ) n if ( logger = = null ) { n log_log . warn ( format ( codstr , logging_event . get_logger_name ( ) ) ) n return n } n n level level = logging_event . get_level ( ) n java . util . logging . level jul_level = convert_log4j_level ( level ) n n log_record record = new log_record ( jul_level , logging_event . get_rendered_message ( ) ) n record . set_millis ( logging_event . get_time_stamp ( ) ) n location_info location = logging_event . get_location_information ( ) n if ( location = null ) { n record . set_source_class_name ( location . get_class_name ( ) ) n record . set_source_method_name ( location . get_method_name ( ) ) n } n n logger . log ( record ) n }	0
Q_349	create the select box for select alias mode	C_349_0	protected cms_select_box create_select_box ( ) { n n cms_select_box selectbox = new cms_select_box ( ) n selectbox . set_title ( cms_alias_mode . page . to_string ( ) , alias_messages . page_description ( ) ) n selectbox . set_title ( cms_alias_mode . redirect . to_string ( ) , alias_messages . redirect_description ( ) ) n selectbox . set_title ( cms_alias_mode . permanent_redirect . to_string ( ) , alias_messages . moved_description ( ) ) n selectbox . add_option ( cms_alias_mode . page . to_string ( ) , alias_messages . option_page ( ) ) n selectbox . add_option ( cms_alias_mode . redirect . to_string ( ) , alias_messages . option_redirect ( ) ) n selectbox . add_option ( cms_alias_mode . permanent_redirect . to_string ( ) , alias_messages . option_moved ( ) ) n n selectbox . get_element ( ) . get_style ( ) . set_width ( codint , unit . px ) n selectbox . get_element ( ) . get_style ( ) . set_margin_right ( codint , unit . px ) n return selectbox n }	1
Q_349	create the select box for select alias mode	C_349_1	private string get_site_root ( ) { n n string res n n if ( m_simple_field_site_root . is_visible ( ) ) { n res = m_simple_field_site_root . get_value ( ) n } else { n res = codstr + ensure_foldername ( get_parent_folder ( ) ) + ensure_foldername ( get_field_folder ( ) ) n res = res . ends_with ( codstr ) ? res . substring ( codint , res . length ( ) _ codint ) res n } n return res n }	0
Q_349	create the select box for select alias mode	C_349_2	public j_scroll_pane get_scroll_pane ( j_text_component editor_pane ) { n container p = editor_pane . get_parent ( ) n while ( p = null ) { n if ( p instanceof j_scroll_pane ) { n return ( j_scroll_pane ) p n } n p = p . get_parent ( ) n } n return null n }	0
Q_350	update the order of the locale node if require	C_350_0	protected void update_locale_node_sorting ( ) { n n / / check if the locale nodes require sorting n list < locale > locales = new array_list < locale > ( m_locales ) n collections . sort ( locales , new comparator < locale > ( ) { n n public int compare ( locale o1 , locale o2 ) { n n return o1 . to_string ( ) . compare_to ( o2 . to_string ( ) ) n } n } ) n list < element > locale_nodes = new array_list < element > ( m_document . get_root_element ( ) . elements ( ) ) n boolean sort_required = false n if ( locale_nodes . size ( ) = locales . size ( ) ) { n sort_required = true n } else { n int i = codint n for ( element el locale_nodes ) { n if ( locales . get ( i ) . to_string ( ) . equals ( el . attribute_value ( codstr ) ) ) { n sort_required = true n break n } n i + + n } n } n n if ( sort_required ) { n / / do the actual node sorting , by removing the nodes first n for ( element el locale_nodes ) { n m_document . get_root_element ( ) . remove ( el ) n } n n collections . sort ( locale_nodes , new comparator < object > ( ) { n n public	1
Q_350	update the order of the locale node if require	C_350_1	public void add_footer_toolbar_right_label ( j_label label ) { n display_utils . scale_icon ( label ) n this . footer_toolbar_right . add ( label ) n this . validate ( ) n }	0
Q_350	update the order of the locale node if require	C_350_2	public static < t extends enum < t optional < t > get_if_present ( class < t > enum_class , string value ) { n check_not_null ( enum_class ) n check_not_null ( value ) n return platform . get_enum_if_present ( enum_class , value ) n }	0
Q_351	return a map that lazily read xml document from the open_cms vfs that be wrap use a	C_351_0	public map < string , cms_jsp_content_access_bean > get_read_xml ( ) { n n if ( m_xml_content = = null ) { n / / create lazy map only on demand n m_xml_content = cms_collections_generic_wrapper . create_lazy_map ( new cms_xml_content_access_transformer ( ) ) n } n return m_xml_content n }	1
Q_351	return a map that lazily read xml document from the open_cms vfs that be wrap use a	C_351_1	public route_matcher all_with_reg_ex ( string regex , handler < http_server_request > handler ) { n add_reg_ex ( regex , handler , get_bindings ) n add_reg_ex ( regex , handler , put_bindings ) n add_reg_ex ( regex , handler , post_bindings ) n add_reg_ex ( regex , handler , delete_bindings ) n add_reg_ex ( regex , handler , options_bindings ) n add_reg_ex ( regex , handler , head_bindings ) n add_reg_ex ( regex , handler , trace_bindings ) n add_reg_ex ( regex , handler , connect_bindings ) n add_reg_ex ( regex , handler , patch_bindings ) n return this n }	0
Q_351	return a map that lazily read xml document from the open_cms vfs that be wrap use a	C_351_2	override n public request < describe_reserved_instances_modifications_request > get_dry_run_request ( ) { n request < describe_reserved_instances_modifications_request > request = new describe_reserved_instances_modifications_request_marshaller ( ) . marshall ( this ) n request . add_parameter ( codstr , boolean . to_string ( true ) ) n return request n }	0
Q_352	update the progress bar	C_352_0	protected void update_progress_bar ( cms_upload_progess_info info ) { n n switch ( info . get_state ( ) ) { n case not_started n break n case running n m_progress_info . set_progress ( info ) n stop_loading_animation ( ) n break n case finished n m_progress_info . finish ( ) n display_dialog_info ( n org . opencms . gwt . client . messages . get ( ) . key ( n org . opencms . gwt . client . messages . gui_upload_info_finishing_0 ) , n false ) n start_loading_animation ( n org . opencms . gwt . client . messages . get ( ) . key ( n org . opencms . gwt . client . messages . gui_upload_info_creating_resources_0 ) , n codint ) n break n default n break n } n }	1
Q_352	update the progress bar	C_352_1	public static string from_plain ( string u ) { n u = archive_utils . add_implied_http_if_necessary ( u ) n boolean trailing_slash = u . ends_with ( codstr ) n / / ensure all typical uuri cleanup ( incl . idn _ punycoding ) is done n try { n u = usable_uri_factory . get_instance ( u ) . to_string ( ) n } catch ( uri_exception e ) { n e . print_stack_trace ( ) n / / allow to continue with original string uri n } n / / except don codstr t already there ( presence or absence of n / / such slash has special meaning specifying implied n / / surt prefixes ) n if ( trailing_slash u . ends_with ( codstr ) ) { n u = u . substring ( codint , u . length ( ) _ codint ) n } n / / convert to full surt n u = surt . from_uri ( u ) n return u n }	0
Q_352	update the progress bar	C_352_2	public final transfer_config update_transfer_config ( n transfer_config transfer_config , field_mask update_mask ) { n n update_transfer_config_request request = n update_transfer_config_request . new_builder ( ) n . set_transfer_config ( transfer_config ) n . set_update_mask ( update_mask ) n . build ( ) n return update_transfer_config ( request ) n }	0
Q_353	add additional field to this field configuration	C_353_0	private void add_additional_fields ( ) { n n / * n * add fields from opencms _ search . xml ( lucene fields ) n * / n for ( cms_search_field field get_fields ( ) ) { n if ( field instanceof cms_lucene_field ) { n cms_solr_field new_solr_field = new cms_solr_field ( ( cms_lucene_field ) field ) n m_solr_fields . put ( new_solr_field . get_name ( ) , new_solr_field ) n } n } n n / * n * add the content fields ( multiple for contents with more than one locale ) n * / n / / add the content_ < locale > fields to this configuration n cms_solr_field solr_field = new cms_solr_field ( cms_search_field . field_content , null , null , null ) n solr_field . add_mapping ( n new cms_search_field_mapping ( cms_search_field_mapping_type . content , cms_search_field . field_content ) ) n m_solr_fields . put ( solr_field . get_name ( ) , solr_field ) n for ( locale locale open_cms . get_locale_manager ( ) . get_available_locales ( ) ) { n solr_field = new cms_solr_field ( n cms_search_field_configuration . get_locale_extended_name ( cms_search_field . field_content , locale ) , n collections . singleton_list ( locale . to_string ( ) + cms_search_field . field_excerpt ) , n locale , n null ) n solr_field . add_mapping ( n new cms_search_field_mapping ( cms_search_field_mapping_type . content , cms_search_field . field_content ) ) n m_solr_fields . put ( solr_field . get_name ( ) , solr_field ) n } n n	1
Q_353	add additional field to this field configuration	C_353_1	private object_stream_class read_class_desc ( ) throws class_not_found_exception , io_exception { n byte tc = next_tc ( ) n switch ( tc ) { n case tc_classdesc n return read_new_class_desc ( false ) n case tc_proxyclassdesc n class < ? > proxy_class = read_new_proxy_class_desc ( ) n object_stream_class stream_class = object_stream_class . lookup ( proxy_class ) n stream_class . set_load_fields ( object_stream_class . no_fields ) n register_object_read ( stream_class , next_handle ( ) , false ) n checked_set_super_class_desc ( stream_class , read_class_desc ( ) ) n return stream_class n case tc_reference n return ( object_stream_class ) read_cyclic_reference ( ) n case tc_null n return null n default n throw corrupt_stream ( tc ) n } n }	0
Q_353	add additional field to this field configuration	C_353_2	public stream_response start_stream ( string uuid , string stream_url , int loop ) throws io_exception , nexmo_client_exception { n return streams . put ( new stream_request ( uuid , stream_url , loop ) ) n }	0
Q_354	add a date with a certain check state	C_354_0	private void add_date_with_check_state ( date date , boolean check_state ) { n n add_check_box ( date , check_state ) n if ( m_dates . contains ( date ) ) { n m_dates . add ( date ) n fire_value_change ( ) n } n }	1
Q_354	add a date with a certain check state	C_354_1	public static boolean is_unix_time_stamp ( string time_stamp ) { n if ( time_stamp . length ( ) = compliance_configuration_keys . time_stamp_length ) { n return false n } n try { n long . parse_long ( time_stamp ) n return true n } catch ( number_format_exception e ) { n return false n } n }	0
Q_354	add a date with a certain check state	C_354_2	private void grow ( int min_capacity ) { n int old_capacity = segment . size ( ) n int new_capacity = old_capacity + ( old_capacity codint ) n if ( new_capacity _ min_capacity < codint ) { n new_capacity = min_capacity n } n segment = memory_segment_factory . wrap ( arrays . copy_of ( segment . get_array ( ) , new_capacity ) ) n after_grow ( ) n }	0
Q_355	initialize the group object to work with depend on the dialog state and request parameter	C_355_0	protected void init_group_object ( ) { n n object o = null n n try { n if ( cms_string_util . is_empty ( get_param_action ( ) ) cms_dialog . dialog_initial . equals ( get_param_action ( ) ) ) { n / / edit an existing user , get the user object from db n m_group = get_cms ( ) . read_group ( new cms_uuid ( get_param_groupid ( ) ) ) n } else { n / / this is not the initial call , get the user object from session n o = get_dialog_object ( ) n m_group = ( cms_group ) o n / / test n m_group . get_id ( ) n } n if ( ( m_group . get_parent_id ( ) = null ) m_group . get_parent_id ( ) . is_null_uuid ( ) ) { n set_parent_group ( get_cms ( ) . get_parent ( m_group . get_name ( ) ) . get_name ( ) ) n } n } catch ( exception e ) { n / / create a new user object n m_group = new cms_group ( ) n set_parent_group ( null ) n } n }	1
Q_355	initialize the group object to work with depend on the dialog state and request parameter	C_355_1	protected cms_project create_and_set_module_import_project ( cms_object cms , cms_module module ) throws cms_exception { n n cms_project import_project = cms . create_project ( n org . opencms . module . messages . get ( ) . get_bundle ( cms . get_request_context ( ) . get_locale ( ) ) . key ( n org . opencms . module . messages . gui_import_module_project_name_1 , n new object [ ] { module . get_name ( ) } ) , n org . opencms . module . messages . get ( ) . get_bundle ( cms . get_request_context ( ) . get_locale ( ) ) . key ( n org . opencms . module . messages . gui_import_module_project_desc_1 , n new object [ ] { module . get_name ( ) } ) , n open_cms . get_default_users ( ) . get_group_administrators ( ) , n open_cms . get_default_users ( ) . get_group_administrators ( ) , n cms_project . project_type_temporary ) n cms . get_request_context ( ) . set_current_project ( import_project ) n cms . copy_resource_to_project ( codstr ) n return import_project n }	0
Q_355	initialize the group object to work with depend on the dialog state and request parameter	C_355_2	public static method_call_expression build_set_property_expression ( final expression object_expression , final string property_name , final class_node target_class_node , final expression value_expression ) { n string method_name = codstr + meta_class_helper . capitalize ( property_name ) n method_call_expression method_call_expression = new method_call_expression ( object_expression , method_name , new argument_list_expression ( value_expression ) ) n method_node setter_method = target_class_node . get_setter_method ( method_name ) n if ( setter_method = null ) { n method_call_expression . set_method_target ( setter_method ) n } n return method_call_expression n }	0
Q_356	get the name of all available property	C_356_0	private list < string > get_property_names ( cms_object cms ) throws cms_exception { n n list < cms_property_definition > prop_defs = cms . read_all_property_definitions ( ) n list < string > result = new array_list < string > ( ) n for ( cms_property_definition prop_def prop_defs ) { n result . add ( prop_def . get_name ( ) ) n } n return result n }	1
Q_356	get the name of all available property	C_356_1	public metric_value [ ] get_all ( int start_inclusive , int end_exclusive ) { n return int_stream . range ( start_inclusive , end_exclusive ) n . map_to_obj ( this get_or_null ) n . to_array ( metric_value [ ] new ) n }	0
Q_356	get the name of all available property	C_356_2	public pact_dsl_json_array and ( object value , matching_rule . rules ) { n if ( value = null ) { n body . put ( value ) n } else { n body . put ( json_object . null ) n } n matchers . set_rules ( root_path + append_array_index ( codint ) , new matching_rule_group ( arrays . as_list ( rules ) , rule_logic . and ) ) n return this n }	0
Q_357	transform a list of cms_property object with structure and resource value into a map with	C_357_0	public static map < string , cms_property > get_property_map ( list < cms_property > list ) { n n map < string , cms_property > result = null n string key = null n cms_property property = null n n if ( ( list = = null ) ( list . size ( ) = = codint ) ) { n return collections . empty_map ( ) n } n n result = new hash_map < string , cms_property > ( ) n n / / choose the fastest method to iterate the list n if ( list instanceof random_access ) { n for ( int i = codint , n = list . size ( ) i < n i + + ) { n property = list . get ( i ) n key = property . get_name ( ) n result . put ( key , property ) n } n } else { n iterator < cms_property > i = list . iterator ( ) n while ( i . has_next ( ) ) { n property = i . next ( ) n key = property . get_name ( ) n result . put ( key , property ) n } n } n n return result n }	1
Q_357	transform a list of cms_property object with structure and resource value into a map with	C_357_1	public static long [ ] allocate ( long amount , int . ratios ) { n if ( ( ratios = = null ) ( ratios . length = = codint ) ) { n throw new illegal_argument_exception ( n codstr ) n } n int total = codint n for ( int i = codint i < ratios . length i + + ) n total + = ratios [ i ] n if ( total < = codint ) { n throw new illegal_argument_exception ( n codstr ) n } n long remainder = amount n long [ ] results = new long [ ratios . length ] n for ( int i = codint i < results . length i + + ) { n results [ i ] = amount * ratios [ i ] / total n remainder _ = results [ i ] n } n n for ( int i = codint i < remainder i + + ) { n results [ i ] + + n } n n return results n }	0
Q_357	transform a list of cms_property object with structure and resource value into a map with	C_357_2	public void set_last_retraction_details ( com . google . api . ads . admanager . axis . v201902 . retraction_details last_retraction_details ) { n this . last_retraction_details = last_retraction_details n }	0
Q_358	set the style of the direct edit button of the user	C_358_0	public void set_direct_edit_button_style ( string buttonstyle ) { n n int buttonstyle_value = buttonstyle_textimage n try { n if ( buttonstyle = null ) { n buttonstyle_value = button_styles_list . index_of ( buttonstyle ) n } n } catch ( exception e ) { n / / do nothing , use the default value n } n set_direct_edit_button_style ( buttonstyle_value ) n }	1
Q_358	set the style of the direct edit button of the user	C_358_1	public final purch ret_new_ords ( final map < string , object > p_rq_vs , n final online_buyer p_bur ) throws exception { n set < string > nd_fl = new hash_set < string > ( ) n nd_fl . add ( codstr ) n nd_fl . add ( codstr ) n string tbn = cust_order . class . get_simple_name ( ) n p_rq_vs . put ( tbn + codstr , nd_fl ) n list < cust_order > orders = get_srv_orm ( ) . retrieve_list_with_conditions ( p_rq_vs , n cust_order . class , codstr + p_bur . get_its_id ( ) ) n p_rq_vs . remove ( tbn + codstr ) n for ( cust_order cu_or orders ) { n / / redo all lines n / / its_owner and other data will be set farther only for used lines n / / unused lines will be removed from db n tbn = cust_order_tx_ln . class . get_simple_name ( ) n p_rq_vs . put ( tbn + codstr , nd_fl ) n cu_or . set_taxes ( get_srv_orm ( ) . retrieve_list_with_conditions ( p_rq_vs , n cust_order_tx_ln . class , codstr + cu_or . get_its_id ( ) ) ) n p_rq_vs . remove ( tbn + codstr ) n tbn = cust_order_gd_ln . class . get_simple_name ( ) n p_rq_vs . put ( tbn + codstr , nd_fl ) n cu_or . set_goods ( get_srv_orm ( ) . retrieve_list_with_conditions ( p_rq_vs , n cust_order_gd_ln . class , codstr + cu_or . get_its_id	0
Q_358	set the style of the direct edit button of the user	C_358_2	public void set_preferred_cipher_sc ( string name ) throws ssh_exception { n n if ( name = = null ) n return n n if ( ciphers_sc . contains ( name ) ) { n pref_cipher_sc = name n set_cipher_preferred_position_sc ( name , codint ) n } else { n throw new ssh_exception ( name + codstr , n ssh_exception . unsupported_algorithm ) n } n }	0
Q_359	store the give app set within the user additional info	C_359_0	public void store_app_settings ( cms_object cms , class < ? extends i_cms_app_settings > type , i_cms_app_settings app_settings ) { n n cms_user user = cms . get_request_context ( ) . get_current_user ( ) n cms_user_settings settings = new cms_user_settings ( user ) n n string current_setting = settings . get_additional_preference ( type . get_name ( ) , true ) n string state = app_settings . get_settings_string ( ) n if ( ( ( state = = null ) ( current_setting = = null ) ) ( ( state = null ) state . equals ( current_setting ) ) ) { n / / nothing changed n return n } n n settings . set_additional_preference ( type . get_name ( ) , state ) n try { n settings . save ( cms ) n } catch ( cms_exception e ) { n log . error ( codstr + type . get_name ( ) , e ) n } n }	1
Q_359	store the give app set within the user additional info	C_359_1	override n public event_stream do_stream_request ( final stitch_request stitch_req ) { n init_app_metadata ( client_app_id ) n n return super . do_stream_request_url ( stitch_req , get_hostname ( ) ) n }	0
Q_359	store the give app set within the user additional info	C_359_2	public static < t1 , t2 , t3 , t4 , t5 , t6 , t7 > flux < tuple7 < t1 , t2 , t3 , t4 , t5 , t6 , t7 zip ( publisher < ? extends t1 > source1 , n publisher < ? extends t2 > source2 , n publisher < ? extends t3 > source3 , n publisher < ? extends t4 > source4 , n publisher < ? extends t5 > source5 , n publisher < ? extends t6 > source6 , n publisher < ? extends t7 > source7 ) { n return zip ( tuples . fn7 ( ) , source1 , source2 , source3 , source4 , source5 , source6 , source7 ) n }	0
Q_360	create a module resource selection field	C_360_0	cms_module_resource_select_field create_module_resource_field ( string module_resource ) { n n cms_module_resource_select_field res_field = new cms_module_resource_select_field ( ) n cms_object module_cms = null n try { n module_cms = open_cms . init_cms_object ( a_cms_ui . get_cms_object ( ) ) n if ( get_selected_site ( ) = null ) { n module_cms . get_request_context ( ) . set_site_root ( get_selected_site ( ) ) n } n res_field . set_cms_object ( module_cms ) n if ( module_resource = null ) { n res_field . set_value ( module_resource ) n } n return res_field n } catch ( cms_exception e ) { n log . error ( e . get_localized_message ( ) , e ) n return null n } n }	1
Q_360	create a module resource selection field	C_360_1	private int [ ] determine_power2_alpha_buckets_sarray_sptrmap ( int q ) { n int str_len = length n int exp2 = kbs_get_exp_ulong ( codint , alphabet . size ) n if ( exp2 < codint ) { n throw new runtime_exception ( codstr ) n } n int [ ] buckets = determine_power2_alpha_buckets_sarray ( q ) n this . suf_ptr_map = new int [ str_len + codint * q + codint ] n int mapped_uchar_array = codint n int hash_code = codint n int j n for ( j = codint j < q j + + ) { n hash_code = hash_code < < exp2 n hash_code + = seq [ start + mapped_uchar_array + j ] n } n int temp_modulo = codint n temp_modulo = temp_modulo n temp_modulo = temp_modulo < < ( exp2 * ( q _ codint ) ) n temp_modulo = temp_modulo n mapped_uchar_array + = q n for ( j = codint j < str_len _ codint j + + ) { n suf_ptr_map [ j ] = ( buckets [ hash_code + codint ] ) _ codint n hash_code = hash_code temp_modulo n hash_code = hash_code < < exp2 n hash_code = hash_code seq [ start + mapped_uchar_array ] n mapped_uchar_array + + n } n suf_ptr_map [ j ] = buckets [ hash_code ] n int begin_ptr = _ codint n for ( j = str_len j < = str_len + codint * q j + + ) { n suf_ptr_map [	0
Q_360	create a module resource selection field	C_360_2	public void set_trajectory_info ( dimension traj_dim , variable traj_var , n dimension time_dim , variable time_var , n variable lat_var , variable lon_var , variable elev_var ) n throws io_exception n { n this . traj_dim = traj_dim n this . traj_var = traj_var n this . time_dim = time_dim n this . time_var = time_var n this . lat_var = lat_var n this . lon_var = lon_var n this . elev_var = elev_var n n trajectory_num_point = this . time_dim . get_length ( ) n time_var_units_string = this . time_var . find_attribute ( codstr ) . get_string_value ( ) n n / / check that time , lat , lon , elev units are acceptable . n if ( date_unit . get_standard_date ( time_var_units_string ) = = null ) n throw new illegal_argument_exception ( codstr + time_var_units_string + codstr ) n string lat_var_units_string = this . lat_var . find_attribute ( codstr ) . get_string_value ( ) n if ( simple_unit . is_compatible ( lat_var_units_string , codstr ) ) n throw new illegal_argument_exception ( codstr + lat_var_units_string + codstr degrees_north codstr ) n string lon_var_units_string = this . lon_var . find_attribute ( codstr ) . get_string_value ( ) n if ( simple_unit . is_compatible ( lon_var_units_string , codstr ) ) n throw new illegal_argument_exception ( codstr + lon_var_units_string + codstr degrees_east codstr ) n string elev_var_units_string = this . elev_var . find_attribute ( codstr ) . get_string_value ( ) n if ( simple_unit . is_compatible ( elev_var_units_string , codstr	0
Q_361	write the output element to the xml output writer and detach it	C_361_0	protected void digest_element ( element parent , element output ) throws sax_exception { n n m_sax_writer . write ( output ) n parent . remove ( output ) n }	1
Q_361	write the output element to the xml output writer and detach it	C_361_1	public void on_click ( menu_item_click_event event ) { n if ( feature = null feature . is_selected ( ) ) { n feature_transaction ft = map_widget . get_map_model ( ) . get_feature_editor ( ) . start_editing ( n new feature [ ] { feature . clone ( ) } , new feature [ ] { feature . clone ( ) } ) n map_widget . render ( ft , render_group . vector , render_status . all ) n vector_layer v_layer = feature . get_layer ( ) n if ( v_layer . get_layer_info ( ) . get_layer_type ( ) = = layer_type . point ) { n controller . set_controller ( new point_edit_controller ( map_widget , controller ) ) n } else if ( v_layer . get_layer_info ( ) . get_layer_type ( ) = = layer_type . multipoint ) { n map_widget . get_map_model ( ) . get_feature_editor ( ) . stop_editing ( ) n map_widget . render ( ft , render_group . vector , render_status . delete ) n sc . warn ( codstr ) n } else if ( v_layer . get_layer_info ( ) . get_layer_type ( ) = = layer_type . linestring ) { n controller . set_controller ( new line_string_edit_controller ( map_widget , controller ) ) n } else if ( v_layer . get_layer_info ( ) . get_layer_type ( ) = = layer_type . multilinestring ) { n controller . set_controller ( new multi_line_string_edit_controller ( map_widget , controller ) ) n } else if ( v_layer	0
Q_361	write the output element to the xml output writer and detach it	C_361_2	suppress_warnings ( codstr ) n override n public e_list < ifc_rel_referenced_in_spatial_structure > get_references_elements ( ) { n return ( e_list < ifc_rel_referenced_in_spatial_structure > ) e_get ( n ifc4_package . literals . ifc_spatial_element_references_elements , true ) n }	0
Q_362	look for a nest type in code value_type call builder and verify it extend the	C_362_0	private optional < declared_type > try_find_builder ( n final qualified_name superclass , type_element value_type ) { n type_element builder_type = types_in ( value_type . get_enclosed_elements ( ) ) n . stream ( ) n . filter ( element _ > element . get_simple_name ( ) . content_equals ( user_builder_name ) ) n . find_any ( ) n . or_else ( null ) n if ( builder_type = = null ) { n if ( value_type . get_kind ( ) = = interface ) { n messager . print_message ( n note , n codstr class builder extends codstr { } codstr , n value_type ) n } else { n messager . print_message ( n note , n codstr public static class builder extends codstr { } codstr , n value_type ) n } n return optional . empty ( ) n } n n boolean extends_superclass = n new is_subclass_of_generated_type_visitor ( superclass , value_type . get_type_parameters ( ) ) n . visit ( builder_type . get_superclass ( ) ) n if ( extends_superclass ) { n messager . print_message ( n error , n codstr + superclass . get_simple_name ( ) + codstr , n builder_type ) n return optional . empty ( ) n } n n if ( builder_type . get_type_parameters ( ) . size ( ) = value_type . get_type_parameters ( ) . size ( ) ) { n if ( builder_type . get_type_parameters ( ) . is_empty ( ) ) { n messager .	1
Q_362	look for a nest type in code value_type call builder and verify it extend the	C_362_1	public static list < string > tokenize_and_uri_decode ( string string , string delimiters ) { n list < string > tokenize = string_utils . tokenize ( string , delimiters , true , true ) n list < string > decoded = new array_list < string > ( tokenize . size ( ) ) n n for ( string token tokenize ) { n decoded . add ( decode ( token ) ) n } n n return decoded n }	0
Q_362	look for a nest type in code value_type call builder and verify it extend the	C_362_2	public static recurrence_iterable create_recurrence_iterable ( recurrence recurrence , i_cal_date start , time_zone timezone ) { n date_value start_value = convert ( start , timezone ) n return recurrence_iterator_factory . create_recurrence_iterable ( recurrence , start_value , timezone ) n }	0
Q_363	return a link qualified_name for a type in code package_name	C_363_0	public static qualified_name of ( string package_name , string top_level_type , string . nested_types ) { n require_non_null ( package_name . is_empty ( ) ) n check_argument ( top_level_type . is_empty ( ) ) n return new qualified_name ( n unshaded_name ( package_name ) , / / shadow_jar modifies string literals unshade them here n immutable_list . < string > builder ( ) . add ( top_level_type ) . add ( nested_types ) . build ( ) ) n }	1
Q_363	return a link qualified_name for a type in code package_name	C_363_1	public void marshall ( register_job_definition_request register_job_definition_request , protocol_marshaller protocol_marshaller ) { n n if ( register_job_definition_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( register_job_definition_request . get_job_definition_name ( ) , jobdefinitionname_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_type ( ) , type_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_parameters ( ) , parameters_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_container_properties ( ) , containerproperties_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_node_properties ( ) , nodeproperties_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_retry_strategy ( ) , retrystrategy_binding ) n protocol_marshaller . marshall ( register_job_definition_request . get_timeout ( ) , timeout_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_363	return a link qualified_name for a type in code package_name	C_363_2	public map < string , object > get_inbound_connection_info ( ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) n tr . debug ( tc , codstr ) n return this . inbound_connection_info n }	0
Q_364	this be private	C_364_0	private static class get_class_for_class_node ( class_node type ) { n / / todo hamlet _ move to a different codstr object n class primitive_type = get_primitive_type ( type ) n if ( primitive_type = null ) { n return primitive_type n } else if ( class_node_implements_type ( type , string . class ) ) { n return string . class n } else if ( class_node_implements_type ( type , reentrant_lock . class ) ) { n return reentrant_lock . class n } else if ( type . get_name ( ) = null type . get_name ( ) . ends_with ( codstr ) ) { n return object [ ] . class / / better type inference could be done , but oh well n } n return null n }	1
Q_364	this be private	C_364_1	public string get_tiny_icon_path ( cms_object cms , cms_user user ) { n n return get_icon_path ( cms , user , icon_size . tiny ) n }	0
Q_364	this be private	C_364_2	public void marshall ( list_domain_associations_request list_domain_associations_request , protocol_marshaller protocol_marshaller ) { n n if ( list_domain_associations_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( list_domain_associations_request . get_app_id ( ) , appid_binding ) n protocol_marshaller . marshall ( list_domain_associations_request . get_next_token ( ) , nexttoken_binding ) n protocol_marshaller . marshall ( list_domain_associations_request . get_max_results ( ) , maxresults_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_365	return the correspond module_load_service service name for the give module	C_365_0	public static service_name module_service_name ( module_identifier identifier ) { n if ( identifier . get_name ( ) . starts_with ( module_prefix ) ) { n throw server_logger . root_logger . missing_module_prefix ( identifier , module_prefix ) n } n return module_service_prefix . append ( identifier . get_name ( ) ) . append ( identifier . get_slot ( ) ) n }	1
Q_365	return the correspond module_load_service service name for the give module	C_365_1	public void remove_cohort ( cohort cohort , string study_id ) { n / / sanity check n if ( cohort = = null ) { n logger . error ( codstr ) n return n } n remove_cohort ( cohort . get_id ( ) , study_id ) n }	0
Q_365	return the correspond module_load_service service name for the give module	C_365_2	public void audit_retrieve_document_set_event ( rfc3881_event_outcome_codes event_outcome , n string repository_endpoint_uri , n string user_name , n string [ ] document_unique_ids , string [ ] repository_unique_ids , string home_community_ids [ ] , n list < coded_value_type > purposes_of_use , list < coded_value_type > user_roles ) n { n if ( is_auditor_enabled ( ) ) { n return n } n xds_consumer_auditor . get_auditor ( ) . audit_retrieve_document_set_event ( event_outcome , repository_endpoint_uri , n user_name , n document_unique_ids , repository_unique_ids , home_community_ids , null , purposes_of_use , user_roles ) n }	0
Q_366	remove a link attribute_access	C_366_0	suppress_warnings ( { codstr , codstr , codstr } ) n public builder remove_flag ( final attribute_access . flag flag ) { n if ( is_flag_present ( flag ) ) { n return ( builder ) this / / if not present no need to remove n } n final int length = flags . length n final attribute_access . flag [ ] new_flags = new attribute_access . flag [ length _ codint ] n int k = codint n for ( attribute_access . flag flag1 flags ) { n if ( flag1 = flag ) { n new_flags [ k ] = flag1 n k + + n } n } n / / noinspection deprecation n flags = new_flags n return ( builder ) this n }	1
Q_366	remove a link attribute_access	C_366_1	private javac_environment create_environment ( list < file > files , list < java_file_object > file_objects , n boolean process_annotations ) throws io_exception { n java_compiler compiler = tool_provider . get_system_java_compiler ( ) n diagnostic_collector < java_file_object > diagnostics = new diagnostic_collector < > ( ) n standard_java_file_manager file_manager = get_file_manager ( compiler , diagnostics ) n list < string > javac_options = get_javac_options ( process_annotations ) n if ( file_objects = = null ) { n file_objects = new array_list < > ( ) n } n for ( java_file_object jfo file_manager . get_java_file_objects_from_files ( files ) ) { n file_objects . add ( filter_java_file_object ( jfo ) ) n } n javac_task task = ( javac_task ) compiler . get_task ( null , file_manager , diagnostics , n javac_options , null , file_objects ) n return new javac_environment ( task , file_manager , diagnostics ) n }	0
Q_366	remove a link attribute_access	C_366_2	public observable < service_response < page < sync_group_log_properties_inner list_logs_next_single_page_async ( final string next_page_link ) { n if ( next_page_link = = null ) { n throw new illegal_argument_exception ( codstr ) n } n string next_url = string . format ( codstr , next_page_link ) n return service . list_logs_next ( next_url , this . client . accept_language ( ) , this . client . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < page < sync_group_log_properties_inner ( ) { n override n public observable < service_response < page < sync_group_log_properties_inner call ( response < response_body > response ) { n try { n service_response < page_impl < sync_group_log_properties_inner result = list_logs_next_delegate ( response ) n return observable . just ( new service_response < page < sync_group_log_properties_inner ( result . body ( ) , result . response ( ) ) ) n } catch ( throwable t ) { n return observable . error ( t ) n } n } n } ) n }	0
Q_367	check the precondition for create a new	C_367_0	private static void check_preconditions ( final class < ? > joda_class , n final string pattern ) { n if ( joda_class = = null ) { n throw new null_pointer_exception ( codstr ) n } else if ( pattern = = null ) { n throw new null_pointer_exception ( codstr ) n } n }	1
Q_367	check the precondition for create a new	C_367_1	"private static < e > immutable_set < e > construct ( int n , int expected_size , object . elements ) { n switch ( n ) { n case codint n return of ( ) n case codint n suppress_warnings ( codstr ) / / safe elements contains only e codstr unchecked "" ) n e e = ( e ) check_not_null ( elements [ i ] ) n builder = builder . add ( e ) n } n return builder . review ( ) . build ( ) n } n }"	0
Q_367	check the precondition for create a new	C_367_2	override n public void rename_to ( string new_name ) throws io_exception { n file old_build_dir = get_build_dir ( ) n super . rename_to ( new_name ) n file new_build_dir = get_build_dir ( ) n if ( old_build_dir . is_directory ( ) new_build_dir . is_directory ( ) ) { n if ( new_build_dir . get_parent_file ( ) . is_directory ( ) ) { n new_build_dir . get_parent_file ( ) . mkdirs ( ) n } n if ( old_build_dir . rename_to ( new_build_dir ) ) { n throw new io_exception ( codstr + old_build_dir + codstr + new_build_dir ) n } n } n }	0
Q_368	get the scale at the give index	C_368_0	public scale get ( final int index , final distance_unit unit ) { n return new scale ( this . scale_denominators [ index ] , unit , pdf_dpi ) n }	1
Q_368	get the scale at the give index	C_368_1	not_null n public static promise < void > sequence ( not_null iterator < ? extends promise < void promises ) { n return promise . of_callback ( cb _ > n sequence_impl ( promises , cb ) ) n }	0
Q_368	get the scale at the give index	C_368_2	public string format ( object value ) { n value_formatter < object > value_formatter = value_formatters . get ( value . get_class ( ) ) n if ( value_formatter = null ) { n return value_formatter . format ( this , value ) n } else { n return value . to_string ( ) n } n }	0
Q_369	this method return the value random variable of the product within the specify model evaluate at a give evalutation_time	C_369_0	override n public random_variable get_value ( double evaluation_time , libor_model_monte_carlo_simulation_model model ) throws calculation_exception { n n / / this is on the libor discretization n int libor_index = model . get_libor_period_index ( maturity ) n double payment_date = model . get_libor_period ( libor_index + codint ) n double period_length = payment_date _ maturity n n / / get random variables n random_variable libor = model . get_libor ( maturity , maturity , payment_date ) n n / / set up payoff on path n double [ ] payoff = new double [ model . get_number_of_paths ( ) ] n for ( int path = codint path < model . get_number_of_paths ( ) path + + ) n { n double libor_on_path = libor . get ( path ) n n if ( libor_on_path < strike ) { n payoff [ path ] = period_length n } n else { n payoff [ path ] = number n } n } n n / / get random variables n random_variable numeraire = model . get_numeraire ( payment_date ) n random_variable monte_carlo_probabilities = model . get_monte_carlo_weights ( payment_date ) n n random_variable numeraire_at_evaluation_time = model . get_numeraire ( evaluation_time ) n random_variable monte_carlo_probabilities_at_evaluation_time = model . get_monte_carlo_weights ( evaluation_time ) n n random_variable values = new random_variable_from_double_array ( payment_date , payoff ) n values . div ( numeraire ) . mult ( monte_carlo_probabilities ) n values . div ( numeraire_at_evaluation_time ) . mult ( monte_carlo_probabilities_at_evaluation_time ) n n / /	1
Q_369	this method return the value random variable of the product within the specify model evaluate at a give evalutation_time	C_369_1	public static url_encoded_content get_content ( http_request request ) { n http_content content = request . get_content ( ) n if ( content = null ) { n return ( url_encoded_content ) content n } n url_encoded_content result = new url_encoded_content ( new hash_map < string , object > ( ) ) n request . set_content ( result ) n return result n }	0
Q_369	this method return the value random variable of the product within the specify model evaluate at a give evalutation_time	C_369_2	public void restore ( http_servlet_request req , http_servlet_response res , boolean any_method ) { n if ( ( req instanceof i_extended_request ) ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr ) n } n return n } n if ( any_method req . get_method ( ) . equals_ignore_case ( codstr ) ) { n return n } n n string req_url = req . get_request_uri ( ) n i_extended_request ext_request = ( i_extended_request ) req n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr + req . get_method ( ) + codstr + req_url ) n } n string post_param_save_method = web_app_security_config . get_post_param_save_method ( ) n if ( post_param_save_method . equals_ignore_case ( web_app_security_config . post_param_save_to_cookie ) ) { n restore_from_cookie ( ext_request , res , req_url ) n } else if ( post_param_save_method . equals_ignore_case ( web_app_security_config . post_param_save_to_session ) ) { n restore_from_session ( ext_request , req , req_url ) n } n }	0
Q_370	create a new photoset	C_370_0	public photoset create ( string title , string description , string primary_photo_id ) throws flickr_exception { n map < string , object > parameters = new hash_map < string , object > ( ) n parameters . put ( codstr , method_create ) n n parameters . put ( codstr , title ) n parameters . put ( codstr , description ) n parameters . put ( codstr , primary_photo_id ) n n response response = transport_api . post ( transport_api . get_path ( ) , parameters , api_key , shared_secret ) n if ( response . is_error ( ) ) { n throw new flickr_exception ( response . get_error_code ( ) , response . get_error_message ( ) ) n } n element photoset_element = response . get_payload ( ) n photoset photoset = new photoset ( ) n photoset . set_id ( photoset_element . get_attribute ( codstr ) ) n photoset . set_url ( photoset_element . get_attribute ( codstr ) ) n return photoset n }	1
Q_370	create a new photoset	C_370_1	public void write_collection ( bio_c_collection collection ) n throws xml_stream_exception { n if ( has_written ) { n throw new illegal_state_exception ( n codstr ) n } n has_written = true n n writer . write_start_document ( n collection . get_encoding ( ) , n collection . get_version ( ) , n collection . is_standalone ( ) ) n . write_begin_collection_info ( collection ) n n for ( bio_c_document doc collection . get_documents ( ) ) { n writer . write ( doc ) n } n n / / end collection n writer . write_end_collection ( ) n . write_end_document ( ) n }	0
Q_370	create a new photoset	C_370_2	non_null n public static changes new_instance ( non_null string affected_table , nullable string . affected_tags ) { n check_not_null ( affected_table , codstr ) n return new changes ( singleton ( affected_table ) , non_null_set ( affected_tags ) ) n }	0
Q_371	kick fleet member kick a fleet member _ sso scope	C_371_0	public com . squareup . okhttp . call delete_fleets_fleet_id_members_member_id_async ( long fleet_id , integer member_id , n string datasource , string token , final api_callback < void > callback ) throws api_exception { n n com . squareup . okhttp . call call = delete_fleets_fleet_id_members_member_id_validate_before_call ( fleet_id , member_id , n datasource , token , callback ) n api_client . execute_async ( call , callback ) n return call n }	1
Q_371	kick fleet member kick a fleet member _ sso scope	C_371_1	public long num_bits ( ) { n if ( n = = codint ) return codint n return offsets . size64 ( ) * log2_bucket_size + lcp_lengths . num_bits ( ) + lcp2_bucket . num_bits ( ) + mph . num_bits ( ) + transform . num_bits ( ) n }	0
Q_371	kick fleet member kick a fleet member _ sso scope	C_371_2	beta_api n public final operation set_target_pools_region_instance_group_manager ( n project_region_instance_group_manager_name instance_group_manager , n region_instance_group_managers_set_target_pools_request n region_instance_group_managers_set_target_pools_request_resource ) { n n set_target_pools_region_instance_group_manager_http_request request = n set_target_pools_region_instance_group_manager_http_request . new_builder ( ) n . set_instance_group_manager ( n instance_group_manager = = null ? null instance_group_manager . to_string ( ) ) n . set_region_instance_group_managers_set_target_pools_request_resource ( n region_instance_group_managers_set_target_pools_request_resource ) n . build ( ) n return set_target_pools_region_instance_group_manager ( request ) n }	0
Q_372	find all intersect point and calculate menu item display area	C_372_0	private void calculate_intersect_points ( ) { n intersect_points . clear ( ) n n / * * order intersect points clockwise * * / n / / left edge n if ( center . x _ menu_bounds . left < expanded_radius ) { n int dy = ( int ) math . sqrt ( math . pow ( expanded_radius , codint ) _ math . pow ( center . x _ menu_bounds . left , codint ) ) n if ( center . y _ dy > menu_bounds . top ) { n intersect_points . add ( new point ( menu_bounds . left , center . y _ dy ) ) n } n n if ( center . y + dy < menu_bounds . bottom ) { n intersect_points . add ( new point ( menu_bounds . left , center . y + dy ) ) n } n n } n / / top edge n if ( center . y _ menu_bounds . top < expanded_radius ) { n int dx = ( int ) math . sqrt ( math . pow ( expanded_radius , codint ) _ math . pow ( center . y _ menu_bounds . top , codint ) ) n if ( center . x + dx < menu_bounds . right ) { n intersect_points . add ( new point ( center . x + dx , menu_bounds . top ) ) n } n if ( center . x _ dx	1
Q_372	find all intersect point and calculate menu item display area	C_372_1	public boolean disconnect ( string body , string content_type , string content_sub_type , n array_list < string > additional_headers , array_list < string > replace_headers ) { n try { n return disconnect ( parent . to_header ( additional_headers , content_type , content_sub_type ) , n parent . to_header ( replace_headers ) , body ) n } catch ( exception ex ) { n set_exception ( ex ) n set_error_message ( codstr + ex . get_class ( ) . get_name ( ) + codstr + ex . get_message ( ) ) n set_return_code ( sip_session . exception_encountered ) n return false n } n }	0
Q_372	find all intersect point and calculate menu item display area	C_372_2	public tf_session load_saved_model ( saved_model_config saved_model_config , tf_session_options options , tf_buffer run_options , tf_graph graph , map < string , string > inputs_map , map < string , string > outputs_map , tf_status status ) { n tf_buffer meta_graph = tf_buffer . new_buffer ( ) n tf_session session = tf_load_session_from_saved_model ( options , run_options , new byte_pointer ( saved_model_config . get_saved_model_path ( ) ) , n new byte_pointer ( saved_model_config . get_model_tag ( ) ) , codint , graph , meta_graph , status ) n if ( tf_get_code ( status ) = tf_ok ) { n throw new illegal_state_exception ( codstr + tf_message ( status ) . get_string ( ) ) n } n n meta_graph_def meta_graph_def n try { n meta_graph_def = meta_graph_def . parse_from ( meta_graph . data ( ) . capacity ( meta_graph . length ( ) ) . as_byte_buffer ( ) ) n } catch ( invalid_protocol_buffer_exception ex ) { n throw new illegal_state_exception ( codstr + ex ) n } n map < string , signature_def > signature_def_map = meta_graph_def . get_signature_def_map ( ) n signature_def signature_def = signature_def_map . get ( saved_model_config . get_signature_key ( ) ) n n map < string , tensor_info > inputs = signature_def . get_inputs_map ( ) n for ( map . entry < string , tensor_info > e inputs . entry_set ( ) ) { n inputs_map . put ( e . get_key ( ) , e . get_value ( ) . get_name ( ) ) n	0
Q_373	find all the node represent the entity	C_373_0	public resource_iterator < node > find_entities ( graph_database_service execution_engine ) { n result result = execution_engine . execute ( get_find_entities_query ( ) ) n return result . column_as ( base_neo4j_entity_queries . entity_alias ) n }	1
Q_373	find all the node represent the entity	C_373_1	public long get ( int field ) n { n switch ( field ) { n case time n return get_local_time ( ) n n case year n return get_year ( ) n n case month n return get_month ( ) n n case day_of_month n return get_day_of_month ( ) n n case day n return get_day_of_week ( ) n n case day_of_week n return get_day_of_week ( ) n n case hour n return get_hour ( ) n n case minute n return get_minute ( ) n n case second n return get_second ( ) n n case millisecond n return get_millisecond ( ) n n case time_zone n return get_zone_offset ( ) / codint n n default n return long . max_value n } n }	0
Q_373	find all the node represent the entity	C_373_2	public < r > r for_each ( def < r > func ) { n return for_those ( ( k , v ) _ > true , func ) n }	0
Q_374	create a bound object with both point parse from the json and set it	C_374_0	private static void parse_bounds ( json_object model_json , n shape current ) throws json_exception { n if ( model_json . has ( codstr ) ) { n json_object bounds_object = model_json . get_json_object ( codstr ) n current . set_bounds ( new bounds ( new point ( bounds_object . get_json_object ( codstr ) . get_double ( codstr ) , n bounds_object . get_json_object ( codstr ) . get_double ( n codstr ) ) , n new point ( bounds_object . get_json_object ( codstr ) . get_double ( codstr ) , n bounds_object . get_json_object ( codstr ) . get_double ( codstr ) ) ) ) n } n }	1
Q_374	create a bound object with both point parse from the json and set it	C_374_1	public void marshall ( version version , protocol_marshaller protocol_marshaller ) { n n if ( version = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( version . get_application_id ( ) , applicationid_binding ) n protocol_marshaller . marshall ( version . get_creation_time ( ) , creationtime_binding ) n protocol_marshaller . marshall ( version . get_parameter_definitions ( ) , parameterdefinitions_binding ) n protocol_marshaller . marshall ( version . get_required_capabilities ( ) , requiredcapabilities_binding ) n protocol_marshaller . marshall ( version . get_resources_supported ( ) , resourcessupported_binding ) n protocol_marshaller . marshall ( version . get_semantic_version ( ) , semanticversion_binding ) n protocol_marshaller . marshall ( version . get_source_code_archive_url ( ) , sourcecodearchiveurl_binding ) n protocol_marshaller . marshall ( version . get_source_code_url ( ) , sourcecodeurl_binding ) n protocol_marshaller . marshall ( version . get_template_url ( ) , templateurl_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_374	create a bound object with both point parse from the json and set it	C_374_2	public static void register_m_bean ( final object_instance object_instance , final string m_bean_attribute_name , metric_name metric_name , metric2_registry metric_registry ) { n metric_registry . register ( metric_name , new gauge < object > ( ) { n override n public object get_value ( ) { n return get_value_from_m_bean ( object_instance , m_bean_attribute_name ) n } n } ) n }	0
Q_375	add opt_s opt_store option to option_parser with one argument	C_375_0	public static void accepts_store_single ( option_parser parser ) { n parser . accepts_all ( arrays . as_list ( opt_s , opt_store ) , codstr ) n . with_required_arg ( ) n . described_as ( codstr ) n . of_type ( string . class ) n }	1
Q_375	add opt_s opt_store option to option_parser with one argument	C_375_1	override n public final void set_uuid ( uuid id ) { n final uuid old_id = get_uuid ( ) n if ( ( old_id = null old_id . equals ( id ) ) ( old_id = = null id = null ) ) { n super . set_uuid ( old_id ) n fire_element_changed ( ) n } n }	0
Q_375	add opt_s opt_store option to option_parser with one argument	C_375_2	public void check_version ( z_wave_command_class command_class ) { n z_wave_version_command_class version_command_class = ( z_wave_version_command_class ) this . get_node ( ) . get_command_class ( command_class . version ) n n if ( version_command_class = = null ) { n logger . error ( string . format ( codstr + n codstr , n this . get_node ( ) . get_node_id ( ) , n command_class . get_command_class ( ) . get_label ( ) , n command_class . get_command_class ( ) . get_key ( ) ) ) n return n } n n this . get_controller ( ) . send_data ( version_command_class . get_command_class_version_message ( command_class . get_command_class ( ) ) ) n }	0
Q_376	par a string that contain multiple fat client configs in avro format	C_376_0	suppress_warnings ( codstr ) n public static map < string , properties > read_multiple_client_config_avro ( string config_avro ) { n map < string , properties > map_store_to_props = maps . new_hash_map ( ) n try { n json_decoder decoder = new json_decoder ( client_configs_avro_schema , config_avro ) n generic_datum_reader < object > datum_reader = new generic_datum_reader < object > ( client_configs_avro_schema ) n n map < utf8 , map < utf8 , utf8 store_configs = ( map < utf8 , map < utf8 , utf8 ) datum_reader . read ( null , n decoder ) n / / store config props to return back n for ( utf8 store_name store_configs . key_set ( ) ) { n properties props = new properties ( ) n map < utf8 , utf8 > single_config = store_configs . get ( store_name ) n n for ( utf8 key single_config . key_set ( ) ) { n props . put ( key . to_string ( ) , single_config . get ( key ) . to_string ( ) ) n } n n if ( store_name = = null store_name . length ( ) = = codint ) { n throw new exception ( codstr ) n } n n map_store_to_props . put ( store_name . to_string ( ) , props ) n } n } catch ( exception e ) { n e . print_stack_trace ( ) n } n return map_store_to_props n }	1
Q_376	par a string that contain multiple fat client configs in avro format	C_376_1	public void close ( ) throws io_exception { n if ( r = null ) { n r = null n ogg . close ( ) n ogg = null n } n if ( w = null ) { n w . buffer_packet ( info . write ( ) , true ) n w . buffer_packet ( tags . write ( ) , false ) n n / / the granule position on each ogg page needs to be n / / the total number of pcm samples , including the last n / / full opus packet in the page . n / / see https / / wiki . xiph . org / ogg_opus final list < opus_audio_data > packets = written_packets n final int packets_size = packets . size ( ) n final int max_packets_per_page = this . max_packets_per_page n n opus_audio_data packet n int page_size = codint n int page_samples = codint n long last_granule = codint n boolean done_flush = false n boolean flush_after = false n for ( int i = codint i < packets_size i + + ) { n packet = packets . get ( i ) n flush_after = false n page_size + + n n / / should we flush before this packet ? n if ( max_packets_per_page = = _ codint ) { n / / user is handling granule positions n / / do we need to flush for them ? n if ( packet .	0
Q_376	par a string that contain multiple fat client configs in avro format	C_376_2	public void get_guild_upgrade_id ( callback < list < integer callback ) throws null_pointer_exception { n gw2_api . get_all_guild_upgrade_i_ds ( ) . enqueue ( callback ) n }	0
Q_377	configure a give link http_url_connection object to send request	C_377_0	override n void setup_connection ( string request_method , string query_string , n http_url_connection connection ) throws io_exception { n super . setup_connection ( request_method , query_string , connection ) n connection . set_request_property ( api_connection . param_cookie , n get_cookie_string ( ) ) n }	1
Q_377	configure a give link http_url_connection object to send request	C_377_1	override n public list < commerce_subscription_entry > find_by_subscription_status ( n int subscription_status ) { n return find_by_subscription_status ( subscription_status , query_util . all_pos , n query_util . all_pos , null ) n }	0
Q_377	configure a give link http_url_connection object to send request	C_377_2	public static void register ( final map < string , taglet > taglet_map ) { n taglet t = new taglets . server_release_taglet ( ) n taglet_map . put ( t . get_name ( ) , t ) n }	0
Q_378	overload link emit_async event_object object	C_378_0	public event_bus emit_async ( act_event event , object . args ) { n return _emit_with_once_bus ( event_context_async ( event , args ) ) n }	1
Q_378	overload link emit_async event_object object	C_378_1	protected list < t > query_view ( string view_name , complex_key key ) { n return db . query_view ( create_query ( view_name ) n . include_docs ( true ) n . key ( key ) , n type ) n }	0
Q_378	overload link emit_async event_object object	C_378_2	override n public boolean apply ( final uri uri ) { n string file = uri . get_raw_path ( ) . to_lower_case ( ) n for ( string suffix suffixes ) if ( file . ends_with ( suffix ) ) return true n return false n }	0
Q_379	remove a previously add linkplain add_on_item_touch_listener	C_379_0	public boolean remove_on_item_touch_listener ( final on_item_touch_listener listener ) { n boolean removed = m_item_touch_listeners . remove ( listener ) n log . d ( log . subsystem . layout , tag , codstr , listener , removed ) n return removed n }	1
Q_379	remove a previously add linkplain add_on_item_touch_listener	C_379_1	public json_comparator get_comparator ( list < string > context , n json_node node1 , n json_node node2 ) { n if ( node1 = = null ) { n if ( node2 = = null ) { n return nodiff_cmp n } else { n return null n } n } else if ( node2 = = null ) { n return null n } else { n if ( node1 instanceof null_node ) { n if ( node2 instanceof null_node ) { n return nodiff_cmp n } else { n return null n } n } else if ( node2 instanceof null_node ) { n return null n } n / / nodes are not null , and they are not null node n if ( node1 . is_container_node ( ) node2 . is_container_node ( ) ) { n if ( node1 instanceof object_node ) { n return object_comparator n } else if ( node1 instanceof array_node ) { n return array_comparator n } n } else if ( node1 . is_value_node ( ) node2 . is_value_node ( ) ) { n return value_comparator n } n } n return null n }	0
Q_379	remove a previously add linkplain add_on_item_touch_listener	C_379_2	public type_declaration_descr type_declaration ( declare_descr_builder ddb , boolean is_trait ) throws recognition_exception { n type_declaration_descr_builder declare = null n try { n declare = helper . start ( ddb , n type_declaration_descr_builder . class , n null ) n n declare . set_trait ( is_trait ) n n if ( helper . validate_identifier_key ( drools_soft_keywords . type ) ) { n / / codstr n match ( input , n drl5_lexer . id , n drools_soft_keywords . type , n null , n drools_editor_type . keyword ) n if ( state . failed ) return null n } n n / / type may be qualified when adding metadata n string type = qualified_identifier ( ) n if ( state . failed ) return null n if ( state . backtracking = = codint ) declare . name ( type ) n n if ( helper . validate_identifier_key ( drools_soft_keywords . extends ) ) { n match ( input , n drl5_lexer . id , n drools_soft_keywords . extends , n null , n drools_editor_type . keyword ) n if ( state . failed ) { n / / going for type includes generics , which is a no _ no ( jira _ codint ) n string super_type = qualified_identifier ( ) n declare . super_type ( super_type ) n n while ( input . la ( codint ) = = drl5_lexer . comma ) { n n match ( input , n drl5_lexer . comma , n	0
Q_380	assign float value within allow range of tagint infinity to initialize_only sf_float field name space	C_380_0	public void set_string ( string [ ] new_value ) { n if ( new_value = null ) { n this . string . set_value ( new_value . length , new_value ) n } n }	1
Q_380	assign float value within allow range of tagint infinity to initialize_only sf_float field name space	C_380_1	public static dynamic_class_loader create ( class_loader parent , path_impl path ) n { n dynamic_class_loader loader = new dynamic_class_loader ( parent ) n n library_loader dir_loader = new library_loader ( loader , path ) n dir_loader . init ( ) n n loader . init ( ) n n return loader n }	0
Q_380	assign float value within allow range of tagint infinity to initialize_only sf_float field name space	C_380_2	override n public final a_item_specifics < t , id > process ( n final map < string , object > p_req_vars , n final a_item_specifics < t , id > p_entity , n final i_request_data p_request_data ) throws exception { n string file_to_upload_name = ( string ) p_request_data n . get_attribute ( codstr ) n output_stream outs = null n input_stream ins = null n try { n string file_path n if ( p_entity . get_string_value1 ( ) = = null ) { / / in base language n string ft = string . value_of ( new date ( ) . get_time ( ) ) n file_path = this . web_app_path + file . separator n + this . upload_directory + file . separator n + ft + file_to_upload_name n p_entity . set_string_value2 ( file_path ) n p_entity . set_string_value1 ( this . upload_directory n + codstr + ft + file_to_upload_name ) n } else { / / i18_n files n string file_lang = p_request_data . get_parameter ( codstr ) n if ( p_entity . get_string_value3 ( ) = = null n p_entity . get_string_value3 ( ) . contains ( file_lang ) ) { n throw new exception_with_code ( exception_with_code . wrong_parameter , n codstr ) n } n int idh_html = p_entity . get_string_value1 ( ) . index_of ( codstr ) n string url_without_html = p_entity . get_string_value1 ( ) . substring ( codint , idh_html ) n file_path = this . web_app_path + file . separator n	0
Q_381	return an entry of kind snippet with the give proposal and label and the prefix from the context or null if the proposal be not valid	C_381_0	public content_assist_entry create_snippet ( final string proposal , final string label , final content_assist_context context ) { n final procedure1 < content_assist_entry > _function = ( content_assist_entry it ) _ > { n it . set_label ( label ) n } n return this . create_proposal ( proposal , context . get_prefix ( ) , context , content_assist_entry . kind_snippet , _function ) n }	1
Q_381	return an entry of kind snippet with the give proposal and label and the prefix from the context or null if the proposal be not valid	C_381_1	override n public point3d get3_d_center ( ) { n double x_of_center = codint n double y_of_center = codint n double z_of_center = codint n for ( i_atom atom atoms ) { n x_of_center + = atom . get_point3d ( ) . x n y_of_center + = atom . get_point3d ( ) . y n z_of_center + = atom . get_point3d ( ) . z n } n n return new point3d ( x_of_center / get_atom_count ( ) , y_of_center / get_atom_count ( ) , z_of_center / get_atom_count ( ) ) n }	0
Q_381	return an entry of kind snippet with the give proposal and label and the prefix from the context or null if the proposal be not valid	C_381_2	private map < string , string > get_locale_id_to_rules_id_map ( plural_type type ) { n check_build_rules_id_maps ( ) n return ( type = = plural_type . cardinal ) ? locale_id_to_cardinal_rules_id locale_id_to_ordinal_rules_id n }	0
Q_382	find the path to use	C_382_0	private static string get_path ( service service , annotation . qualifiers ) { n for ( annotation q qualifiers ) { n if ( q instanceof scheme ) { n return ( ( scheme ) q ) . value ( ) n } n } n n if ( service . get_metadata ( ) = null service . get_metadata ( ) . get_annotations ( ) = null ) { n string s = service . get_metadata ( ) . get_annotations ( ) . get ( service_scheme ) n if ( s = null s . is_empty ( ) ) { n return s n } n } n return default_path n }	1
Q_382	find the path to use	C_382_1	protected string [ ] get_spring_config_locations ( ) { n string [ ] locations = get_standard_config_locations ( ) n for ( int i = codint i < locations . length i + + ) { n string extension = string_utils . get_filename_extension ( locations [ i ] ) n locations [ i ] = locations [ i ] . substring ( codint , n locations [ i ] . length ( ) _ extension . length ( ) _ codint ) + codstr n + extension n } n return locations n }	0
Q_382	find the path to use	C_382_2	override n public void on_next ( final remote_message < evaluator_shim_protocol . evaluator_shim_status_proto > status_message ) { n n evaluator_shim_protocol . evaluator_shim_status_proto message = status_message . get_message ( ) n string container_id = message . get_container_id ( ) n string remote_id = message . get_remote_identifier ( ) n n log . log ( level . info , codstr , n new string [ ] { remote_id , container_id , message . get_status ( ) . to_string ( ) } ) n n if ( message . get_status ( ) = evaluator_shim_protocol . evaluator_shim_status . online ) { n log . log ( level . severe , codstr , n message . get_status ( ) . to_string ( ) ) n return n } n n this . on_resource_allocated ( container_id , remote_id , optional . < cloud_task > empty ( ) ) n }	0
Q_383	return the url of a classpath resource	C_383_0	public static url find_config_resource ( string resource_name ) { n if ( strings . is_null_or_empty ( resource_name ) ) { n return null n } n n final url url = resource_name . starts_with ( root ) ? default_configuration . class . get_resource ( resource_name ) n default_configuration . class . get_resource ( root + resource_name ) n n if ( url = null ) { n return url n } n n / / this is useful to get resource under meta _ inf directory n string [ ] resource_name_prefix = new string [ ] { codstr , codstr } n n for ( string resource resource_name_prefix ) { n string full_resource_name = resource + resource_name n n url candidate = kubernetes_resource_locator . class . get_resource ( full_resource_name . starts_with ( root ) ? full_resource_name root + full_resource_name ) n if ( candidate = null ) { n return candidate n } n } n n return null n }	1
Q_383	return the url of a classpath resource	C_383_1	public list < parameter > get_all_parameters ( ) { n list < parameter > ret = new array_list < parameter > ( ) n n / / parameters within statements n if ( statements = null ) { n for ( final statement stmt statements ) n ret . add_all ( stmt . get_all_parameters ( ) ) n } n n / / parameters within nested statement groups n if ( statement_groups = null ) { n for ( final statement_group sg statement_groups ) n ret . add_all ( sg . get_all_parameters ( ) ) n } n n return ret n }	0
Q_383	return the url of a classpath resource	C_383_2	private string format_percentage ( number value ) n { n return ( value = = null ? null m_formats . get_percentage_decimal_format ( ) . format ( value ) + codstr ) n }	0
Q_384	create a triangular matrix where the amount of fill be randomly select too	C_384_0	public static d_matrix_sparse_csc triangle ( boolean upper , int n , double min_fill , double max_fill , random rand ) { n int nz = ( int ) ( ( ( n _ codint ) * ( n _ codint ) / codint ) * ( rand . next_double ( ) * ( max_fill _ min_fill ) + min_fill ) ) + n n n if ( upper ) { n return triangle_upper ( n , codint , nz , _ codint , codint , rand ) n } else { n return triangle_lower ( n , codint , nz , _ codint , codint , rand ) n } n }	1
Q_384	create a triangular matrix where the amount of fill be randomly select too	C_384_1	public static string to_property_name ( string bootique_variable ) { n if ( strings . is_null_or_empty ( bootique_variable ) ) { n return null n } n return bootique_property_prefix + bootique_variable n }	0
Q_384	create a triangular matrix where the amount of fill be randomly select too	C_384_2	public static < t > t get_first ( t array [ ] ) { n return array = null array . length > codint ? array [ codint ] null n }	0
Q_385	remove a custom field set on the project	C_385_0	public item_request < project > remove_custom_field_setting ( string project ) { n n string path = string . format ( codstr , project ) n return new item_request < project > ( this , project . class , path , codstr ) n }	1
Q_385	remove a custom field set on the project	C_385_1	override n public void e_unset ( int feature_id ) n { n switch ( feature_id ) n { n case types_package . jvm_feature_local_classes n get_local_classes ( ) . clear ( ) n return n } n super . e_unset ( feature_id ) n }	0
Q_385	remove a custom field set on the project	C_385_2	public orient_vertex add_temporary_vertex ( final string i_class_name , final object . prop ) { n make_active ( ) n n set_current_graph_in_thread_local ( ) n auto_start_transaction ( ) n n final orient_vertex vertex = get_vertex_instance ( i_class_name ) n vertex . set_properties_internal ( prop ) n return vertex n }	0
Q_386	add an entry to this jar	C_386_0	public jar add_entry ( string path , byte [ ] content ) throws io_exception { n begin_writing ( ) n add_entry ( jos , path , content ) n return this n }	1
Q_386	add an entry to this jar	C_386_1	static array_list < db_stats > get_db_stats ( ) { n array_list < db_stats > db_stats_list = new array_list < db_stats > ( ) n for ( sq_lite_database db get_active_databases ( ) ) { n db . collect_db_stats ( db_stats_list ) n } n return db_stats_list n }	0
Q_386	add an entry to this jar	C_386_2	protected set < string > resume_previous_by_deployment_name ( command_context command_context , deployment_entity deployment ) { n list < deployment > previous_deployments = new deployment_query_impl ( ) . deployment_name ( deployment . get_name ( ) ) . list ( ) n set < string > deployment_ids = new hash_set < string > ( previous_deployments . size ( ) ) n for ( deployment d previous_deployments ) { n deployment_ids . add ( d . get_id ( ) ) n } n return deployment_ids n }	0
Q_387	this method allow to easily of a new monetary_context instance from a give link javax	C_387_0	public static monetary_context from ( monetary_amount_factory_query monetary_amount_factory_query , n class < ? extends monetary_amount > amount_class ) { n return monetary_context_builder . of ( amount_class ) . import_context ( monetary_amount_factory_query ) . build ( ) n }	1
Q_387	this method allow to easily of a new monetary_context instance from a give link javax	C_387_1	public java . lang . string get_onchange ( ) { n return ( java . lang . string ) get_state_helper ( ) . eval ( property_keys . onchange ) n n }	0
Q_387	this method allow to easily of a new monetary_context instance from a give link javax	C_387_2	public void set_point_feature_data ( list < point_feature > obs_data ) throws io_exception { n data_model = new point_feature_data_model ( obs_data ) n init_table ( data_model ) n }	0
Q_388	add a user by id to the list of people to notify when the retention period be end	C_388_0	public void add_custom_notification_recipient ( string user_id ) { n box_user user = new box_user ( null , user_id ) n this . custom_notification_recipients . add ( user . new info ( ) ) n n }	1
Q_388	add a user by id to the list of people to notify when the retention period be end	C_388_1	public void pack_symbols ( int first , int end ) { n int src n int dest n boolean touched n n dest = first n for ( src = first src < end src + + ) { n touched = rename_symbol ( src , dest ) n if ( touched ) { n dest + + n } else { n / / src not found dest stays unused n } n } n }	0
Q_388	add a user by id to the list of people to notify when the retention period be end	C_388_2	"public static object_sequence < time_series_collection > merge_sequences ( object_sequence < time_series_collection > . ts_seq ) { n if ( ts_seq . length = = codint ) n return object_sequence . empty ( ) n if ( ts_seq . length = = codint ) n return ts_seq [ codint ] n n / / sort sequences and remove any that are empty . n final queue < object_sequence < time_series_collection seq = new priority_queue < > ( comparator . comparing ( object_sequence first ) ) n seq . add_all ( arrays . stream ( ts_seq ) n . filter ( s _ > s . is_empty ( ) ) n . collect ( collectors . to_list ( ) ) ) n / / it codstr to_merge codstr to_merge codstr succ . first codstr , head . last codstr to_merge codstr seq "" . n object_sequence < time_series_collection > succ_no_problem = succ . skip ( succ_problem_end ) n if ( succ_no_problem . is_empty ( ) ) n seq . add ( succ_no_problem ) n } n n assert ( to_merge . size ( ) > codint ) n output . add ( fix_sequence ( object_sequence . concat ( to_merge , false , false ) ) ) n } n n return object_sequence . concat ( output , true , true ) n }"	0
Q_389	transform an input file into html	C_389_0	public final static string process ( final file file , final boolean safe_mode ) throws io_exception n { n return process ( file , configuration . builder ( ) . set_safe_mode ( safe_mode ) . build ( ) ) n }	1
Q_389	transform an input file into html	C_389_1	public static provider_context of ( string provider ) { n return provider_context_builder . of ( provider , rate_type . any ) . build ( ) n }	0
Q_389	transform an input file into html	C_389_2	public static < s extends solution < ? void nash ( list < s > solutions_list ) { n nash ( solutions_list , get_nadir_values ( solutions_list ) ) n }	0
Q_390	return a prefix length for which the range of this address section match the the block of address for that prefix	C_390_0	override n public integer get_prefix_length_for_single_block ( ) { n if ( has_no_prefix_cache ( ) ) { n integer result = prefix_cache . cached_equivalent_prefix n if ( result = null ) { n if ( result < codint ) { n return null n } n return result n } n } n integer res = super . get_prefix_length_for_single_block ( ) n if ( res = = null ) { n prefix_cache . cached_equivalent_prefix = no_prefix_length n return null n } n return prefix_cache . cached_equivalent_prefix = res n }	1
Q_390	return a prefix length for which the range of this address section match the the block of address for that prefix	C_390_1	void show_files_configuration ( ) { n n / / message to communicate the resolved configuration n string message n if ( files_url = null ) { n string reload = files_reloadable ? codstr codstr n message = codstr + files_url + codstr + reload + codstr n } else { n message = codstr n } n log . info ( codstr , message ) n }	0
Q_390	return a prefix length for which the range of this address section match the the block of address for that prefix	C_390_2	public final void delete_cluster ( cluster_name name ) { n n delete_cluster_request request = n delete_cluster_request . new_builder ( ) . set_name ( name = = null ? null name . to_string ( ) ) . build ( ) n delete_cluster ( request ) n }	0
Q_391	create a new instance with the give key and value	C_391_0	pure n public static < k , v > pair < k , v > of ( k k , v v ) { n return new pair < k , v > ( k , v ) n }	1
Q_391	create a new instance with the give key and value	C_391_1	public string get_fbtrace_id ( ) { n if ( get_raw_error_json ( ) = null get_raw_error_json ( ) . get ( codstr ) . is_object ( ) ) { n json_object error_json = get_raw_error_json ( ) . get ( codstr ) . as_object ( ) n return error_json . get_string ( codstr , codstr ) n } n n return codstr n }	0
Q_391	create a new instance with the give key and value	C_391_2	public post update_post ( post post , final time_zone tz ) throws sql_exception { n if ( post . id < codint ) { n throw new sql_exception ( codstr ) n } n n if ( post . modified_timestamp < codint ) { n post = post . modified_now ( ) n } n n int offset = tz . get_offset ( post . publish_timestamp ) n connection conn = null n prepared_statement stmt = null n timer . context ctx = metrics . update_post_timer . time ( ) n try { n conn = connection_supplier . get_connection ( ) n stmt = conn . prepare_statement ( update_post_sql ) n stmt . set_long ( codint , post . author_id ) n stmt . set_timestamp ( codint , new timestamp ( post . publish_timestamp ) ) n stmt . set_timestamp ( codint , new timestamp ( post . publish_timestamp _ offset ) ) n stmt . set_string ( codint , strings . null_to_empty ( post . content ) ) n stmt . set_string ( codint , strings . null_to_empty ( post . title ) ) n stmt . set_string ( codint , strings . null_to_empty ( post . excerpt ) ) n stmt . set_string ( codint , post . status . to_string ( ) . to_lower_case ( ) ) n stmt . set_string ( codint , strings . null_to_empty ( post . slug ) ) n stmt . set_timestamp ( codint , new timestamp ( post . modified_timestamp	0
Q_392	sort the content of this adapter use the specify comparator	C_392_0	public void sort ( non_null comparator < ? super t > comparator ) { n final array_list < t > copy = new array_list < > ( m_objects ) n collections . sort ( copy , comparator ) n swap ( copy ) n }	1
Q_392	sort the content of this adapter use the specify comparator	C_392_1	public void update_path ( string path ) { n if ( path . contains ( codstr ) path . ends_with ( codstr ) ) n path + = codstr n this . path = path ( path ) n }	0
Q_392	sort the content of this adapter use the specify comparator	C_392_2	public static runtime_exception as_runtime_exception ( exception e ) { n if ( e instanceof runtime_exception ) { n return ( runtime_exception ) e n } n return unexpected_method_invocation_exception . triage ( e ) n }	0
Q_393	initialize the spring link generic_application_context and return all instance of link spring_camel_context bean	C_393_0	public list < spring_camel_context > create_spring_camel_contexts ( ) throws exception { n if ( application_context . is_active ( ) ) { n throw new illegal_state_exception ( codstr ) n } n n spring_camel_context . set_no_start ( true ) n proxy_utils . invoke_proxied ( new proxied_action ( ) { n override n public void run ( ) throws exception { n application_context . refresh ( ) n } n } , application_context . get_class_loader ( ) ) n spring_camel_context . set_no_start ( false ) n n return get_spring_camel_contexts ( ) n }	1
Q_393	initialize the spring link generic_application_context and return all instance of link spring_camel_context bean	C_393_1	public boolean checked_add ( final int x ) { n final short hb = buffer_util . highbits ( x ) n final int i = high_low_container . get_index ( hb ) n if ( i > = codint ) { n mappeable_container c = high_low_container . get_container_at_index ( i ) n int oldcard = c . get_cardinality ( ) n c = c . add ( buffer_util . lowbits ( x ) ) n get_mappeable_roaring_array ( ) . set_container_at_index ( i , c ) n return c . get_cardinality ( ) > oldcard n } else { n final mappeable_array_container newac = new mappeable_array_container ( ) n get_mappeable_roaring_array ( ) . insert_new_key_value_at ( _ i _ codint , hb , newac . add ( buffer_util . lowbits ( x ) ) ) n return true n } n }	0
Q_393	initialize the spring link generic_application_context and return all instance of link spring_camel_context bean	C_393_2	private long get_time ( date start1 , date end1 , date start2 , date end2 ) n { n long total = codint n n if ( start1 = null end1 = null start2 = null end2 = null ) n { n long start n long end n n if ( start1 . get_time ( ) < start2 . get_time ( ) ) n { n start = start2 . get_time ( ) n } n else n { n start = start1 . get_time ( ) n } n n if ( end1 . get_time ( ) < end2 . get_time ( ) ) n { n end = end1 . get_time ( ) n } n else n { n end = end2 . get_time ( ) n } n n if ( start < end ) n { n total = end _ start n } n } n n return ( total ) n }	0
Q_394	get the selection	C_394_0	private selection_type get_selection ( final annotation [ ] annotations ) { n for ( final annotation annotation annotations ) { n if ( annotation instanceof audit ) { n final audit audit = ( audit ) annotation n return audit . selection ( ) n } n } n return null n }	1
Q_394	get the selection	C_394_1	public static final hll_sketch writable_wrap ( final writable_memory wmem ) { n final boolean compact = extract_compact_flag ( wmem ) n if ( compact ) { n throw new sketches_argument_exception ( n codstr ) n } n final int lg_config_k = extract_lg_k ( wmem ) n final tgt_hll_type tgt_hll_type = extract_tgt_hll_type ( wmem ) n final long min_bytes = get_max_updatable_serialization_bytes ( lg_config_k , tgt_hll_type ) n final long cap_bytes = wmem . get_capacity ( ) n hll_util . check_mem_size ( min_bytes , cap_bytes ) n n final cur_mode cur_mode = check_preamble ( wmem ) n final hll_sketch direct_sketch n if ( cur_mode = = cur_mode . hll ) { n if ( tgt_hll_type = = tgt_hll_type . hll_4 ) { n direct_sketch = new hll_sketch ( new direct_hll4_array ( lg_config_k , wmem ) ) n } else if ( tgt_hll_type = = tgt_hll_type . hll_6 ) { n direct_sketch = new hll_sketch ( new direct_hll6_array ( lg_config_k , wmem ) ) n } else { / / hll_8 n direct_sketch = new hll_sketch ( new direct_hll8_array ( lg_config_k , wmem ) ) n } n } else if ( cur_mode = = cur_mode . list ) { n direct_sketch = n new hll_sketch ( new direct_coupon_list ( lg_config_k , tgt_hll_type , cur_mode , wmem ) ) n } else { n direct_sketch = n new hll_sketch ( new direct_coupon_hash_set ( lg_config_k , tgt_hll_type , wmem ) ) n } n return direct_sketch n }	0
Q_394	get the selection	C_394_2	protected sql_exception close_resources ( ) { n trace_component tc = get_tracer ( ) n final boolean is_trace_on = trace_component . is_any_tracing_enabled ( ) n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . entry ( this , tc , codstr , this ) n n sql_exception result = null n n / / input_stream and reader n n for ( closeable resource resources ) n try { n if ( resource = null ) n resource . close ( ) n } catch ( io_exception io_x ) { n ffdc_filter . process_exception ( n io_x , get_class ( ) . get_name ( ) + codstr , codstr , this ) n if ( result = = null ) n result = adapter_util . to_sql_exception ( io_x ) n } n n resources . clear ( ) n n / / the remaining cleanup options are only available in jdbc number or higher . n if ( mcf . jdbc_driver_spec_version > = codint ) { n if ( mcf . do_array_cleanup ) n for ( array ra arrays ) n try { n if ( ra = null ) n ra . free ( ) n } catch ( sql_feature_not_supported_exception support_x ) { n / / no ffdc code needed . n mcf . do_array_cleanup = false n if ( is_trace_on tc . is_debug_enabled ( ) ) n tr . debug ( this , tc , codstr , support_x ) n } catch ( sql_exception sql_x	0
Q_395	get the option by command	C_395_0	protected list < string > get_options_by_command ( string command ) { n string raw_option = commands . get ( command ) n string [ ] options = raw_option . split ( core_constants . comma ) n return arrays . as_list ( options ) n }	1
Q_395	get the option by command	C_395_1	public static stream < string > wavefront_line ( date_time ts , time_series_value tsv ) { n final group_name group = tsv . get_group ( ) n n return tsv . get_metrics ( ) . entry_set ( ) . stream ( ) n . flat_map ( metric_entry _ > wavefront_line_for_metric ( ts , group , metric_entry ) ) n }	0
Q_395	get the option by command	C_395_2	public static final < t , u extends range < t u best ( iterator < u > iterator , comparator < u > comp ) n { n list < u > list = new array_list < > ( ) n list_iterator < u > li = list . list_iterator ( ) n if ( iterator . has_next ( ) ) n { n throw new illegal_argument_exception ( codstr ) n } n u prev = iterator . next ( ) n li . add ( prev ) n while ( iterator . has_next ( ) ) n { n u next = iterator . next ( ) n if ( prev . is_overlapping ( next ) collection_help . compare ( prev , next , comp ) > = codint ) n { n break n } n prev = next n li . add ( prev ) n } n range < t > top = li . previous ( ) n while ( li . has_previous ( ) ) n { n range < t > p = li . previous ( ) n if ( top . is_overlapping ( p ) ) n { n li . remove ( ) n } n else n { n top = p n } n } n return list . get ( codint ) n }	0
Q_396	construct a disjunct of two expression	C_396_0	private wyal_file . stmt or ( wyal_file . stmt lhs , wyal_file . stmt rhs ) { n if ( lhs = = null ) { n return rhs n } else if ( rhs = = null ) { n return rhs n } else { n wyal_file . stmt . block lhs_block = new wyal_file . stmt . block ( lhs ) n wyal_file . stmt . block rhs_block = new wyal_file . stmt . block ( rhs ) n return new wyal_file . stmt . case_of ( lhs_block , rhs_block ) n } n }	1
Q_396	construct a disjunct of two expression	C_396_1	private string get_property_name ( final string window_id_str , final string full_attribute_name ) { n final string attribute_name n if ( this . non_namespaced_properties . contains ( full_attribute_name ) ) { n attribute_name = full_attribute_name n } else if ( full_attribute_name . starts_with ( window_id_str ) ) { n attribute_name = full_attribute_name . substring ( window_id_str . length ( ) ) n } else { n return null n } n n final string mapped_property_name = this . attribute_to_property_mappings . get ( attribute_name ) n if ( mapped_property_name = = null ) { n logger . warn ( n codstr , n attribute_name ) n return null n } n n return mapped_property_name n }	0
Q_396	construct a disjunct of two expression	C_396_2	public e_list < annotation > get_annotations ( ) { n if ( annotations = = null ) { n annotations = new e_object_containment_e_list < annotation > ( annotation . class , this , xtext_package . abstract_rule_annotations ) n } n return annotations n }	0
Q_397	check for any custom cascade save set up via the mapping dsl and record them within the persistent property	C_397_0	protected void track_custom_cascading_saves ( mapping mapping , iterable < persistent_property > persistent_properties ) { n for ( persistent_property property persistent_properties ) { n property_config prop_conf = mapping . get_property_config ( property . get_name ( ) ) n n if ( prop_conf = null prop_conf . get_cascade ( ) = null ) { n prop_conf . set_explicit_save_update_cascade ( is_save_update_cascade ( prop_conf . get_cascade ( ) ) ) n } n } n }	1
Q_397	check for any custom cascade save set up via the mapping dsl and record them within the persistent property	C_397_1	public static string sha1 ( final input_stream input_stream ) throws io_exception , no_such_algorithm_exception { n message_digest md = message_digest . get_instance ( codstr ) n byte [ ] bytes = new byte [ codint ] n int byte_count n while ( ( byte_count = input_stream . read ( bytes ) ) > codint ) { n md . update ( bytes , codint , byte_count ) n } n n input_stream . close ( ) n return new string ( encode_hex ( md . digest ( ) ) ) n }	0
Q_397	check for any custom cascade save set up via the mapping dsl and record them within the persistent property	C_397_2	protected void render_data_cell_contents ( abstract_render_appender appender , string jsp_fragment_output ) { n assert decorator = null n assert appender = null n assert _image_anchor_cell_model = null n n string script = null n / * render any java_script needed to support framework features * / n if ( _image_state . id = null ) { n http_servlet_request request = jsp_util . get_request ( get_jsp_context ( ) ) n script = render_name_and_id ( request , _image_state , null ) n } n n / * render any java_script needed to support framework features * / n if ( _anchor_state . id = null ) { n http_servlet_request request = jsp_util . get_request ( get_jsp_context ( ) ) n string anchor_script = render_name_and_id ( request , _anchor_state , null ) n if ( anchor_script = null ) n script = ( script = null ? script + = anchor_script anchor_script ) n } n n _image_anchor_cell_model . set_javascript ( script ) n n decorator . decorate ( get_jsp_context ( ) , appender , _image_anchor_cell_model ) n }	0
Q_398	create a criterion that test if the first property be great than or equal to the second property	C_398_0	public org . grails . datastore . mapping . query . api . criteria ge_property ( string property_name , string other_property_name ) { n if ( validate_simple_expression ( ) ) { n throw_runtime_exception ( new illegal_argument_exception ( codstr + n property_name + codstr + other_property_name + codstr ) ) n } n n property_name = calculate_property_name ( property_name ) n other_property_name = calculate_property_name ( other_property_name ) n add_to_criteria ( restrictions . ge_property ( property_name , other_property_name ) ) n return this n }	1
Q_398	create a criterion that test if the first property be great than or equal to the second property	C_398_1	public plan update_plan ( final plan plan ) { n return do_put ( plan . plans_resource + codstr + plan . get_plan_code ( ) , plan , plan . class ) n }	0
Q_398	create a criterion that test if the first property be great than or equal to the second property	C_398_2	public static pair < string , string > pair ( final string s1 , final string s2 ) n { n if ( string_utils . is_blank ( s1 ) ) n { n log . warn ( codstr ) n } n if ( string_utils . is_blank ( s2 ) ) n { n log . warn ( codstr + s1 ) n } n return new pair_impl < string , string > ( s1 , s2 ) n }	0
Q_399	add native target configuration list	C_399_0	private pbx_object_ref add_native_target_configuration_list ( final map objects , final string project_name ) { n n / / n / / create a configuration list with n / / two stock configurations debug and release n / / n final list < pbx_object_ref > configurations = new array_list < > ( ) n final map debug_settings = new hash_map ( ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , codstr ) n debug_settings . put ( codstr , project_name ) n debug_settings . put ( codstr , codstr ) n final pbx_object_ref debug_config = create_xc_build_configuration ( codstr , debug_settings ) n objects . put ( debug_config . get_id ( ) , debug_config . get_properties ( ) ) n configurations . add ( debug_config ) n n final map < string , object > release_settings = new hash_map < > ( ) n final list < string > archs = new array_list < > ( ) n archs . add ( codstr ) n archs . add ( codstr ) n release_settings . put ( codstr , archs ) n release_settings . put ( codstr , codstr ) n release_settings . put ( codstr , codstr ) n release_settings . put ( codstr , codstr ) n	1
Q_399	add native target configuration list	C_399_1	final public void delete_async ( final on_deleted_callback callback ) { n new async_task < model , void , void > ( ) { n n protected void do_in_background ( model . params ) { n params [ codint ] . delete ( ) n return null n } n n protected void on_post_execute ( void result ) { n if ( callback = null ) { n callback . on_deleted ( ) n } n } n n } . execute ( this ) n }	0
Q_399	add native target configuration list	C_399_2	public string get_column_family ( ) throws invalid_request_exception n { n cf_meta_data cfm = find_indexed_cf ( ) n return cfm = = null ? null cfm . cf_name n }	0
Q_400	create a cholesky decomposition of the give matrix	C_400_0	public static band_cholesky factorize ( upper_spd_band_matrix a ) { n return new band_cholesky ( a . num_rows ( ) , a . ku , true ) . factor ( a ) n }	1
Q_400	create a cholesky decomposition of the give matrix	C_400_1	public void set_login_manager ( n string disable_minutes_str , n string max_bad_attempts_str , n string enable_security_str , n string token_lifetime , n string max_inactive , n string password_change_interval , n string user_data_check_interval ) { n n int disable_minutes n try { n disable_minutes = integer . value_of ( disable_minutes_str ) . int_value ( ) n } catch ( number_format_exception e ) { n disable_minutes = cms_login_manager . disable_minutes_default n } n int max_bad_attempts n try { n max_bad_attempts = integer . value_of ( max_bad_attempts_str ) . int_value ( ) n } catch ( number_format_exception e ) { n max_bad_attempts = cms_login_manager . max_bad_attempts_default n } n boolean enable_security = boolean . value_of ( enable_security_str ) . boolean_value ( ) n m_login_manager = new cms_login_manager ( n disable_minutes , n max_bad_attempts , n enable_security , n token_lifetime , n max_inactive , n password_change_interval , n user_data_check_interval ) n if ( cms_log . init . is_info_enabled ( ) ) { n cms_log . init . info ( n messages . get ( ) . get_bundle ( ) . key ( n messages . init_loginmanager_3 , n new integer ( disable_minutes ) , n new integer ( max_bad_attempts ) , n new boolean ( enable_security ) ) ) n } n }	0
Q_400	create a cholesky decomposition of the give matrix	C_400_2	public dev_state dev_state ( ) throws dev_failed { n if ( device_state . value ( ) = = dev_state . _on device_state . value ( ) = = dev_state . _alarm ) { n n / / n / / read the hardware n / / n n final vector attr_list = dev_attr . get_alarm_list ( ) n final int nb_wanted_attr = attr_list . size ( ) n if ( nb_wanted_attr = codint ) { n read_attr_hardware ( attr_list ) n n / / n / / set attr value n / / n n int i n for ( i = codint i < nb_wanted_attr i + + ) { n final attribute att = dev_attr n . get_attr_by_ind ( ( integer ) attr_list . element_at ( i ) ) n att . wanted_date ( false ) n try { n read_attr ( att ) n } catch ( final dev_failed ex ) { n att . wanted_date ( true ) n throw ex n } n att . wanted_date ( true ) n } n n / / n / / check alarm level n / / n n if ( dev_attr . check_alarm ( ) = = true ) { n device_state = dev_state . alarm n } n n } n } n return device_state n }	0
Q_401	execute action relate specific attribute like assert proper	C_401_0	private static void perform_attribute_specific_actions ( stun_attribute attribute , byte [ ] bin_message , int offset , int msg_len ) n throws stun_exception { n / / check finger print crc n if ( attribute instanceof fingerprint_attribute ) { n if ( validate_fingerprint ( ( fingerprint_attribute ) attribute , bin_message , offset , msg_len ) ) { n / / rfc codint says that we should ignore bad cr_cs rather than n / / reply with an error response . n throw new stun_exception ( codstr ) n } n } n }	1
Q_401	execute action relate specific attribute like assert proper	C_401_1	public static systementitytype [ ] get ( nitro_service service , systementitytype_args args ) throws exception { n systementitytype obj = new systementitytype ( ) n options option = new options ( ) n option . set_args ( nitro_util . object_to_string_withoutquotes ( args ) ) n systementitytype [ ] response = ( systementitytype [ ] ) obj . get_resources ( service , option ) n return response n }	0
Q_401	execute action relate specific attribute like assert proper	C_401_2	public static pdf_action java_script ( string code , pdf_writer writer ) { n return java_script ( code , writer , false ) n }	0
Q_402	take into account the instruction and operand as well as the overall structure	C_402_0	private static byte [ ] dump_bytecode ( method_node method_node ) { n / / calculate label offsets _ required for hash calculation n / / we only care about where the labels are in relation to the opcode instructions _ we don codstr t really need it _ just incase n n return baos . to_byte_array ( ) n } catch ( io_exception ioe ) { n throw new illegal_state_exception ( ioe ) / / should never happen n } n }	1
Q_402	take into account the instruction and operand as well as the overall structure	C_402_1	public static double logpdf ( double x , double k , double theta , double shift ) { n x = ( x _ shift ) n if ( x < = codint . ) { n return double . negative_infinity n } n final double log1px = fast_math . log1p ( x ) n return k * fast_math . log ( theta ) _ gamma_distribution . log_gamma ( k ) _ ( theta + codint . ) * log1px + ( k _ codint ) * fast_math . log ( log1px ) n }	0
Q_402	take into account the instruction and operand as well as the overall structure	C_402_2	deprecated n nullable n public string get_connect_point ( ) { n server_address master = get_address ( ) n return master = null ? string . format ( codstr , master . get_host ( ) , master . get_port ( ) ) null n }	0
Q_403	generate the html of the tab	C_403_0	"private static void encode_tabs ( final faces_context context , final response_writer writer , final list < ui_component > children , n final int currently_active_index , final string hidden_input_field_id , final boolean disabled ) throws io_exception { n if ( null = children ) { n int tab_index = codint n n for ( int index = codint index < children . size ( ) index + + ) { n / / todo what codstr an exception occurred while rendering a tab . "" , ex ) n } n } n } n n if ( ( ( tab ) children . get ( index ) ) . get_value ( ) = = null ) { n r . run ( ) n tab_index + + n } else { n tab_index + = tab . encode_tabs ( context , r ) n } n } n } n }"	1
Q_403	generate the html of the tab	C_403_1	protected static int klu_valid_lu ( int n , int flag_test_start_ptr , n int [ ] xip , int xip_offset , int [ ] xlen , int xlen_offset , n double [ ] lu ) n { n / * int [ ] * / double [ ] xi n double [ ] xx n int j , p1 , p2 , i , p n int [ ] len = new int [ codint ] n int [ ] xi_offset = new int [ codint ] n int [ ] xx_offset = new int [ codint ] n n printf ( codstr , n ) n if ( n < = codint ) n { n printf ( codstr , n ) n return ( false ) n } n if ( flag_test_start_ptr = codint xip [ xip_offset + codint ] = codint ) n { n / * column pointers must start at xip [ codint ] = codint * / n printf ( codstr ) n return ( false ) n } n n for ( j = codint j < n j + + ) n { n p1 = xip [ xip_offset + j ] n p2 = xip [ xip_offset + j + codint ] n printf ( codstr , j , p1 , p2 ) n if ( p1 > p2 ) n { n / * column pointers must be ascending * / n printf ( codstr , j ) n return	0
Q_403	generate the html of the tab	C_403_2	protected void insert_instruction_impl ( string target , string data ) { n get_document ( ) . insert_before ( n get_document ( ) . create_processing_instruction ( target , data ) , n xml_node ) n }	0
Q_404	select the date pattern to use base on the give locale if the input	C_404_0	public static string select_moment_js_date_time_format ( locale locale , string moment_js_format , boolean with_date , boolean with_time ) { n if ( moment_js_format = = null ) { n string date_format = codstr n if ( with_date ) { n date_format = ( ( simple_date_format ) date_format . get_date_instance ( date_format . short , locale ) ) . to_pattern ( ) n } n string time_format = codstr n if ( with_time ) { n time_format = ( ( simple_date_format ) date_format . get_time_instance ( date_format . medium , locale ) ) . to_pattern ( ) n } n / / since date_format . short is silly , return a smart format n if ( date_format . equals ( codstr ) ) { n date_format = codstr n } n else if ( date_format . equals ( codstr ) ) { n date_format = codstr n } n string result = locale_utils . java_to_moment_format ( ( date_format + codstr + time_format ) . trim ( ) ) n / / system . out . println ( result ) n return result n } else { n return moment_js_format n } n }	1
Q_404	select the date pattern to use base on the give locale if the input	C_404_1	public static application create ( final string name ) throws exception { n final map < string , object > params = new hash_map < string , object > ( ) n params . put ( codstr , name ) n n return create ( params ) n }	0
Q_404	select the date pattern to use base on the give locale if the input	C_404_2	public string resolve ( string expression ) { n if ( is_empty ( expression ) ) { n return expression n } n n / / check if the expression is already been parsed n if ( cache . contains_key ( expression ) ) { n return cache . get ( expression ) n n } n n / / if the expression does not start with , then no need to do pattern n if ( expression . starts_with ( codstr ) ) { n n / / add to the mapping with key and value as expression n cache . put ( expression , expression ) n n / / if no match , then return the expression as it is n return expression n n } n n / / create the matcher n matcher matcher = pattern . matcher ( expression ) n n / / if the matching is there , then add it to the map and return the value n if ( matcher . find ( ) ) { n n / / store the value n string key = matcher . group ( codint ) n n / / get the value n string value = environment . get_property ( key ) n n / / store the value in the setting n if ( value = null ) { n n / / store in the map n cache . put ( expression , value ) n n / /	0
Q_405	create an access_class_loader for the give parent	C_405_0	public synchronized static final access_class_loader get ( class_loader parent ) { n access_class_loader loader = ( access_class_loader ) asm_class_loaders . get ( parent ) n if ( loader = = null ) { n loader = new access_class_loader ( parent ) n asm_class_loaders . put ( parent , loader ) n } n return loader n }	1
Q_405	create an access_class_loader for the give parent	C_405_1	override n public double get_distance ( s solution , l solution_list ) { n list < double > list_of_distances = knn_distances ( solution , solution_list ) n list_of_distances . sort ( comparator . natural_order ( ) ) n n int limit = math . min ( k , list_of_distances . size ( ) ) n n double result n if ( limit = = codint ) { n result = number n } else { n double sum = number n for ( int i = codint i < limit i + + ) { n sum + = list_of_distances . get ( i ) n } n result = sum / limit n } n return result n }	0
Q_405	create an access_class_loader for the give parent	C_405_2	public static short_range_randomizer a_new_short_range_randomizer ( final short min , final short max , final long seed ) { n return new short_range_randomizer ( min , max , seed ) n }	0
Q_406	create a shopping campaign	C_406_0	private static campaign create_campaign ( n ad_words_services_interface ad_words_services , n ad_words_session session , n long budget_id , n long merchant_id ) n throws remote_exception { n / / get the campaign_service n campaign_service_interface campaign_service = n ad_words_services . get ( session , campaign_service_interface . class ) n n / / create campaign . n campaign campaign = new campaign ( ) n campaign . set_name ( codstr ve added n / / targeting and the ads are ready to serve . n campaign . set_status ( campaign_status . paused ) n n / / set shared budget ( required ) . n budget budget = new budget ( ) n budget . set_budget_id ( budget_id ) n campaign . set_budget ( budget ) n n / / set bidding strategy ( required ) . n bidding_strategy_configuration bidding_strategy_configuration = new bidding_strategy_configuration ( ) n bidding_strategy_configuration . set_bidding_strategy_type ( bidding_strategy_type . manual_cpc ) n campaign . set_bidding_strategy_configuration ( bidding_strategy_configuration ) n n / / all shopping campaigns need a shopping_setting . n shopping_setting shopping_setting = new shopping_setting ( ) n shopping_setting . set_sales_country ( codstr ) n shopping_setting . set_campaign_priority ( codint ) n shopping_setting . set_merchant_id ( merchant_id ) n n / / set to codstr to enable local inventory ads in your campaign . n shopping_setting . set_enable_local ( true ) n n campaign . set_settings ( new setting [ ] { shopping_setting } ) n n / / create operation . n campaign_operation campaign_operation = new campaign_operation (	1
Q_406	create a shopping campaign	C_406_1	public void alarm ( object thandle ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( tc , codstr , thandle ) n n synchronized ( this ) n { n if ( expiry_alarm_handle = null ) n { n expiry_alarm_handle = null n close ( ) n / / call into parent asking it to remove me n parent . remove_browser_session ( key ) n } n } n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( tc , codstr ) n n }	0
Q_406	create a shopping campaign	C_406_2	public final static reliability get_reliability_by_index ( int mp_index ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) n sib_tr . info ( tc , codstr + mp_index ) n return index_set [ mp_index + codint ] n }	0
Q_407	return a soap header from the give soap client if it exist	C_407_0	override n public object get_header ( binding_provider soap_client , string header_name ) { n for ( soap_element added_header get_context_handler_from_client ( soap_client ) . get_added_headers ( ) ) { n if ( added_header . get_node_name ( ) . equals ( header_name ) ) { n return added_header n } n } n return null n }	1
Q_407	return a soap header from the give soap client if it exist	C_407_1	public void set_ad_category ( com . google . api . ads . admanager . axis . v201902 . ad_category_dto ad_category ) { n this . ad_category = ad_category n }	0
Q_407	return a soap header from the give soap client if it exist	C_407_2	public int read ( ) throws io_exception { n synchronized ( lock ) { n ensure_open ( ) n for ( ) { n if ( next_char > = n_chars ) { n fill ( ) n if ( next_char > = n_chars ) n return _ codint n } n if ( skip_lf ) { n skip_lf = false n if ( cb [ next_char ] = = codstr ) { n next_char + + n continue n } n } n return cb [ next_char + + ] n } n } n }	0
Q_408	set the billable_revenue_override value for this billable_revenue_overrides	C_408_0	public void set_billable_revenue_override ( com . google . api . ads . admanager . axis . v201808 . money billable_revenue_override ) { n this . billable_revenue_override = billable_revenue_override n }	1
Q_408	set the billable_revenue_override value for this billable_revenue_overrides	C_408_1	public static void remove_all_j2_c_identity_services ( ) { n j2c_identity_services . clear ( ) n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr ) n } n }	0
Q_408	set the billable_revenue_override value for this billable_revenue_overrides	C_408_2	public string convert_rendering_intent_ptocri_to_string ( e_data_type e_data_type , object instance_value ) { n return instance_value = = null ? null instance_value . to_string ( ) n }	0
Q_409	set the video_position_segment value for this product_segmentation	C_409_0	public void set_video_position_segment ( com . google . api . ads . admanager . axis . v201808 . video_position_targeting video_position_segment ) { n this . video_position_segment = video_position_segment n }	1
Q_409	set the video_position_segment value for this product_segmentation	C_409_1	protected void print_static_accessors ( ) { n if ( options . static_accessor_methods ( ) ) { n return n } n for ( variable_declaration_fragment fragment get_static_fields ( ) ) { n if ( ( ( field_declaration ) fragment . get_parent ( ) ) . has_private_declaration ( ) ) { n variable_element var_element = fragment . get_variable_element ( ) n type_mirror type = var_element . as_type ( ) n boolean is_volatile = element_util . is_volatile ( var_element ) n boolean is_primitive = type . get_kind ( ) . is_primitive ( ) n string accessor_name = name_table . get_static_accessor_name ( var_element ) n string var_name = name_table . get_variable_qualified_name ( var_element ) n string objc_type = name_table . get_obj_c_type ( type ) n string type_suffix = is_primitive ? name_table . capitalize ( type_util . get_name ( type ) ) codstr n type_element declaring_class = element_util . get_declaring_class ( var_element ) n string base_name = name_table . get_variable_base_name ( var_element ) n executable_element getter = n element_util . find_getter_method ( base_name , type , declaring_class , / * is_static = * / true ) n if ( getter = = null ) { n if ( is_volatile ) { n printf ( n codstr , n objc_type , accessor_name , type_suffix , var_name ) n } else { n printf ( codstr , objc_type , accessor_name , var_name ) n } n } n executable_element setter = n element_util . find_setter_method ( base_name , type , declaring_class , / * is_static =	0
Q_409	set the video_position_segment value for this product_segmentation	C_409_2	public e_class get_ifc_value ( ) { n if ( ifc_value_e_class = = null ) { n ifc_value_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) . get_e_classifiers ( ) n . get ( codint ) n } n return ifc_value_e_class n }	0
Q_410	helper to convert an alternate key1 value1 key2 value2	C_410_0	public static map < string , string > array_to_map ( string [ ] args ) { n if ( args . length codint = codint ) { n throw new illegal_argument_exception ( codstr ) n } n n map < string , string > ret = new hash_map < > ( ) n n for ( int i = codint i < args . length i + = codint ) { n ret . put ( args [ i ] , args [ i + codint ] ) n } n n return ret n }	1
Q_410	helper to convert an alternate key1 value1 key2 value2	C_410_1	public ovh_call_diagnostics billing_account_service_service_name_voice_consumption_consumption_id_call_diagnostics_get ( string billing_account , string service_name , long consumption_id ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , billing_account , service_name , consumption_id ) n string resp = exec ( q_path , codstr , sb . to_string ( ) , null ) n return convert_to ( resp , ovh_call_diagnostics . class ) n }	0
Q_410	helper to convert an alternate key1 value1 key2 value2	C_410_2	public static double iou ( detected_object o1 , detected_object o2 ) { n double x1min = o1 . get_center_x ( ) _ o1 . get_width ( ) / codint n double x1max = o1 . get_center_x ( ) + o1 . get_width ( ) / codint n double y1min = o1 . get_center_y ( ) _ o1 . get_height ( ) / codint n double y1max = o1 . get_center_y ( ) + o1 . get_height ( ) / codint n n double x2min = o2 . get_center_x ( ) _ o2 . get_width ( ) / codint n double x2max = o2 . get_center_x ( ) + o2 . get_width ( ) / codint n double y2min = o2 . get_center_y ( ) _ o2 . get_height ( ) / codint n double y2max = o2 . get_center_y ( ) + o2 . get_height ( ) / codint n n double ow = overlap ( x1min , x1max , x2min , x2max ) n double oh = overlap ( y1min , y1max , y2min , y2max ) n n double intersection = ow * oh n double union = o1 . get_width ( ) * o1 . get_height ( ) + o2 . get_width ( ) * o2 . get_height ( ) _ intersection n return intersection / union n }	0
Q_411	execute molgenis meta_data version upgrade	C_411_0	override n public boolean upgrade ( ) { n int schema_version = version_service . get_schema_version ( ) n if ( schema_version < codint ) { n throw new unsupported_operation_exception ( n codstr ) n } n if ( schema_version < version_service . get_app_version ( ) ) { n log . info ( n codstr , n schema_version , n version_service . get_app_version ( ) ) n n upgrades n . stream ( ) n . filter ( upgrade _ > upgrade . get_from_version ( ) > = schema_version ) n . for_each ( this run_upgrade ) n n version_service . set_schema_version ( version_service . get_app_version ( ) ) n n log . info ( codstr ) n return true n } else { n log . debug ( n codstr , n schema_version , n version_service . get_app_version ( ) ) n return false n } n }	1
Q_411	execute molgenis meta_data version upgrade	C_411_1	public void delist ( bean_o bean_o ) n { n final boolean is_trace_on = trace_component . is_any_tracing_enabled ( ) n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . entry ( tc , codstr + bean_o ) n ensure_active ( ) n iv_bean_os . remove ( bean_o . bean_id ) / / d130022 n iv_bean_o_list . remove ( bean_o ) / / d130022 n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . exit ( tc , codstr + bean_o ) n }	0
Q_411	execute molgenis meta_data version upgrade	C_411_2	public node get_root_node ( node n ) n { n int nt = n . get_node_type ( ) n return ( ( node . document_node = = nt ) ( node . document_fragment_node = = nt ) ) n ? n n . get_owner_document ( ) n }	0
Q_412	strip version string from name	C_412_0	protected string strip_version_from_name ( string name , string version ) { n int version_begin_index = name . last_index_of ( codstr + version ) n if ( version_begin_index = _ codint ) { n return name . substring ( codint , version_begin_index ) + name . substring ( version_begin_index + version . length ( ) + codint ) n } else { n return name n } n }	1
Q_412	strip version string from name	C_412_1	public static path append_lines_and_close ( string file_path , string . lines ) { n return append_lines_and_close ( file_path , utf_8 , lines ) n }	0
Q_412	strip version string from name	C_412_2	public static object parse_expression ( string expression ) n throws ognl_exception n { n try { n ognl_parser parser = new ognl_parser ( new string_reader ( expression ) ) n return parser . top_level_expression ( ) n } catch ( parse_exception e ) { n throw new expression_syntax_exception ( expression , e ) n } catch ( token_mgr_error e ) { n throw new expression_syntax_exception ( expression , e ) n } n }	0
Q_413	replace a reference from one object to another	C_413_0	public boolean replace_ref ( object old_ref , object new_ref ) n throws io_exception n { n integer value = ( integer ) _refs . remove ( old_ref ) n n if ( value = null ) { n _refs . put ( new_ref , value ) n n return true n } n else n return false n }	1
Q_413	replace a reference from one object to another	C_413_1	public void marshall ( scte35_splice_insert scte35_splice_insert , protocol_marshaller protocol_marshaller ) { n n if ( scte35_splice_insert = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( scte35_splice_insert . get_ad_avail_offset ( ) , adavailoffset_binding ) n protocol_marshaller . marshall ( scte35_splice_insert . get_no_regional_blackout_flag ( ) , noregionalblackoutflag_binding ) n protocol_marshaller . marshall ( scte35_splice_insert . get_web_delivery_allowed_flag ( ) , webdeliveryallowedflag_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_413	replace a reference from one object to another	C_413_2	public static < t > generator < p_vector4_d < t create_small ( ) n { n return new p_vector4_d_generator < > ( primitive_generators . doubles ( n generator_constants . bound_small_double_lower , n generator_constants . bound_small_double_upper n ) ) n }	0
Q_414	broadcast the receive message object to all suspend response	C_414_0	broadcast ( write_entity = false ) n post n produces ( codstr ) n public response broadcast ( message message ) { n return new response ( message . get_author ( ) , message . get_message ( ) ) n }	1
Q_414	broadcast the receive message object to all suspend response	C_414_1	public static final void start ( int [ ] block , int dc ) { n dc < < = dc_shift n for ( int i = codint i < codint i + = codint ) { n block [ i + codint ] = dc n block [ i + codint ] = dc n block [ i + codint ] = dc n block [ i + codint ] = dc n } n }	0
Q_414	broadcast the receive message object to all suspend response	C_414_2	public symmetric_graph < table , edge < table > , sql_exception > get_foreign_key_graph ( final set < string > table_types ) { n return new symmetric_graph < table , edge < table > , sql_exception > ( ) { n n override n public set < table > get_vertices ( ) throws sql_exception { n set < table > vertices = new linked_hash_set < > ( ) n for ( schema schema get_schemas ( ) . values ( ) ) { n for ( table table schema . get_tables ( ) . values ( ) ) { n if ( table_types = = null table_types . contains ( table . get_table_type ( ) ) ) vertices . add ( table ) n } n } n return ao_collections . optimal_unmodifiable_set ( vertices ) n } n n override n public set < edge < table get_edges_from ( table from ) throws sql_exception { n set < ? extends table > tos = from . get_imported_tables ( ) n set < edge < table edges = new linked_hash_set < > ( tos . size ( ) * codint / codint + codint ) n for ( table to tos ) { n if ( n table_types = = null n table_types . contains ( from . get_table_type ( ) ) n table_types . contains ( to . get_table_type ( ) ) n ) edges . add ( new edge < > ( from , to ) ) n } n	0
Q_415	add or replace a list of synonym	C_415_0	public json_object batch_rules ( list < json_object > rules ) throws algolia_exception { n return batch_rules ( rules , false , false ) n }	1
Q_415	add or replace a list of synonym	C_415_1	private void write_escaped ( string in ) n throws io_exception n { n for ( int i = codint , n = in . length ( ) i < n i + + ) n { n char c = in . char_at ( i ) n if ( c = = codstr codstr codstr codstr r codstr codstr r codstr n codstr codstr n codstr t codstr codstr t codstr b codstr codstr b codstr f codstr codstr f codstr codstr u codstr codint codstr n codstr t codstr , codstr n codstr t codstr codstr ) n write_escaped ( name ) n / / writer . write ( codstr { codstr codstr ) n writer . write ( codstr ) n } n n writer . write ( codstr ) n n increase_level ( false ) n } n n override n public void write_object_end ( string name ) n throws io_exception n { n decrease_level ( ) n n writer . write ( codstr ) n } n n override n public void write_list_start ( string name ) n throws io_exception n { n start_write ( ) n n if ( should_output_name ( ) ) n { n writer . write ( codstr codstr codstr ) n writer . write ( codstr codstr codstr [ codstr ] codstr codstr ) n write_escaped ( name ) n / / writer . write ( codstr codstr codstr ) n writer . write ( codstr ) n } n	0
Q_415	add or replace a list of synonym	C_415_2	private bit_matrix extract_data_region ( bit_matrix bit_matrix ) { n int symbol_size_rows = version . get_symbol_size_rows ( ) n int symbol_size_columns = version . get_symbol_size_columns ( ) n n if ( bit_matrix . get_height ( ) = symbol_size_rows ) { n throw new illegal_argument_exception ( codstr ) n } n n int data_region_size_rows = version . get_data_region_size_rows ( ) n int data_region_size_columns = version . get_data_region_size_columns ( ) n n int num_data_regions_row = symbol_size_rows / data_region_size_rows n int num_data_regions_column = symbol_size_columns / data_region_size_columns n n int size_data_region_row = num_data_regions_row * data_region_size_rows n int size_data_region_column = num_data_regions_column * data_region_size_columns n n bit_matrix bit_matrix_without_alignment = new bit_matrix ( size_data_region_column , size_data_region_row ) n for ( int data_region_row = codint data_region_row < num_data_regions_row + + data_region_row ) { n int data_region_row_offset = data_region_row * data_region_size_rows n for ( int data_region_column = codint data_region_column < num_data_regions_column + + data_region_column ) { n int data_region_column_offset = data_region_column * data_region_size_columns n for ( int i = codint i < data_region_size_rows + + i ) { n int read_row_offset = data_region_row * ( data_region_size_rows + codint ) + codint + i n int write_row_offset = data_region_row_offset + i n for ( int j = codint j < data_region_size_columns + + j ) { n int read_column_offset = data_region_column * ( data_region_size_columns + codint ) + codint + j n if ( bit_matrix . get ( read_column_offset , read_row_offset ) ) { n int write_column_offset = data_region_column_offset + j n bit_matrix_without_alignment . set ( write_column_offset , write_row_offset )	0
Q_416	use occurrence to save the count of large object if code are_all_smallest_same true e	C_416_0	suppress_warnings ( codstr ) n public static < t extends comparable > collector < t , ? , list < t min_all ( final int at_most_size , final boolean are_all_smallest_same ) { n return min_all ( fn . natural_order ( ) , at_most_size , are_all_smallest_same ) n }	1
Q_416	use occurrence to save the count of large object if code are_all_smallest_same true e	C_416_1	public void load_content_repository ( ) { n reset_context ( ) n n scheduler . get ( ) . schedule_deferred ( ( ) _ > new async < function_context > ( ) . single ( new function_context ( ) , n new outcome < function_context > ( ) { n override n public void on_failure ( final function_context context ) { n console . error ( console . constants . unable_to_find_deployments ( ) , context . get_error_message ( ) ) n } n n override n public void on_success ( final function_context context ) { n list < content > content_repository = context . pop ( ) n get_view ( ) . update_content_repository ( content_repository ) n } n } , n new deployment_functions . load_content_assignments ( dispatcher ) n ) ) n }	0
Q_416	use occurrence to save the count of large object if code are_all_smallest_same true e	C_416_2	public static int hamming ( tuple_desc_b a , tuple_desc_b b ) { n int score = codint n final int n = a . data . length n for ( int i = codint i < n i + + ) { n score + = hamming ( a . data [ i ] ^ b . data [ i ] ) n } n return score n }	0
Q_417	delete the specify file and all it sub file directory if it be a directory	C_417_0	public static boolean delete_all_if_exists ( final file file ) { n if ( ( file = = null ) file . exists ( ) ) { n return false n } n n if ( file . is_directory ( ) ) { n final file [ ] files = file . list_files ( ) n n if ( n . not_null_or_empty ( files ) ) { n for ( file sub_file files ) { n if ( sub_file = = null ) { n continue n } n n if ( sub_file . is_file ( ) ) { n if ( sub_file . delete ( ) = = false ) { n return false n } n } else { n if ( delete_all_if_exists ( sub_file ) = = false ) { n return false n } n } n } n } n } n n return file . delete ( ) n }	1
Q_417	delete the specify file and all it sub file directory if it be a directory	C_417_1	public auth_token copy ( ) { n final auth_token auth_token = new auth_token ( key ) n auth_token . token_name = token_name n auth_token . start_time = start_time n auth_token . expiration = expiration n auth_token . ip = ip n auth_token . acl = acl n auth_token . duration = duration n return auth_token n }	0
Q_417	delete the specify file and all it sub file directory if it be a directory	C_417_2	public void destroy_cleanup_terminated_instance_timer ( ) { n cleanup_terminated_instances_scheduled_future . cancel ( true ) n cleanup_terminated_instances_scheduled_future = null n cleanup_terminated_instances_timer . shutdown ( ) n cleanup_terminated_instances_timer = null n }	0
Q_418	return all know alias for this name	C_418_0	public name [ ] nget_aliases ( ) { n check_done ( ) n if ( aliases = = null ) n return no_aliases n return ( name [ ] ) aliases . to_array ( new name [ aliases . size ( ) ] ) n }	1
Q_418	return all know alias for this name	C_418_1	private object_metadata create_metadata ( int length ) { n object_metadata metadata = new object_metadata ( ) n metadata . set_content_length ( length ) n if ( aes256_encryption ) n metadata . set_sse_algorithm ( object_metadata . aes_256_server_side_encryption ) n return metadata n }	0
Q_418	return all know alias for this name	C_418_2	public void delete_bulk_docs_async ( string index , string type ) { n execute_bulk_request_async ( build_delete_bulk_request_builder ( n build_all_delete_request_builder_list ( index , type ) ) ) n }	0
Q_419	write an unsigned tagint bit value to the stream	C_419_0	public void nwrite_u16 ( int val ) { n check ( val , codint ) n need ( codint ) n array [ pos + + ] = ( byte ) ( ( val codint ) codint ) n array [ pos + + ] = ( byte ) ( val codint ) n }	1
Q_419	write an unsigned tagint bit value to the stream	C_419_1	public static array_list < array_list < hash_map < string , string get_auto_event_date ( map data , string [ ] pdates ) { n n array_list < array_list < hash_map < string , string results = new array_list < array_list < hash_map < string , string ( ) n n / / if no more planting event is required n if ( pdates . length < codint ) { n log . error ( codstr ) n return results n } n n / / get event date n array_list < hash_map < string , string events = map_util . get_bucket ( data , codstr ) . get_data_list ( ) n while ( results . size ( ) < pdates . length ) { n results . add ( new array_list ( ) ) n } n n string org_pdate = get_value_or ( data , codstr , codstr ) n if ( org_pdate . equals ( codstr ) ) { n log . error ( codstr t calculate other event date codstr _ codint codstr codstr codstr the original pdate is missing , use first given pdate { } as original one codstr find original pdate { } codstr date codstr codstr codstr event codstr unknown codstr planting codstr codint codstr codstr original { } event has an invalid date [ { } ] . codstr original { } event date [ { } ] . codstr original { } event codstr , event_type , org_dap ) n } n	0
Q_419	write an unsigned tagint bit value to the stream	C_419_2	protected string get_filename ( object part ) { n if ( part instanceof resource ) { n resource resource = ( resource ) part n return resource . get_filename ( ) n } n else { n return null n } n }	0
Q_420	add a new control to the list of control	C_420_0	public cma_editor_interface add_control ( control control ) { n if ( controls = = null ) { n controls = new array_list < control > ( ) n } n n controls . add ( control ) n return this n }	1
Q_420	add a new control to the list of control	C_420_1	public static buffered_image resize_to_height ( buffered_image original_image , int height_out ) { n n int width = original_image . get_width ( ) n n int height = original_image . get_height ( ) n n int height_percent = ( height_out * codint ) / height n n int new_width = ( width * height_percent ) / codint n n buffered_image resized_image = n new buffered_image ( new_width , height_out , buffered_image . type_int_argb ) n graphics2_d g = resized_image . create_graphics ( ) n g . draw_image ( original_image , codint , codint , new_width , height_out , null ) n g . dispose ( ) n n return resized_image n }	0
Q_420	add a new control to the list of control	C_420_2	public org . grails . datastore . mapping . query . api . criteria in ( string property_name , object [ ] values ) { n if ( validate_simple_expression ( ) ) { n throw_runtime_exception ( new illegal_argument_exception ( codstr + n property_name + codstr + values + codstr ) ) n } n n property_name = calculate_property_name ( property_name ) n add_to_criteria ( restrictions . in ( property_name , values ) ) n return this n }	0
Q_421	return expression result in first non_null non_missing value	C_421_0	public static expression if_missing_or_null ( expression expression1 , expression expression2 , expression . others ) { n return build ( codstr , expression1 , expression2 , others ) n }	1
Q_421	return expression result in first non_null non_missing value	C_421_1	private static string [ ] get_host_and_port_from_bracketed_host ( string host_port_string ) { n n lettuce_assert . is_true ( host_port_string . char_at ( codint ) = = codstr , n string . format ( codstr , host_port_string ) ) n n int colon_index = host_port_string . index_of ( codstr ) n int close_bracket_index = host_port_string . last_index_of ( codstr ) n n lettuce_assert . is_true ( colon_index > _ codint close_bracket_index > colon_index , n string . format ( codstr , host_port_string ) ) n n string host = host_port_string . substring ( codint , close_bracket_index ) n if ( close_bracket_index + codint = = host_port_string . length ( ) ) { n return new string [ ] { host , codstr } n } else { n n lettuce_assert . is_true ( host_port_string . char_at ( close_bracket_index + codint ) = = codstr , n codstr + host_port_string ) n for ( int i = close_bracket_index + codint i < host_port_string . length ( ) + + i ) { n lettuce_assert . is_true ( character . is_digit ( host_port_string . char_at ( i ) ) , n string . format ( codstr , host_port_string ) ) n } n return new string [ ] { host , host_port_string . substring ( close_bracket_index + codint ) } n } n }	0
Q_421	return expression result in first non_null non_missing value	C_421_2	public string run_command ( list < string > args ) n throws cloud_sdk_not_found_exception , io_exception , process_handler_exception { n sdk . validate_cloud_sdk_location ( ) n n string_builder_process_output_line_listener std_out_listener = n string_builder_process_output_line_listener . new_listener ( ) n string_builder_process_output_line_listener std_err_listener = n string_builder_process_output_line_listener . new_listener_with_newlines ( ) n exit_code_recorder_process_exit_listener exit_listener = new exit_code_recorder_process_exit_listener ( ) n n / / build and run the command n list < string > command = n new immutable_list . builder < string > ( ) n . add ( sdk . get_g_cloud_path ( ) . to_absolute_path ( ) . to_string ( ) ) n . add_all ( args ) n . build ( ) n n process process = new process_builder ( command ) . start ( ) n legacy_process_handler . builder ( ) n . add_std_out_line_listener ( std_out_listener ) n . add_std_err_line_listener ( std_err_listener ) n . set_exit_listener ( exit_listener ) n . build ( ) n . handle_process ( process ) n n if ( exit_listener . get_most_recent_exit_code ( ) = null n exit_listener . get_most_recent_exit_code ( ) . equals ( codint ) ) { n logger . get_logger ( gcloud . class . get_name ( ) ) . severe ( std_err_listener . to_string ( ) ) n throw new process_handler_exception ( n codstr + exit_listener . get_most_recent_exit_code ( ) ) n } n n return std_out_listener . to_string ( ) n }	0
Q_422	create an any comprehension with a first within range	C_422_0	public static satisfies_builder any_within ( string variable , expression expression ) { n return new satisfies_builder ( x ( codstr ) , variable , expression , false ) n }	1
Q_422	create an any comprehension with a first within range	C_422_1	public void process ( ) { n logger . debug ( codstr ) n try { n final json_object composer = json_reader . read_object ( ) n if ( composer . contains_key ( codstr ) ) { n logger . debug ( codstr ) n final json_array packages = composer . get_json_array ( codstr ) n for ( json_object pkg packages . get_values_as ( json_object . class ) ) { n if ( pkg . contains_key ( codstr ) ) { n final string group_name = pkg . get_string ( codstr ) n if ( group_name . index_of ( codstr ) > = codint group_name . index_of ( codstr ) < = group_name . length ( ) _ codint ) { n if ( pkg . contains_key ( codstr ) ) { n final string group = group_name . substring ( codint , group_name . index_of ( codstr ) ) n final string project = group_name . substring ( group_name . index_of ( codstr ) + codint ) n string version = pkg . get_string ( codstr ) n / / some version numbers begin with v _ which doesn codstr s n if ( version . starts_with ( codstr ) ) { n version = version . substring ( codint ) n } n logger . debug ( codstr , group , project , version ) n composer_dependencies . add ( new composer_dependency ( group , project , version ) ) n } else { n logger .	0
Q_422	create an any comprehension with a first within range	C_422_2	protected void set_up_transform ( singular_value_decomposition svd ) n { n vec diag = new dense_vector ( dimensions ) n n double [ ] s = svd . get_singular_values ( ) n n for ( int i = codint i < dimensions i + + ) n diag . set ( i , number / math . sqrt ( s [ i ] + regularization ) ) n n transform = new sub_matrix ( svd . get_u ( ) . transpose ( ) , codint , codint , dimensions , s . length ) . clone ( ) n n matrix . diag_mult ( diag , transform ) n }	0
Q_423	construct a link prepare_statement from a select_like link statement	C_423_0	public static prepare_statement prepare ( statement statement ) { n if ( statement instanceof prepare_statement ) { n return ( prepare_statement ) statement n } else if ( statement instanceof prepared_payload ) { n prepared_payload prepared_payload = ( prepared_payload ) statement n return new prepare_statement ( prepared_payload . original_statement ( ) , prepared_payload . prepared_name ( ) ) n } else { n string prepared_name = digest_utils . digest_sha1_hex ( statement . to_string ( ) ) n return new prepare_statement ( statement , prepared_name ) n } n }	1
Q_423	construct a link prepare_statement from a select_like link statement	C_423_1	public void marshall ( delete_table_version_request delete_table_version_request , protocol_marshaller protocol_marshaller ) { n n if ( delete_table_version_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( delete_table_version_request . get_catalog_id ( ) , catalogid_binding ) n protocol_marshaller . marshall ( delete_table_version_request . get_database_name ( ) , databasename_binding ) n protocol_marshaller . marshall ( delete_table_version_request . get_table_name ( ) , tablename_binding ) n protocol_marshaller . marshall ( delete_table_version_request . get_version_id ( ) , versionid_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_423	construct a link prepare_statement from a select_like link statement	C_423_2	public bson_string get_string ( final object key , final bson_string default_value ) { n if ( contains_key ( key ) ) { n return default_value n } n return get ( key ) . as_string ( ) n }	0
Q_424	launch the vortex job pass appropriate argument	C_424_0	public static void main ( final string [ ] args ) { n final configuration vortex_master_conf = vortex_master_conf . conf n . set ( vortex_master_conf . worker_num , codint ) n . set ( vortex_master_conf . worker_mem , codint ) n . set ( vortex_master_conf . worker_cores , codint ) n . set ( vortex_master_conf . worker_capacity , codint ) n . set ( vortex_master_conf . vortex_start , sum_ones_aggregate_start . class ) n . build ( ) n n final configuration user_conf = tang . factory . get_tang ( ) . new_configuration_builder ( ) n . bind_named_parameter ( number_of_ones . class , codstr ) n . build ( ) n n final vortex_job_conf vortex_job_conf = vortex_job_conf . new_builder ( ) n . set_job_name ( codstr ) n . set_vortex_master_conf ( vortex_master_conf ) n . set_user_conf ( user_conf ) n . build ( ) n n vortex_launcher . launch_local ( vortex_job_conf ) n }	1
Q_424	launch the vortex job pass appropriate argument	C_424_1	private static double get_radius_for_nucl ( nucleotide_impl nuc , atom atom ) { n n if ( atom . get_element ( ) . equals ( element . h ) ) return element . h . get_vdw_radius ( ) n if ( atom . get_element ( ) . equals ( element . d ) ) return element . d . get_vdw_radius ( ) n n if ( atom . get_element ( ) = = element . c ) return nuc_carbon_vdw n n if ( atom . get_element ( ) = = element . n ) return nuc_nitrogen_vdw n n if ( atom . get_element ( ) = = element . p ) return phosphorous_vdw n n if ( atom . get_element ( ) = = element . o ) return oxigen_vdw n n logger . info ( codstr + atom . get_name ( ) + codstr + nuc . get_pdb_name ( ) + codstr ) n return atom . get_element ( ) . get_vdw_radius ( ) n }	0
Q_424	launch the vortex job pass appropriate argument	C_424_2	public static < t > void write_to ( output_stream out , t message , schema < t > schema , n boolean numeric ) throws io_exception n { n final io_context context = new io_context ( default_smile_factory . _get_buffer_recycler ( ) , n out , false ) n n final smile_generator generator = new_smile_generator ( out , n context . alloc_write_encoding_buffer ( ) , codint , true , context ) n n / / final smile_generator generator = default_smile_factory . create_json_generator ( out ) n n try n { n json_io_util . write_to ( generator , message , schema , numeric ) n } n finally n { n generator . close ( ) n } n }	0
Q_425	set either the hour or the minute	C_425_0	private void set_item ( int index , int value ) { n if ( index = = hour_index ) { n set_value_for_item ( hour_index , value ) n int hour_degrees = ( value codint ) * hour_value_to_degrees_step_size n m_hour_radial_selector_view . set_selection ( hour_degrees , is_hour_inner_circle ( value ) , false ) n m_hour_radial_selector_view . invalidate ( ) n } else if ( index = = minute_index ) { n set_value_for_item ( minute_index , value ) n int minute_degrees = value * minute_value_to_degrees_step_size n m_minute_radial_selector_view . set_selection ( minute_degrees , false , false ) n m_minute_radial_selector_view . invalidate ( ) n } n }	1
Q_425	set either the hour or the minute	C_425_1	public static base_response unset ( nitro_service client , rnatparam resource , string [ ] args ) throws exception { n rnatparam unsetresource = new rnatparam ( ) n return unsetresource . unset_resource ( client , args ) n }	0
Q_425	set either the hour or the minute	C_425_2	public static < t > collector < t , ? , list < t least ( comparator < ? super t > comparator , int n ) { n if ( n < = codint ) n return empty ( ) n if ( n = = codint ) { n return collector . of ( ( ) _ > new box < t > ( none ( ) ) , ( box , t ) _ > { n if ( box . a = = none comparator . compare ( t , box . a ) < codint ) n box . a = t n } , ( box1 , box2 ) _ > ( box2 . a = none ( box1 . a = = none comparator . compare ( box2 . a , box1 . a ) < codint ) ) ? box2 n box1 , box _ > box . a = = none ? new array_list < > ( ) new array_list < > ( collections . singleton ( box . a ) ) ) n } n if ( n > = integer . max_value / codint ) n return collecting_and_then ( collectors . to_list ( ) , list _ > { n list . sort ( comparator ) n if ( list . size ( ) < = n ) n return list n return new array_list < > ( list . sub_list ( codint , n ) ) n	0
Q_426	return the next path that meet the requirement	C_426_0	public dependency_path next ( ) { n if ( next = = null ) n throw new no_such_element_exception ( codstr ) n dependency_path p = next n advance ( ) n return p n }	1
Q_426	return the next path that meet the requirement	C_426_1	public agreement_terms_inner get ( string publisher_id , string offer_id , string plan_id ) { n return get_with_service_response_async ( publisher_id , offer_id , plan_id ) . to_blocking ( ) . single ( ) . body ( ) n }	0
Q_426	return the next path that meet the requirement	C_426_2	string format ( string request , string live_status_response ) { n n string columns_decl = null n for ( string s request . split ( codstr ) ) { n s = s . trim ( ) n if ( s . to_lower_case ( ) . starts_with ( nagios_columns ) ) { n columns_decl = s . substring ( nagios_columns . length ( ) ) . trim ( ) n break n } n } n n string result = live_status_response n if ( columns_decl = null ) { n columns_decl = columns_decl . replace_all ( codstr , codstr ) n result = columns_decl + codstr + result n } n n return result n }	0
Q_427	read all built_in language profile from the tagstr folder	C_427_0	public list < language_profile > read_all_built_in ( ) throws io_exception { n list < language_profile > loaded = new array_list < > ( ) n for ( ld_locale locale built_in_languages . get_languages ( ) ) { n loaded . add ( read_built_in ( locale ) ) n } n return loaded n }	1
Q_427	read all built_in language profile from the tagstr folder	C_427_1	private void delete_spill_files ( ) { n for ( unsafe_sorter_spill_writer spill spill_writers ) { n file file = spill . get_file ( ) n if ( file = null file . exists ( ) ) { n if ( file . delete ( ) ) { n logger . error ( codstr , file . get_absolute_path ( ) ) n } n } n } n }	0
Q_427	read all built_in language profile from the tagstr folder	C_427_2	"private boolean start_partition ( partition_plan_config config ) { n n if ( is_stopping_stopped_or_failed ( ) ) { n return false n } n n if ( is_multi_jvm ) { n start_partition_remote ( config ) n } else { n start_partition_local ( config ) n } n n / / todo should this message be issued from the partition ? ( won codstr partition . submitted codstr partition . started "" , new object [ ] { config . get_partition_number ( ) , n get_step_name ( ) , n config . get_top_level_instance_id ( ) , n config . get_top_level_execution_id ( ) } , n logger ) n return true n }"	0
Q_428	build an os dependent command line around the give executable name relative path	C_428_0	public static command_line build_command_line ( string executable ) n { n command_line cmd n n if ( system_utils . is_os_windows ) n { n string windows_executable = executable . replace ( codstr , codstr ) n cmd = new command_line ( codstr ) n . add_argument ( codstr ) n . add_argument ( windows_executable ) n } n else n { n cmd = new command_line ( executable ) n } n n return cmd n }	1
Q_428	build an os dependent command line around the give executable name relative path	C_428_1	private void init_components ( ) / / gen _ begin init_components n { n java . awt . grid_bag_constraints grid_bag_constraints n n lbl_database_alias = new javax . swing . j_label ( ) n tf_database_alias = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_dbms = new javax . swing . j_label ( ) n tf_dbms = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_datasource_name = new javax . swing . j_label ( ) n tf_datasource_name = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_driver = new javax . swing . j_label ( ) n tf_driver = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_descriptor_key = new javax . swing . j_label ( ) n tf_descriptor_key = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_jdbc_level = new javax . swing . j_label ( ) n tf_jdbc_level = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n tf_password = new org . apache . ojb . tools . mapping . reversedb2 . property_editors . property_editor_j_text_field ( ) n lbl_password = new javax . swing . j_label ( ) n lbl_protocol = new	0
Q_428	build an os dependent command line around the give executable name relative path	C_428_2	public static void wtf ( non_null string message , nullable object . args ) { n printer . wtf ( message , args ) n }	0
Q_429	modify the retrieve transfer_spec and apply an tagstr suffix to	C_429_0	public void check_multi_session_all_global_config ( transfer_specs transfer_specs ) { n if ( aspera_transfer_manager_config . is_multi_session ( ) ) { n for ( transfer_spec transfer_spec transfer_specs . transfer_specs ) { n / / if multisession defined as global use codstr suffix , else check if a number has been specified n transfer_spec . set_remote_host ( update_remote_host ( transfer_spec . get_remote_host ( ) ) ) n } n } n }	1
Q_429	modify the retrieve transfer_spec and apply an tagstr suffix to	C_429_1	public static void log_v ( string local_tag , string msg ) { n if ( get_config ( ) . debug_mode ) { n log . v ( get_config ( ) . log_tag , codstr + local_tag + codstr + msg ) n } n }	0
Q_429	modify the retrieve transfer_spec and apply an tagstr suffix to	C_429_2	public settings_pack send_buffer_watermark ( int value ) { n sp . set_int ( settings_pack . int_types . send_buffer_watermark . swig_value ( ) , value ) n return this n }	0
Q_430	this code be equivalent to the sparql query below	C_430_0	"public void initialize ( ) { n final iri root = rdf . create_iri ( trellis_data_prefix ) n final query q = new query ( ) n q . set_query_select_type ( ) n q . add_result_var ( object ) n n final element_path_block epb = new element_path_block ( ) n epb . add_triple ( triple ( rdf . as_jena_node ( root ) , rdf . as_jena_node ( rdf . type ) , object ) ) n n final element_named_graph ng = new element_named_graph ( rdf . as_jena_node ( prefer_server_managed ) , epb ) n n final element_group elg = new element_group ( ) n elg . add_element ( ng ) n n q . set_query_pattern ( elg ) n n final stream . builder < rdf_term > builder = builder ( ) n rdf_connection . query_select ( q , qs _ > builder . accept ( get_object ( qs ) ) ) n if ( builder . build ( ) . find_first ( ) . is_present ( ) ) { n final literal time = rdf . create_literal ( now ( ) . to_string ( ) , xsd . date_time ) n final iri auth = rdf . create_iri ( trellis_data_prefix + "" final update_request update = new update_request ( ) n n final quad_data_acc sink = new quad_data_acc ( ) n sink . add_quad ( new quad ( rdf . as_jena_node ( prefer_server_managed ) , triple ( rdf . as_jena_node ( root ) , n rdf . as_jena_node"	1
Q_430	this code be equivalent to the sparql query below	C_430_1	public static < q > locking_lazy_var < q > make ( final lazy_var_init < q > init ) { n return new locking_lazy_var < q > ( ) { n protected q init ( ) n { n return init . init ( ) n } n } n }	0
Q_430	this code be equivalent to the sparql query below	C_430_2	public repositories . repository get_repository ( string name ) { n json_rest_client . response response = json_rest_client . do_get ( ) n if ( response . is_ok ( ) ) { n throw new runtime_exception ( jdbc_i18n . invalid_server_response . text ( json_rest_client . url ( ) , response . as_string ( ) ) ) n } n return new repositories ( response . json ( ) ) . get_repository ( name ) n }	0
Q_431	find a child entity under a managed_object_reference in the inventory	C_431_0	public managed_entity find_child ( managed_entity parent , string name ) throws runtime_fault , remote_exception { n if ( parent = = null ) { n throw new illegal_argument_exception ( codstr ) n } n managed_object_reference mor = get_vim_service ( ) . find_child ( get_mor ( ) , parent . get_mor ( ) , name ) n return mor_util . create_exact_managed_entity ( get_server_connection ( ) , mor ) n }	1
Q_431	find a child entity under a managed_object_reference in the inventory	C_431_1	public node get_root ( node node ) n { n n node root = null n n while ( node = null ) n { n root = node n node = get_parent_of_node ( node ) n } n n return root n }	0
Q_431	find a child entity under a managed_object_reference in the inventory	C_431_2	private integer get_number_of_documents ( list < file > input_files ) throws resource_initialization_exception { n string directory = ( string ) get_config_parameter_value ( param_inputdir ) n string filename = directory + codstr + file_base_segmentation n for ( file file input_files ) { n if ( file . get_absolute_path ( ) . equals ( filename ) ) { n try { n string line n buffered_reader bf = new buffered_reader ( new input_stream_reader ( new file_input_stream ( file ) , charset ) ) n while ( ( line = bf . read_line ( ) ) = null ) { n string doc_name = ( line . split ( codstr ) ) [ codint ] n if ( ( filenames . contains ( doc_name ) ) ) { n filenames . add ( doc_name ) n } n } n bf . close ( ) n } catch ( io_exception e ) { n throw new resource_initialization_exception ( e ) n } n } n } n int doc_counter = filenames . size ( ) n return doc_counter n }	0
Q_432	3 resolve weak type	C_432_0	private void resolve_weak_types ( int start , int limit , byte level , byte sor , byte eor ) { n n / / rule w1 . n / / changes all ns_ms . n byte preceeding_character_type = sor n for ( int i = start i < limit + + i ) { n byte t = result_types [ i ] n if ( t = = nsm ) { n result_types [ i ] = preceeding_character_type n } else { n preceeding_character_type = t n } n } n n / / rule w2 . n / / en does not change at the start of the run , because sor = al . n for ( int i = start i < limit + + i ) { n if ( result_types [ i ] = = en ) { n for ( int j = i _ codint j > = start _ j ) { n byte t = result_types [ j ] n if ( t = = l t = = r t = = al ) { n if ( t = = al ) { n result_types [ i ] = an n } n break n } n } n } n } n n / / rule w3 . n for ( int i = start i < limit + + i ) { n if ( result_types [ i ] = = al ) { n result_types	1
Q_432	3 resolve weak type	C_432_1	override n public void e_unset ( int feature_id ) { n switch ( feature_id ) { n case afplib_package . image_data_data n set_data ( data_edefault ) n return n } n super . e_unset ( feature_id ) n }	0
Q_432	3 resolve weak type	C_432_2	protected int calculate_buffer_size ( long max_chunk_size ) { n final int kb = codint n n / / ensure max_chunk_size falls on codint _ kb boundaries . n if ( max_chunk_size kb = codint ) { n string m = codstr + kb + codstr + max_chunk_size n log . error ( m ) n throw new dura_cloud_runtime_exception ( m ) n } n n / / find maximum block factor less than or equal to codint _ kb . n long size = max_chunk_size n for ( int i = codint i < = max_chunk_size i + + ) { n / / max_chunk_size must be divisible by buffer size n if ( ( max_chunk_size i = = codint ) ( ( max_chunk_size / i ) < = ( codint * kb ) ) ) { n size = max_chunk_size / i n break n } n } n n log . debug ( codstr + size + codstr + max_chunk_size ) n return ( int ) size n }	0
Q_433	write the beginning of the field result area	C_433_0	private void write_field_result_begin ( final output_stream result ) throws io_exception n { n result . write ( open_group ) n result . write ( field_result ) n result . write ( delimiter ) n }	1
Q_433	write the beginning of the field result area	C_433_1	private int get_port ( ) { n string port = get_ganglia_config ( args . get_port ( ) , ganglia , codstr , n default_port ) n return integer . parse_int ( port ) n }	0
Q_433	write the beginning of the field result area	C_433_2	private boolean contains_equality_right_specific_variable ( n immutable_substitution < ? extends variable_or_ground_term > descending_substitution , n iq_tree left_child , iq_tree right_child ) { n n immutable_set < variable > left_variables = left_child . get_variables ( ) n immutable_set < variable > right_variables = right_child . get_variables ( ) n immutable_set < variable > domain = descending_substitution . get_domain ( ) n immutable_collection < ? extends variable_or_ground_term > range = descending_substitution . get_immutable_map ( ) . values ( ) n n return right_variables . stream ( ) n . filter ( v _ > left_variables . contains ( v ) ) n . any_match ( v _ > ( domain . contains ( v ) n ( is_fresh_variable ( descending_substitution . get ( v ) , left_variables , right_variables ) ) ) n / / the domain of the substitution is assumed not to contain fresh variables n / / ( normalized before ) n range . contains ( v ) ) n }	0
Q_434	escape html xml unsafe character for the pcdata section	C_434_0	public static string escape ( string v ) { n if ( v = = null ) return null n n string_builder buf = new string_builder ( v . length ( ) + codint ) n for ( int i = codint i < v . length ( ) i + + ) { n char ch = v . char_at ( i ) n if ( ch = = codstr ) n buf . append ( codstr ) n else n if ( ch = = codstr ) n buf . append ( codstr ) n else n if ( ch = = codstr ) n buf . append ( codstr ) n else n buf . append ( ch ) n } n if ( buf . length ( ) = = v . length ( ) ) return v / / unmodified n return buf . to_string ( ) n }	1
Q_434	escape html xml unsafe character for the pcdata section	C_434_1	override n public data_set next ( ) { n if ( iter . has_next ( ) passes < num_passes ) { n passes + + n batch = codint n log . info ( codstr + passes + codstr + batch ) n iter . reset ( ) n } n batch + + n n data_set next = iter . next ( ) n if ( pre_processor = null ) n pre_processor . pre_process ( next ) n return next n }	0
Q_434	escape html xml unsafe character for the pcdata section	C_434_2	override n public final string to_local_string ( final date p_date , n final map < string , object > p_add_param ) throws exception { n return this . date_format_log . format ( p_date ) n }	0
Q_435	acknowledge the message to the streaming cluster	C_435_0	public void ack ( ) throws io_exception { n string ack_subject n boolean is_manual_ack n streaming_connection_impl sc n / / look up subscription n sub . r_lock ( ) n try { n ack_subject = sub . get_ack_inbox ( ) n is_manual_ack = sub . get_options ( ) . is_manual_acks ( ) n sc = sub . get_connection ( ) n } finally { n sub . r_unlock ( ) n } n n / / check for error conditions . n if ( sc = = null ) { n throw new illegal_state_exception ( nats_streaming . err_bad_subscription ) n } n if ( is_manual_ack ) { n throw new illegal_state_exception ( streaming_connection_impl . err_manual_ack ) n } n n / / ack here . n ack ack = ack . new_builder ( ) . set_subject ( get_subject ( ) ) . set_sequence ( get_sequence ( ) ) . build ( ) n sc . get_nats_connection ( ) . publish ( ack_subject , ack . to_byte_array ( ) ) n }	1
Q_435	acknowledge the message to the streaming cluster	C_435_1	public static string get_column_name ( entity_operator entity_operator , class < ? > clazz , property_desc pd , name_converter name_converter ) { n column_info column = entity_operator . get_column_info ( clazz , pd , name_converter ) n if ( column = null ) { n return column . name n } else { n return name_converter . property_to_column ( pd . get_property_name ( ) ) n } n }	0
Q_435	acknowledge the message to the streaming cluster	C_435_2	"public storage_object_metadata create_storage_metadata_obj ( stage_info . stage_type stage_type ) n { n switch ( stage_type ) n { n case s3 n return new s3_object_metadata ( ) n n case azure n return new azure_object_metadata ( ) n n default n / / an unsupported remote storage client type was specified n / / we don codstr unsupported stage type specified "" n + stage_type . name ( ) ) n } n }"	0
Q_436	create an active connection to a nats stream server	C_436_0	public streaming_connection create_connection ( ) throws io_exception , interrupted_exception { n streaming_connection_impl conn = new streaming_connection_impl ( cluster_id , client_id , options ( ) ) n conn . connect ( ) n return conn n }	1
Q_436	create an active connection to a nats stream server	C_436_1	override n public final void handle ( final map < string , object > p_req_vars , n final i_request_data p_request_data ) throws exception { n string processor_name = p_request_data . get_parameter ( codstr ) n if ( processor_name = = null ) { n / / w_handler_and_jsp requires handle null request n return n } n i_processor proc = this . processors_factory . lazy_get ( p_req_vars , processor_name ) n proc . process ( p_req_vars , p_request_data ) n }	0
Q_436	create an active connection to a nats stream server	C_436_2	public static storage_resource_id from_object_name ( string object_name , long generation_id ) { n matcher matcher = object_name_in_gcs_pattern . matcher ( object_name ) n check_argument ( matcher . matches ( ) , codstr s codstr , object_name ) n n string bucket_name = matcher . group ( codint ) n string relative_path = matcher . group ( codint ) n if ( bucket_name = = null ) { n check_argument ( generation_id = = unknown_generation_id , n codstr s codstr s codstr , generation_id , object_name ) n return root n } else if ( relative_path = null ) { n return new storage_resource_id ( bucket_name , relative_path , generation_id ) n } n check_argument ( generation_id = = unknown_generation_id , n codstr s codstr s codstr , generation_id , object_name ) n return new storage_resource_id ( bucket_name ) n }	0
Q_437	add value to the current array	C_437_0	public json_navi < t > add ( object . values ) { n array ( ) n if ( failure ) n return this n list < object > list = a ( current ) n for ( object o values ) n list . add ( o ) n return this n }	1
Q_437	add value to the current array	C_437_1	"override n public void prepare_paint_component ( final request request ) { n if ( this . is_initialised ( ) ) { n / / give the repeater the list of data to display . n product_repeater . set_data ( fetch_product_data ( ) ) n n / / remember that we "" ve done the initialisation . n this . set_initialised ( true ) n } n }"	0
Q_437	add value to the current array	C_437_2	public int character_at ( int at ) throws json_exception { n int c = get ( at ) n if ( ( c codint ) = = codint ) { n return c n } n int character n int c1 = get ( at + codint ) n if ( ( c1 codint ) = = codint ) { n character = ( ( c codint ) < < codint ) c1 n if ( character > codint ) { n return character n } n } else { n int c2 = get ( at + codint ) n character = ( ( c codint ) < < codint ) ( ( c1 codint ) < < codint ) c2 n if ( ( c2 codint ) = = codint character > codint character < = codint n ( character < codint character > codint ) ) { n return character n } n } n throw new json_exception ( codstr + at ) n }	0
Q_438	iterate component directory in order and return full path of first file match	C_438_0	override n public file locate_resource ( string name ) { n for ( int i = codint i < resource_path . length i + + ) { n file fi = new file ( resource_path [ i ] . get_absolute_path ( ) + file . separator + name ) n if ( fi . exists ( ) ) n return fi n } n return null n }	1
Q_438	iterate component directory in order and return full path of first file match	C_438_1	private static json_object get_object ( json_object object , string key ) n throws io_exception { n / / get the existing one n if ( object . contains_key ( key ) ) { n object existing = object . get ( key ) n if ( ( existing instanceof json_object ) ) { n throw new io_exception ( codstr codstr codstr n + codstr ) n } n return ( json_object ) existing n n / / or add a new one n } else { n json_object new_object = new json_object ( ) n object . put ( key , new_object ) n return new_object n } n }	0
Q_438	iterate component directory in order and return full path of first file match	C_438_2	public base_data_json_field_bo set_data ( string data ) { n set_attribute ( attr_data , data = null ? data . trim ( ) codstr ) n return this n }	0
Q_439	return wether field be in changedfieldlist and old value of this field	C_439_0	public pair < boolean , object > has_value_changed ( string field_id ) { n for ( int i = codint i < changed_fields . length i + + ) { n string changed_field = changed_fields [ i ] n if ( field_id . equals ( changed_field ) ) { n return new pair < > ( true , old_values [ i ] ) n } n } n return new pair < > ( false , null ) n }	1
Q_439	return wether field be in changedfieldlist and old value of this field	C_439_1	static long multiply ( long size , long factor , long over ) { n if ( size > over ) { n return long . max_value n } n if ( size < _ over ) { n return long . min_value n } n return size * factor n }	0
Q_439	return wether field be in changedfieldlist and old value of this field	C_439_2	public void set_pdu_processor_degree ( int pdu_processor_degree ) throws illegal_state_exception { n if ( get_session_state ( ) . equals ( session_state . closed ) ) { n throw new illegal_state_exception ( n codstr ) n } n this . pdu_processor_degree = pdu_processor_degree n }	0
Q_440	return a new state object that represent the current value for the menu	C_440_0	override n public menu_state < integer > new_menu_state ( integer value , boolean changed , boolean active ) { n return new integer_menu_state ( changed , active , value ) n }	1
Q_440	return a new state object that represent the current value for the menu	C_440_1	"override n public boolean next_key_value ( ) throws io_exception , interrupted_exception { n / / since the lzop codec reads everything in lzo blocks , we can codstr n "" ) { n hadoop_compat . increment_counter ( empty_lines_counter , codint ) n continue n } n if ( line_ . get_length ( ) > = max_line_len ) { n hadoop_compat . increment_counter ( truncated_lines_counter , codint ) n } n n m proto_value = null n n error_tracker . inc_records ( ) n n try { n proto_value = converter_ . from_bytes ( base64_codec . decode_fast ( line_ . get_bytes ( ) , line_ . get_length ( ) ) ) n } catch ( decode_exception t1 ) { n hadoop_compat . increment_counter ( record_errors_counter , codint ) n error_tracker . inc_errors ( t1 ) n } n n if ( proto_value = = null ) { n hadoop_compat . increment_counter ( records_skipped_counter , codint ) n continue n } n n hadoop_compat . increment_counter ( records_read_counter , codint ) n value_ . set ( proto_value ) n return true n } n n return false n }"	0
Q_440	return a new state object that represent the current value for the menu	C_440_2	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < result_type > create_result ( result_type value ) { n return new jaxb_element < result_type > ( _result_qname , result_type . class , null , value ) n }	0
Q_441	add a new test case generator for the give system function	C_441_0	public void add_generator ( string function_name , i_test_case_generator generator ) n { n string function_key = get_function_key ( function_name ) n if ( generators_ . contains_key ( function_key ) ) n { n throw new illegal_argument_exception ( codstr + function_name ) n } n n if ( generator = null ) n { n generators_ . put ( function_key , generator ) n } n }	1
Q_441	add a new test case generator for the give system function	C_441_1	public static mini_sat glucose ( final formula_factory f ) { n return new mini_sat ( f , solver_style . glucose , new mini_sat_config . builder ( ) . build ( ) , new glucose_config . builder ( ) . build ( ) ) n }	0
Q_441	add a new test case generator for the give system function	C_441_2	public static boolean intersect_circle_circle ( float a_x , float a_y , float radius_squared_a , float b_x , float b_y , float radius_squared_b , vector3f intersection_center_and_hl ) { n float d_x = b_x _ a_x , d_y = b_y _ a_y n float dist_squared = d_x * d_x + d_y * d_y n float h = numberf + ( radius_squared_a _ radius_squared_b ) / dist_squared n float r_i = ( float ) math . sqrt ( radius_squared_a _ h * h * dist_squared ) n if ( r_i > = numberf ) { n intersection_center_and_hl . x = a_x + h * d_x n intersection_center_and_hl . y = a_y + h * d_y n intersection_center_and_hl . z = r_i n return true n } n return false n }	0
Q_442	connect the connection	C_442_0	override n public synchronized void connect ( ) throws io_exception { n logger . debug ( codstr ) n authentication auth = authentication n if ( updater = null ) { n authentication updated_auth = updater . update_authentication ( authentication ) n if ( updated_auth = null auth = updated_auth ) { n auth = updated_auth n } n } n try { n client = new j_sch ( ) n if ( auth . get_private_key_phrase ( ) = = null ) { n client . add_identity ( auth . get_private_key_file ( ) . get_absolute_path ( ) , n auth . get_private_key_file_password ( ) ) n } else { n client . add_identity ( auth . get_username ( ) , auth . get_private_key_phrase ( ) , null , n auth . get_private_key_file_password ( ) . get_bytes ( codstr ) ) n } n client . set_host_key_repository ( new blind_host_key_repository ( ) ) n connect_session = client . get_session ( auth . get_username ( ) , host , port ) n connect_session . set_config ( codstr , codstr ) n if ( proxy = null proxy . is_empty ( ) ) { n string [ ] splitted = proxy . split ( codstr ) n if ( splitted . length > codint splitted [ codint ] . length ( ) > = proto_host_delim_length ) { n string pproto = splitted [ codint ] n string phost = splitted [ codint ] . substring ( codint ) n int pport =	1
Q_442	connect the connection	C_442_1	public static int get_int ( string prop , dataset_descriptor descriptor , n int default_value ) { n long as_long = get_long ( prop , descriptor , default_value ) n if ( as_long > integer . max_value ) { n return default_value n } else { n return ( int ) as_long n } n }	0
Q_442	connect the connection	C_442_2	public elements get_elements_by_attribute_value_ending ( string key , string value_suffix ) { n return collector . collect ( new evaluator . attribute_with_value_ending ( key , value_suffix ) , this ) n }	0
Q_443	append all element of code array code to buffer separate by delimiter	C_443_0	public static < t > string_builder append_array ( string_builder sb , t [ ] array , string delimiter ) { n n boolean first_run = true n n for ( t elem array ) { n if ( first_run ) n sb . append ( delimiter ) n else n first_run = false n n sb . append ( elem . to_string ( ) ) n } n n return sb n n }	1
Q_443	append all element of code array code to buffer separate by delimiter	C_443_1	public final feature_source < ? , ? > get_feature_source ( n nonnull final mf_client_http_request_factory http_request_factory , n nonnull final mapfish_map_context map_context ) { n if ( this . feature_source = = null ) { n this . feature_source = this . feature_source_supplier . load ( http_request_factory , map_context ) n } n return this . feature_source n }	0
Q_443	append all element of code array code to buffer separate by delimiter	C_443_2	public void add_headers_to_response ( http_servlet_response the_http_response ) { n string powered_by_header = create_powered_by_header ( ) n if ( is_not_blank ( powered_by_header ) ) { n the_http_response . add_header ( constants . powered_by_header , powered_by_header ) n } n }	0
Q_444	create a new instance for the give type	C_444_0	public static < t extends query < ? , r > , r extends object > fluent_answer < t , r > create_answer ( class < t > type ) { n return new fluent_answer < t , r > ( type ) n }	1
Q_444	create a new instance for the give type	C_444_1	suppress_warnings ( codstr ) n static string escape ( string str ) { n string_builder builder = new string_builder ( ) n for ( int i = codint i < str . length ( ) + + i ) { n char c = str . char_at ( i ) n switch ( c ) { n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n case codstr builder . append ( codstr ) break n default n if ( c < = codstr c > codstr ) { n builder . append ( string . format (	0
Q_444	create a new instance for the give type	C_444_2	public synchronized void update_master_conf ( property_key key , nullable string value ) { n m_masters . for_each ( master _ > master . update_conf ( key , value ) ) n }	0
Q_445	editor_fold gen_end init_components	C_445_0	private void bt_details_action_performed ( java . awt . event . action_event evt ) / / gen _ first event_bt_details_action_performed n { / / gen _ headerend event_bt_details_action_performed n n sp_details . set_visible ( bt_details . is_selected ( ) ) n pack ( ) n validate ( ) n }	1
Q_445	editor_fold gen_end init_components	C_445_1	"public void activated ( pipe pipe ) n { n / / move the pipe from passive to eligible state . n collections . swap ( pipes , pipes . index_of ( pipe ) , eligible ) n eligible + + n n / / if there "" s no message being sent at the moment , move it to n / / the active state . n if ( more ) { n collections . swap ( pipes , eligible _ codint , active ) n active + + n } n }"	0
Q_445	editor_fold gen_end init_components	C_445_2	public list < query_hint < named_query < t get_all_hint ( ) n { n list < query_hint < named_query < t list = new array_list < query_hint < named_query < t ( ) n list < node > node_list = child_node . get ( codstr ) n for ( node node node_list ) n { n query_hint < named_query < t type = new query_hint_impl < named_query < t ( this , codstr , child_node , node ) n list . add ( type ) n } n return list n }	0
Q_446	split a time annotation s	C_446_0	private string get_time_position ( string time , boolean first ) n { n n if ( time = = null ) n { n return codstr n } n n string [ ] splitted_time_anno = time . split ( codstr ) n if ( splitted_time_anno . length > codint ) n { n if ( first ) n { n return splitted_time_anno [ codint ] . equals ( codstr ) ? codstr n splitted_time_anno [ codint ] n } n else n { n return splitted_time_anno [ codint ] . equals ( codstr ) ? codstr n splitted_time_anno [ codint ] n } n } n n if ( first ) n { n return splitted_time_anno [ codint ] . equals ( codstr ) ? codstr splitted_time_anno [ codint ] n } n n / / if we want the end time , return undefined . n return codstr n }	1
Q_446	split a time annotation s	C_446_1	suppress_warnings ( codstr ) n protected synchronized string replace_prop ( file source_file , int source_line , string text , n maven_project project , replacement_type replacement_type ) throws mojo_execution_exception { n string result = text n final pattern p = build_macro_pattern_with_group ( macros . macro_prop ) n final matcher m = p . matcher ( text ) n boolean has_result = m . find ( ) n n properties props = null n if ( project = null ) { n props = project . get_properties ( ) n } n n if ( has_result ) { n final string_buffer sb = new string_buffer ( ) n final string_builder replacement = new string_builder ( ) n string prop_name n do { n prop_name = m . group ( codint ) n if ( prop_name = null ) { n prop_name = prop_name . trim ( ) n if ( prop_name . length ( ) > codint ) { n replacement . set_length ( codint ) n if ( props = null ) { n final string value = props . get_property ( prop_name ) n if ( value = null value . is_empty ( ) ) { n replacement . append ( value ) n } n } n if ( replacement . length ( ) = codint ) { n m . append_replacement ( sb , matcher . quote_replacement ( replacement . to_string ( ) ) ) n } n } else { n get_build_context ( ) . add_message	0
Q_446	split a time annotation s	C_446_2	public void update_character_stream ( string arg0 , reader arg1 , int arg2 ) throws sql_exception { n try { n rset_impl . update_character_stream ( arg0 , arg1 , arg2 ) n } catch ( sql_exception ex ) { n ffdc_filter . process_exception ( ex , codstr , codstr , this ) n throw ws_jdbc_util . map_exception ( this , ex ) n } catch ( null_pointer_exception null_x ) { n / / no ffdc code needed we might be closed . n throw runtime_x_if_not_closed ( null_x ) n } n }	0
Q_447	utility method to make get a view via find_view_by_id more safe simple	C_447_0	"suppress_warnings ( codstr ) n public static < t extends view > t find_view_by_id ( activity context , int id ) { n t view = null n view generic_view = context . find_view_by_id ( id ) n try { n view = ( t ) ( generic_view ) n } catch ( exception ex ) { n string message = codstr t cast view ( codstr ) to a codstr . is actually a codstr . codstr caffeine "" , message ) n throw new class_cast_exception ( message ) n } n n return view n }"	1
Q_447	utility method to make get a view via find_view_by_id more safe simple	C_447_1	public void print_stack_trace ( print_writer writer ) { n if ( get_root_cause ( ) = null ) { n writer . write ( get_message ( ) ) n get_root_cause ( ) . print_stack_trace ( writer ) n } else { n this . print_stack_trace ( writer ) n } n }	0
Q_447	utility method to make get a view via find_view_by_id more safe simple	C_447_2	protected void process_includes ( map < string , string > merge_props , url root_url , string include_props ) { n if ( include_props = = null ) n return n n string props [ ] = include_props . trim ( ) . split ( codstr ) n for ( string pname props ) { n merge_properties ( merge_props , root_url , pname ) n } n }	0
Q_448	close this process if it be not complete yet	C_448_0	override n public final void close ( not_null throwable e ) { n if ( is_process_complete ( ) ) return n process_complete = true n do_close ( e ) n process_completion . try_set_exception ( e ) n after_process ( e ) n }	1
Q_448	close this process if it be not complete yet	C_448_1	private renderer_selection is_renderer_match ( renderer_bean_descriptor < ? > renderer_descriptor , renderable renderable , n renderer_selection best_match ) { n final class < ? extends renderable > renderable_type = renderer_descriptor . get_renderable_type ( ) n if ( reflection_utils . is ( renderable . get_class ( ) , renderable_type ) ) { n if ( best_match = = null ) { n return is_renderer_capable ( renderer_descriptor , renderable , best_match ) n } else { n int hierarchy_distance = reflection_utils . get_hierarchy_distance ( renderable . get_class ( ) , renderable_type ) n n if ( hierarchy_distance = = codint ) { n / / no hierarchy distance n return is_renderer_capable ( renderer_descriptor , renderable , best_match ) n } n n if ( hierarchy_distance < = best_match . get_hierarchy_distance ( ) ) { n / / lower hierarchy distance than best match n return is_renderer_capable ( renderer_descriptor , renderable , best_match ) n } n } n } n return null n }	0
Q_448	close this process if it be not complete yet	C_448_2	static boolean is_right_handed ( node seed , int idx_row , int idx_col ) { n node r = seed . edges [ idx_row ] n node c = seed . edges [ idx_col ] n n double dir_row = math . atan2 ( r . y _ seed . y , r . x _ seed . x ) n double dir_col = math . atan2 ( c . y _ seed . y , c . x _ seed . x ) n n return util_angle . distance_cw ( dir_row , dir_col ) < math . pi n }	0
Q_449	execute an asynchronous head request on the configure uri asynchronous alias to head with additional configuration provide by the	C_449_0	public completable_future < object > head_async ( final consumer < http_config > configuration ) { n return completable_future . supply_async ( ( ) _ > head ( configuration ) , get_executor ( ) ) n }	1
Q_449	execute an asynchronous head request on the configure uri asynchronous alias to head with additional configuration provide by the	C_449_1	public void started_application ( jpa_appl_info appl_info ) n throws runtime_warning / / dnumber n { n final boolean is_trace_on = trace_component . is_any_tracing_enabled ( ) n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . entry ( tc , codstr + appl_info . get_appl_name ( ) ) n n / / to save footprint , if an application does not have any jpa access , remove n / / the unnecessary app_info object from list . n if ( appl_info . get_scope_size ( ) = = codint ) n { n if ( is_trace_on tc . is_debug_enabled ( ) ) n tr . debug ( tc , codstr ) n appl_list . remove ( appl_info . get_appl_name ( ) ) n } n n if ( is_trace_on tc . is_debug_enabled ( ) ) n tr . debug ( tc , codstr + get_sorted_app_names ( ) ) n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . exit ( tc , codstr + appl_info . get_appl_name ( ) ) n }	0
Q_449	execute an asynchronous head request on the configure uri asynchronous alias to head with additional configuration provide by the	C_449_2	public map_view add_label ( final map_label map_label ) { n if ( get_initialized ( ) ) { n if ( logger . is_warn_enabled ( ) ) { n logger . warn ( map_view_not_yet_initialized ) n } n } else { n if ( null = = require_non_null ( map_label ) . get_position ( ) ) { n if ( logger . is_debug_enabled ( ) ) { n logger . debug ( codstr , map_label ) n } n return this n } n final string id = map_label . get_id ( ) n / / synchronize on the map_coordinate_elements map as the cleaning thread accesses this as well n synchronized ( map_coordinate_elements ) { n / / if the label is attached to a marker , only add it when the marker is already added to the map_view n if ( map_label . get_marker ( ) . is_present ( ) map_coordinate_elements . contains_key ( map_label . get_marker ( ) . get ( ) n . get_id ( ) ) ) { n return this n } n if ( map_coordinate_elements . contains_key ( id ) ) { n add_map_coordinate_element ( map_label ) n js_map_view . call ( codstr , id , map_label . get_text ( ) , map_label . get_css_class ( ) , n map_label . get_position ( ) . get_latitude ( ) , map_label . get_position ( ) . get_longitude ( ) , n map_label . get_offset_x ( ) , map_label . get_offset_y ( ) ) n if	0
Q_450	add content to a name section	C_450_0	public void add_to ( string section , object element ) n { n composite s = ( composite ) sections . get ( section ) n if ( s = = null ) n add ( element ) n else n s . add ( element ) n }	1
Q_450	add content to a name section	C_450_1	public folder copy_folder ( long folder_id , container_destination container_destination , enum_set < folder_copy_inclusion > includes , n enum_set < folder_remap_exclusion > skip_remap , enum_set < copy_exclusion > excludes ) throws smartsheet_exception { n n string path = codstr + folder_id + codstr n hash_map < string , object > parameters = new hash_map < string , object > ( ) n n parameters . put ( codstr , query_util . generate_comma_separated_list ( includes ) ) n parameters . put ( codstr , query_util . generate_comma_separated_list ( skip_remap ) ) n parameters . put ( codstr , query_util . generate_comma_separated_list ( excludes ) ) n n path + = query_util . generate_url ( null , parameters ) n n return this . create_resource ( path , folder . class , container_destination ) n }	0
Q_450	add content to a name section	C_450_2	public void update_document ( string id , document document , string embedded_entity_field_name ) n { n if ( log . is_debug_enabled ( ) ) n { n log . debug ( codstr , document ) n } n n index_writer w = get_index_writer ( ) n try n { n term term = null n if ( embedded_entity_field_name = = null ) n { n term = new term ( indexing_constants . entity_id_field , id ) n } n else n { n term = new term ( embedded_entity_field_name , id ) n } n w . update_document ( term , document ) n n } n catch ( lucene_indexing_exception lie ) n { n log . error ( codstr , lie ) n throw new lucene_indexing_exception ( lie ) n } n catch ( io_exception ioe ) n { n log . error ( codstr , ioe ) n n } n }	0
Q_451	return an ssl_socket_factory that will trust all ssl certificate this be suitable for pass to	C_451_0	public synchronized static ssl_socket_factory get_trusting_ssl_socket_factory ( ) { n if ( socket_factory = null ) return socket_factory n trust_manager [ ] trust_managers = new trust_manager [ ] { new trust_everything_ssl_trust_manager ( ) } n ssl_context sc n try { n sc = ssl_context . get_instance ( codstr ) n sc . init ( null , trust_managers , null ) n } catch ( general_security_exception e ) { n throw new runtime_exception ( codstr , e ) n } n socket_factory = sc . get_socket_factory ( ) n return socket_factory n }	1
Q_451	return an ssl_socket_factory that will trust all ssl certificate this be suitable for pass to	C_451_1	public void start ( ) { n int errors = codint n if ( this . encoder = = null ) { n add_status ( new error_status ( codstr codstr codstr , this ) ) n errors + + n } n n if ( this . output_stream = = null ) { n add_status ( new error_status ( n codstr codstr codstr , this ) ) n errors + + n } n / / only error free appenders should be activated n if ( errors = = codint ) { n super . start ( ) n } n }	0
Q_451	return an ssl_socket_factory that will trust all ssl certificate this be suitable for pass to	C_451_2	private map < string , object > sort_columns ( map < string , object > next ) { n map < string , object > sorted_columns = new linked_hash_map < > ( ) n if ( this . columns = null ) { n for ( string column this . columns ) { n sorted_columns . put ( column , next . get ( column ) ) n } n } n return sorted_columns n }	0
Q_452	this internal method be use as a callback for when the translation	C_452_0	public void translate ( translation_service translation_service ) { n if ( translation_service = = null ) { n description . set_value ( description_key . get_value ( ) ) n return n } n n if ( strings . is_null_or_empty ( description_key . get ( ) ) ) { n description . set_value ( translation_service . translate ( description_key . get ( ) ) ) n } n }	1
Q_452	this internal method be use as a callback for when the translation	C_452_1	suppress_warnings ( codstr ) n public e_list < ifc_applied_value > get_components ( ) { n return ( e_list < ifc_applied_value > ) e_get ( ifc2x3tc1_package . literals . ifc_applied_value_relationship_components , n true ) n }	0
Q_452	this internal method be use as a callback for when the translation	C_452_2	void write_js_file_to_js_dir ( type_element element , element_visitor visitor , string package_path , string fn , string dir ) { n if ( null = dir ) { n try ( writer w = fws . get_file_object_writer ( dir + file . separator_char + codstr , package_path + codstr + fn ) ) { n messager . print_message ( diagnostic . kind . mandatory_warning , codstr + element + codstr + dir ) n element . accept ( visitor , w ) n } catch ( io_exception ioe ) { n messager . print_message ( diagnostic . kind . mandatory_warning , codstr + package_path + codstr + fn ) n } n } n }	0
Q_453	return a valid word base on the length range pass in	C_453_0	"public string get_random_word ( final int min_length , final int max_length ) { n validate_min_max_params ( min_length , max_length ) n n / / special case if we need a single char n if ( max_length = = codint ) { n if ( chance ( codint ) ) { n return codstr n } n return codstr n } n n n / / start from random pos and find the first word of the right size n string [ ] words = content_data_values . get_words ( ) n int pos = random . next_int ( words . length ) n for ( int i = codint i < words . length i + + ) { n int idx = ( i + pos ) words . length n string test = words [ idx ] n if ( test . length ( ) > = min_length test . length ( ) < = max_length ) { n return test n } n } n / / we haven "" t a word for this length so generate one n return get_random_chars ( min_length , max_length ) n }"	1
Q_453	return a valid word base on the length range pass in	C_453_1	public string get_string ( string key ) { n n object obj = get ( key ) n n try { n return ( string ) obj n } catch ( exception e ) { n throw new class_cast_exception ( codstr ) n } n }	0
Q_453	return a valid word base on the length range pass in	C_453_2	public static url matches ( final string pattern ) n { n return new url ( pattern ) { n override n public string to_string ( ) n { n return codstr codstr codstr n } n } n }	0
Q_454	remove all of the element from the list field	C_454_0	public void clear_list_field ( string field_name ) { n object val = get_field_value ( field_name , true ) / / internal n if ( val instanceof list < ? > ) n ( ( list < ? > ) val ) . clear ( ) n else if ( val = null val . get_class ( ) . is_array ( ) ) { n do_field fld = get_domain_object_type ( ) . get_field_by_name ( field_name ) n string ctn = fld . get_component_type_name ( ) n class < ? > clazz n try { n clazz = get_domain_object_type ( ) . get_domain_model ( ) . get_class_for_name ( ctn ) n try_init_list_or_array ( null , fld , clazz ) n } catch ( class_not_found_exception e ) { n throw new runtime_exception ( e ) n } n } else { n if ( get_domain_object_type ( ) . get_field_by_name ( field_name ) . is_list_or_array ( ) ) n throw new runtime_exception ( codstr + field_name + codstr ) n if ( val = = null ) n throw new runtime_exception ( codstr + field_name + codstr ) n } n }	1
Q_454	remove all of the element from the list field	C_454_1	conditional_on_expression ( codstr { joinfaces . primefaces . uploader } codstr commons codstr ) n bean n public servlet_context_initializer primefaces_file_upload_servlet_context_initializer ( multipart_config_element multipart_config_element ) { n return servlet_context _ > { n servlet_registration servlet_registration = servlet_context . get_servlet_registration ( faces_servlet_name ) n if ( servlet_registration instanceof servlet_registration . dynamic ) { n ( ( servlet_registration . dynamic ) servlet_registration ) . set_multipart_config ( multipart_config_element ) n } n } n }	0
Q_454	remove all of the element from the list field	C_454_2	"public static filter_support_status new_unknown_filter_type ( filter unknown_filter_type ) { n return new filter_support_status ( n false , n string . format ( n codstr t know how to adapt filter class codstr "" , unknown_filter_type . get_class ( ) ) ) n }"	0
Q_455	param name name of the property to set	C_455_0	override n public boolean set_property ( string name , object value ) n { n boolean ok = m_config . set_property ( name , value ) n / * to make [ wstx _ codint ] work fully dynamically ( i . e . allow n * setting base_url after stream reader has been constructed ) n * need to force n * / n if ( ok wstx_input_properties . p_base_url . equals ( name ) ) { n / / easiest to just access from config may come in as a string etc n m_input . override_source ( m_config . get_base_url ( ) ) n } n return ok n }	1
Q_455	param name name of the property to set	C_455_1	public final flux < t > share ( ) { n return on_assembly ( new flux_ref_count < > ( n new flux_publish < > ( this , queues . small_buffer_size , queues . small ( ) ) , codint ) n ) n }	0
Q_455	param name name of the property to set	C_455_2	public static iterable < box_device_pin . info > get_enterprice_device_pins ( final box_api_connection api , string enterprise_id , n string . fields ) { n return get_enterprice_device_pins ( api , enterprise_id , devices_default_limit , fields ) n }	0
Q_456	copy the give tree of t to copy_type start at the root node	C_456_0	public static < t , copy_type > copy_type copy_root_out ( tree_def < t > def , t root , bi_function < t , copy_type , copy_type > mapper ) { n list < t > children = def . children_of ( root ) n copy_type copy_root = mapper . apply ( root , null ) n copy_mutable_recurse ( def , root , children , copy_root , mapper ) n return copy_root n }	1
Q_456	copy the give tree of t to copy_type start at the root node	C_456_1	javax . xml . transform . templates process_from_node ( node node , string system_id ) n throws transformer_configuration_exception n { n n m_do_msystem_id = system_id n n return process_from_node ( node ) n }	0
Q_456	copy the give tree of t to copy_type start at the root node	C_456_2	private static file_system get_jar_fs ( path jar_file ) throws io_exception { n path key = jar_file . to_absolute_path ( ) n n synchronized ( zip_filesystems ) { n fs_wrapper fs = zip_filesystems . get ( key ) n if ( fs = = null ) { n fs = new fs_wrapper ( file_systems . new_file_system ( key , null ) , key ) n fs . incr_ref_count ( ) n n zip_filesystems . put ( key , fs ) n } else { n fs . incr_ref_count ( ) n } n n return fs n } n }	0
Q_457	append substring to string_builder	C_457_0	public static void append ( string_builder buf , string s , int offset , int length ) { n synchronized ( buf ) { n int end = offset + length n for ( int i = offset i < end i + + ) { n if ( i > = s . length ( ) ) n break n buf . append ( s . char_at ( i ) ) n } n } n }	1
Q_457	append substring to string_builder	C_457_1	protected void on_url_connection_prepared ( final context context , final url_connection url_connection ) { n if ( content_type = null ) { n url_connection . add_request_property ( codstr , content_type ) n } n if ( content_language = null ) { n url_connection . add_request_property ( codstr , content_language ) n } n url_connection . add_request_property ( codstr , io_utils . encoding_gzip ) n url_connection . add_request_property ( codstr , build_user_agent ( context ) ) n n if ( headers = null ) { n for ( string name headers . key_set ( ) ) { n url_connection . add_request_property ( name , headers . get_string ( name ) ) n } n } n }	0
Q_457	append substring to string_builder	C_457_2	public boolean unsuspend_cassandra_host ( cassandra_host cassandra_host ) { n h_client_pool pool = suspended_host_pools . remove ( cassandra_host ) n boolean readded = pool = null n if ( readded ) { n boolean already_there = host_pools . put_if_absent ( cassandra_host , pool ) = null n if ( already_there ) { n log . error ( codstr , cassandra_host ) n pool . shutdown ( ) n } n } n listener_handler . fire_on_un_suspend_host ( cassandra_host , readded ) n log . info ( codstr , readded , cassandra_host ) n return readded n }	0
Q_458	handle a connect response	C_458_0	private void handle_connect_response ( connect_response response , throwable error , completable_future < connection > future ) { n if ( open ) { n if ( error = = null ) { n logger . trace ( codstr , id , response ) n / / if the connection was successfully created , immediately send a keep _ alive request n / / to the server to ensure we maintain our session and get an updated list of server addresses . n if ( response . status ( ) = = response . status . ok ) { n selector . reset ( response . leader ( ) , response . members ( ) ) n future . complete ( connection ) n } else { n connect ( future ) n } n } else { n logger . debug ( codstr , id , error ) n connect ( future ) n } n } n }	1
Q_458	handle a connect response	C_458_1	public final text_builder p ( int i ) { n if ( null = _buffer ) _append ( i ) n else _caller . p ( i ) n return this n }	0
Q_458	handle a connect response	C_458_2	protected void set_array_value ( final prepared_statement statement , final int i , connection connection , object [ ] array ) n throws sql_exception { n if ( array = = null ( is_empty_stored_as_null ( ) array . length = = codint ) ) { n statement . set_null ( i , types . array ) n } else { n statement . set_array ( i , connection . create_array_of ( get_dialect_primitive_name ( ) , array ) ) n } n }	0
Q_459	load a segment	C_459_0	public segment load_segment ( long segment_id , long segment_version ) { n switch ( storage . level ( ) ) { n case memory n return load_memory_segment ( segment_id , segment_version ) n case mapped n return load_mapped_segment ( segment_id , segment_version ) n case disk n return load_disk_segment ( segment_id , segment_version ) n default n throw new assertion_error ( ) n } n }	1
Q_459	load a segment	C_459_1	private static < t > t first_not_null ( t o1 , t o2 ) { n n if ( o1 = null ) { n return o1 n } n return o2 n }	0
Q_459	load a segment	C_459_2	private cms_ugc_session create_session ( cms_object cms , cms_ugc_configuration config ) throws cms_ugc_exception { n n if ( get_queue ( config ) . wait_for_slot ( ) ) { n try { n return new cms_ugc_session ( m_admin_cms , cms , config ) n } catch ( cms_exception e ) { n log . error ( e . get_localized_message ( ) , e ) n throw new cms_ugc_exception ( e ) n } n } else { n string message = messages . get ( ) . container ( messages . err_wait_queue_exceeded_0 ) . key ( n cms . get_request_context ( ) . get_locale ( ) ) n throw new cms_ugc_exception ( cms_ugc_constants . error_code . err_max_queue_length_exceeded , message ) n } n }	0
Q_460	create a json value from a file	C_460_0	public json read_from_file ( string path ) { n return read_from_stream ( thread . current_thread ( ) n . get_context_class_loader ( ) n . get_resource_as_stream ( path ) ) n }	1
Q_460	create a json value from a file	C_460_1	public static void clear_temp_files ( ) { n string user_folder_path = get_user_folder_path ( false ) n file file = new file ( user_folder_path ) n delete_dir ( file ) n }	0
Q_460	create a json value from a file	C_460_2	protected void process_request ( string requested_path , http_servlet_request request , http_servlet_response response , n bundle_hashcode_type bundle_hashcode_type ) throws io_exception { n n boolean write_response_header = false n boolean valid_bundle = true n if ( jawr_config . is_debug_mode_on ( ) jawr_config . is_strict_mode ( ) n bundle_hashcode_type . equals ( bundle_hashcode_type . invalid_hashcode ) ) { n valid_bundle = false n } n n if ( this . jawr_config . is_debug_mode_on ( ) null = request . get_parameter ( generation_param ) ) n requested_path = request . get_parameter ( generation_param ) n n / / if debug mode is off , check for if _ modified _ since and if _ none _ match n / / headers and set response caching headers . n if ( this . jawr_config . is_debug_mode_on ( ) ) { n / / if a browser checks for changes , always respond codstr . n if ( valid_bundle ( null = request . get_header ( if_modified_since_header ) n null = request . get_header ( if_none_match_header ) ) ) { n response . set_status ( http_servlet_response . sc_not_modified ) n if ( logger . is_debug_enabled ( ) ) n logger . debug ( codstr not modified codstr ) n return n } n n if ( valid_bundle ) { n / / add caching headers n set_response_headers ( response ) n } else { n n write_response_header = illegal_bundle_request_handler . write_response_header ( requested_path , request , response ) n if ( write_response_header ) { n	0
Q_461	obtain whether the dialog be header should be show or not from a specific theme	C_461_0	private void obtain_show_header ( style_res final int theme_resource_id ) { n typed_array typed_array = get_context ( ) . get_theme ( ) . obtain_styled_attributes ( theme_resource_id , n new int [ ] { r . attr . material_dialog_show_header } ) n show_header ( typed_array . get_boolean ( codint , false ) ) n }	1
Q_461	obtain whether the dialog be header should be show or not from a specific theme	C_461_1	public n appender get_appender ( string name ) { n if ( name = = null ) n return null n n for ( appender appender appender_list ) { n if ( name . equals ( appender . get_name ( ) ) ) n return appender n } n return null n }	0
Q_461	obtain whether the dialog be header should be show or not from a specific theme	C_461_2	private split prepare ( ) { n if ( sql = null sql . equals ( codstr ) ) { n sql_normalizer = new sql_normalizer ( sql ) n sql_cmd_label = prefix + codstr + sql_normalizer . get_type ( ) n return start_split ( ) n } else { n return null n } n }	0
Q_462	unregisters and shut down the vert	C_462_0	invalidate n public void stop ( ) throws interrupted_exception { n unregister_quietly ( vertx_registration ) n unregister_quietly ( bus_registration ) n count_down_latch latch = new count_down_latch ( codint ) n vertx . close ( v _ > latch . count_down ( ) ) n latch . await ( ) n vertx = null n }	1
Q_462	unregisters and shut down the vert	C_462_1	symbol find_type ( env < attr_context > env , name name ) { n if ( name = = names . empty ) n return type_not_found / / do not allow inadvertent codstr of anonymous types n symbol best_so_far = type_not_found n symbol sym n boolean static_only = false n for ( env < attr_context > env1 = env env1 . outer = null env1 = env1 . outer ) { n if ( is_static ( env1 ) ) static_only = true n / / first , look for a type variable and the first member type n final symbol tyvar = find_type_var ( env1 , name , static_only ) n sym = find_immediate_member_type ( env1 , env1 . encl_class . sym . type , n name , env1 . encl_class . sym ) n n / / return the type variable if we have it , and have no n / / immediate member , or the type variable is for a method . n if ( tyvar = type_not_found ) { n if ( env . base_clause sym = = type_not_found n ( tyvar . kind = = typ tyvar . exists ( ) n tyvar . owner . kind = = mth ) ) { n return tyvar n } n } n n / / if the environment is a class def , finish up , n / / otherwise , do the entire find_member_type n if ( sym = = type_not_found ) n sym	0
Q_462	unregisters and shut down the vert	C_462_2	final void _delete_wal_file_after_processing ( nonnull nonempty final string s_wal_filename ) n { n value_enforcer . not_empty ( s_wal_filename , codstr ) n final file a_wal_file = m_a_io . get_file ( s_wal_filename ) n if ( file_operation_manager . instance . delete_file ( a_wal_file ) . is_failure ( ) ) n { n if ( logger . is_error_enabled ( ) ) n logger . error ( codstr codstr codstr ) n } n else n { n if ( is_silent_mode ( ) ) n if ( logger . is_info_enabled ( ) ) n logger . info ( codstr codstr codstr ) n } n }	0
Q_463	sign a token	C_463_0	override n public string sign_token ( string token ) { n long nonce = system . current_time_millis ( ) n string joined = nonce + codstr + token n return sign ( joined ) + codstr + joined n }	1
Q_463	sign a token	C_463_1	public fox_http_client_builder set_fox_http_interceptors ( map < fox_http_interceptor_type , array_list < fox_http_interceptor fox_http_interceptors ) { n fox_http_client . set_fox_http_interceptors ( fox_http_interceptors ) n return this n }	0
Q_463	sign a token	C_463_2	public void merge_connection_repository ( n connection_repository target_repository , connection_repository source_repository , boolean deep ) n { n list list = source_repository . get_all_descriptor ( ) n for ( iterator iterator = list . iterator ( ) iterator . has_next ( ) ) n { n jdbc_connection_descriptor jcd = ( jdbc_connection_descriptor ) iterator . next ( ) n if ( deep ) n { n / / todo adopt copy / clone methods for metadata classes ? n jcd = ( jdbc_connection_descriptor ) serialization_utils . clone ( jcd ) n } n target_repository . add_descriptor ( jcd ) n } n }	0
Q_464	remove the element with the specify name	C_464_0	public string remove ( final string key ) { n final string result = data . get_value ( key ) n data . remove ( key ) n return result n }	1
Q_464	remove the element with the specify name	C_464_1	static file_output_stream create_file_output_stream ( final file file , final boolean append ) throws io_exception n { n try { n file_output_stream fs = get_instance ( ) . do_privileged ( n new privileged_exception_action < file_output_stream > ( ) { n public file_output_stream run ( ) throws io_exception { n if ( file instanceof generic_output_file ) { n return ( ( generic_output_file ) file ) . create_output_stream ( append ) n } else { n return new file_output_stream ( file , append ) n } n } n } n ) n return fs n } n catch ( privileged_action_exception ex ) { n throw new io_exception ( codstr + file . get_name ( ) , ex ) n } n }	0
Q_464	remove the element with the specify name	C_464_2	static bind_transform get_math_transform ( type_name type_name ) { n if ( big_decimal . class . get_name ( ) . equals ( type_name . to_string ( ) ) ) { n return new big_decimal_bind_transform ( ) n } else if ( big_integer . class . get_name ( ) . equals ( type_name . to_string ( ) ) ) { n return new big_integer_bind_transform ( ) n } n n return null n }	0
Q_465	issue a log message with a level of debug use link java	C_465_0	public void debugv ( string format , object . params ) { n do_log ( level . debug , fqcn , format , params , null ) n }	1
Q_465	issue a log message with a level of debug use link java	C_465_1	public bit_z_kline get_bit_z_kline ( string pair , string type ) throws io_exception { n return bitz . get_kline_result ( pair , type ) . get_data ( ) n }	0
Q_465	issue a log message with a level of debug use link java	C_465_2	public optional < immutable_set < symbol get_optional_file_as_symbol_set ( string param ) n throws io_exception { n if ( is_present ( param ) ) { n return optional n . of ( file_utils . load_symbol_set ( files . as_char_source ( get_existing_file ( param ) , charsets . utf_8 ) ) ) n } else { n return optional . absent ( ) n } n }	0
Q_466	add a filter to end of the filter list	C_466_0	public void add_filter ( final filter new_filter ) { n if ( head_filter = = null ) { n head_filter = new_filter n tail_filter = new_filter n } else { n tail_filter . next = new_filter n tail_filter = new_filter n } n }	1
Q_466	add a filter to end of the filter list	C_466_1	private conversation_receive_listener_error_occurred_invocation allocate_error_occurred_invocation ( connection connection , n conversation_receive_listener listener , n si_connection_lost_exception exception , n int segment_type , n int request_number , n int priority , n conversation conversation ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) sib_tr . entry ( this , tc , codstr , new object [ ] { connection , listener , exception , codstr + segment_type , codstr + request_number , codstr + priority , conversation } ) n conversation_receive_listener_error_occurred_invocation ret_invocation = ( conversation_receive_listener_error_occurred_invocation ) conversation_receive_listener_error_occurred_invocation_pool . remove ( ) n if ( ret_invocation = = null ) n { n ret_invocation = new conversation_receive_listener_error_occurred_invocation ( connection , n listener , n exception , n segment_type , n request_number , n priority , n conversation , n conversation_receive_listener_error_occurred_invocation_pool ) n } n else n { n ret_invocation . reset ( connection , n listener , n exception , n segment_type , n request_number , n priority , n conversation ) n } n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) sib_tr . exit ( this , tc , codstr , ret_invocation ) n return ret_invocation n }	0
Q_466	add a filter to end of the filter list	C_466_2	public boolean set_keep_alive_timeout ( string ip_address , int port , long timeout ) throws exception { n m_bean_server mbean_server = get_m_bean_server ( ) n n set < object_name > query_names = mbean_server . query_names ( new object_name ( codstr ) , null ) n boolean changed = false n for ( object_name object_name query_names ) { n changed = ( boolean ) mbean_server . invoke ( object_name , codstr , new object [ ] { this , ip_address , port , timeout } , new string [ ] { sip_connector . class . get_name ( ) , string . class . get_name ( ) , codstr , codstr } ) n if ( changed ) { n return changed n } n } n return false n }	0
Q_467	set the log level to the specify jul logger	C_467_0	private static void set_jul_level ( java . util . logging . logger logger , string log4j_level_config ) n { n string crumb [ ] = log4j_level_config . split ( codstr ) n if ( crumb . length > codint ) n { n level level = log4j_level_to_jul_level ( crumb [ codint ] . trim ( ) ) n logger . set_level ( level ) n } n }	1
Q_467	set the log level to the specify jul logger	C_467_1	public static entry parse_entry ( final reader rd , final string base_uri , final locale locale ) throws jdom_exception , io_exception , illegal_argument_exception , n feed_exception { n n / / parse entry into jdom tree n final sax_builder builder = new sax_builder ( ) n final document entry_doc = builder . build ( rd ) n final element fetched_entry_element = entry_doc . get_root_element ( ) n fetched_entry_element . detach ( ) n n / / put entry into a jdom document with codstr root so that rome can n / / handle it n final feed feed = new feed ( ) n feed . set_feed_type ( codstr ) n final wire_feed_output wire_feed_output = new wire_feed_output ( ) n final document feed_doc = wire_feed_output . output_j_dom ( feed ) n feed_doc . get_root_element ( ) . add_content ( fetched_entry_element ) n n if ( base_uri = null ) { n feed_doc . get_root_element ( ) . set_attribute ( codstr , base_uri , namespace . xml_namespace ) n } n n final wire_feed_input input = new wire_feed_input ( false , locale ) n final feed parsed_feed = ( feed ) input . build ( feed_doc ) n return parsed_feed . get_entries ( ) . get ( codint ) n }	0
Q_467	set the log level to the specify jul logger	C_467_2	public int bookmark_to_index ( object bookmark ) n { n if ( bookmark = null ) n if ( m_map_cache = null ) n { n for ( int i_row_index = codint i_row_index < m_map_cache . size ( ) i_row_index + + ) n { n object data = m_map_cache . get ( i_row_index ) n if ( data instanceof vector ) n { n object obj_id = ( ( vector ) data ) . get ( codint ) n if ( bookmark . equals ( obj_id ) ) n return i_row_index n } n } n } n return _ codint / / not found n }	0
Q_468	get the format message	C_468_0	override n public string get_formatted_message ( ) { n if ( formatted_message = = null ) { n if ( message = = null ) { n message = get_message ( message_pattern , arg_array , throwable ) n } n formatted_message = message . get_formatted_message ( ) n } n return formatted_message n }	1
Q_468	get the format message	C_468_1	public void configure ( ) throws exception { n n / * * n * expose a res_tful endpoint for ld_path processing n * / n from ( codstr + n codstr + n codstr ) n . route_id ( codstr ) n . route_description ( codstr ) n . choice ( ) n . when ( header ( http_method ) . is_equal_to ( codstr ) ) n . set_header ( content_type ) . constant ( codstr ) n . set_header ( codstr ) . constant ( codstr ) n . to ( codstr ) n / / make sure the required context parameter is present n . when ( not ( and ( header ( codstr ) . is_not_null ( ) , header ( codstr ) . regex ( codstr ) ) ) ) n . set_header ( http_response_code ) . constant ( codint ) n . set_header ( content_type ) . constant ( codstr ) n . transform ( constant ( codstr ) ) n . when ( header ( http_method ) . is_equal_to ( codstr ) ) n . to ( codstr ) n . when ( header ( http_method ) . is_equal_to ( codstr ) ) n . to ( codstr ) n n from ( codstr ) n . route_id ( codstr ) n . choice ( ) n . when ( and ( header ( codstr ) . is_not_null ( ) , header ( codstr ) . regex ( codstr ) ) )	0
Q_468	get the format message	C_468_2	public z_auth allow ( string address ) n { n objects . require_non_null ( address , codstr ) n return send ( allow , address ) n }	0
Q_469	override the visitor to reset the stack for the new method then check if the immutability field be set to immutable and if so report it	C_469_0	override n public void visit_code ( code obj ) { n try { n string signature = signature_utils . get_return_signature ( get_method ( ) . get_signature ( ) ) n if ( signature . starts_with ( values . sig_qualified_class_prefix ) collection_utils . is_list_set_map ( signature_utils . strip_signature ( signature ) ) ) { n stack . reset_for_method_entry ( this ) n im_type = immutability_type . unknown n n super . visit_code ( obj ) n n if ( ( im_type = = immutability_type . immutable ) ( im_type = = immutability_type . possibly_immutable ) ) { n method m = get_method ( ) n statistics . get_statistics ( ) . add_immutability_status ( cls_name , m . get_name ( ) , m . get_signature ( ) , im_type ) n } n } n } catch ( class_not_found_exception cnfe ) { n bug_reporter . report_missing_class ( cnfe ) n } n }	1
Q_469	override the visitor to reset the stack for the new method then check if the immutability field be set to immutable and if so report it	C_469_1	protected boolean is_gzip_eligible ( final http_servlet_request request ) { n / / request parameter name n n if ( request_parameter_name . length ( ) = codint ) { n string force_gzip_string = request . get_parameter ( request_parameter_name ) n n if ( force_gzip_string = null ) { n return converter . get ( ) . to_boolean_value ( force_gzip_string , false ) n } n } n n / / extract uri n n string uri = request . get_request_uri ( ) n n if ( uri = = null ) { n return false n } n n uri = uri . to_lower_case ( ) n n boolean result = false n n / / check uri n n if ( matches = = null ) { / / match = = * n if ( extensions = = null ) { / / extensions = = * n return true n } n / / extension n string extension = file_name_util . get_extension ( uri ) n n if ( extension . length ( ) > codint ) { n extension = extension . to_lower_case ( ) n n if ( string_util . equals_one ( extension , extensions ) = _ codint ) { n result = true n } n } n } else { n if ( wildcards ) { n result = wildcard . match_path_one ( uri , matches ) = _ codint n } else { n for ( string match matches ) {	0
Q_469	override the visitor to reset the stack for the new method then check if the immutability field be set to immutable and if so report it	C_469_2	public void marshall ( stack stack , protocol_marshaller protocol_marshaller ) { n n if ( stack = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( stack . get_arn ( ) , arn_binding ) n protocol_marshaller . marshall ( stack . get_name ( ) , name_binding ) n protocol_marshaller . marshall ( stack . get_description ( ) , description_binding ) n protocol_marshaller . marshall ( stack . get_display_name ( ) , displayname_binding ) n protocol_marshaller . marshall ( stack . get_created_time ( ) , createdtime_binding ) n protocol_marshaller . marshall ( stack . get_storage_connectors ( ) , storageconnectors_binding ) n protocol_marshaller . marshall ( stack . get_redirect_url ( ) , redirecturl_binding ) n protocol_marshaller . marshall ( stack . get_feedback_url ( ) , feedbackurl_binding ) n protocol_marshaller . marshall ( stack . get_stack_errors ( ) , stackerrors_binding ) n protocol_marshaller . marshall ( stack . get_user_settings ( ) , usersettings_binding ) n protocol_marshaller . marshall ( stack . get_application_settings ( ) , applicationsettings_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_470	profile a message_sent event	C_470_0	override n public void message_sent ( next_filter next_filter , io_session session , n write_request write_request ) throws exception { n if ( profile_message_sent ) { n long start = time_now ( ) n next_filter . message_sent ( session , write_request ) n long end = time_now ( ) n message_sent_timer_worker . add_new_duration ( end _ start ) n } else { n next_filter . message_sent ( session , write_request ) n } n }	1
Q_470	profile a message_sent event	C_470_1	override n public orb create_client_orb ( map < string , object > client_props , collection < subsystem_factory > subsystem_factories ) throws config_exception { n return create_orb ( translate_to_client_args ( client_props , subsystem_factories ) , translate_to_client_props ( client_props , subsystem_factories ) ) n }	0
Q_470	profile a message_sent event	C_470_2	public static digest_input_stream wrap_stream ( input_stream in_stream , n algorithm algorithm ) { n message_digest stream_digest = null n try { n stream_digest = message_digest . get_instance ( algorithm . to_string ( ) ) n } catch ( no_such_algorithm_exception e ) { n string error = codstr + n codstr + algorithm . to_string ( ) + n codstr n throw new runtime_exception ( error ) n } n n digest_input_stream wrapped_content = n new digest_input_stream ( in_stream , stream_digest ) n return wrapped_content n }	0
Q_471	start index generation use the database credential in the property	C_471_0	public static void main ( string [ ] args ) n { n n if ( args = = null args . length = codint ) { n system . out n . println ( ( codstr n + codstr n + codstr n + codstr n + codstr n + codstr n + codstr n + codstr n + codstr n + codstr n + codstr ) ) n throw new illegal_argument_exception ( ) n } n else { n properties props = load ( args [ codint ] ) n n database_configuration config = new database_configuration ( ) n n config . set_host ( props . get_property ( codstr ) ) n config . set_database ( props . get_property ( codstr ) ) n config . set_user ( props . get_property ( codstr ) ) n config . set_password ( props . get_property ( codstr ) ) n config . set_language ( language . value_of ( props . get_property ( codstr ) ) ) n n string charset = props . get_property ( codstr ) n n string pagebuffer_string = props . get_property ( codstr ) n int page_buffer n n string max_allowed_packets_string = props . get_property ( codstr ) n long max_allowed_packets n n try { n if ( charset = = null ) { n charset = codstr n } n n if ( pagebuffer_string = null ) { n page_buffer = integer . parse_int ( pagebuffer_string ) n } n else { n page_buffer	1
Q_471	start index generation use the database credential in the property	C_471_1	public void add_source_active_participant ( string user_id , string alt_user_id , string user_name , string network_id , boolean is_requestor ) n { n add_active_participant ( n user_id , n alt_user_id , n user_name , n is_requestor , n collections . singleton_list ( new dicom_active_participant_role_id_codes . source ( ) ) , n network_id ) n }	0
Q_471	start index generation use the database credential in the property	C_471_2	target_api ( build . version_codes . honeycomb ) n public < f extends android . app . fragment > void set_typeface ( f fragment , string_res int str_res_id ) { n set_typeface ( fragment , m_application . get_string ( str_res_id ) ) n }	0
Q_472	as short type array	C_472_0	public static short [ ] as_short_type_array ( list < short > input ) { n short [ ] result = new short [ input . size ( ) ] n n for ( int i = codint i < result . length i + + ) { n result [ i ] = input . get ( i ) n } n n return result n }	1
Q_472	as short type array	C_472_1	guarded_by ( codstr ) n private void update_file_list ( file_list_cache_value file_list ) { n if ( write_async ) { n cache_no_retrieve . put_async ( file_list_cache_key , file_list ) n } n else { n if ( trace ) { n log . tracef ( codstr , get_address ( cache_no_retrieve ) ) n } n cache_no_retrieve . put ( file_list_cache_key , file_list ) n } n }	0
Q_472	as short type array	C_472_2	protected boolean register_all_requests_processed_listener ( notification_listener listener ) throws io_exception { n check_not_null ( listener ) n n synchronized ( listener_lock ) { n if ( all_requests_processed_listener = = null ) { n / / there was a race with the processing of the last outstanding request n if ( requests_not_returned . get ( ) = = codint ) { n return false n } n n all_requests_processed_listener = listener n n return true n } n } n n throw new illegal_state_exception ( codstr ) n }	0
Q_473	experimental index that have bite width of key and value as parameter	C_473_0	public static long_long_index . long_long_u_index create_unique_index ( page_type type , n io_resource_provider storage , int key_size , int val_size ) { n return create_unique_index_sized . create ( type , storage , key_size , val_size ) n }	1
Q_473	experimental index that have bite width of key and value as parameter	C_473_1	string create_key ( cms_relation relation ) { n n return create_key ( relation . get_source_id ( ) , relation . get_target_id ( ) , relation . get_type ( ) . get_name ( ) ) n }	0
Q_473	experimental index that have bite width of key and value as parameter	C_473_2	public static < s extends has_attach_handlers > void fire ( s source , page_state page_state , n jqm_page prev_page , jqm_page next_page ) { n if ( type = null ) { n jqm_page_event event = new jqm_page_event ( page_state , prev_page , next_page ) n source . fire_event ( event ) n } n }	0
Q_474	throw an exception with a message when char_sequence be null	C_474_0	public static void check_not_empty ( char_sequence str , string message ) { n if ( str = = null str . length ( ) = = codint ) { n throw new illegal_argument_exception ( message ) n } n }	1
Q_474	throw an exception with a message when char_sequence be null	C_474_1	visible_for_testing n c create_service_client ( object soap_client , d ads_service_descriptor , s ads_session ) { n return ads_service_client_factory . create ( soap_client , ads_service_descriptor , ads_session ) n }	0
Q_474	throw an exception with a message when char_sequence be null	C_474_2	suppress_warnings ( codstr ) n public < t > macros with ( macro < t > macro ) { n class < ? > type = type . supertype ( macro . class , n type . raw ( macro . get_class ( ) ) ) . parameter ( codint ) . raw_type n return with ( ( class < ? super t > ) type , macro ) n }	0
Q_475	remove a bucket config	C_475_0	private void remove_bucket_config ( final string name ) { n logger . debug ( codstr , name ) n cluster_config cluster = current_config n cluster . delete_bucket_config ( name ) n current_config = cluster n config_observable . on_next ( current_config ) n }	1
Q_475	remove a bucket config	C_475_1	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < abstract_general_operation_parameter_ref_type > create_uses_parameter ( abstract_general_operation_parameter_ref_type value ) { n return new jaxb_element < abstract_general_operation_parameter_ref_type > ( _uses_parameter_qname , abstract_general_operation_parameter_ref_type . class , null , value ) n }	0
Q_475	remove a bucket config	C_475_2	override n protected void write ( log_level level , string correlation_id , exception error , string message ) { n if ( log_level_converter . to_integer ( this . get_level ( ) ) < log_level_converter . to_integer ( level ) ) n return n n string_builder build = new string_builder ( ) n n build . append ( codstr ) n build . append ( correlation_id = null ? correlation_id codstr ) n build . append ( codstr ) n build . append ( log_level_converter . to_string ( level ) ) n build . append ( codstr ) n build . append ( zoned_date_time . now ( zone_id . of ( codstr ) ) . format ( date_time_formatter . iso_offset_date_time ) ) n build . append ( codstr ) n n build . append ( message ) n n if ( error = null ) { n if ( message . length ( ) = = codint ) n build . append ( codstr ) n else n build . append ( codstr ) n n build . append ( compose_error ( error ) ) n } n n string output = build . to_string ( ) n n if ( level = = log_level . fatal level = = log_level . error level = = log_level . warn ) n system . err . println ( output ) n else n system . out . println ( output ) n }	0
Q_476	parse the property of a feature	C_476_0	private void parse_properties ( json_parser jp , object [ ] values ) throws io_exception , sql_exception { n jp . next_token ( ) / / start_object { n while ( jp . next_token ( ) = json_token . end_object ) { n string field_name = table_location . quote_identifier ( jp . get_text ( ) . to_upper_case ( ) , is_h2 ) / / field_name column_name n json_token value = jp . next_token ( ) n if ( value = = json_token . value_string ) { n values [ cached_column_index . get ( field_name ) ] = jp . get_text ( ) n } else if ( value = = json_token . value_true ) { n values [ cached_column_index . get ( field_name ) ] = jp . get_value_as_boolean ( ) n } else if ( value = = json_token . value_false ) { n values [ cached_column_index . get ( field_name ) ] = jp . get_value_as_boolean ( ) n } else if ( value = = json_token . value_number_float ) { n values [ cached_column_index . get ( field_name ) ] = jp . get_value_as_double ( ) n } else if ( value = = json_token . value_number_int ) { n values [ cached_column_index . get ( field_name ) ] = jp . get_big_integer_value ( ) n } else if ( value = = json_token . start_array ) { n array_list < object > array_list = parse_array ( jp ) n values [ cached_column_index . get ( field_name	1
Q_476	parse the property of a feature	C_476_1	suppress_warnings ( codstr ) n protected < t extends i_entity > object get_serializable_object ( t object ) throws fms_exception { n n class < ? > object_class = object . get_class ( ) n string method_name = codstr . concat ( object_class . get_simple_name ( ) ) n object_factory object_entity = new object_factory ( ) n class < ? > object_entity_class = object_entity . get_class ( ) n n method method = null n try { n method = object_entity_class . get_method ( method_name , class . for_name ( object_class . get_name ( ) ) ) n } catch ( exception e ) { n log . error ( codstr , e ) n throw new fms_exception ( codstr , e ) n } n jaxb_element < ? extends i_entity > jaxb_element = null n try { n jaxb_element = ( jaxb_element < ? extends i_entity > ) method . invoke ( object_entity , object ) n } catch ( exception e ) { n log . error ( codstr , e ) n throw new fms_exception ( codstr , e ) n } n n return jaxb_element n }	0
Q_476	parse the property of a feature	C_476_2	public void remove_attribute_builder ( attribute_widget_builder < ? > builder ) { n iterator < attribute_widget_builder < ? iterator = builders . values ( ) . iterator ( ) n while ( iterator . has_next ( ) ) { n attribute_widget_builder < ? > widget_builder = iterator . next ( ) n if ( widget_builder . equals ( builder ) ) { n iterator . remove ( ) n } n } n }	0
Q_477	coordinate of a multi_point be an array of position	C_477_0	private void write ( multi_point points , json_generator gen ) throws io_exception { n gen . write_string_field ( codstr , codstr ) n gen . write_field_name ( codstr ) n write_coordinates ( points . get_coordinates ( ) , gen ) n }	1
Q_477	coordinate of a multi_point be an array of position	C_477_1	public void update_pool_properties ( string pool_id , start_task start_task , n collection < certificate_reference > certificate_references , n collection < application_package_reference > application_package_references , collection < metadata_item > metadata ) n throws batch_error_exception , io_exception { n update_pool_properties ( pool_id , start_task , certificate_references , application_package_references , metadata , null ) n }	0
Q_477	coordinate of a multi_point be an array of position	C_477_2	public list_property_meta_data get_meta_data_or_fail ( final uuid list_id ) throws object_to_id_mapping_exception { n return get_meta_data_or_fail ( ( list < ? > ) object_registry . get_by_id_or_fail ( list_id ) ) n }	0
Q_478	check if a give value represent a valid port number and return an int value represent that port number otherwise throw an exception when an invalid port value be provide	C_478_0	public static int validate_port_number ( string port_string_value ) { n final int port_number n final string_builder exception_message_builder = new string_builder ( ) n exception_message_builder . append ( codstr codstr codstr codstr codstr ) n n try { n port_number = integer . parse_int ( port_string_value ) n if ( ( port_number < = codint ) ( port_number = _ codint ) ) { n throw new illegal_argument_exception ( exception_message_builder . to_string ( ) ) n } n } catch ( number_format_exception e ) { n throw new illegal_argument_exception ( exception_message_builder . to_string ( ) , e ) n } n return port_number n }	1
Q_478	check if a give value represent a valid port number and return an int value represent that port number otherwise throw an exception when an invalid port value be provide	C_478_1	public static int [ ] slice_by_time ( cs_table table , int time_col , date start , date end ) { n if ( end . before ( start ) ) { n throw new illegal_argument_exception ( codstr ) n } n if ( time_col < codint ) { n throw new illegal_argument_exception ( codstr + time_col ) n } n int s = _ codint n int e = _ codint n int i = _ codint n for ( string [ ] col table . rows ( ) ) { n i + + n date d = conversions . convert ( col [ time_col ] , date . class ) n if ( s = = _ codint ( start . before ( d ) start . equals ( d ) ) ) { n s = i n } n if ( e = = _ codint ( end . before ( d ) end . equals ( d ) ) ) { n e = i n break n } n } n return new int [ ] { s , e } n }	0
Q_478	check if a give value represent a valid port number and return an int value represent that port number otherwise throw an exception when an invalid port value be provide	C_478_2	protected list < i_cms_cmis_rendition_provider > get_rendition_providers ( cms_cmis_rendition_filter filter ) { n n list < i_cms_cmis_rendition_provider > result = new array_list < i_cms_cmis_rendition_provider > ( ) n for ( i_cms_cmis_rendition_provider provider m_rendition_providers . values ( ) ) { n string mimetype = provider . get_mime_type ( ) n string kind = provider . get_kind ( ) n if ( filter . accept ( kind , mimetype ) ) { n result . add ( provider ) n } n } n return result n }	0
Q_479	perform a range scan and update the global scan status with the scan result	C_479_0	private boolean async_range_scan ( scan_range_task task ) { n final string scan_id = task . get_scan_id ( ) n final int task_id = task . get_id ( ) n final string placement = task . get_placement ( ) n final scan_range range = task . get_range ( ) n range_scan_uploader_result result n n try { n / / verify that this range hasn codstr ignoring scan range from canceled task [ task = { } ] codstr ignoring duplicate post of completed scan range task [ task = { } , complete_time = { } ] codstr started scan range task { } codstr completed scan range task { } codstr scan range task failed { } codstr failed to mark scan range result [ id = { } , placement = { } , range = { } , result = { } ] codstr t marked the leader will not have an accurate view of the state . n return false n } n n return true n }	1
Q_479	perform a range scan and update the global scan status with the scan result	C_479_1	private long convert_to_long ( byte [ ] bin ) { n byte_buffer bb = byte_buffer . wrap ( bin ) n bb . order ( byte_order . big_endian ) n return bb . get_int ( ) n }	0
Q_479	perform a range scan and update the global scan status with the scan result	C_479_2	public static < k > k deserialize ( byte [ ] bytes ) { n try { n byte_array_input_stream byte_array_input_stream = new byte_array_input_stream ( bytes ) n object_input_stream object_input_stream = new object_input_stream ( byte_array_input_stream ) n suppress_warnings ( codstr ) final k k = ( k ) object_input_stream . read_object ( ) n return k n } catch ( io_exception e ) { n throw new runtime_exception ( e ) n } catch ( class_not_found_exception e ) { n throw new runtime_exception ( e ) n } n }	0
Q_480	add not applicable test for all syntax	C_480_0	public void normalize ( set < string > test_names , map < string , pair < set < test > , set < test tests ) n { n for ( pair < set < test > , set < test in_out_tests tests . values ( ) ) { n add_not_applicable_tests ( test_names , in_out_tests . get_left ( ) ) n add_not_applicable_tests ( test_names , in_out_tests . get_right ( ) ) n } n }	1
Q_480	add not applicable test for all syntax	C_480_1	public string list_sip_application_session_ids ( ) { n string_buffer sb = new string_buffer ( ) n iterator < mobicents_sip_application_session > sip_application_sessions = sip_manager_delegate . get_all_sip_application_sessions ( ) n while ( sip_application_sessions . has_next ( ) ) { n sb . append ( sip_application_sessions . next ( ) . get_key ( ) ) . append ( codstr ) n } n return sb . to_string ( ) n }	0
Q_480	add not applicable test for all syntax	C_480_2	public static iban value_of ( final string iban ) throws iban_format_exception , n invalid_check_digit_exception , unsupported_country_exception { n iban_util . validate ( iban ) n return new iban ( iban ) n }	0
Q_481	load a saveable object from it default location or return code null when the file do not exist	C_481_0	public static check_for_null < t extends saveable > t load ( nonnull class < t > clazz ) throws io_exception { n xml_file file = get_config_file ( clazz ) n return file . exists ( ) ? clazz . cast ( file . read ( ) ) null n }	1
Q_481	load a saveable object from it default location or return code null when the file do not exist	C_481_1	public int serialize ( output_stream os , boolean reduce_to16_bits , n trie_builder . data_manipulate datamanipulate ) throws io_exception { n if ( datamanipulate = = null ) { n throw new illegal_argument_exception ( codstr ) n } n n / / fold and compact if necessary , also checks that index_length is n / / within limits n if ( m_is_compacted_ ) { n / / compact once without overlap to improve folding n compact ( false ) n / / fold the supplementary part of the index array n fold ( datamanipulate ) n / / compact again with overlap for minimum data array length n compact ( true ) n m_is_compacted_ = true n } n n / / is data_length within limits ? n int length n if ( reduce_to16_bits ) { n length = m_data_length_ + m_index_length_ n } else { n length = m_data_length_ n } n if ( length > = max_data_length_ ) { n throw new array_index_out_of_bounds_exception ( codstr ) n } n n / / struct u_trie_header { n / / int32_t signature n / / int32_t options ( a bit field ) n / / int32_t index_length n / / int32_t data_length n length = trie . header_length_ + codint * m_index_length_ n if ( reduce_to16_bits ) { n length + = codint * m_data_length_ n } else { n length + = codint * m_data_length_ n } n n if ( os = = null ) { n /	0
Q_481	load a saveable object from it default location or return code null when the file do not exist	C_481_2	public boolean get ( string name ) throws io_exception { n if ( name . equals_ignore_case ( digital_signature ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( non_repudiation ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( key_encipherment ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( data_encipherment ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( key_agreement ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( key_certsign ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( crl_sign ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( encipher_only ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else if ( name . equals_ignore_case ( decipher_only ) ) { n return boolean . value_of ( is_set ( codint ) ) n } else { n throw new io_exception ( codstr n + codstr ) n } n }	0
Q_482	get the identifier for this store	C_482_0	public string get_identifier ( ) { n if ( identifier = null ) { n return identifier n } n n if ( urls = = null ) { n return null n } n n if ( database = null ) { n return string . join ( codstr , urls ) + codstr + database + codstr n } n n return string . join ( codstr , urls ) n }	1
Q_482	get the identifier for this store	C_482_1	public static i_session get_session ( string resource_name ) throws resource_not_existing_exception , tt_exception { n file storage_file = new file ( storage_path ) n n i_session session = null n n if ( storage_file . exists ( ) ) { n throw new resource_not_existing_exception ( ) n } else { n new storage_configuration ( storage_file ) n n i_storage storage = storage . open_storage ( storage_file ) n n session = storage . get_session ( new session_configuration ( resource_name , null ) ) n n } n n return session n }	0
Q_482	get the identifier for this store	C_482_2	override n public final abstract_logging_advising_appendable append_logging_function_invocation ( n logging_function_invocation fun_call , immutable_list < function < string , string escapers ) n throws io_exception { n if ( is_log_only ( ) ) { n do_append_logging_function_invocation ( fun_call , escapers ) n } n return this n }	0
Q_483	create and add imgage element	C_483_0	public image create_image ( string src , string alt ) { n return this . add ( new image ( src , alt ) ) n }	1
Q_483	create and add imgage element	C_483_1	synchronized nullable key_value compare_and_set ( long index , string key , nullable string expected_value , nullable string new_value ) throws key_not_found_exception , value_mismatch_exception , key_already_exists_exception { n if ( expected_value = = null new_value = = null ) { n / / while i _could_ update the last_applied_index here , calling code should never call us with these arguments n throw new illegal_argument_exception ( string . format ( codstr , key , index ) ) n } n n increment_last_applied_index ( index ) n n string existing_value = entries . get ( key ) n n / / all possibilities n / / _ n / / existing_value expected_value result n / / null null assert new_value = null create key = > new_value n / / null null key_not_found_exception n / / null null key_already_exists_exception n / / null null expected_value = existing_value ? value_mismatch_exception ( new_value = null ? update key = > new_value delete key ) n / / n / / existing_value = null expected_value = null ( from last row above ) n / / _ n / / match result n / / y new_value = null ? update key = > new_value delete key ) n / / n value_mismatch_exception n n if ( existing_value = = null ) { n if ( expected_value = = null ) { n entries . put ( key , new_value ) n } else { n throw new key_not_found_exception ( key ) n } n	0
Q_483	create and add imgage element	C_483_2	public static editable_array new_array ( collection < ? > values ) { n basic_array array = new basic_array ( values . size ( ) ) n array . add_all_values ( values ) n return new array_editor ( array , default_factory ) n }	0
Q_484	extract mutation for a range of position in the original sequence and perform shift of correspond	C_484_0	"public mutations < s > extract_relative_mutations_for_range ( int from , int to ) { n if ( to < from ) n throw new illegal_argument_exception ( codstr ) n n long index_range = get_index_range ( from , to ) n n / / if range size is codint return empty array n if ( index_range = = codint ) n return empty ( alphabet ) n n / / unpacking n int from_index = ( int ) ( index_range codint ) , n to_index = ( int ) ( index_range codint ) n n / / don "" t create new object if result will be equal to this n if ( from = = codint from_index = = codint to_index = = mutations . length ) n return this n n / / creating result n int [ ] result = new int [ to_index _ from_index ] n n / / constant to move positions in the output array n int offset n if ( from = = _ codint ) n offset = codint n else n offset = ( ( _ from ) < < position_offset ) n n / / copy and move mutations n for ( int i = result . length _ codint , j = to_index _ codint i > = codint _ i , _ j ) n result [ i ] = mutations [ j ] + offset n n return new mutations < > ( alphabet , result"	1
Q_484	extract mutation for a range of position in the original sequence and perform shift of correspond	C_484_1	public long [ ] elements ( ) { n long [ ] my_elements = new long [ size ] n for ( int i = size _ i > = codint ) my_elements [ i ] = get_quick ( i ) n return my_elements n } n / * * n * sets the receiver codstr re doing . n * n * param elements the new elements to be stored . n * return the receiver itself . n * / npublic abstract_long_list elements ( long [ ] elements ) { n clear ( ) n add_all_of_from_to ( new long_array_list ( elements ) , codint , elements . length _ codint ) n return this n } n / * * n * ensures that the receiver can hold at least the specified number of elements without needing to allocate new internal memory . n * if necessary , allocates new internal memory and increases the capacity of the receiver . n * n * param min_capacity the desired minimum capacity . n * / npublic abstract void ensure_capacity ( int min_capacity ) n / * * n * compares the specified object with the receiver . n * returns true if and only if the specified object is also an array_list of the same type , both lists have the n * same size , and all corresponding pairs of elements in the two lists are identical . n * in other words , two lists are	0
Q_484	extract mutation for a range of position in the original sequence and perform shift of correspond	C_484_2	public static x_path parse ( string xpath ) throws illegal_argument_exception { n x_path xp = new x_path ( ) n n / / save the xpath as the full xpath n xp . full_x_path = xpath n n / / does the xpath end with / * n if ( xpath . length ( ) > = codint xpath . ends_with ( codstr ) ) { n xp . include_children = true n xpath = xpath . substring ( codint , xpath . length ( ) _ codint ) n } n n / / normalized path is the rest n xp . normalized_x_path = xpath n n return xp n }	0
Q_485	get this object property	C_485_0	public ovh_deposit deposit_deposit_id_get ( string deposit_id ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , deposit_id ) n string resp = exec ( q_path , codstr , sb . to_string ( ) , null ) n return convert_to ( resp , ovh_deposit . class ) n }	1
Q_485	get this object property	C_485_1	override n public com . liferay . commerce . tax . engine . fixed . model . commerce_tax_fixed_rate add_commerce_tax_fixed_rate ( n com . liferay . commerce . tax . engine . fixed . model . commerce_tax_fixed_rate commerce_tax_fixed_rate ) { n return _commerce_tax_fixed_rate_local_service . add_commerce_tax_fixed_rate ( commerce_tax_fixed_rate ) n }	0
Q_485	get this object property	C_485_2	public void serialize_to_disk ( final file file ) throws io_exception { n final datum_writer datum_writer = new generic_datum_writer < generic_record > ( ) n final data_file_writer file_writer = new data_file_writer < generic_record > ( datum_writer ) n final avro_parquet_reader < generic_record > reader = create_avro_reader ( ) n file_writer . create ( create_avro_schema ( ) , file ) n n generic_record record = reader . read ( ) n while ( record = null ) { n file_writer . append ( record ) n record = reader . read ( ) n } n n try { n reader . close ( ) n } catch ( io_exception ex ) { n log . log ( level . severe , ex . get_message ( ) ) n throw ex n } n n try { n file_writer . close ( ) n } catch ( io_exception ex ) { n log . log ( level . severe , ex . get_message ( ) ) n throw ex n } n }	0
Q_486	remaps the row key in a hash map	C_486_0	protected void remap_rows ( ) { n row_map = new hash_map < > ( ) n final faces_context context = faces_context . get_current_instance ( ) n final map < string , object > request_map = context . get_external_context ( ) . get_request_map ( ) n final collection < ? > values = ( collection < ? > ) get_value ( ) n final string var = get_var ( ) n for ( final object obj values ) { n request_map . put ( var , obj ) n try { n final string key = get_row_key_value_as_string ( context ) n row_map . put ( key , obj ) n } n finally { n request_map . remove ( var ) n } n } n }	1
Q_486	remaps the row key in a hash map	C_486_1	public observable < page < deleted_storage_account_item get_deleted_storage_accounts_next_async ( final string next_page_link ) { n return get_deleted_storage_accounts_next_with_service_response_async ( next_page_link ) n . map ( new func1 < service_response < page < deleted_storage_account_item , page < deleted_storage_account_item ( ) { n override n public page < deleted_storage_account_item > call ( service_response < page < deleted_storage_account_item response ) { n return response . body ( ) n } n } ) n }	0
Q_486	remaps the row key in a hash map	C_486_2	protected boolean get_ignore_release_date ( ) { n n boolean is_ignore_release_date = parse_optional_boolean_value ( m_config_object , json_key_ignore_release_date ) n return ( null = = is_ignore_release_date ) ( m_base_config = null ) n ? boolean . value_of ( m_base_config . get_general_config ( ) . get_ignore_release_date ( ) ) n is_ignore_release_date n }	0
Q_487	restore the state for the submit local and bad value	C_487_0	override n public void restore_state ( final faces_context context , final object state ) { n if ( state = = null ) { n return n } n n final object values [ ] = ( object [ ] ) state n super . restore_state ( context , values [ codint ] ) n final object restored_submitted_values = values [ codint ] n final object restored_local_values = values [ codint ] n final object restored_invalid_updates = values [ codint ] n final object restored_col_mappings = values [ codint ] n final object restored_sorted_list = values [ codint ] n final object restored_row_map = values [ codint ] n final object restored_row_numbers = values [ codint ] n n if ( restored_submitted_values = = null ) { n submitted_values . clear ( ) n } n else { n submitted_values = ( map < sheet_row_col_index , string > ) restored_submitted_values n } n n if ( restored_local_values = = null ) { n local_values . clear ( ) n } n else { n local_values = ( map < sheet_row_col_index , object > ) restored_local_values n } n n if ( restored_invalid_updates = = null ) { n get_invalid_updates ( ) . clear ( ) n } n else { n invalid_updates = ( list < sheet_invalid_update > ) restored_invalid_updates n } n n if ( restored_col_mappings = = null ) { n column_mapping = null n } n else { n column_mapping = ( map < integer ,	1
Q_487	restore the state for the submit local and bad value	C_487_1	public void shutdown ( ) { n lock . lock ( ) n try { n is_shutdown = true n not_empty . signal_all ( ) n not_full . signal_all ( ) n } n finally { n lock . unlock ( ) n } n }	0
Q_487	restore the state for the submit local and bad value	C_487_2	"public quantile combine ( final quantile other ) { n if ( double . compare ( _quantile , other . _quantile ) = codint ) { n throw new illegal_argument_exception ( format ( n codstr t perform combine , the quantile are not equal s = s "" , n _quantile , other . _quantile n ) ) n } n n _samples + = other . _samples n n if ( _quantile = = number ) { n _q [ codint ] = math . min ( _q [ codint ] , other . _q [ codint ] ) n } else if ( _quantile = = number ) { n _q [ codint ] = math . max ( _q [ codint ] , other . _q [ codint ] ) n } else { n / / combine the marker positions . n _n [ codint ] + = other . _n [ codint ] n _n [ codint ] + = other . _n [ codint ] n _n [ codint ] + = other . _n [ codint ] n _n [ codint ] + = other . _n [ codint ] n n / / combine the marker height . n _q [ codint ] = math . min ( _q [ codint ] , other . _q [ codint ] ) n _q [ codint ] = ( _q [ codint ] + other . _q [ codint ] ) * number"	0
Q_488	remove exist waiter when a new waiter be register for the same event	C_488_0	private void remove_event_wait ( string event_name ) throws sql_exception { n string query = codstr n db . run_update ( query , event_name ) n this . record_event_history ( event_name , event_log . subcat_deregister , n codstr , codint , codstr ) n }	1
Q_488	remove exist waiter when a new waiter be register for the same event	C_488_1	protected final boolean ignoreable ( final attribute event ) { n / / layed out like this because it is easier to understand n / / coverage . no performance differences expected compared n / / to tighter layout . n if ( codstr . equals ( event . get_string ( ) ) ) { n return true n } n if ( codstr . equals ( event . get_string ( ) ) ) { n return true n } n if ( codstr . equals ( event . get_string ( ) ) ) { n return true n } n if ( codstr . equals ( event . get_string ( ) ) ) { n return true n } n if ( codstr . equals ( event . get_string ( ) ) ) { n / / only care about random attributes if they are dated n final get_date_visitor visitor = new get_date_visitor ( ) n event . accept ( visitor ) n return codstr . equals ( visitor . get_date ( ) ) n } n if ( codstr . equals ( event . get_string ( ) ) ) { n / / only care about notes if they are dated n final get_date_visitor visitor = new get_date_visitor ( ) n event . accept ( visitor ) n return codstr . equals ( visitor . get_date ( ) ) n } n return codstr . equals ( event . get_string ( ) ) n }	0
Q_488	remove exist waiter when a new waiter be register for the same event	C_488_2	public remote_web_driver create_driver ( mobile_node_type node_type , web_driver_platform platform , command_executor command , n url url , capabilities caps ) { n n if ( mobile_providers . contains_key ( node_type ) ) { n logger . log ( level . fine , codstr + node_type ) n return mobile_providers . get ( node_type ) . create_driver ( platform , command , url , caps ) n } n logger . severe ( codstr + node_type ) n return null n }	0
Q_489	remove membership entity relate to current user	C_489_0	private collection < membership > remove_membership_by_user ( session session , string user_name , boolean broadcast ) throws exception n { n memberships_by_user_wrapper m_wrapper = find_memberships_by_user ( session , user_name ) n n if ( broadcast ) n { n for ( membership m m_wrapper . memberships ) n { n pre_delete ( m ) n } n } n n for ( node ref_user_node m_wrapper . ref_user_nodes ) n { n ref_user_node . remove ( ) n } n session . save ( ) n n remove_from_cache ( cache_handler . user_prefix + user_name ) n n if ( broadcast ) n { n for ( membership m m_wrapper . memberships ) n { n post_delete ( m ) n } n } n n return m_wrapper . memberships n }	1
Q_489	remove membership entity relate to current user	C_489_1	public string get_svg_element ( string id , boolean include_dimensions , n view_box view_box , preserve_aspect_ratio preserve_aspect_ratio , n meet_or_slice meet_or_slice ) { n string_builder svg = new string_builder ( codstr ) n if ( id = null ) { n svg . append ( codstr codstr codstr ) n } n string unit_str = this . units = null ? this . units . to_string ( ) codstr n svg . append ( codstr http / / www . w3 . org / codint / svg codstr ) n . append ( codstr http / / www . w3 . org / codint / xlink codstr ) n . append ( codstr http / / www . jfree . org / jfreesvg / svg codstr ) n if ( include_dimensions ) { n svg . append ( codstr codstr codstr codstr codstr ) n } n if ( view_box = null ) { n svg . append ( codstr codstr codstr ) n if ( preserve_aspect_ratio = null ) { n svg . append ( codstr codstr codstr codstr ) n } n } n svg . append ( codstr codstr codstr codstr codstr ) n string_builder defs = new string_builder ( codstr ) n for ( gradient_paint_key key this . gradient_paints . key_set ( ) ) { n defs . append ( get_linear_gradient_element ( this . gradient_paints . get ( key ) , n key . get_paint ( ) ) ) n defs . append ( codstr )	0
Q_489	remove membership entity relate to current user	C_489_2	"public static task_template get_task_template ( asset_version_spec asset_version_spec ) throws exception { n task_template task_template = template_versions . get ( asset_version_spec . to_string ( ) ) n if ( task_template = = null ) { n if ( asset_version_spec . get_package_name ( ) = null ) { n list < package > pkg_v_os = package_cache . get_all_packages ( asset_version_spec . get_package_name ( ) ) n for ( package pkg_vo pkg_v_os ) { n for ( task_template template pkg_vo . get_task_templates ( ) ) { n if ( asset_version_spec . get_name ( ) . equals ( template . get_name ( ) ) ) { n if ( template . meets_version_spec ( asset_version_spec . get_version ( ) ) ( task_template = = null template . get_version ( ) > task_template . get_version ( ) ) ) n task_template = template n } n } n } n } n / / if didn codstr codint "" ) ) { n asset_ref ref = asset_ref_cache . get_asset_ref ( asset_version_spec ) n if ( ref = null ) { n task_template = asset_ref_converter . get_task_template ( ref ) n if ( task_template = null ) n task_vo_cache . add ( task_template ) n } n } n if ( task_template = null ) n template_versions . put ( asset_version_spec . to_string ( ) , task_template ) n } n return task_template n }"	0
Q_490	run a recovery on code index code if code redo_log code contain	C_490_0	static void run ( multi_index index , redo_log redo_log ) throws io_exception n { n if ( redo_log . has_entries ( ) ) n { n log . debug ( codstr ) n return n } n log . info ( codstr ) n recovery r = new recovery ( index , redo_log ) n r . run ( ) n log . info ( codstr ) n }	1
Q_490	run a recovery on code index code if code redo_log code contain	C_490_1	public static boolean wildcard_match ( final string filename , final string wildcardfilter ) { n return wildcard_match ( filename , wildcardfilter , io_case . sensitive ) n }	0
Q_490	run a recovery on code index code if code redo_log code contain	C_490_2	private void init_engine ( ) { n engine = ( nashorn_script_engine ) new script_engine_manager ( ) . get_engine_by_name ( codstr ) n n try { n engine . eval ( codstr ) n engine . eval ( nashorn_vue_template_compiler . nashorn_vue_template_compiler ) n } catch ( script_exception e ) { n e . print_stack_trace ( ) n } n }	0
Q_491	wrapper around link cont_on_validation_error but instead of return	C_491_0	safe_varargs n protected final void fail_on_validation_error ( final set < constraint_violation < object . violations_array ) { n final list < validation_error > errors = cont_on_validation_error ( violations_array ) n if ( collections . is_empty ( errors ) ) { n throw new bad_request_exception ( response . status ( response . status . bad_request ) . entity ( errors ) . build ( ) ) n } n }	1
Q_491	wrapper around link cont_on_validation_error but instead of return	C_491_1	public void bezier_curve_to ( double xc1 , double yc1 , double xc2 , double yc2 , double x1 , double y1 ) { n this . gc . bezier_curve_to ( n doc2fx_x ( xc1 ) , doc2fx_y ( yc1 ) , n doc2fx_x ( xc2 ) , doc2fx_y ( yc2 ) , n doc2fx_x ( x1 ) , doc2fx_y ( y1 ) ) n }	0
Q_491	wrapper around link cont_on_validation_error but instead of return	C_491_2	public final < r > ix < r > transform ( ix_transform < t , r > transformer ) { n return new ix_transformer < t , r > ( this , null_check ( transformer , codstr ) ) n }	0
Q_492	calculate row and col from the region and it resolution	C_492_0	private void fix_rows_and_cols ( ) { n rows = ( int ) math . round ( ( north _ south ) / ns_res ) n if ( rows < codint ) n rows = codint n cols = ( int ) math . round ( ( east _ west ) / we_res ) n if ( cols < codint ) n cols = codint n }	1
Q_492	calculate row and col from the region and it resolution	C_492_1	public e_class get_ifc_point_or_vertex_point ( ) { n if ( ifc_point_or_vertex_point_e_class = = null ) { n ifc_point_or_vertex_point_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_point_or_vertex_point_e_class n }	0
Q_492	calculate row and col from the region and it resolution	C_492_2	public string get_version ( ) n { n string str = null n n if ( ( version > = codint ) ( version < version_labels . length ) ) n { n str = version_labels [ version ] n } n n return str n }	0
Q_493	connect out to in	C_493_0	void connect ( object from , string from_out , object to , string to_in ) { n / / add them to the set of commands n if ( from = = to ) { n throw new component_exception ( codstr ) n } n if ( to_in = = null from_out = = null ) { n throw new component_exception ( codstr ) n } n n component_access ca_from = lookup ( from ) n component_access ca_to = lookup ( to ) n n access from_access = ca_from . output ( from_out ) n check_fa ( from_access , from , from_out ) n access to_access = ca_to . input ( to_in ) n check_fa ( to_access , to , to_in ) n n if ( can_connect ( from_access , to_access ) ) { n throw new component_exception ( codstr + from + codstr + to_in + codstr + to + codstr + from_out ) n } n n / / src data object n field_content data = from_access . get_data ( ) n data . tag_in ( ) n data . tag_out ( ) n n data_set . add ( data ) n to_access . set_data ( data ) / / connect the two n n if ( check_circular ) { n validator . add_connection ( from , to ) n validator . check_circular ( ) n } n n if ( log . is_loggable ( level . config ) ) { n log . config ( string	1
Q_493	connect out to in	C_493_1	public void write ( byte b [ ] , int off , int len ) { n expand_if_necessary ( count + len ) n system . arraycopy ( b , off , bytes , count , len ) n count + = len n }	0
Q_493	connect out to in	C_493_2	protected static void check_range_from_to ( int from , int to , int the_size ) { n if ( to = = from _ codint ) return n if ( from < codint from > to to > = the_size ) n throw new index_out_of_bounds_exception ( codstr + from + codstr + to + codstr + the_size ) n }	0
Q_494	set the value of element r c	C_494_0	public void set ( int r , int c , double value ) throws matrix_exception n { n if ( ( r < codint ) ( r > = n_rows ) ( c < codint ) ( c > = n_cols ) ) { n throw new matrix_exception ( matrix_exception . invalid_index ) n } n n values [ r ] [ c ] = value n }	1
Q_494	set the value of element r c	C_494_1	gwt_incompatible / / navigable_map n public static < k , v > navigable_map < k , v > filter_entries ( n navigable_map < k , v > unfiltered , predicate < ? super entry < k , v entry_predicate ) { n check_not_null ( entry_predicate ) n return ( unfiltered instanceof filtered_entry_navigable_map ) n ? filter_filtered ( ( filtered_entry_navigable_map < k , v > ) unfiltered , entry_predicate ) n new filtered_entry_navigable_map < k , v > ( check_not_null ( unfiltered ) , entry_predicate ) n }	0
Q_494	set the value of element r c	C_494_2	public final device_registry get_device_registry ( string name ) { n n get_device_registry_request request = get_device_registry_request . new_builder ( ) . set_name ( name ) . build ( ) n return get_device_registry ( request ) n }	0
Q_495	set the give option	C_495_0	public void set_option ( string opt_name , object opt_value ) { n if ( opt_value = = null ) { n m_options . remove ( opt_name ) n } else { n m_options . put ( opt_name , opt_value ) n } n }	1
Q_495	set the give option	C_495_1	private class_loader create_plugin_class_loader ( ) throws cli_execution_exception { n class_loader parent_class_loader = task . class . get_class_loader ( ) n file home_directory = get_home_directory ( ) n if ( home_directory = null ) { n file plugin_directory = new file ( home_directory , directory_plugins ) n if ( plugin_directory . exists ( ) ) { n final list < url > urls = new array_list < > ( ) n final path plugin_directory_path = plugin_directory . to_path ( ) n simple_file_visitor < path > visitor = new simple_file_visitor < path > ( ) { n n override n public file_visit_result visit_file ( path file , basic_file_attributes attrs ) throws io_exception { n if ( file . to_file ( ) . get_name ( ) . ends_with ( codstr ) ) { n urls . add ( file . to_file ( ) . to_uri ( ) . to_url ( ) ) n } n return file_visit_result . continue n } n } n try { n files . walk_file_tree ( plugin_directory_path , visitor ) n } catch ( io_exception e ) { n throw new cli_execution_exception ( codstr , e ) n } n logger . debug ( codstr + urls ) n return new com . buschmais . jqassistant . commandline . plugin_class_loader ( urls , parent_class_loader ) n } n } n return parent_class_loader n }	0
Q_495	set the give option	C_495_2	public static void render_unhandled_faces_messages ( faces_context faces_context ) n throws io_exception n { n / / create and configure html_messages component n html_messages messages = ( html_messages ) faces_context . get_application ( ) n . create_component ( html_messages . component_type ) n messages . set_id ( codstr ) n messages . set_title ( codstr ) n messages . set_style ( codstr ) n messages . set_redisplay ( false ) n / / render the component n messages . encode_all ( faces_context ) n }	0
Q_496	create a column mutation that delete the give column name	C_496_0	private static mutation create_delete_column_mutation ( byte [ ] col_name , long timestamp ) { n slice_predicate slice_pred = new slice_predicate ( ) n slice_pred . add_to_column_names ( byte_buffer . wrap ( col_name ) ) n n deletion deletion = new deletion ( ) n deletion . set_predicate ( slice_pred ) n deletion . set_timestamp ( timestamp ) n n mutation mutation = new mutation ( ) n mutation . set_deletion ( deletion ) n return mutation n }	1
Q_496	create a column mutation that delete the give column name	C_496_1	public void set_media_group ( final string media_group ) { n string curr_media_group = get_media_group ( ) n n if ( objects . equals ( media_group , curr_media_group ) ) { n get_or_create_component_model ( ) . media_group = media_group n } n }	0
Q_496	create a column mutation that delete the give column name	C_496_2	public static map < string , string > get_content_map ( file file , string separator ) throws io_exception { n list < string > content = get_content_lines ( file ) n map < string , string > map = new linked_hash_map < string , string > ( ) n n for ( string line content ) { n string [ ] spl = line . split ( separator ) n if ( line . trim ( ) . length ( ) > codint ) { n map . put ( spl [ codint ] , ( spl . length > codint ? spl [ codint ] codstr ) ) n } n } n n return map n }	0
Q_497	add a w_radio_button_select with set_mandatory	C_497_0	private void add_mandatory_select_example ( ) { n add ( new w_heading ( heading_level . h3 , codstr ) ) n n add ( new explanatory_text ( codstr n + codstr ) ) n final w_radio_button_select select = new w_radio_button_select ( codstr ) n select . set_button_layout ( w_radio_button_select . layout_flat ) n select . set_mandatory ( true ) n add ( new w_label ( codstr , select ) ) n add ( select ) n n add ( new w_heading ( heading_level . h3 , codstr ) ) n w_radio_button_select select2 = new w_radio_button_select ( codstr ) n select2 . set_button_layout ( w_radio_button_select . layout_flat ) n select2 . set_mandatory ( true ) n final w_field_layout layout = new w_field_layout ( ) n layout . set_label_width ( codint ) n add ( layout ) n layout . add_field ( codstr , select2 ) . get_label ( ) . set_hint ( codstr ) n select2 = new w_radio_button_select ( codstr ) n select2 . set_button_layout ( w_radio_button_select . layout_flat ) n select2 . set_mandatory ( true ) n select2 . set_tool_tip ( codstr ) n layout . add_field ( ( w_label ) null , select2 ) n }	1
Q_497	add a w_radio_button_select with set_mandatory	C_497_1	public long tile_feature_count ( point point , int zoom ) { n tile_grid tile_grid = tile_bounding_box_utils . get_tile_grid_from_wgs84 ( point , zoom ) n return feature_tiles . query_indexed_features_count ( ( int ) tile_grid . get_min_x ( ) , ( int ) tile_grid . get_min_y ( ) , zoom ) n }	0
Q_497	add a w_radio_button_select with set_mandatory	C_497_2	public void marshall ( channels_response channels_response , protocol_marshaller protocol_marshaller ) { n n if ( channels_response = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( channels_response . get_channels ( ) , channels_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_498	return the tag on the give app	C_498_0	public list < tag_count > get_tags_on_app ( int app_id ) { n return get_resource_factory ( ) . get_api_resource ( codstr + app_id + codstr ) n . get ( new generic_type < list < tag_count ( ) { } ) n }	1
Q_498	return the tag on the give app	C_498_1	private static string process_entry ( column column , object entry , locale locale , n map < integer , format > column_formatters ) throws io_exception { n if ( string . value_of ( entry ) . contains ( double_infinity_string ) ) { n string value_to_print n if ( entry . get_class ( ) = = date . class ) { n value_to_print = convert_date_element_to_string ( ( date ) entry , n ( simple_date_format ) column_formatters . compute_if_absent ( column . get_id ( ) , n e _ > get_date_format_processor ( column . get_format ( ) , locale ) ) ) n } else { n if ( time_format_strings . contains ( column . get_format ( ) . get_name ( ) ) ) { n value_to_print = convert_time_element_to_string ( ( long ) entry ) n } else if ( percent_format . equals ( column . get_format ( ) . get_name ( ) ) ) { n value_to_print = convert_percent_element_to_string ( entry , n ( decimal_format ) column_formatters . compute_if_absent ( column . get_id ( ) , n e _ > get_percent_format_processor ( column . get_format ( ) , locale ) ) ) n } else { n value_to_print = string . value_of ( entry ) n if ( entry . get_class ( ) = = double . class ) { n value_to_print = convert_double_element_to_string ( ( double ) entry ) n } n } n } n n return value_to_print n } n return codstr n }	0
Q_498	return the tag on the give app	C_498_2	suppress_warnings ( codstr ) / / t = = f when the chain is empty n public t transform ( final f item , final pipeline_context context ) { n if ( chain = = null chain . is_empty ( ) ) { n return ( t ) item n } n n object current = item n for ( int i = codint i < chain . size ( ) i + + ) { n current = chain . get ( i ) . transform ( type_steps . get ( i ) , type_steps . get ( i + codint ) , current , context ) n } n return ( t ) type_steps . get ( type_steps . size ( ) _ codint ) . cast ( current ) n }	0
Q_499	retrieve the data list cache key for this component	C_499_0	public string get_list_cache_key ( ) { n object table = get_lookup_table ( ) n n if ( table = null configuration_properties . get_datalist_caching ( ) ) { n string key = application_lookup_table . get_cache_key_for_table ( table ) n return key n } n n return null n }	1
Q_499	retrieve the data list cache key for this component	C_499_1	public static long [ ] hash_to_longs ( final double datum , final long seed ) { n final double d = ( datum = = number ) ? number datum / / canonicalize _ number , number n final long [ ] data = { double . double_to_long_bits ( d ) } / / canonicalize all na_n forms n return hash ( data , seed ) n }	0
Q_499	retrieve the data list cache key for this component	C_499_2	public e_class get_ifc_parameterized_profile_def ( ) { n if ( ifc_parameterized_profile_def_e_class = = null ) { n ifc_parameterized_profile_def_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_parameterized_profile_def_e_class n }	0
Q_500	retrieve the subsession for this request	C_500_0	private synchronized http_sub_session get_sub_session ( ) { n http_session backing_session = super . get_session ( ) n map < integer , http_sub_session > subsessions = ( map < integer , http_sub_session > ) backing_session n . get_attribute ( session_map_key ) n n http_sub_session subsession = subsessions . get ( session_id ) n subsession . set_last_accessed_time ( system . current_time_millis ( ) ) n n return subsession n }	1
Q_500	retrieve the subsession for this request	C_500_1	public static string get_string_property ( string name , string alternative_name , map < string , string > map , n string default_value ) { n return get_string_property ( name , map , get_string_property ( alternative_name , map , default_value ) ) n }	0
Q_500	retrieve the subsession for this request	C_500_2	public void unload ( ) { n deactivate ( ) n if ( get_antecedent ( ) = null ) { n get_antecedent ( ) . unload ( ) n } n if ( get_consequent ( ) = null ) { n get_consequent ( ) . unload ( ) n } n }	0
Q_501	retrieve the ajax_operation that have be register for the give trigger	C_501_0	public static ajax_operation get_ajax_operation ( final string trigger_id ) { n map < string , ajax_operation > operations = get_registered_operations ( ) n return operations = = null ? null operations . get ( trigger_id ) n }	1
Q_501	retrieve the ajax_operation that have be register for the give trigger	C_501_1	override n protected schema fetch_schema_by_key ( string key ) throws schema_registry_exception { n string schema_url = kafka_avro_schema_registry . this . url + get_resource_by_id + key n n get_method get = new get_method ( schema_url ) n n int status_code n string schema_string n http_client http_client = this . borrow_client ( ) n try { n status_code = http_client . execute_method ( get ) n schema_string = get . get_response_body_as_string ( ) n } catch ( io_exception e ) { n throw new schema_registry_exception ( e ) n } finally { n get . release_connection ( ) n this . http_client_pool . return_object ( http_client ) n } n n if ( status_code = http_status . sc_ok ) { n throw new schema_registry_exception ( n string . format ( codstr , key , status_code ) ) n } n n schema schema n try { n schema = new schema . parser ( ) . parse ( schema_string ) n } catch ( throwable t ) { n throw new schema_registry_exception ( string . format ( codstr , key ) , t ) n } n n return schema n }	0
Q_501	retrieve the ajax_operation that have be register for the give trigger	C_501_2	public void set_security_name_prop ( string security_name ) { n if ( security_name = null ) n entity . get_identifier ( ) . set ( security_name_prop , security_name ) n }	0
Q_502	this be use to reproduce a w_components bug condition to make sure we do not re_create it once it be fix	C_502_0	private void add_ajax_example ( ) { n add ( new w_heading ( heading_level . h2 , codstr ) ) n final string before = codstr n final string after = codstr n final w_text ajax_content = new w_text ( codstr ) n final w_panel target = new w_panel ( w_panel . type . box ) n n add ( target ) n target . add ( ajax_content ) n n w_button confirm_with_ajax = new w_button ( codstr ) n confirm_with_ajax . set_message ( codstr ) n confirm_with_ajax . set_action ( new action ( ) { n override n public void execute ( final action_event event ) { n ajax_content . set_text ( before . equals ( ajax_content . get_text ( ) ) ? after before ) n } n } ) n add ( confirm_with_ajax ) n add ( new w_ajax_control ( confirm_with_ajax , target ) ) n }	1
Q_502	this be use to reproduce a w_components bug condition to make sure we do not re_create it once it be fix	C_502_1	public set get_all_directories_below ( file dir ) { n set all_directories = new hash_set ( ) n if ( dir . is_directory ( ) ) { n prim_get_all_directories_below ( dir , all_directories ) n } n return all_directories n }	0
Q_502	this be use to reproduce a w_components bug condition to make sure we do not re_create it once it be fix	C_502_2	string compute_specified_arg_part ( string [ ] keys , list < string > json_args , list < string > param_names ) { n string_builder sb = new string_builder ( codstr ) n boolean first = true n for ( string key keys ) { n if ( first ) { n sb . append ( codstr ) n } n first = false n string [ ] path = key . split ( codstr ) n logger . debug ( codstr { } codstr , key , path . length ) n string param_name = path [ codint ] n int idx = param_names . index_of ( param_name ) n logger . debug ( codstr { } codstr { } codstr , param_name , idx ) n string json_arg = json_args . get ( idx ) n logger . debug ( codstr { } codstr { } codstr , param_name , json_arg ) n sb . append ( process_arg ( arrays . copy_of_range ( path , codint , path . length ) , json_arg ) ) n } n sb . append ( codstr ) n return sb . to_string ( ) n }	0
Q_503	specify a handler that will be call for a match http patch	C_503_0	public route_matcher patch_with_reg_ex ( string regex , handler < http_server_request > handler ) { n add_reg_ex ( regex , handler , patch_bindings ) n return this n }	1
Q_503	specify a handler that will be call for a match http patch	C_503_1	public void redirect_call ( n string conn_id , n string destination , n key_value_collection reasons , n key_value_collection extensions n ) throws workspace_api_exception { n try { n voicecallsidredirect_data redirect_data = new voicecallsidredirect_data ( ) n redirect_data . set_destination ( destination ) n redirect_data . set_reasons ( util . to_kv_list ( reasons ) ) n redirect_data . set_extensions ( util . to_kv_list ( extensions ) ) n redirect_data data = new redirect_data ( ) n data . data ( redirect_data ) n n api_success_response response = this . voice_api . redirect ( conn_id , data ) n throw_if_not_ok ( codstr , response ) n } catch ( api_exception e ) { n throw new workspace_api_exception ( codstr , e ) n } n }	0
Q_503	specify a handler that will be call for a match http patch	C_503_2	void set ( instant effective_from , t value ) { n t old_value = get ( ) n values . put ( effective_from , value ) n notify_listeners ( old_value , value ) n }	0
Q_504	create a corba any object and insert a double array in it	C_504_0	public any insert ( double [ ] data ) throws dev_failed n { n any out_any = alloc_any ( ) n dev_var_double_array_helper . insert ( out_any , data ) n return out_any n }	1
Q_504	create a corba any object and insert a double array in it	C_504_1	public complex plus ( complex b ) { n complex a = this / / invoking object n double real = a . re + b . re n double imag = a . im + b . im n return new complex ( real , imag ) n }	0
Q_504	create a corba any object and insert a double array in it	C_504_2	public static boolean has_prefix ( string path , string prefix ) throws invalid_path_exception { n string [ ] path_components = get_path_components ( path ) n string [ ] prefix_components = get_path_components ( prefix ) n if ( path_components . length < prefix_components . length ) { n return false n } n for ( int i = codint i < prefix_components . length i + + ) { n if ( path_components [ i ] . equals ( prefix_components [ i ] ) ) { n return false n } n } n return true n }	0
Q_505	remove command poll	C_505_0	public void remove_command_polling ( final string command_name ) throws dev_failed { n final command_impl command = command_getter . get_command ( command_name , command_list ) n command . reset_polling ( ) n cache_manager . remove_command_polling ( command ) n if ( command . get_name ( ) . equals ( device_impl . state_name ) command . get_name ( ) . equals ( device_impl . status_name ) ) { n / / attribute is also set as polled n final attribute_impl attribute = attribute_getter_setter . get_attribute ( command . get_name ( ) , attribute_list ) n attribute . reset_polling ( ) n cache_manager . remove_attribute_polling ( attribute ) n poll_attributes . remove ( command . get_name ( ) . to_lower_case ( locale . english ) ) n save_polling_config ( ) n } n }	1
Q_505	remove command poll	C_505_1	public string get_tea_full_class_name ( class < ? > clazz ) { n n if ( is_implicit_tea_import ( clazz ) ) { n return get_class_name ( clazz ) n } n n return get_full_class_name ( clazz ) n }	0
Q_505	remove command poll	C_505_2	public ovh_lan service_name_modem_lan_lan_name_get ( string service_name , string lan_name ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , service_name , lan_name ) n string resp = exec ( q_path , codstr , sb . to_string ( ) , null ) n return convert_to ( resp , ovh_lan . class ) n }	0
Q_506	give a canonical form find with a lex_ner return all variant if any	C_506_0	public set < string > get_synonyms ( final string canonical ) { n set < string > syn = sets . new_hash_set ( ) n n for ( map < string , concept > lexica lexicon ) { n for ( string lex_canonical lexica . key_set ( ) ) { n set < string > variants = lexica . get ( lex_canonical ) . get_variants ( ) n for ( string variant variants ) { n n if ( canonical . equals ( variant ) ) { n for ( string v variants ) { n syn . add ( v . to_lower_case ( ) ) n } n } n } n } n } n return syn n }	1
Q_506	give a canonical form find with a lex_ner return all variant if any	C_506_1	public object get_state_property ( string key ) { n if ( string_utils . is_blank ( key ) ) { n return get_device_state ( ) . get ( key ) n } n return null n }	0
Q_506	give a canonical form find with a lex_ner return all variant if any	C_506_2	public static object invoke_static_method ( final class < ? > cls , final string method_name , n object . args ) throws no_such_method_exception , n illegal_access_exception , invocation_target_exception { n args = array_utils . null_to_empty ( args ) n final class < ? > [ ] parameter_types = class_utils . to_class ( args ) n return invoke_static_method ( cls , method_name , args , parameter_types ) n }	0
Q_507	get the family for this child to build the navigator with	C_507_0	private static family find_family ( final child child ) { n if ( child . is_set ( ) ) { n return new family ( ) n } n final family found_family = ( family ) child . find ( child . get_from_string ( ) ) n if ( found_family = = null ) { n return new family ( ) n } n return found_family n }	1
Q_507	get the family for this child to build the navigator with	C_507_1	public e_enum get_ifc_analysis_theory_type_enum ( ) { n if ( ifc_analysis_theory_type_enum_e_enum = = null ) { n ifc_analysis_theory_type_enum_e_enum = ( e_enum ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_analysis_theory_type_enum_e_enum n }	0
Q_507	get the family for this child to build the navigator with	C_507_2	protected xml_schema_pattern_facet create_pattern_facet ( final string pattern ) { n xml_schema_pattern_facet xml_schema_pattern_facet = new xml_schema_pattern_facet ( ) n xml_schema_pattern_facet . set_value ( pattern ) n return xml_schema_pattern_facet n }	0
Q_508	destroy all cache singleton	C_508_0	private void destroy_singletons ( ) { n if ( log . is_debug_enabled ( ) ) { n log . debug ( codstr + this ) n } n n int failed_destroyes = codint n for ( bean_rule bean_rule bean_rule_registry . get_id_based_bean_rules ( ) ) { n failed_destroyes + = do_destroy_singleton ( bean_rule ) n } n for ( set < bean_rule > bean_rule_set bean_rule_registry . get_type_based_bean_rules ( ) ) { n for ( bean_rule bean_rule bean_rule_set ) { n failed_destroyes + = do_destroy_singleton ( bean_rule ) n } n } n for ( bean_rule bean_rule bean_rule_registry . get_configurable_bean_rules ( ) ) { n failed_destroyes + = do_destroy_singleton ( bean_rule ) n } n if ( failed_destroyes > codint ) { n log . warn ( codstr + failed_destroyes + codstr ) n } else { n log . debug ( codstr + this ) n } n }	1
Q_508	destroy all cache singleton	C_508_1	public static axis_aligned_bb [ ] rotate ( axis_aligned_bb [ ] aabbs , enum_facing dir ) n { n if ( array_utils . is_empty ( aabbs ) dir = = enum_facing . south ) n return aabbs n n int angle = dir . get_axis ( ) = = axis . y ? dir . get_axis_direction ( ) . get_offset ( ) enum_facing_utils . get_rotation_count ( dir ) n axis axis = dir . get_axis ( ) = = axis . y ? axis . x axis . y n n for ( int i = codint i < aabbs . length i + + ) n aabbs [ i ] = rotate ( aabbs [ i ] , angle , axis ) n return aabbs n }	0
Q_508	destroy all cache singleton	C_508_2	public static < t > linked_hash_set_json_deserializer < t > new_instance ( json_deserializer < t > deserializer ) { n return new linked_hash_set_json_deserializer < t > ( deserializer ) n }	0
Q_509	it be not very efficient but it be simple enough	C_509_0	public static void empty_matrix ( byte [ ] [ ] matrix , int max_x , int max_y ) { n for ( int i = codint i < max_x i + + ) { n for ( int j = codint j < max_y j + + ) { n matrix [ i ] [ j ] = codint n } n } n }	1
Q_509	it be not very efficient but it be simple enough	C_509_1	override n public json_object to_json_object ( ) throws json_exception n { n json_object return_val = super . to_json_object ( ) n n / / machine name . n if ( this . get_machine_name ( ) = null ) n { n return_val . put ( json_mapping . machine_name , n this . get_machine_name ( ) ) n } n n / / cipher text . n if ( this . get_license_cipher_text ( ) = null ) n { n return_val . put ( json_mapping . license_cipher_text , n this . get_license_cipher_text ( ) ) n } n n / / license type . n if ( this . get_license_type ( ) = null ) n { n return_val . put ( json_mapping . license_type , n this . get_license_type ( ) ) n } n n / / user count . n if ( this . get_user_count ( ) = null ) n { n return_val . put ( json_mapping . user_count , n this . get_user_count ( ) ) n } n n / / date valid from . n if ( this . get_date_valid_from ( ) = null ) n { n return_val . put ( json_mapping . date_valid_from , n this . get_date_as_long_from_json ( this . get_date_valid_from ( ) ) ) n } n n / / date valid to . n if ( this . get_date_valid_to ( ) = null ) n { n return_val . put ( json_mapping . date_valid_to , n this .	0
Q_509	it be not very efficient but it be simple enough	C_509_2	public list < internal_document_revision > get_path_for_node ( long sequence ) { n misc . check_argument ( sequence_map . contains_key ( sequence ) , n codstr ) n document_revision_node l = sequence_map . get ( sequence ) n list < internal_document_revision > r = new linked_list < internal_document_revision > ( ) n while ( l = null ) { n r . add ( l . get_data ( ) ) n if ( l . get_data ( ) . get_parent ( ) > codint ) { n l = sequence_map . get ( l . get_data ( ) . get_parent ( ) ) n } else { n l = null n } n } n n return r n }	0
Q_510	give the root and a path element array find the correspond value	C_510_0	private static object find_value ( final option_element subroot , n final string [ ] path_elements , int pos ) { n if ( pos > = codint ) { n / / not at root . n if ( path_elements [ pos ] . equals ( subroot . name ) ) { n return null n } n } n n if ( subroot . is_value ) { n / / pos must be last entry n if ( ( pos + codint ) = path_elements . length ) { n return null n } n return subroot . val n } n n pos + + n if ( pos = = path_elements . length ) { n return null n } n n / * look to children for some value * / n n object single_res = null n array_list < object > multi_res = null n n for ( option_element optel subroot . get_children ( ) ) { n object res = find_value ( optel , path_elements , pos ) n if ( res = null ) { n if ( single_res = null ) { n multi_res = new array_list < object > ( ) n append_result ( single_res , multi_res ) n single_res = null n append_result ( res , multi_res ) n } else if ( multi_res = null ) { n append_result ( res , multi_res ) n } else { n single_res = res n } n } n }	1
Q_510	give the root and a path element array find the correspond value	C_510_1	public static string switch_to_last_tab ( ) { n int total_tabs n int time = codint n do { n utils . sleep ( codint ) n total_tabs = get_count_tabs ( ) n time + + n } while ( total_tabs < = codint time < codint ) n return switch_to_tab ( total_tabs _ codint ) n }	0
Q_510	give the root and a path element array find the correspond value	C_510_2	private list < regex_rule > read_rules ( array_node rules_list ) { n list < regex_rule > rules = new array_list < > ( ) n for ( json_node url_filter_node rules_list ) { n try { n regex_rule rule = create_rule ( url_filter_node . as_text ( ) ) n if ( rule = null ) { n rules . add ( rule ) n } n } catch ( io_exception e ) { n log . error ( codstr , n url_filter_node . as_text ( ) , e ) n } n } n return rules n }	0
Q_511	retrieve an enumeration of the name attribute be value	C_511_0	public naming_enumeration attr_elements ( string attr ) throws naming_exception { n attribute a = find_attr ( attr ) n n if ( a = = null ) { n return null n } n n return a . get_all ( ) n }	1
Q_511	retrieve an enumeration of the name attribute be value	C_511_1	public void set_height ( integer new_height ) { n integer old_height = height n height = new_height n if ( e_notification_required ( ) ) n e_notify ( new e_notification_impl ( this , notification . set , afplib_package . gbimg_height , old_height , height ) ) n }	0
Q_511	retrieve an enumeration of the name attribute be value	C_511_2	private void set_selection_state_of_all ( state state ) n { n objects . require_non_null ( state , codstr ) n list < object > all_nodes = j_trees . get_all_nodes ( get_model ( ) ) n for ( object node all_nodes ) n { n set_selection_state ( node , state ) n } n }	0
Q_512	shred a give input_stream	C_512_0	public static void shred_input_stream ( final i_node_write_trx wtx , final input_stream value , n final e_shredder_insert child ) { n final xml_input_factory factory = xml_input_factory . new_instance ( ) n factory . set_property ( xml_input_factory . support_dtd , false ) n xml_event_reader parser n try { n parser = factory . create_xml_event_reader ( value ) n } catch ( final xml_stream_exception xmlse ) { n throw new web_application_exception ( xmlse ) n } n n try { n final xml_shredder shredder = new xml_shredder ( wtx , parser , child ) n shredder . call ( ) n } catch ( final exception exce ) { n throw new web_application_exception ( exce ) n } n }	1
Q_512	shred a give input_stream	C_512_1	public void set_pubs_number ( final integer pubs_number ) { n if ( pubs_number = = null this . pubs_number = = null ) { n return n } else if ( pubs_number = = null ) { n remove_child ( this . pubs_number ) n this . pubs_number = null n } else if ( this . pubs_number = = null ) { n this . pubs_number = new key_value_node < integer > ( common_constants . cs_pubsnumber_title , pubs_number ) n append_child ( this . pubs_number , false ) n } else { n this . pubs_number . set_value ( pubs_number ) n } n }	0
Q_512	shred a give input_stream	C_512_2	override n public void e_unset ( int feature_id ) { n switch ( feature_id ) { n case bpsim_package . parameter_result_request n get_result_request ( ) . clear ( ) n return n case bpsim_package . parameter_parameter_value_group n get_parameter_value_group ( ) . clear ( ) n return n case bpsim_package . parameter_parameter_value n get_parameter_value ( ) . clear ( ) n return n case bpsim_package . parameter_kpi n unset_kpi ( ) n return n case bpsim_package . parameter_sla n unset_sla ( ) n return n } n super . e_unset ( feature_id ) n }	0
Q_513	format a date time as iso8601 with microsecond precision and offset e	C_513_0	"public static string format_iso_date ( zoned_date_time value ) { n if ( value = = null ) { n return null n } n n / / to match the format we get from python codstr t include second fraction if it "" s zero n if ( value . get_nano ( ) = = codint ) { n return iso_datetime_format_no_second_fraction . format ( value ) n } n n return iso_datetime_format . format ( value ) n }"	1
Q_513	format a date time as iso8601 with microsecond precision and offset e	C_513_1	"private static map < string , string > read_syntax_map ( file syntax_map_file ) n throws io_exception { n n map < string , string > result = new hash_map < string , string > ( ) n n buffered_reader reader = null n try { n reader = new buffered_reader ( new file_reader ( syntax_map_file ) ) n string line n while ( ( line = reader . read_line ( ) ) = null ) { n string trimmed = line . trim ( ) n if ( trimmed . length ( ) > codint ) { n if ( trimmed . char_at ( codint ) = codstr , codstr failed to parse line codstr codstr failed to parse line codstr "" , n trimmed ) ) n } n result . put ( part_one , part_two ) n } n } n } n } finally { n if ( reader = null ) { n reader . close ( ) n } n } n n return result n }"	0
Q_513	format a date time as iso8601 with microsecond precision and offset e	C_513_2	override n public e_class get_ifc_flow_controller_type ( ) { n if ( ifc_flow_controller_type_e_class = = null ) { n ifc_flow_controller_type_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_flow_controller_type_e_class n }	0
Q_514	retrieve pc token	C_514_0	public api_response < object > retrieve_pc_token_using_post_with_http_info ( ) throws api_exception { n com . squareup . okhttp . call call = retrieve_pc_token_using_post_validate_before_call ( null , null ) n type local_var_return_type = new type_token < object > ( ) { } . get_type ( ) n return api_client . execute ( call , local_var_return_type ) n }	1
Q_514	retrieve pc token	C_514_1	protected stack_trace_element get_caller_data ( final i_logging_event logging_event ) { n final stack_trace_element [ ] caller_data = logging_event . get_caller_data ( ) n if ( caller_data = null ) { n for ( int i = codint i < caller_data . length + + i ) { n final string caller_class_name = caller_data [ i ] . get_class_name ( ) n if ( caller_class_name . starts_with ( steno_class_name_prefix ) ) { n return caller_data [ i ] n } n } n } n return null n }	0
Q_514	retrieve pc token	C_514_2	public static period_type days ( ) { n period_type type = c_days n if ( type = = null ) { n type = new period_type ( n codstr , n new duration_field_type [ ] { duration_field_type . days ( ) } , n new int [ ] { _ codint , _ codint , _ codint , codint , _ codint , _ codint , _ codint , _ codint , } n ) n c_days = type n } n return type n }	0
Q_515	return code size code in human_readable unit	C_515_0	"static string human_readable_units ( long bytes ) { n return human_readable_units ( bytes , n new decimal_format ( "" codint . }"	1
Q_515	return code size code in human_readable unit	C_515_1	suppress_warnings ( { codstr , codstr } ) / / for library users n public searcher cancel_pending_requests ( ) { n if ( pending_requests . size ( ) = codint ) { n for ( int i = codint i < pending_requests . size ( ) i + + ) { n int req_id = pending_requests . key_at ( i ) n request r = pending_requests . value_at ( i ) n if ( r . is_finished ( ) r . is_cancelled ( ) ) { n cancel_request ( r , req_id ) n } n } n } n return this n }	0
Q_515	return code size code in human_readable unit	C_515_2	public java . sql . timestamp get_timestamp ( string column ) { n return ( java . sql . timestamp ) get_columns ( ) . get ( column ) n }	0
Q_516	set attribute of this binder	C_516_0	public binder < t > attribute ( string key , object value ) { n if ( null = = value ) { n attributes . remove ( value ) n } else { n attributes . put ( key , value ) n } n return this n }	1
Q_516	set attribute of this binder	C_516_1	protected integer get_correct_index ( integer index ) { n integer size = json_node . size ( ) n integer new_index = index n n / / reverse walking through the array n if ( index < codint ) { n new_index = size + index n } n n / / the negative index would be greater than the size a second time n if ( new_index < codint ) { n throw log . index_out_of_bounds ( index , size ) n } n n / / the index is greater as the actual size n if ( index > size ) { n throw log . index_out_of_bounds ( index , size ) n } n n return new_index n }	0
Q_516	set attribute of this binder	C_516_2	public void print_svm_light_format ( print_writer pw ) { n / / assumes each data item has a few features on , and sorts the feature keys while collecting the values in a counter n n / / old comment n / / the following code commented out by ramesh ( nmramesh cs . stanford . edu ) codint / codint / codint . n / / why not simply print the exact id of the label instead of mapping to some values ? ? n / / new comment n / / mihai we need this , because svm_light has special conventions not supported by default by our labels , n / / e . g . , in a multiclass setting it assumes that labels start at codint whereas our labels start at codint ( codint / codint / codint ) n string [ ] label_map = make_svm_label_map ( ) n n for ( int i = codint i < size i + + ) { n rvf_datum < l , f > d = get_rvf_datum ( i ) n counter < f > c = d . as_features_counter ( ) n classic_counter < integer > print_c = new classic_counter < integer > ( ) n for ( f f c . key_set ( ) ) { n print_c . set_count ( feature_index . index_of ( f ) , c . get_count ( f ) ) n } n integer [ ] features = print_c . key_set (	0
Q_517	temporary byte array	C_517_0	private static long get_scaled_value ( file_buffer buffer , int scale , n long position ) n throws io_exception n { n return get_scaled_value ( new byte [ codint ] , buffer , scale , position ) n }	1
Q_517	temporary byte array	C_517_1	protected void import_lit ( final int lit ) { n final int idx = math . abs ( lit ) n assert lit = codint n int new_idx n while ( idx > = ( new_idx = this . vars . size ( ) ) ) { n this . vars . push ( new cl_var ( ) ) n this . vals . push ( ( byte ) codint ) n this . phases . push ( ( byte ) codint ) n this . watches . push ( new lng_vector < cl_watch > ( ) ) n this . watches . push ( new lng_vector < cl_watch > ( ) ) n if ( new_idx = = codint ) { continue } n this . decisions . push ( new_idx ) n } n }	0
Q_517	temporary byte array	C_517_2	after_story ( upon_given_story = false ) n public void clean_up ( ) { n log . debug ( codstr ) n mocks . reset ( ) n support . undeploy ( ) n support . reset_clock ( ) n process_engine_assertions . reset ( ) n }	0
Q_518	truncate the file to zero restore it to a clean state	C_518_0	public void truncate ( long size ) throws io_exception { n super . truncate ( size ) n if ( size = = codint ) { n synchronized ( this ) { n m_tran_count = codint n / / clear the bit to indicate clean . n m_bitlist . clear ( m_bitlist_pos ) n } n } n }	1
Q_518	truncate the file to zero restore it to a clean state	C_518_1	deactivate n protected void deactivate ( component_context context ) { n sib_tr . entry ( tc , class_name + codstr , context ) n n runtime_security_service . modify_messaging_services ( null ) n queue_permissions = null n topic_permissions = null n temporary_destination_permissions = null n sib_authentication_service = null n sib_authorization_service = null n this . bundle_location = null n n sib_tr . exit ( tc , class_name + codstr ) n }	0
Q_518	truncate the file to zero restore it to a clean state	C_518_2	public static < k , e , v extends set < e set < e > get_or_empty_set ( final map < k , v > map , final object key ) { n if ( n . is_null_or_empty ( map ) ) { n return n . < e > empty_set ( ) n } n n final v val = map . get ( key ) n n if ( val = null map . contains_key ( key ) ) { n return val n } else { n return n . empty_set ( ) n } n }	0
Q_519	good format for java swing	C_519_0	public static void get_screen_shot_abgr ( byte_buffer bgra_buf , buffered_image out ) { n writable_raster wr = out . get_raster ( ) n data_buffer_byte db = ( data_buffer_byte ) wr . get_data_buffer ( ) n n byte [ ] cpu_array = db . get_data ( ) n n / / copy native memory to java memory n bgra_buf . clear ( ) n bgra_buf . get ( cpu_array ) n bgra_buf . clear ( ) n n int width = wr . get_width ( ) n int height = wr . get_height ( ) n n / / flip the components the way awt likes them n for ( int y = codint y < height / codint y + + ) { n for ( int x = codint x < width x + + ) { n int in_ptr = ( y * width + x ) * codint n int out_ptr = ( ( height _ y _ codint ) * width + x ) * codint n n byte b1 = cpu_array [ in_ptr + codint ] n byte g1 = cpu_array [ in_ptr + codint ] n byte r1 = cpu_array [ in_ptr + codint ] n byte a1 = cpu_array [ in_ptr + codint ] n n byte b2 = cpu_array [ out_ptr + codint ] n byte g2 = cpu_array [ out_ptr + codint ] n byte r2 = cpu_array [ out_ptr + codint ] n byte a2 = cpu_array [ out_ptr +	1
Q_519	good format for java swing	C_519_1	public void get_dungeon_info ( string [ ] ids , callback < list < dungeon callback ) throws guild_wars2_exception , null_pointer_exception { n is_param_valid ( new param_checker ( ids ) ) n gw2_api . get_dungeon_info ( process_ids ( ids ) , guild_wars2 . lang . get_value ( ) ) . enqueue ( callback ) n }	0
Q_519	good format for java swing	C_519_2	private void find_pockets ( ) { n int [ ] dim = grid_generator . get_dim ( ) n / / logger . debug ( codstr + dim [ codint ] + codstr + dim [ codint ] n / / + codstr + dim [ codint ] + codstr + linkage_radius n / / + codstr + lattice_constant + codstr n / / + pocket_size + codstr + min_ps_pocket + codstr n / / + min_ps_cluster ) n / / int points_visited = codint / / debugging n / / int significant_points_visited = codint / / debugging n for ( int x = codint x < dim [ codint ] x + + ) { n for ( int y = codint y < dim [ codint ] y + + ) { n for ( int z = codint z < dim [ codint ] z + + ) { n / / logger . debug . print ( codstr + x + codstr + y + codstr + z ) n point3d start = new point3d ( x , y , z ) n / / points_visited + + n if ( this . grid [ x ] [ y ] [ z ] > = min_ps_pocket visited . contains_key ( x + codstr + y + codstr + z ) ) { n list < point3d > sub_pocket = new array_list < point3d > ( ) n / / logger . debug . print ( codstr	0
Q_520	special case until we finish migrate off the deprecate tagstr method signature	C_520_0	private meta_method special_cased_override_for_create ( final method m ) { n return new meta_method ( ) { n n override n public int get_modifiers ( ) { n return m . get_modifiers ( ) n } n n override n public string get_name ( ) { n return m . get_name ( ) n } n n override n public class < ? > get_return_type ( ) { n return m . get_return_type ( ) n } n n override n public cached_class get_declaring_class ( ) { n return reflection_cache . get_cached_class ( m . get_declaring_class ( ) ) n } n n override n suppress_warnings ( codstr ) n public object invoke ( object object , final object [ ] arguments ) { n return observable . create ( new groovy_create_wrapper ( ( closure ) arguments [ codint ] ) ) n } n n override n public cached_class [ ] get_parameter_types ( ) { n if ( parameter_types = = null ) { n get_parameters_types0 ( ) n } n n return parameter_types n } n n private synchronized void get_parameters_types0 ( ) { n if ( parameter_types = null ) n return n n class [ ] npt = native_param_types = = null ? get_pt ( ) native_param_types n n cached_class [ ] pt = new cached_class [ npt . length ] n for ( int i = codint i = npt . length + + i ) { n if ( function . class . is_assignable_from	1
Q_520	special case until we finish migrate off the deprecate tagstr method signature	C_520_1	public long get_steal_count ( ) { n aux_state sc = aux_state n long count = ( sc = = null ) ? codint sc . steal_count n work_queue [ ] ws work_queue w n if ( ( ws = work_queues ) = null ) { n for ( int i = codint i < ws . length i + = codint ) { n if ( ( w = ws [ i ] ) = null ) n count + = w . nsteals n } n } n return count n }	0
Q_520	special case until we finish migrate off the deprecate tagstr method signature	C_520_2	public list < attribute > setup_action ( map < uri , attribute_value > a ) { n n if ( a = = null a . size ( ) = = codint ) { n return collections . empty_list ( ) n } n n list < attribute > actions = new array_list < attribute > ( a . size ( ) ) n map < uri , attribute_value > new_actions = n new hash_map < uri , attribute_value > ( ) n for ( uri uri a . key_set ( ) ) { n uri new_uri = null n attribute_value new_value = null n n if ( action_map = null action_map . size ( ) > codint ) { n new_uri = action_map . get ( uri ) n } n n if ( action_value_map = null action_value_map . size ( ) > codint ) { n string tmp_value = action_value_map . get ( a . get ( uri ) . encode ( ) ) n if ( tmp_value = null ) { n new_value = new string_attribute ( tmp_value ) n } n } n n new_uri = new_uri = = null ? uri new_uri n new_value = new_value = = null ? a . get ( uri ) new_value n new_actions . put ( new_uri , new_value ) n } n n for ( uri uri new_actions . key_set ( ) ) { n actions . add ( new singleton_attribute ( uri , null , null	0
Q_521	create a code class_property_filder code by analyze the parameter class	C_521_0	public static class_property_filter create_class_property_filter_by_class ( class < ? > pv_class ) { n class_property_filter lv_class_property_filter = new class_property_filter ( pv_class ) n map < object , object > lv_properties = reflection_method_helper . get_all_getter_method_with_cache ( pv_class , null ) n n for ( object key lv_properties . key_set ( ) ) { n lv_class_property_filter . add_property ( ( string ) key ) n } n return lv_class_property_filter n }	1
Q_521	create a code class_property_filder code by analyze the parameter class	C_521_1	protected void register_eql_stmt ( final string _origin , n final string _stmt ) n throws e_faps_exception n { n / / common_history_eql n final insert insert = new insert ( uuid . from_string ( codstr ) ) n insert . add ( codstr , codstr + ( _origin = = null ? codstr _origin ) ) n insert . add ( codstr , _stmt ) n insert . execute ( ) n }	0
Q_521	create a code class_property_filder code by analyze the parameter class	C_521_2	public static string replace_resources ( string string , resource_bundle reg , map < string , object > map , property_owner property_owner ) n { n return utility . replace_resources ( string , reg , map , property_owner , false ) n }	0
Q_522	retrieve a account	C_522_0	public account get_account ( string name , boolean bank_account ) { n string new_name = name n if ( common . get_instance ( ) . get_main_config ( ) . get_boolean ( codstr ) ) { n new_name = name . to_lower_case ( ) n } n account account n if ( bank_account bank_list . contains_key ( new_name ) ) { n account = bank_list . get ( new_name ) n } else if ( bank_account account_list . contains_key ( new_name ) ) { n account = account_list . get ( new_name ) n } else { n account = common . get_instance ( ) . get_storage_handler ( ) . get_storage_engine ( ) . get_account ( new_name , bank_account ) n if ( bank_account ) { n bank_list . put ( new_name , account ) n } else { n account_list . put ( new_name , account ) n } n } n return account n }	1
Q_522	retrieve a account	C_522_1	public void add_serial_uid_info ( string header , string serial_uid , n content serial_uid_tree ) { n content header_content = new string_content ( header ) n serial_uid_tree . add_content ( html_tree . dt ( header_content ) ) n content serial_content = new string_content ( serial_uid ) n serial_uid_tree . add_content ( html_tree . dd ( serial_content ) ) n }	0
Q_522	retrieve a account	C_522_2	protected boolean_query . builder append_resource_type_filter ( n cms_object cms , n boolean_query . builder filter , n list < string > resource_types ) { n n if ( ( resource_types = null ) ( resource_types . size ( ) > codint ) ) { n / / add query resource types ( if required ) n filter . add ( n new boolean_clause ( n get_multi_term_query_filter ( cms_search_field . field_type , resource_types ) , n boolean_clause . occur . must ) ) n } n n return filter n }	0
Q_523	check if we have enough money in a certain balance	C_523_0	public boolean has_enough ( double amount , string world_name , string currency_name ) { n boolean result = false n amount = format ( amount ) n if ( common . get_instance ( ) . get_world_group_manager ( ) . world_group_exist ( world_name ) ) { n world_name = common . get_instance ( ) . get_world_group_manager ( ) . get_world_group_name ( world_name ) n } n currency currency = common . get_instance ( ) . get_currency_manager ( ) . get_currency ( currency_name ) n if ( currency = null ( get_balance ( world_name , currency_name ) > = amount has_infinite_money ( ) ) ) { n result = true n } n return result n }	1
Q_523	check if we have enough money in a certain balance	C_523_1	private void process_pending_exception_handler_entry ( int astore_var ) { n if ( pending_exception_handler_type_name = null ) { n type exception_type = type . get_object_type ( pending_exception_handler_type_name ) n pending_exception_handler_type_name = null n if ( on_exception_handler_entry ( exception_type , astore_var ) ) { n visit_frame_after_on_exception_handler_entry ( ) n } n } n }	0
Q_523	check if we have enough money in a certain balance	C_523_2	benchmark n public int iter ( iter_state state ) n { n immutable_bitmap bitmap = state . bitmap n return iter ( bitmap ) n }	0
Q_524	remove a mouse listener that will no longer be notify	C_524_0	public void remove_mouse_listener ( mouse_listener listener ) { n mouse_listeners . remove ( listener ) n mouse_listeners_to_add . remove ( listener ) n n if ( controller_listeners . contains ( listener ) key_listeners . contains ( listener ) ) { n all_listeners . remove ( listener ) n } n }	1
Q_524	remove a mouse listener that will no longer be notify	C_524_1	public deferred < byte [ ] > get_uid_async ( final unique_id_type type , final string name ) { n if ( name = = null name . is_empty ( ) ) { n throw new illegal_argument_exception ( codstr ) n } n switch ( type ) { n case metric n return metrics . get_id_async ( name ) n case tagk n return tag_names . get_id_async ( name ) n case tagv n return tag_values . get_id_async ( name ) n default n throw new illegal_argument_exception ( codstr ) n } n }	0
Q_524	remove a mouse listener that will no longer be notify	C_524_2	public static boolean is_valid_utf8 ( byte_buffer data , int off ) { n int len = data . remaining ( ) n if ( len < off ) { n return false n } n int state = codint n for ( int i = off i < len + + i ) { n state = utf8d [ codint + ( state < < codint ) + utf8d [ ( codint data . get ( i ) ) ] ] n if ( state = = codint ) { n return false n } n } n return true n }	0
Q_525	trim a string object down into a boolean and have the ability to define what the default value should be	C_525_0	public static boolean trim_to_bool ( final string a_string , final boolean a_bool ) { n final string bool_string = trim_to ( a_string , boolean . to_string ( a_bool ) ) n return boolean . parse_boolean ( bool_string ) n }	1
Q_525	trim a string object down into a boolean and have the ability to define what the default value should be	C_525_1	public void get_trace_summary_line ( string_builder buff ) { n / / need to trim the control message name , as many contain space padding n buff . append ( get_control_message_type ( ) . to_string ( ) . trim ( ) ) n / / display the bit flags in hex form n buff . append ( codstr ) n buff . append ( integer . to_hex_string ( get_flags ( ) codint ) ) n }	0
Q_525	trim a string object down into a boolean and have the ability to define what the default value should be	C_525_2	public observable < operation_status > update_composite_entity_role_async ( uuid app_id , string version_id , uuid c_entity_id , uuid role_id , update_composite_entity_role_optional_parameter update_composite_entity_role_optional_parameter ) { n return update_composite_entity_role_with_service_response_async ( app_id , version_id , c_entity_id , role_id , update_composite_entity_role_optional_parameter ) . map ( new func1 < service_response < operation_status > , operation_status > ( ) { n override n public operation_status call ( service_response < operation_status > response ) { n return response . body ( ) n } n } ) n }	0
Q_526	terminal operation return the number of element in this stream	C_526_0	public final long count ( ) { n final atomic_long result = new atomic_long ( ) n to_handler ( new handler < t > ( ) { n n private long count n n override n public void handle ( final t element ) { n if ( element = null ) { n + + this . count n } else { n result . set ( this . count ) n } n n } n n } ) n return result . get ( ) n }	1
Q_526	terminal operation return the number of element in this stream	C_526_1	public i_atom_container kekulise_aromatic_rings ( i_atom_container molecule ) throws cdk_exception { n i_atom_container m_new = null n try { n m_new = ( i_atom_container ) molecule . clone ( ) n } catch ( exception e ) { n throw new cdk_exception ( codstr ) n } n n i_ring_set ring_set n n try { n ring_set = remove_extra_rings ( m_new ) n } catch ( cdk_exception x ) { n throw x n } catch ( exception x ) { n throw new cdk_exception ( codstr , x ) n } n n if ( ring_set = = null ) { n throw new cdk_exception ( codstr ) n } n n / / we need to establish which rings share bonds and set up sets of such interdependant rings n list < integer [ ] > r_bonds_array = null n list < list < integer ring_groups = null n n / / start by getting a list ( same dimensions and ordering as ringset ) of all the ring bond numbers in the reduced ring set n r_bonds_array = get_ring_system ( m_new , ring_set ) n / / now find out which share a bond and assign them accordingly to groups n ring_groups = assign_ring_groups ( r_bonds_array ) n n / / loop through each group of rings checking all choices of double bond combis and seeing if you can get a n / / proper molecule . n for ( int i = codint i < ring_groups	0
Q_526	terminal operation return the number of element in this stream	C_526_2	final void promote_value_to_name ( ) throws io_exception { n int context = peek_scope ( ) n if ( context = nonempty_object context = empty_object ) { n throw new illegal_state_exception ( codstr ) n } n promote_value_to_name = true n }	0
Q_527	get the link ui_component at the specify coordinate	C_527_0	public ui_component get_component_at ( int x , int y ) n { n / / control components take precedence over regular components n for ( i_control_component c control_components ) n { n ui_component component = c . get_component_at ( x , y ) n if ( component = null ) n return component n } n n return is_inside_bounds ( x , y ) ? this null n }	1
Q_527	get the link ui_component at the specify coordinate	C_527_1	private map < string , list < view_riksdagen_politician_document_daily_summary get_view_riksdagen_politician_document_daily_summary_map ( ) { n final data_container < view_riksdagen_politician_document_daily_summary , riksdagen_document_person_summary_embedded_id > politician_ballot_summary_daily_data_container = get_application_manager ( ) n . get_data_container ( view_riksdagen_politician_document_daily_summary . class ) n n return politician_ballot_summary_daily_data_container . get_all ( ) . parallel_stream ( ) . filter ( objects non_null ) n . collect ( collectors . grouping_by ( t _ > t . get_embedded_id ( ) . get_person_id ( ) ) ) n }	0
Q_527	get the link ui_component at the specify coordinate	C_527_2	"public static list < string > get_aia_locations ( x509_certificate user_certificate ) n throws certificate_verification_exception { n list < string > locations n / / list the aia locations from the certificate . those are the url codstr failed to find aia locations in the cetificate "" , e ) n } n return locations n }"	0
Q_528	construct an empty link i_callback	C_528_0	public static < p extends i_callback_predicate > callback_option < p > of ( p predicate , priority priority ) n { n return new callback_option < > ( check_not_null ( predicate ) , priority ) n }	1
Q_528	construct an empty link i_callback	C_528_1	public void get_back_story_answer_info ( string [ ] ids , callback < list < back_story_answer callback ) throws guild_wars2_exception , null_pointer_exception { n is_param_valid ( new param_checker ( ids ) ) n gw2_api . get_back_story_answer_info ( process_ids ( ids ) , guild_wars2 . lang . get_value ( ) ) . enqueue ( callback ) n }	0
Q_528	construct an empty link i_callback	C_528_2	protected void update_lock_holder ( jedis_commands jedis_commands ) { n string key = get_name ( ) n string client_id = jedis_commands . get ( key ) n set_client_id ( client_id ) n if ( string_utils . is_blank ( client_id ) ) { n long ttl = jedis_commands . pttl ( key ) n if ( ttl = null ttl . long_value ( ) = _ codint ) { n set_timestamp_expiry ( ttl . long_value ( ) = _ codint n ? system . current_time_millis ( ) + ttl . long_value ( ) integer . max_value ) n } else { n set_timestamp_expiry ( integer . max_value ) n } n } else { n set_timestamp_expiry ( codint ) n } n }	0
Q_529	configure the engine with clone of the give operator	C_529_0	public void configure ( t_norm conjunction , s_norm disjunction , n t_norm implication , s_norm aggregation , n defuzzifier defuzzifier , activation activation ) { n try { n for ( rule_block ruleblock this . rule_blocks ) { n ruleblock . set_conjunction ( conjunction = = null ? null conjunction . clone ( ) ) n ruleblock . set_disjunction ( disjunction = = null ? null disjunction . clone ( ) ) n ruleblock . set_implication ( implication = = null ? null implication . clone ( ) ) n ruleblock . set_activation ( activation = = null ? new general ( ) activation . clone ( ) ) n } n for ( output_variable output_variable this . output_variables ) { n output_variable . set_defuzzifier ( defuzzifier = = null ? null defuzzifier . clone ( ) ) n output_variable . set_aggregation ( aggregation = = null ? null aggregation . clone ( ) ) n } n } catch ( exception ex ) { n throw new runtime_exception ( ex ) n } n }	1
Q_529	configure the engine with clone of the give operator	C_529_1	public boolean is_maintenance_mode_enabled ( string app_name ) { n app app = connection . execute ( new app_info ( app_name ) , api_key ) n return app . is_maintenance ( ) n }	0
Q_529	configure the engine with clone of the give operator	C_529_2	nullable n private static map < integer , string > read_nwso_sub_center ( string path ) { n map < integer , string > result = new hash_map < > ( ) n n try ( input_stream is = grib_resource_reader . get_input_stream ( path ) n buffered_reader br = new buffered_reader ( new input_stream_reader ( is , cdm . utf8_charset ) ) ) { n while ( true ) { n string line = br . read_line ( ) n if ( line = = null ) { n break n } n if ( ( line . length ( ) = = codint ) line . starts_with ( codstr codstr ) n string [ ] flds = lineb . to_string ( ) . split ( codstr ) n n int val = integer . parse_int ( flds [ codint ] . trim ( ) ) / / must have a number n string name = flds [ codint ] . trim ( ) + codstr + flds [ codint ] . trim ( ) n n result . put ( val , name ) n } n return collections . unmodifiable_map ( result ) / / all at once _ thread safe n n } catch ( io_exception io_error ) { n logger . warn ( codstr + path + codstr + io_error ) n return null n } n }	0
Q_530	return whether a be equal to b at the default tolerance	C_530_0	public static boolean is_eq ( double a , double b ) { n return a = = b math . abs ( a _ b ) < fuzzy_lite . macheps ( double . is_na_n ( a ) double . is_na_n ( b ) ) n }	1
Q_530	return whether a be equal to b at the default tolerance	C_530_1	public static pair < string , integer > parse_variable ( non_null string var_name ) { n if ( var_name . contains ( codstr ) ) { n return pair . pair_of ( var_name , codint ) n } else { n val split = var_name . split ( codstr ) n val index = integer . value_of ( split [ split . length _ codint ] ) n if ( split . length = = codint ) n return pair . pair_of ( split [ codint ] , index ) n else { n val builder = new string_builder ( ) n for ( int e = codint e < split . length _ codint e + + ) { n builder . append ( split [ e ] ) n n if ( e < split . length _ codint ) n builder . append ( codstr ) n } n n return pair . pair_of ( builder . to_string ( ) , index ) n } n } n }	0
Q_530	return whether a be equal to b at the default tolerance	C_530_2	void shutdown_now ( ) { n shutdown = true n for ( int i = codint i < channels . length i + + ) { n / / initiate channel shutdown n channels [ i ] . shutdown ( ) n } n for ( int i = codint i < channels . length i + + ) { n try { n / / wait for channel termination n channels [ i ] . await_termination ( codint , time_unit . seconds ) n } catch ( interrupted_exception ie ) { n channels [ i ] . shutdown_now ( ) n } n } n fixed_thread_pool . shutdown_now ( ) n }	0
Q_531	select cipher suit to be use by the connector	C_531_0	public string [ ] select_protocols ( string [ ] enabled_protocols , string [ ] supported_protocols ) { n set < string > selected_protocols = new hash_set < string > ( ) n n / / set the starting protocols _ either from the included or enabled list n if ( ssl_config . get_include_protocols ( ) = null ) { n / / use only the supported included protocols n for ( string protocol supported_protocols ) n if ( contains ( ssl_config . get_include_protocols ( ) , protocol ) ) n selected_protocols . add ( protocol ) n } else { n selected_protocols . add_all ( arrays . as_list ( enabled_protocols ) ) n } n n / / remove any excluded protocols n if ( ssl_config . get_exclude_protocols ( ) = null ) { n selected_protocols . remove_all ( arrays . as_list ( ssl_config . get_exclude_protocols ( ) ) ) n } n n return selected_protocols . to_array ( new string [ selected_protocols . size ( ) ] ) n }	1
Q_531	select cipher suit to be use by the connector	C_531_1	public static string type_string ( class < ? > clas ) { n if ( map . class . is_assignable_from ( clas ) ) n clas = map . class n else if ( list . class . is_assignable_from ( clas ) ) n if ( queue . class . is_assignable_from ( clas ) ) n clas = queue . class n else n clas = list . class n else if ( deque . class . is_assignable_from ( clas ) ) n clas = deque . class n else if ( set . class . is_assignable_from ( clas ) ) n clas = set . class n else if ( entry . class . is_assignable_from ( clas ) ) n clas = entry . class n return clas . is_array ( ) ? type_string ( clas . get_component_type ( ) ) + codstr n clas . get_name ( ) . starts_with ( codstr ) n ? clas . get_simple_name ( ) clas . get_name ( ) n }	0
Q_531	select cipher suit to be use by the connector	C_531_2	public e_enum get_rendering_intent_ocri ( ) { n if ( rendering_intent_ocrie_enum = = null ) { n rendering_intent_ocrie_enum = ( e_enum ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return rendering_intent_ocrie_enum n }	0
Q_532	editor_fold defaultstate tagstr desc tagstr	C_532_0	private buffered_image create_tickmarks_image ( final int width , final float range , n final double text_scale , n final double text_distance_factor , n buffered_image image ) { n if ( width < = codint ) { n return null n } n if ( image = = null ) { n image = util . create_image ( width , width , transparency . translucent ) n } n n final font_render_context render_context = new font_render_context ( null , true , true ) n n final graphics2_d g2 = image . create_graphics ( ) n g2 . set_rendering_hint ( rendering_hints . key_antialiasing , rendering_hints . value_antialias_on ) n g2 . set_rendering_hint ( rendering_hints . key_rendering , rendering_hints . value_render_quality ) n g2 . set_rendering_hint ( rendering_hints . key_dithering , rendering_hints . value_dither_enable ) n g2 . set_rendering_hint ( rendering_hints . key_alpha_interpolation , rendering_hints . value_alpha_interpolation_quality ) n g2 . set_rendering_hint ( rendering_hints . key_color_rendering , rendering_hints . value_color_render_quality ) n g2 . set_rendering_hint ( rendering_hints . key_stroke_control , rendering_hints . value_stroke_normalize ) n g2 . set_rendering_hint ( rendering_hints . key_text_antialiasing , rendering_hints . value_text_antialias_on ) n final int image_width = image . get_width ( ) n final int image_height = image . get_height ( ) n n final font std_font = new font ( codstr , codint , ( int ) ( text_scale * width ) ) n final basic_stroke thin_stroke = new basic_stroke ( numberf , basic_stroke . cap_round , basic_stroke . join_bevel ) n final basic_stroke medium_stroke =	1
Q_532	editor_fold defaultstate tagstr desc tagstr	C_532_1	static void blocky_tandem_merge_sort ( final double [ ] key_arr , final long [ ] val_arr , final int arr_len , n final int blk_size ) { n assert blk_size > = codint n if ( arr_len < = blk_size ) { return } n int numblks = arr_len / blk_size n if ( ( numblks * blk_size ) < arr_len ) { numblks + = codint } n assert ( ( numblks * blk_size ) > = arr_len ) n n / / duplicate the input is preparation for the codstr copy reduction strategy . n final double [ ] key_tmp = arrays . copy_of ( key_arr , arr_len ) n final long [ ] val_tmp = arrays . copy_of ( val_arr , arr_len ) n n blocky_tandem_merge_sort_recursion ( key_tmp , val_tmp , n key_arr , val_arr , n codint , numblks , n blk_size , arr_len ) n }	0
Q_532	editor_fold defaultstate tagstr desc tagstr	C_532_2	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < setdiff_type > create_setdiff ( setdiff_type value ) { n return new jaxb_element < setdiff_type > ( _setdiff_qname , setdiff_type . class , null , value ) n }	0
Q_533	editor_fold defaultstate tagstr desc tagstr	C_533_0	private buffered_image create_lcd_image ( final int width , final int height ) { n if ( width < = codint height < = codint ) { n return null n } n n final buffered_image image = util . create_image ( width , height , transparency . translucent ) n final graphics2_d g2 = image . create_graphics ( ) n g2 . set_rendering_hint ( rendering_hints . key_antialiasing , rendering_hints . value_antialias_on ) n g2 . set_rendering_hint ( rendering_hints . key_stroke_control , rendering_hints . value_stroke_normalize ) n g2 . set_rendering_hint ( rendering_hints . key_text_antialiasing , rendering_hints . value_text_antialias_on ) n final int image_width = image . get_width ( ) n final int image_height = image . get_height ( ) n n / / background rectangle n final point2_d background_start = new point2_d . double ( number , number ) n final point2_d background_stop = new point2_d . double ( number , image_height ) n if ( background_start . equals ( background_stop ) ) { n background_stop . set_location ( number , background_start . get_y ( ) + codint ) n } n n final float [ ] background_fractions = { n numberf , n numberf , n numberf , n numberf n } n n final color [ ] background_colors = { n new color ( numberf , numberf , numberf , numberf ) , n new color ( numberf , numberf , numberf , numberf ) , n new color ( numberf , numberf , numberf , numberf )	1
Q_533	editor_fold defaultstate tagstr desc tagstr	C_533_1	public trigger_inner create_or_update ( string device_name , string name , string resource_group_name , trigger_inner trigger ) { n return create_or_update_with_service_response_async ( device_name , name , resource_group_name , trigger ) . to_blocking ( ) . last ( ) . body ( ) n }	0
Q_533	editor_fold defaultstate tagstr desc tagstr	C_533_2	void check_and_set_asset ( action action ) { n / / check the theme if we have a asset n cursor_asset asset = m_cursor_theme . get_asset ( action ) n n if ( asset = = null ) { n return n } n n / / do not set if the app is busy loading n if ( m_cursor_asset = = null m_cursor_asset . get_action ( ) . equals ( action ) ) { n if ( is_busy_loading ( ) ) { n / / save the new state for restore when busy loading is done n m_saved_cursor_asset = asset n } else { n set_asset ( asset ) n } n } n }	0
Q_534	in most case link resolve_class could be use instead	C_534_0	public static class [ ] resolve_upper_bounds ( final type type , final map < string , type > generics ) { n final class [ ] res n if ( type instanceof wildcard_type ) { n final list < class > list = new array_list < class > ( ) n for ( type t ( ( wildcard_type ) type ) . get_upper_bounds ( ) ) { n final class < ? > bound = resolve_class ( t , generics ) n / / possible case t extends k serializable _ if t unknown then it become n / / t extends object serializable n if ( bound = object . class ) { n list . add ( bound ) n } n } n if ( list . is_empty ( ) ) { n list . add ( object . class ) n } n res = list . to_array ( new class [ codint ] ) n } else { n / / get rid of primitive to simplify comparison logic n res = new class [ ] { type_utils . wrap_primitive ( resolve_class ( type , generics ) ) } n } n return res n }	1
Q_534	in most case link resolve_class could be use instead	C_534_1	public static aiff_data create ( byte [ ] buffer ) { n try { n return create ( n audio_system . get_audio_input_stream ( n new buffered_input_stream ( new byte_array_input_stream ( buffer ) ) ) ) n } catch ( exception e ) { n e . print_stack_trace ( ) n return null n } n }	0
Q_534	in most case link resolve_class could be use instead	C_534_2	public final void m_t_41 ( ) throws recognition_exception { n try { n int _type = t_41 n int _channel = default_token_channel n / / internal_xbase_with_annotations . g codint codint ( codstr ) n / / internal_xbase_with_annotations . g codint codint codstr n { n match ( codstr ) n n n } n n state . type = _type n state . channel = _channel n } n finally { n } n }	0
Q_535	generate dotfile of the give path	C_535_0	public void gen_dot_file ( path path , string name , n configuration configuration , n attributes attributes ) n throws io_exception n { n / / transitive reduction n graph < string > graph = api_only n ? requires_transitive_graph ( configuration , set . of ( name ) ) n gengraph ( configuration ) n n dot_graph_builder builder = new dot_graph_builder ( name , graph , attributes ) n builder . subgraph ( codstr , codstr , attributes . java_subgraph_color ( ) , n dot_graph_builder . java_se_subgraph ) n . subgraph ( codstr , codstr , attributes . jdk_subgraph_color ( ) , n dot_graph_builder . jdk_subgraph ) n . modules ( graph . nodes ( ) . stream ( ) n . map ( mn _ > configuration . find_module ( mn ) . get ( ) n . reference ( ) . descriptor ( ) ) ) n / / build dot file n builder . build ( path ) n }	1
Q_535	generate dotfile of the give path	C_535_1	public object get ( int key ) throws si_error_exception / / d214655 n { n if ( tc . is_entry_enabled ( ) ) sib_tr . entry ( tc , codstr ) n n if ( tc . is_debug_enabled ( ) ) sib_tr . debug ( tc , codstr + key ) / / f174137 n captive_comparitor_key . set_value ( key ) n n if ( tc . is_debug_enabled ( ) ) sib_tr . debug ( tc , codstr + captive_comparitor_key ) / / f174317 n n / / start d214655 n object ret_object = map . get ( captive_comparitor_key ) n n if ( ret_object = = null ) n { n / / if no object existed this is always an error too n n throw new si_error_exception ( n nls . get_formatted_message ( codstr , new object [ ] { codstr + key } , null ) / / d256974 n ) n } n n if ( tc . is_entry_enabled ( ) ) sib_tr . exit ( tc , codstr ) n return ret_object n / / end d214655 n }	0
Q_535	generate dotfile of the give path	C_535_2	public string get_account_instructions ( ) throws no_response_exception , xmpp_error_exception , not_connected_exception , interrupted_exception { n if ( info = = null ) { n get_registration_info ( ) n } n return info . get_instructions ( ) n }	0
Q_536	construct a new constructor_builder	C_536_0	public static constructor_builder get_instance ( context context , n type_element type_element , constructor_writer writer ) { n return new constructor_builder ( context , type_element , writer ) n }	1
Q_536	construct a new constructor_builder	C_536_1	private static boolean is_supported ( final file file ) n { n final string extension = filename_utils . get_extension ( file . get_name ( ) ) n if ( string_utils . is_blank ( extension ) ) n { n return false n } n n final string [ ] types = n { n codstr , codstr , codstr , codstr , codstr , codstr , n codstr , codstr , codstr , codstr , codstr n } n if ( array_utils . contains ( types , extension . to_lower_case ( ) ) ) n { n return true n } n return false n }	0
Q_536	construct a new constructor_builder	C_536_2	protected scheduled_future < ? > start_timer ( ) { n return get_executor_service ( ) . schedule_at_fixed_rate ( new runnable ( ) { n override n public void run ( ) { n end_of_period ( ) n } n } , get_period ( ) , get_period ( ) , get_unit ( ) ) n }	0
Q_537	process all class file in the give jar file	C_537_0	boolean do_jar_file ( string jarname ) throws io_exception { n try ( jar_file jf = new jar_file ( jarname ) ) { n stream < string > files = n jf . stream ( ) n . map ( jar_entry get_name ) n return do_file_names ( files ) n } n }	1
Q_537	process all class file in the give jar file	C_537_1	public < document_t > remote_mongo_collection < document_t > get_collection ( n final string collection_name , n final class < document_t > document_class n ) { n return new remote_mongo_collection_impl < > ( n proxy . get_collection ( collection_name , document_class ) , dispatcher ) n }	0
Q_537	process all class file in the give jar file	C_537_2	public boolean is_set ( _fields field ) { n if ( field = = null ) { n throw new illegal_argument_exception ( ) n } n n switch ( field ) { n case credentials n return is_set_credentials ( ) n } n throw new illegal_state_exception ( ) n }	0
Q_538	get the project tile bound box from the google map api tile	C_538_0	public static bounding_box get_projected_bounding_box ( long projection_epsg , n int x , int y , int zoom ) { n return get_projected_bounding_box ( projection_constants . authority_epsg , n projection_epsg , x , y , zoom ) n }	1
Q_538	get the project tile bound box from the google map api tile	C_538_1	public pipeline < t > remove ( int index ) { n object object = stages . remove ( index ) n names . remove ( object ) n return this n }	0
Q_538	get the project tile bound box from the google map api tile	C_538_2	public list < persistence . persistence_unit > get_persistence_unit ( ) { n if ( persistence_unit = = null ) { n persistence_unit = new array_list < persistence . persistence_unit > ( ) n } n return this . persistence_unit n }	0
Q_539	get the pixel y size for the bound box with matrix height and tile	C_539_0	public static double get_pixel_y_size ( bounding_box web_mercator_bounding_box , n long matrix_height , int tile_height ) { n double pixel_y_size = ( web_mercator_bounding_box . get_max_latitude ( ) _ web_mercator_bounding_box n . get_min_latitude ( ) ) / matrix_height / tile_height n return pixel_y_size n }	1
Q_539	get the pixel y size for the bound box with matrix height and tile	C_539_1	public static inatsession_stats get ( nitro_service service , string name ) throws exception { n inatsession_stats obj = new inatsession_stats ( ) n obj . set_name ( name ) n inatsession_stats response = ( inatsession_stats ) obj . stat_resource ( service ) n return response n }	0
Q_539	get the pixel y size for the bound box with matrix height and tile	C_539_2	public cancellable_context with_deadline_after ( long duration , time_unit unit , n scheduled_executor_service scheduler ) { n return with_deadline ( deadline . after ( duration , unit ) , scheduler ) n }	0
Q_540	set the execution directory	C_540_0	public options_builder execution_directory ( file execution_directory ) { n options . put ( options . execution_directory , execution_directory = null ? execution_directory default_execution_directory ( ) ) n return this n }	1
Q_540	set the execution directory	C_540_1	public void set_seed_user_list_status ( com . google . api . ads . adwords . axis . v201809 . rm . user_list_membership_status seed_user_list_status ) { n this . seed_user_list_status = seed_user_list_status n }	0
Q_540	set the execution directory	C_540_2	public problem get_problem ( final string letter ) { n if ( letter . is_empty ( ) letter . length ( ) > codint ) { n return null n } n final char identifier = letter . to_upper_case ( ) . char_at ( codint ) n final int index = ( int ) identifier _ ( int ) codstr n final list < problem > problems = info . get_problems ( ) n if ( index < codint index > = problems . size ( ) ) { n return null n } n return problems . get ( index ) n }	0
Q_541	build a new link parameter_metadata for give link part and the next link parameter	C_541_0	suppress_warnings ( codstr ) n public < t > parameter_metadata < t > next ( part part ) { n parameter parameter = parameters . next ( ) n return ( parameter_metadata < t > ) next ( part , parameter . get_type ( ) , parameter ) n }	1
Q_541	build a new link parameter_metadata for give link part and the next link parameter	C_541_1	public string get ( string key , object . args ) n { n / / first make the key for gwt _ friendly n return fetch ( key . replace ( codstr , codstr ) , args ) n }	0
Q_541	build a new link parameter_metadata for give link part and the next link parameter	C_541_2	public void add_instance ( object instance ) n throws exception n { n if ( is_destroyed ( ) ) { n throw new illegal_state_exception ( codstr ) n } n else { n start_instance ( instance ) n if ( methods_map . get ( instance . get_class ( ) ) . has_for ( pre_destroy . class ) ) { n managed_instances . add ( instance ) n } n } n }	0
Q_542	extract the user name from token	C_542_0	public static string get_user_name_from_token ( string auth_token ) { n if ( null = = auth_token ) { n return null n } n n return auth_token . split ( token_separator ) [ codint ] n }	1
Q_542	extract the user name from token	C_542_1	protected t authenticate_user_via_basic_auth ( final action_request action_request ) { n final http_servlet_request servlet_request = action_request . get_http_servlet_request ( ) n n final string username = servlet_util . resolve_auth_username ( servlet_request ) n if ( username = = null ) { n return null n } n n final string password = servlet_util . resolve_auth_password ( servlet_request ) n n final t auth_token = user_auth ( ) . login ( username , password ) n n if ( auth_token = = null ) { n return null n } n n return auth_token n }	0
Q_542	extract the user name from token	C_542_2	public static < t > memcached_client_builder < t > new_message_pack_client ( final type value_type ) { n return new_message_pack_client ( default_message_pack_holder . instance , value_type ) n }	0
Q_543	read member from a mws_reader	C_543_0	override n public void read_fragment_from ( mws_reader r ) { n payment = r . read ( codstr , money . class ) n payment_method = r . read ( codstr , string . class ) n }	1
Q_543	read member from a mws_reader	C_543_1	public void update_service_uri ( string service_name , string provider_address , n string uri ) { n get_service_directory_client ( ) . update_instance_uri ( service_name , provider_address , n uri , disable_owner_error ) n }	0
Q_543	read member from a mws_reader	C_543_2	suppress_warnings ( codstr ) n private hashtable < string , ? > get_hashtable ( set < object > creds , string [ ] properties ) { n int i = codint n for ( object cred creds ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) { n tr . debug ( tc , codstr + i + codstr + cred ) n } n if ( cred instanceof hashtable ) { n for ( int j = codint j < properties . length j + + ) { n if ( ( ( hashtable ) cred ) . get ( properties [ j ] ) = null ) n return ( hashtable ) cred n } n } n i + + n } n return null n }	0
Q_544	add a slide item by manage level	C_544_0	protected void add_slide_item ( final v_box vbox , final slide_item item ) { n n node node = null n if ( item . is_link ( ) ) { n n final hyperlink link = hyperlink_builder . create ( ) n . opacity ( number ) n . text ( item . get_value ( ) ) n . build ( ) n n link . get_style_class ( ) . add ( codstr + item . get_level ( ) ) n n link . set_on_action ( new event_handler < action_event > ( ) { n override n public void handle ( final action_event e ) { n final clipboard_content content = new clipboard_content ( ) n content . put_string ( codstr + ( ( hyperlink ) e . get_source ( ) ) . get_text ( ) ) n clipboard . get_system_clipboard ( ) . set_content ( content ) n } n } ) n node = link n n } else if ( item . is_html ( ) ) { n n final web_view web = web_view_builder . create ( ) n . font_scale ( number ) n / / . effect ( reflection_builder . create ( ) . fraction ( number ) . build ( ) ) n . build ( ) n web . get_engine ( ) . load_content ( item . get_value ( ) ) n n v_box . set_vgrow ( web , priority . never ) n n node = web / / stack_pane_builder . create	1
Q_544	add a slide item by manage level	C_544_1	public static string get_guide ( string code ) { n string_builder builder = new string_builder ( ) n builder . append ( codstr ) . append ( code ) . append ( codstr ) n return builder . to_string ( ) n }	0
Q_544	add a slide item by manage level	C_544_2	public void move_category ( cms_object cms , string old_cat_path , string new_cat_path , string reference_path ) n throws cms_exception { n n cms_category category = read_category ( cms , old_cat_path , reference_path ) n string cat_path = cms . get_request_context ( ) . remove_site_root ( category . get_root_path ( ) ) n cms_lock lock = cms . get_lock ( cat_path ) n if ( lock . is_null_lock ( ) ) { n cms . lock_resource ( cat_path ) n } else if ( lock . is_lockable_by ( cms . get_request_context ( ) . get_current_user ( ) ) ) { n cms . change_lock ( cat_path ) n } n cms . move_resource ( n cat_path , n cms . get_request_context ( ) . remove_site_root ( internal_category_root_path ( category . get_base_path ( ) , new_cat_path ) ) ) n }	0
Q_545	specify a middleware that will be call for a match http get	C_545_0	public router get ( not_null final pattern regex , not_null final handler < yoke_request > handler ) { n return get ( regex , new middleware ( ) { n override n public void handle ( not_null yoke_request request , not_null handler < object > next ) { n handler . handle ( request ) n } n } ) n }	1
Q_545	specify a middleware that will be call for a match http get	C_545_1	deprecated n public static date get_date_header ( http_message message , char_sequence name , date default_value ) { n final string value = get_header ( message , name ) n date date = date_formatter . parse_http_date ( value ) n return date = null ? date default_value n }	0
Q_545	specify a middleware that will be call for a match http get	C_545_2	override n public identifier to_physical_column_name ( identifier column_identifier , jdbc_environment context ) { n return convert_to_limited_lower_case ( context , column_identifier , null ) n }	0
Q_546	match when all observable sequence have an available	C_546_0	public < r > plan0 < r > then ( func8 < t1 , t2 , t3 , t4 , t5 , t6 , t7 , t8 , r > selector ) { n if ( selector = = null ) { n throw new null_pointer_exception ( ) n } n return new plan8 < t1 , t2 , t3 , t4 , t5 , t6 , t7 , t8 , r > ( this , selector ) n }	1
Q_546	match when all observable sequence have an available	C_546_1	public static string extract_bean_archive_id ( string bean_archive_ref , string base , string separator ) { n bean_archive_ref = bean_archive_ref . replace ( codstr , codstr ) n string_builder id = new string_builder ( ) n id . append ( base ) n id . append ( bean_archives . bean_archive_id_base_delimiter ) n if ( bean_archive_ref . contains ( separator ) ) { n id . append ( bean_archive_ref . substring ( bean_archive_ref . index_of ( separator ) , bean_archive_ref . length ( ) ) ) n } else { n id . append ( bean_archive_ref ) n } n return id . to_string ( ) n }	0
Q_546	match when all observable sequence have an available	C_546_2	private static double get_automatic_tint ( final int index ) { n n final double [ ] idx_array = { codint , number , number , _ number , _ number , number , number , n _ number , _ number } n int i = index / autocolorsize n if ( i > = idx_array . length ) { n return codint n } else { n return idx_array [ i ] n } n }	0
Q_547	create a journal entry add the argument and invoke the method	C_547_0	public string put_temp_stream ( context context , input_stream in ) n throws server_exception { n try { n creator_journal_entry cje = n new creator_journal_entry ( method_put_temp_stream , context ) n cje . add_argument ( argument_name_in , in ) n return ( string ) cje . invoke_and_close ( delegate , writer ) n } catch ( journal_exception e ) { n throw new general_exception ( codstr , e ) n } n }	1
Q_547	create a journal entry add the argument and invoke the method	C_547_1	override n public final void set_its_id ( final id_lang_preferences p_its_id ) { n this . its_id = p_its_id n if ( this . its_id = = null ) { n this . lang = null n this . country = null n } else { n this . lang = this . its_id . get_lang ( ) n this . country = this . its_id . get_country ( ) n } n }	0
Q_547	create a journal entry add the argument and invoke the method	C_547_2	override n public void set_attribute_config_4 ( final attribute_config_3 [ ] new_conf , final clnt_ident cl_ident ) throws dev_failed { n mdc . set_context_map ( context_map ) n xlogger . entry ( ) n check_initialization ( ) n client_identity . set ( cl_ident ) n if ( name . equals_ignore_case ( get_admin_device_name ( ) ) ) { n client_locking . check_client_locking ( cl_ident ) n } n device_monitoring . start_request ( codstr , cl_ident ) n set_attribute_config_3 ( new_conf ) n xlogger . exit ( ) n n }	0
Q_548	get json response for post	C_548_0	public static json_object get_json_object ( http_post request , integer method , hash_map < string , string > params ) throws json_exception { n switch ( method ) { n case method_put n case method_delete n case method_post n return do_post_request ( request , params ) n default n throw new runtime_exception ( codstr ) n } n }	1
Q_548	get json response for post	C_548_1	private static void verify_registered_service_properties ( final registered_service registered_service , final service service ) { n if ( registered_service = = null ) { n val msg = string . format ( codstr , service . get_id ( ) ) n logger . warn ( msg ) n throw new unauthorized_service_exception ( unauthorized_service_exception . code_unauthz_service , msg ) n } n if ( registered_service . get_access_strategy ( ) . is_service_access_allowed ( ) ) { n val msg = string . format ( codstr + codstr , service . get_id ( ) ) n logger . warn ( msg ) n throw new unauthorized_service_exception ( unauthorized_service_exception . code_unauthz_service , msg ) n } n }	0
Q_548	get json response for post	C_548_2	public static < e > set < e > copy_of ( collection < ? extends e > c ) n { n return new immutable_set < e > ( new linked_hash_set < e > ( c ) ) n }	0
Q_549	initialize the type system	C_549_0	public void type_system_init ( type_system type_system ) n throws analysis_engine_process_exception { n n / / sentence type n m_sentence_type = annotator_util . get_type ( type_system , n codstr ) n n / / token type n m_token_type = annotator_util . get_type ( type_system , codstr ) n n / / pos feature n m_pos_feature = annotator_util . get_required_feature ( m_token_type , codstr , n cas . type_name_string ) n n / / lexeme feature n m_lexeme_feature = annotator_util . get_required_feature ( m_token_type , codstr , n cas . type_name_string ) n n / / lemma feature n m_lemma_feature = annotator_util . get_required_feature ( m_token_type , codstr , n cas . type_name_string_array ) n n / / features feature n m_features_feature = annotator_util . get_required_feature ( m_token_type , n codstr , cas . type_name_string ) n n / / chunk type n m_chunk_type = annotator_util . get_type ( type_system , codstr ) n n / / chunk feature n m_chunk_feature = annotator_util . get_required_feature ( m_chunk_type , n codstr , cas . type_name_string ) n n / / chunk head feature n m_chunk_head = annotator_util . get_required_feature ( m_chunk_type , codstr , n codstr ) n n / / syntactic chunk type n m_syntactic_chunk_type = annotator_util . get_type ( type_system , n codstr ) n n / / chunk feature n m_syntactic_chunk_feature = annotator_util n . get_required_feature ( m_syntactic_chunk_type , codstr , n cas . type_name_string ) n }	1
Q_549	initialize the type system	C_549_1	public n static n string get_facility_string ( int syslog_facility ) { n switch ( syslog_facility ) { n case log_kern return codstr n case log_user return codstr n case log_mail return codstr n case log_daemon return codstr n case log_auth return codstr n case log_syslog return codstr n case log_lpr return codstr n case log_news return codstr n case log_uucp return codstr n case log_cron return codstr n case log_authpriv return codstr n case log_ftp return codstr n case log_local0 return codstr n case log_local1 return codstr n case log_local2 return codstr n case log_local3 return codstr n case log_local4 return codstr n case log_local5 return codstr n case log_local6 return codstr n case log_local7 return codstr n default return null n } n }	0
Q_549	initialize the type system	C_549_2	public boolean truncate_invalid_tx_before ( long time ) throws invalid_truncate_time_exception { n / / guard against changes to the transaction log while processing n tx_metrics_collector . rate ( codstr ) n stopwatch timer = new stopwatch ( ) . start ( ) n this . log_read_lock . lock ( ) n try { n boolean success n synchronized ( this ) { n ensure_available ( ) n success = do_truncate_invalid_tx_before ( time ) n } n append_to_log ( transaction_edit . create_truncate_invalid_tx_before ( time ) ) n tx_metrics_collector . histogram ( codstr , ( int ) timer . elapsed_millis ( ) ) n return success n } finally { n this . log_read_lock . unlock ( ) n } n }	0
Q_550	there may be comment at the end of header line	C_550_0	rule header_eol ( ) { n return sequence ( zero_or_more ( wsp ( ) ) . suppress_node ( ) , n first_of_s ( comment ( ) , suppr ( eol ( ) ) , suppr ( eoi ) ) n ) . label ( header_eol ) n }	1
Q_550	there may be comment at the end of header line	C_550_1	public map < string , map < string , map < string , map < string , ? get_all_validation_constraints ( string . types ) { n map < string , map < string , map < string , map < string , ? all_constr = new linked_hash_map < > ( ) n if ( types = = null types . length = = codint ) { n types = para_object_utils . get_all_types ( this ) . values ( ) . to_array ( new string [ codint ] ) n } n try { n for ( string a_type types ) { n map < string , map < string , map < string , ? vc = new linked_hash_map < > ( ) n / / add all core constraints first n if ( validation_utils . get_core_validation_constraints ( ) . contains_key ( a_type ) ) { n vc . put_all ( validation_utils . get_core_validation_constraints ( ) . get ( a_type ) ) n } n / / also add the ones that are defined locally for this app n map < string , map < string , map < string , ? app_constraints = get_validation_constraints ( ) . get ( a_type ) n if ( app_constraints = null app_constraints . is_empty ( ) ) { n vc . put_all ( app_constraints ) n } n if ( vc . is_empty ( ) ) { n all_constr . put ( a_type , vc ) n } n } n }	0
Q_550	there may be comment at the end of header line	C_550_2	override n protected int prune_cache ( ) { n int count = codint n cache_object < k , v > comin = null n n / / remove expired items and find cached object with minimal access count n iterator < cache_object < k , v values = cache_map . values ( ) . iterator ( ) n while ( values . has_next ( ) ) { n cache_object < k , v > co = values . next ( ) n if ( co . is_expired ( ) ) { n values . remove ( ) n on_remove ( co . key , co . cached_object ) n count + + n continue n } n n if ( comin = = null ) { n comin = co n } else { n if ( co . access_count < comin . access_count ) { n comin = co n } n } n } n n if ( is_full ( ) ) { n return count n } n n / / decrease access count to all cached objects n if ( comin = null ) { n long min_access_count = comin . access_count n n values = cache_map . values ( ) . iterator ( ) n while ( values . has_next ( ) ) { n cache_object < k , v > co = values . next ( ) n co . access_count _ = min_access_count n if ( co . access_count < = codint	0
Q_551	create new instance with give bean type and command line parser that describe command line	C_551_0	public static < t > argument_processor < t > new_instance ( class < ? extends t > bean_type , n command_line_parser parser ) { n return argument_processor_factory . get_instance ( ) . new_processor ( bean_type , parser ) n }	1
Q_551	create new instance with give bean type and command line parser that describe command line	C_551_1	public java . rmi . remote get_port ( class service_endpoint_interface ) throws javax . xml . rpc . service_exception { n try { n if ( com . google . api . ads . adwords . axis . v201809 . cm . batch_job_service_interface . class . is_assignable_from ( service_endpoint_interface ) ) { n com . google . api . ads . adwords . axis . v201809 . cm . batch_job_service_soap_binding_stub _stub = new com . google . api . ads . adwords . axis . v201809 . cm . batch_job_service_soap_binding_stub ( new java . net . url ( batch_job_service_interface_port_address ) , this ) n _stub . set_port_name ( get_batch_job_service_interface_port_wsdd_service_name ( ) ) n return _stub n } n } n catch ( java . lang . throwable t ) { n throw new javax . xml . rpc . service_exception ( t ) n } n throw new javax . xml . rpc . service_exception ( codstr + ( service_endpoint_interface = = null ? codstr service_endpoint_interface . get_name ( ) ) ) n }	0
Q_551	create new instance with give bean type and command line parser that describe command line	C_551_2	public e_class get_ocd ( ) { n if ( ocd_e_class = = null ) { n ocd_e_class = ( e_class ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return ocd_e_class n }	0
Q_552	return code true if this account imply all of the specify permission string code false otherwise	C_552_0	public boolean is_permitted_all ( collection < string > permissions ) { n for ( boolean permitted is_permitted ( permissions . to_array ( new string [ permissions . size ( ) ] ) ) ) { n if ( permitted ) { n return false n } n } n return true n }	1
Q_552	return code true if this account imply all of the specify permission string code false otherwise	C_552_1	public void initialize ( ) { n n / / use the guice injector to fetch our color code definitions . n final string red = injector . get_instance ( key . get ( string . class , names . named ( codstr ) ) ) n final string green = injector . get_instance ( key . get ( string . class , names . named ( codstr ) ) ) n n / / we use the guice _ injected value for our desired color to update n / / the style of our fxml _ injected button . n red_button . set_style ( string . format ( codstr , red ) ) n green_button . set_style ( string . format ( codstr , green ) ) n }	0
Q_552	return code true if this account imply all of the specify permission string code false otherwise	C_552_2	private boolean decode_buffer ( byte_buf in , channel_handler_context ctx ) throws io_exception { n n decoder_state decoder_state n while ( ( decoder_state = decode_envelope ( in ) ) = decoder_state . pending ) { n if ( decoder_state = = decoder_state . complete ) { n ctx . fire_channel_read ( this . current_envelope ) n this . current_envelope = null n } n else if ( decoder_state = = decoder_state . no_buffer_available ) { n switch ( this . current_buffer_provider . register_buffer_availability_listener ( this ) ) { n case succeeded_registered n if ( ctx . channel ( ) . config ( ) . is_auto_read ( ) ) { n ctx . channel ( ) . config ( ) . set_auto_read ( false ) n n if ( log . is_debug_enabled ( ) ) { n log . debug ( string . format ( codstr , ctx . channel ( ) ) ) n } n } n n this . staged_buffer = in n this . staged_buffer . retain ( ) n return false n n case failed_buffer_available n continue n n case failed_buffer_pool_destroyed n this . bytes_to_skip = skip_bytes ( in , this . current_buffer_request_size ) n n this . current_buffer_request_size = codint n this . current_events_buffer = null n this . current_envelope = null n } n } n } n n if ( in . is_readable ( ) ) { n throw new illegal_state_exception ( codstr + n codstr + n codstr ) n } n	0
Q_553	ui_binder call method to add a radio button	C_553_0	ui_child ( tagname = codstr ) n public void add_radio ( jqm_radio radio ) { n radio . set_name ( fieldset . get_id ( ) ) n radios . add ( radio ) n radio . set_theme ( theme ) n n fieldset . add ( radio . get_input ( ) ) n fieldset . add ( radio . get_label ( ) ) n }	1
Q_553	ui_binder call method to add a radio button	C_553_1	public boolean non_public_member_found ( program_element_doc [ ] members ) { n for ( program_element_doc member members ) { n if ( member . is_public ( ) ) { n return true n } n } n return false n }	0
Q_553	ui_binder call method to add a radio button	C_553_2	public boolean is_set ( _fields field ) { n if ( field = = null ) { n throw new illegal_argument_exception ( ) n } n n switch ( field ) { n case spouts n return is_set_spouts ( ) n case bolts n return is_set_bolts ( ) n case state_spouts n return is_set_state_spouts ( ) n } n throw new illegal_state_exception ( ) n }	0
Q_554	create two physical_entity chain with the give endpoint and check if they be	C_554_0	override n public boolean satisfies ( match match , int . ind ) n { n physical_entity pe0 = ( physical_entity ) match . get ( ind [ codint ] ) n physical_entity pe1 = ( physical_entity ) match . get ( ind [ codint ] ) n physical_entity pe2 = ( physical_entity ) match . get ( ind [ codint ] ) n physical_entity pe3 = ( physical_entity ) match . get ( ind [ codint ] ) n n physical_entity_chain ch1 = new physical_entity_chain ( pe0 , pe1 ) n physical_entity_chain ch2 = new physical_entity_chain ( pe2 , pe3 ) n n return ch1 . intersects ( ch2 , ignore_end_points ) = = intersection_desired n }	1
Q_554	create two physical_entity chain with the give endpoint and check if they be	C_554_1	public static string get_text ( activity context , int id ) { n text_view view = find_view_by_id ( context , id ) n n string text = codstr n if ( view = null ) { n text = view . get_text ( ) . to_string ( ) n } else { n log . e ( codstr , codstr codstr ) n } n return text n }	0
Q_554	create two physical_entity chain with the give endpoint and check if they be	C_554_2	public static authenticationtacacspolicy_vpnvserver_binding [ ] get ( nitro_service service , string name ) throws exception { n authenticationtacacspolicy_vpnvserver_binding obj = new authenticationtacacspolicy_vpnvserver_binding ( ) n obj . set_name ( name ) n authenticationtacacspolicy_vpnvserver_binding response [ ] = ( authenticationtacacspolicy_vpnvserver_binding [ ] ) obj . get_resources ( service ) n return response n }	0
Q_555	get the first position of the modification feature	C_555_0	public int get_position_start ( modification_feature mf ) n { n set vals = site_acc . get_value_from_bean ( mf ) n n if ( vals . is_empty ( ) ) n { n return ( ( integer ) vals . iterator ( ) . next ( ) ) n } n n vals = interval_begin_acc . get_value_from_bean ( mf ) n n if ( vals . is_empty ( ) ) n { n return ( ( integer ) vals . iterator ( ) . next ( ) ) n } n n return _ codint n }	1
Q_555	get the first position of the modification feature	C_555_1	static public string generate_order_id ( ) { n uuid uuid = uuid . random_uuid ( ) n byte_buffer bb = byte_buffer . wrap ( new byte [ codint ] ) n n bb . put_long ( uuid . get_most_significant_bits ( ) ) n bb . put_long ( uuid . get_least_significant_bits ( ) ) n return base64 . encode_base64_url_safe_string ( bb . array ( ) ) n }	0
Q_555	get the first position of the modification feature	C_555_2	public static i_scope resolve_scope ( i_scope from , string path ) { n log . debug ( codstr , from . get_name ( ) , path ) n i_scope current = from n if ( path . starts_with ( slash ) ) { n current = scope_utils . find_root ( current ) n path = path . substring ( codint , path . length ( ) ) n } n if ( path . ends_with ( slash ) ) { n path = path . substring ( codint , path . length ( ) _ codint ) n } n log . trace ( codstr , current ) n string [ ] parts = path . split ( slash ) n if ( log . is_trace_enabled ( ) ) { n log . trace ( codstr , arrays . to_string ( parts ) ) n } n for ( string part parts ) { n log . trace ( codstr , part ) n if ( part . equals ( codstr ) ) { n continue n } n if ( part . equals ( codstr ) ) { n if ( current . has_parent ( ) ) { n return null n } n current = current . get_parent ( ) n continue n } n if ( current . has_child_scope ( part ) ) { n return null n } n current = current . get_scope ( part ) n log . trace ( codstr , current	0
Q_556	introspect class for accessor method	C_556_0	private void introspect_methods ( class type , set introspected_classes ) { n if ( type = = null object . class . equals ( type ) introspected_classes . contains ( type ) ) { n return n } n introspected_classes . add ( type ) n class [ ] interfaces = type . get_interfaces ( ) n for ( int i = codint i < interfaces . length i + + ) { n introspect_methods ( interfaces [ i ] , introspected_classes ) n } n introspect_methods ( type . get_superclass ( ) , introspected_classes ) n method [ ] methods = type . get_declared_methods ( ) n for ( int i = codint i < methods . length i + + ) { n string method_name = methods [ i ] . get_name ( ) n if ( method_name . starts_with ( codstr ) methods [ i ] . get_parameter_types ( ) . length = = codint ) { n read_accessors . put ( get_property_name ( method_name , codint ) , methods [ i ] ) n } n else if ( method_name . starts_with ( codstr ) methods [ i ] . get_parameter_types ( ) . length = = codint ) { n read_accessors . put ( get_property_name ( method_name , codint ) , methods [ i ] ) n } n else if ( method_name . starts_with ( codstr ) methods [ i ] . get_parameter_types ( ) . length = = codint ) { n	1
Q_556	introspect class for accessor method	C_556_1	private void await_state ( state expected_state ) throws exception { n while ( this . life_cycle . get_state ( ) = expected_state ) { n try { n thread . sleep ( codint ) n } catch ( interrupted_exception e ) { n / / we do not know why this happened . n / / we do not know how to handle it , either . n throw e n } n } n }	0
Q_556	introspect class for accessor method	C_556_2	xml_element_decl ( namespace = codstr , name = codstr , scope = create_document . class ) n public jaxb_element < enum_versioning_state > create_create_document_versioning_state ( n enum_versioning_state value ) { n return new jaxb_element < enum_versioning_state > ( n _create_document_versioning_state_qname , n enum_versioning_state . class , create_document . class , value ) n }	0
Q_557	run the inside algorithm on a hypergraph with the first_order expectation semiring	C_557_0	public static void inside_algorithm_first_order_expect ( final hypergraph graph , final hyperpotential_foe w , n final algebra s , final scores scores ) { n final int n = graph . get_nodes ( ) . size ( ) n final double [ ] beta = new double [ n ] n final double [ ] beta_foe = new double [ n ] n / / beta_i = codint forall i n arrays . fill ( beta , s . zero ( ) ) n arrays . fill ( beta_foe , s . zero ( ) ) n graph . apply_topo_sort ( new hyperedge_fn ( ) { n n override n public void apply ( hyperedge e ) { n / / beta_ { h ( e ) } + = w_e prod_ { j in t ( e ) } beta_j n double prod = s . one ( ) n double prod_foe = s . zero ( ) n for ( hypernode j_node e . get_tail_nodes ( ) ) { n int j = j_node . get_id ( ) n / / prod = s . times ( prod , beta [ j ] ) n / / prod_foe = s . plus ( s . times ( prod , beta_foe [ j ] ) , s . times ( beta [ j ] , prod_foe ) ) n double p1 = prod n double p2 = beta [ j ] n double r1 = prod_foe n double r2	1
Q_557	run the inside algorithm on a hypergraph with the first_order expectation semiring	C_557_1	"public final void seek ( long p_position ) throws io_exception { n check_open ( ) n n / / todo this is correct according to javax . imageio ( index_out_of_bounds_exception ) , n / / but it codstr position < flushed_position "" ) n } n n seek_impl ( p_position ) n position = p_position n }"	0
Q_557	run the inside algorithm on a hypergraph with the first_order expectation semiring	C_557_2	static private module add_files_in_dir ( file dir , int root_prefix , file root , n set < string > suffixes , boolean allow_javas , n list < string > exclude_files , list < string > include_files , boolean all , n map < string , source > found_files , n map < string , module > found_modules , n module current_module , n boolean in_gensrc , n boolean in_linksrc ) n throws problem_exception n { n for ( file f dir . list_files ( ) ) { n if ( f . is_file ( ) ) { n boolean should_add = n ( exclude_files = = null exclude_files . is_empty ( ) has_file_match ( f . get_path ( ) , exclude_files ) ) n ( include_files = = null include_files . is_empty ( ) has_file_match ( f . get_path ( ) , include_files ) ) n n if ( should_add ) { n if ( allow_javas f . get_name ( ) . ends_with ( codstr ) ) { n throw new problem_exception ( codstr + dir . get_path ( ) + n codstr + f . get_name ( ) ) n } n / / extract the file name relative the root . n string fn = f . get_path ( ) . substring ( root_prefix ) n / / extract the package name . n int sp = fn . last_index_of ( file . separator_char ) n string pkg = codstr n if ( sp = _ codint	0
Q_558	sign a message	C_558_0	public byte [ ] sign ( string private_key_id , byte [ ] message ) { n signer signer = cache . get ( private_key_id ) n n if ( signer = null ) { n return signer . sign ( message ) n } n n signer_impl signer_impl = new signer_impl ( ) n private_key private_key = private_key_map . get ( private_key_id ) n n if ( private_key = = null ) { n throw new signature_exception ( codstr + private_key_id ) n } n n signer_impl . set_private_key ( private_key ) n signer_impl . set_algorithm ( algorithm ) n signer_impl . set_provider ( provider ) n cache . put ( private_key_id , signer_impl ) n return signer_impl . sign ( message ) n }	1
Q_558	sign a message	C_558_1	public static input_stream get_remote_file_content ( string file , long revision , string base_url , string user , string pwd ) throws io_exception { n / / svn cat _ r codint file n command_line cmd_line = new command_line ( svn_cmd ) n cmd_line . add_argument ( cmd_cat ) n add_default_arguments ( cmd_line , user , pwd ) n cmd_line . add_argument ( codstr ) n cmd_line . add_argument ( long . to_string ( revision ) ) n cmd_line . add_argument ( base_url + file ) n n return execution_helper . get_command_result ( cmd_line , new file ( codstr ) , codint , codint ) n }	0
Q_558	sign a message	C_558_2	private void recover_unclosed_segment ( long segment_tx_id ) throws io_exception { n preconditions . check_argument ( segment_tx_id > _ codint ) n log . info ( codstr + n segment_tx_id ) n n / / step codint . prepare recovery n quorum_call < async_logger , prepare_recovery_response_proto > prepare = n loggers . prepare_recovery ( segment_tx_id ) n map < async_logger , prepare_recovery_response_proto > prepare_responses = n loggers . wait_for_write_quorum ( prepare , prepare_recovery_timeout_ms , n codstr + segment_tx_id + codstr ) n log . info ( codstr + n quorum_call . map_to_string ( prepare_responses ) ) n n / / determine the logger who either n / / a ) has already accepted a previous proposal that codstr ties codstr using already _ accepted recovery for segment codstr starting at txid codstr codstr using longest log codstr t started on a quorum of nodes . n n / / sanity check we should only get here if none of the responses had n / / a log . this should be a postcondition of the recovery comparator , n / / but a bug in the comparator might cause us to get here . n for ( prepare_recovery_response_proto resp prepare_responses . values ( ) ) { n assert resp . has_segment_state ( ) n codstr + n codstr n } n n log . info ( codstr + n quorum_call . map_to_string ( prepare_responses ) ) n return n } n n segment_state_proto log_to_sync = best_response . get_segment_state ( )	0
Q_559	generate a permutation of give array	C_559_0	public void permutate ( int [ ] x ) { n for ( int i = codint i < x . length i + + ) { n int j = i + next_int ( x . length _ i ) n int s = x [ i ] n x [ i ] = x [ j ] n x [ j ] = s n } n }	1
Q_559	generate a permutation of give array	C_559_1	public observable < void > resend_email_async ( string resource_group_name , string certificate_order_name ) { n return resend_email_with_service_response_async ( resource_group_name , certificate_order_name ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	0
Q_559	generate a permutation of give array	C_559_2	public void recalc_content_height_percent ( ) { n if ( stop_parts_positioning ) return n if ( is_visible ( ) ) return n element content_elt = content . get_element ( ) n if ( content_height_percent > codint ) { n final jqm_header header = get_header ( ) n final jqm_footer footer = get_footer ( ) n int header_h = header = = null is_fixed_toolbars_hidden ( ) ? codint header . get_offset_height ( ) n int footer_h = footer = = null is_fixed_toolbars_hidden ( ) ? codint footer . get_offset_height ( ) n int window_h = window . get_client_height ( ) n n int client_h = content_elt . get_property_int ( codstr ) n int offset_h = content_elt . get_property_int ( codstr ) n int diff = offset_h _ client_h / / border , . n if ( diff < codint ) diff = codint n n double h = ( window_h _ header_h _ footer_h _ diff ) * numberd * content_height_percent n h = math . floor ( h ) n content_elt . get_style ( ) . set_property ( codstr , string . value_of ( math . round ( h ) ) + codstr ) n content_elt . get_style ( ) . set_property ( codstr , codstr ) n content_elt . get_style ( ) . set_property ( codstr , codstr ) n } else { n content_elt . get_style ( ) . clear_property ( codstr ) n content_elt . get_style ( ) . clear_property ( codstr ) n content_elt . get_style	0
Q_560	execute rest request and return result for a give i_ps	C_560_0	not_null n public list < sx_geo_result > get_list ( not_null string ip ) { n if ( ipv4_comma_separated_pattern . matcher ( ip ) . matches ( ) ) { n throw new illegal_argument_exception ( codstr + ip ) n } n client_queries_count + + n list < sx_geo_result > cached_result = cache = = null ? null cache . get_list ( ip ) n if ( cached_result = null ) { n return cached_result n } n try { n node_list ip_nodes = query ( ip ) n array_list < sx_geo_result > result = new array_list < > ( ) n for ( int i = codint i < ip_nodes . get_length ( ) i + + ) { n result . add ( parse_ip ( ( element ) ip_nodes . item ( i ) ) ) n } n if ( cache = null ) { n cache . add ( ip , result ) n } n return result n } catch ( parser_configuration_exception sax_exception io_exception e ) { n throw new runtime_exception ( e ) n } n }	1
Q_560	execute rest request and return result for a give i_ps	C_560_1	public observable < void > add_async ( string resource_group_name , string account_name , string data_lake_store_account_name ) { n return add_with_service_response_async ( resource_group_name , account_name , data_lake_store_account_name ) . map ( new func1 < service_response < void > , void > ( ) { n override n public void call ( service_response < void > response ) { n return response . body ( ) n } n } ) n }	0
Q_560	execute rest request and return result for a give i_ps	C_560_2	protected boolean should_read_eagerly ( stripe_information stripe , int current_section ) { n if ( read_eagerly_from_hdfs_bytes < = codint ) { n return read_eagerly_from_hdfs n } n n long input_bytes = codint n if ( included = = null ) { n / / this means there is no projection and all the columns would be read n input_bytes = stripe . get_data_length ( ) n } else { n / / get a sum of lengths of all the streams desired to be read n list < orc_proto . stream > stream_list = stripe_footer . get_streams_list ( ) n for ( int i = current_section i < stream_list . size ( ) i + + ) { n if ( included [ stream_list . get ( i ) . get_column ( ) ] ) { n input_bytes + = stream_list . get ( i ) . get_length ( ) n } n } n } n n return input_bytes < = read_eagerly_from_hdfs_bytes n }	0
Q_561	map d in l u to transform such that	C_561_0	public double transform_range_linearly ( double l , double u , int i , double d ) { n return ( b [ i ] _ a [ i ] ) / ( u _ l ) * ( d _ u ) + b [ i ] n }	1
Q_561	map d in l u to transform such that	C_561_1	public output_stream get_output_stream ( string file_name ) throws malformed_url_exception , io_exception { n try { n get_key_store_output_stream_action action = new get_key_store_output_stream_action ( file_name ) n return access_controller . do_privileged ( action ) n } catch ( privileged_action_exception e ) { n exception ex = e . get_exception ( ) n ffdc_filter . process_exception ( e , get_class ( ) . get_name ( ) , codstr , new object [ ] { file_name , this } ) n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) n tr . debug ( tc , codstr + ex ) n n if ( ex instanceof malformed_url_exception ) n throw ( malformed_url_exception ) ex n else if ( ex instanceof io_exception ) n throw ( io_exception ) ex n n throw new io_exception ( ex . get_message ( ) ) n } n }	0
Q_561	map d in l u to transform such that	C_561_2	public static void encrypt ( path path , input_stream public_key_stream , output_stream target_stream ) throws exception { n pgp_public_key public_key = get_public_key ( public_key_stream ) n n try ( byte_array_output_stream compressed = new byte_array_output_stream ( ) n armored_output_stream arm_out = new armored_output_stream ( target_stream ) ) { n pgp_compressed_data_generator compressed_generator = new pgp_compressed_data_generator ( pgp_compressed_data . zip ) n pgp_util . write_file_to_literal_data ( compressed_generator . open ( compressed ) , pgp_literal_data . binary , path . to_file ( ) ) n compressed_generator . close ( ) n n jce_pgp_data_encryptor_builder encryptor_builder = new jce_pgp_data_encryptor_builder ( pgp_encrypted_data . cast5 ) n . set_with_integrity_packet ( true ) . set_secure_random ( new secure_random ( ) ) . set_provider ( provider ) n pgp_encrypted_data_generator data_generator = new pgp_encrypted_data_generator ( encryptor_builder ) n jce_public_key_key_encryption_method_generator method_generator = new jce_public_key_key_encryption_method_generator n ( public_key ) . set_provider ( provider ) . set_secure_random ( new secure_random ( ) ) n data_generator . add_method ( method_generator ) n n byte [ ] compressed_data = compressed . to_byte_array ( ) n output_stream encrypted_out = data_generator . open ( arm_out , compressed_data . length ) n encrypted_out . write ( compressed_data ) n encrypted_out . close ( ) n } n }	0
Q_562	run a map_reduce_job on the collection	C_562_0	protected final < r > iterable < r > map_reduce ( string name , db_object query , db_object sort , map < string , object > scope , final map_reduce_result_handler < r > conv ) { n return this . data_access . map_reduce ( name , query , sort , scope , conv ) n }	1
Q_562	run a map_reduce_job on the collection	C_562_1	public void register_shanks_agent ( shanks_agent agent ) n throws shanks_exception { n if ( this . agents . contains_key ( agent . get_id ( ) ) ) { n this . agents . put ( agent . get_id ( ) , agent ) n } else { n throw new duplicated_agent_id_exception ( agent . get_id ( ) ) n } n }	0
Q_562	run a map_reduce_job on the collection	C_562_2	public static < t extends calendar > t add_minutes ( final t calendar , final int amount ) { n return roll ( calendar , amount , calendar_unit . minute ) n }	0
Q_563	determine the method with the specify signature via reflection look_up	C_563_0	public static method get_method ( class clazz , string method_name , class [ ] params ) n { n try n { n return clazz . get_method ( method_name , params ) n } n catch ( exception ignored ) n { } n return null n }	1
Q_563	determine the method with the specify signature via reflection look_up	C_563_1	"request_mapping ( method = request_method . post , params = codstr ) n public model_and_view move_tab ( n http_servlet_request request , n http_servlet_response response , n request_param ( value = codstr ) string source_id , n request_param string method , n request_param ( value = codstr ) string destination_id ) n throws io_exception { n n i_user_instance ui = user_instance_manager . get_user_instance ( request ) n n user_preferences_manager upm = ( user_preferences_manager ) ui . get_preferences_manager ( ) n i_user_layout_manager ulm = upm . get_user_layout_manager ( ) n final locale locale = request_context_utils . get_locale ( request ) n n / / if we codstr s no target , just n / / assume we codstr insert_before codstr failed to move tab in user layout . move_node returned false codstr json_view codstr response codstr error . move . tab codstr there was an issue moving the tab , please refresh the page and try again . codstr json_view codstr response codstr success . move . tab codstr tab moved successfully "" , locale ) ) ) n }"	0
Q_563	determine the method with the specify signature via reflection look_up	C_563_2	public observable < page < failover_group_inner list_by_server_async ( final string resource_group_name , final string server_name ) { n return list_by_server_with_service_response_async ( resource_group_name , server_name ) n . map ( new func1 < service_response < page < failover_group_inner , page < failover_group_inner ( ) { n override n public page < failover_group_inner > call ( service_response < page < failover_group_inner response ) { n return response . body ( ) n } n } ) n }	0
Q_564	return an array of non_pk link field_descriptor if parameter em with_inherited em	C_564_0	public field_descriptor [ ] get_field_descriptor_non_pk ( boolean with_inherited ) n { n if ( with_inherited get_super_class_descriptor ( ) = null ) n { n field_descriptor [ ] flds = get_non_pk_fields ( ) n field_descriptor [ ] super_flds = get_super_class_descriptor ( ) . get_field_descriptor_non_pk ( true ) n field_descriptor [ ] result = new field_descriptor [ flds . length + super_flds . length ] n system . arraycopy ( flds , codint , result , codint , flds . length ) n system . arraycopy ( super_flds , codint , result , flds . length , super_flds . length ) n return result n } n else n { n return get_non_pk_fields ( ) n } n }	1
Q_564	return an array of non_pk link field_descriptor if parameter em with_inherited em	C_564_1	public menu_item_type get_menu_item_type ( ) { n if ( known_type = known_type . menu_item ) { n throw new illegal_argument_exception ( codstr ) n } n final number_field type = ( number_field ) arguments . get ( codint ) n final menu_item_type result = menu_item_type_map . get ( type . get_value ( ) ) n if ( result = = null ) { n return menu_item_type . unknown n } n return result n }	0
Q_564	return an array of non_pk link field_descriptor if parameter em with_inherited em	C_564_2	public local_time to_local_time ( string s ) throws sql_exception { n if ( s = = null ) { n return null n } n n if ( s . equals ( codstr ) ) { n return local_time . max n } n n try { n return local_time . parse ( s ) n } catch ( date_time_parse_exception nfe ) { n throw new psql_exception ( n gt . tr ( codstr , s ) , n psql_state . bad_datetime_format , nfe ) n } n n }	0
Q_565	wrap the specify linkplain get_implementation implementation in a java logger	C_565_0	protected logger wrap ( string name , org . slf4j . logger implementation ) { n return new slf4j_logger ( name , implementation ) n }	1
Q_565	wrap the specify linkplain get_implementation implementation in a java logger	C_565_1	public base_field get_field ( int i_field_seq ) n { n for ( int i = codint i < this . get_recordlist_count ( ) i + + ) n { n record record = this . get_recordlist_at ( i ) n if ( record . get_table ( ) = null ) n if ( this . get_table ( ) = null ) n if ( this . is_manual_query ( ) ) / / only if i am faking a query n record = record . get_table ( ) . get_current_table ( ) . get_record ( ) / / just in case record is a merge n int i_field_count = record . get_field_count ( ) n if ( i_field_seq < i_field_count ) n { n return record . get_field ( i_field_seq ) n } n i_field_seq _ = i_field_count n } n return null / / not found n }	0
Q_565	wrap the specify linkplain get_implementation implementation in a java logger	C_565_2	public void marshall ( application_code_configuration application_code_configuration , protocol_marshaller protocol_marshaller ) { n n if ( application_code_configuration = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( application_code_configuration . get_code_content ( ) , codecontent_binding ) n protocol_marshaller . marshall ( application_code_configuration . get_code_content_type ( ) , codecontenttype_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_566	use this api to clear interface	C_566_0	public static base_response clear ( nitro_service client , interface resource ) throws exception { n interface clearresource = new interface ( ) n clearresource . id = resource . id n return clearresource . perform_operation ( client , codstr ) n }	1
Q_566	use this api to clear interface	C_566_1	public object read_one_scan_data ( byte_buffer bos , now_radheader . vinfo vinfo , string v_name ) n throws io_exception , invalid_range_exception { n int doff = ( int ) vinfo . hoff n int npixel = vinfo . yt * vinfo . xt n byte [ ] rdata = null n byte [ ] ldata = new byte [ vinfo . xt ] n byte [ ] pdata = new byte [ npixel ] n byte [ ] b2 = new byte [ codint ] n n bos . position ( doff ) n n / / begining of image data n if ( ( data_type . unsigned_byte_to_short ( bos . get ( ) ) = codint ) ( bos . get ( ) = codint ) ) { n return null n } n n int ecode n int color n int datapos n int offset = codint n int roffset = codint n boolean newline = true n int linenum = codint n n while ( true ) { n n / / line number n if ( newline ) { n bos . get ( b2 ) n linenum = ( data_type . unsigned_byte_to_short ( b2 [ codint ] ) < < codint ) + data_type . unsigned_byte_to_short ( b2 [ codint ] ) n n / / system . out . println ( codstr + linenum ) n } n n / / int linenum = bytes_to_int ( b2 [ codint ] , b2 [ codint	0
Q_566	use this api to clear interface	C_566_2	public boolean add ( final int value ) { n if ( size = = capacity ) { n throw new illegal_state_exception ( codstr + capacity + codstr ) n } n int index = int_hash ( value , mask ) n n while ( values [ index ] = missing_value ) { n if ( values [ index ] = = value ) { n return false n } n n index = next ( index ) n } n n values [ index ] = value n size + + n n return true n }	0
Q_567	use this api to update vpnclientlessaccesspolicy	C_567_0	public static base_response update ( nitro_service client , vpnclientlessaccesspolicy resource ) throws exception { n vpnclientlessaccesspolicy updateresource = new vpnclientlessaccesspolicy ( ) n updateresource . name = resource . name n updateresource . rule = resource . rule n updateresource . profilename = resource . profilename n return updateresource . update_resource ( client ) n }	1
Q_567	use this api to update vpnclientlessaccesspolicy	C_567_1	public mime_multipart get_mime_multipart ( ) throws messaging_exception , n io_exception , jaxb_exception { n list < data_source > body_part_contents = create_request_body ( ) n return to_mime_multipart ( body_part_contents ) n n }	0
Q_567	use this api to update vpnclientlessaccesspolicy	C_567_2	private static string escape_xml ( string input ) { n return input = = null ? codstr input . replace ( codstr , codstr ) . replace ( codstr , codstr ) . replace ( codstr , codstr ) n }	0
Q_568	create a clone of the current automaton_eng instance for	C_568_0	public automaton_instance do_clone ( ) { n automaton_instance clone = new automaton_instance ( this . automaton_eng , this . current , this . instance_id , this . safe_guard ) n clone . failed = this . failed n clone . transition_count = this . transition_count n clone . fail_count = this . fail_count n clone . iterate_count = this . iterate_count n clone . backtrack_count = this . backtrack_count n clone . trace = new linked_list < > ( ) n for ( state_exploration se this . trace ) { n clone . trace . add ( se . do_clone ( ) ) n } n return clone n }	1
Q_568	create a clone of the current automaton_eng instance for	C_568_1	protected void open ( grid_index index , cancel_task cancel_task ) n throws io_exception { n mc_idas_lookup lookup = new mc_idas_lookup ( ( mc_idas_grid_record ) index . get_grid_records ( ) . get ( codint ) ) n grid_index_to_nc delegate = new grid_index_to_nc ( index . filename ) n / / delegate . set_use_description_for_variable_name ( false ) n delegate . open ( index , lookup , codint , ncfile , cancel_task ) n ncfile . finish ( ) n }	0
Q_568	create a clone of the current automaton_eng instance for	C_568_2	"override n public void validate_setup ( server server , query query ) throws validation_exception { n / / check if we codstr failed to setup logback "" , query , e ) n } n } n logwriter = new log_writer ( logger , delimiter ) n }"	0
Q_569	use this api to fetch all the dnsnsecrec resource that be configure on netscaler	C_569_0	public static dnsnsecrec [ ] get ( nitro_service service , dnsnsecrec_args args ) throws exception { n dnsnsecrec obj = new dnsnsecrec ( ) n options option = new options ( ) n option . set_args ( nitro_util . object_to_string_withoutquotes ( args ) ) n dnsnsecrec [ ] response = ( dnsnsecrec [ ] ) obj . get_resources ( service , option ) n return response n }	1
Q_569	use this api to fetch all the dnsnsecrec resource that be configure on netscaler	C_569_1	private boolean check_and_set_manifest_and_image_path_candidates ( string manifest_path , string candidate_image_path , artifactory_dependencies_client dependencies_client , task_listener listener ) throws io_exception { n string candidate_manifest = get_manifest_from_artifactory ( dependencies_client , manifest_path ) n if ( candidate_manifest = = null ) { n return false n } n n string image_digest = docker_utils . get_config_digest ( candidate_manifest ) n if ( image_digest . equals ( image_id ) ) { n manifest = candidate_manifest n image_path = candidate_image_path n return true n } n n listener . get_logger ( ) . println ( string . format ( codstr , manifest_path , image_id , image_digest ) ) n return false n }	0
Q_569	use this api to fetch all the dnsnsecrec resource that be configure on netscaler	C_569_2	override n public void update_config ( map < string , object > props ) { n final long max_ms = time_unit . nanoseconds . to_millis ( long . max_value ) n n object v n int u_expedite = ( integer ) props . get ( codstr ) n int u_max = null = = ( v = props . get ( codstr ) ) ? integer . max_value ( integer ) v n max_policy u_max_policy = max_policy . value_of ( ( string ) props . get ( codstr ) ) n int u_max_queue_size = null = = ( v = props . get ( codstr ) ) ? integer . max_value ( integer ) v n long u_max_wait_for_enqueue = ( long ) props . get ( codstr ) n boolean u_run_if_queue_full = ( boolean ) props . get ( codstr ) n long u_start_timeout = null = = ( v = props . get ( codstr ) ) ? _ codint ( long ) v n n / / validation that cannot be performed by metatype n if ( u_expedite > u_max ) n throw new illegal_argument_exception ( codstr + u_expedite + codstr + u_max ) n n if ( u_max_wait_for_enqueue < codint u_max_wait_for_enqueue > max_ms ) n throw new illegal_argument_exception ( codstr + u_max_wait_for_enqueue ) n n if ( u_start_timeout < _ codint u_start_timeout > max_ms ) n throw new illegal_argument_exception ( codstr + u_start_timeout ) n n for ( long current = max_wait_for_enqueue_ns . get ( )	0
Q_570	return a list which be a concatenation of code time code time the receiver	C_570_0	public abstract_long_list times ( int times ) { n abstract_long_list new_list = new long_array_list ( times * size ( ) ) n for ( int i = times _ i > = codint ) { n new_list . add_all_of_from_to ( this , codint , size ( ) _ codint ) n } n return new_list n }	1
Q_570	return a list which be a concatenation of code time code time the receiver	C_570_1	public static l2param get ( nitro_service service ) throws exception { n l2param obj = new l2param ( ) n l2param [ ] response = ( l2param [ ] ) obj . get_resources ( service ) n return response [ codint ] n }	0
Q_570	return a list which be a concatenation of code time code time the receiver	C_570_2	public static final string remaining_to_hex ( byte_buffer bb ) n { n byte [ ] buf = new byte [ bb . remaining ( ) ] n int safe = bb . position ( ) n bb . get ( buf ) n bb . position ( safe ) n return to_hex ( buf ) n }	0
Q_571	generate the answer_annotation label of the combine model for the give	C_571_0	override n public list < in > classify ( list < in > tokens ) { n if ( base_classifiers . is_empty ( ) ) { n return tokens n } n list < list < in base_outputs = new array_list < list < in ( ) n n / / the first base model works in place , modifying the original tokens n list < in > output = base_classifiers . get ( codint ) . classify_sentence ( tokens ) n / / classify ( list < in > ) is supposed to work in place , so add answer_annotation to tokens n for ( int i = codint , sz = output . size ( ) i < sz i + + ) { n tokens . get ( i ) . set ( answer_annotation . class , output . get ( i ) . get ( answer_annotation . class ) ) n } n base_outputs . add ( tokens ) n n for ( int i = codint , sz = base_classifiers . size ( ) i < sz i + + ) { n / / list < core_label > copy = deep_copy ( tokens ) n / / no need for deep copy classify_sentence creates a copy of the input anyway n / / list < core_label > copy = tokens n output = base_classifiers . get ( i ) . classify_sentence ( tokens ) n base_outputs . add ( output ) n }	1
Q_571	generate the answer_annotation label of the combine model for the give	C_571_1	boolean release_segment ( segment segment , long last_offset , long time_lag ) throws reader_not_in_reader_group_exception { n sync . update_state ( ( state , updates ) _ > { n set < segment > segments = state . get_segments ( reader_id ) n if ( segments = null segments . contains ( segment ) state . get_checkpoint_for_reader ( reader_id ) = = null n does_reader_own_too_many_segments ( state ) ) { n updates . add ( new release_segment ( reader_id , segment , last_offset ) ) n updates . add ( new update_distance_to_tail ( reader_id , time_lag ) ) n } n } ) n reader_group_state state = sync . get_state ( ) n release_timer . reset ( calculate_release_time ( reader_id , state ) ) n acquire_timer . reset ( calculate_acquire_time ( reader_id , state ) ) n if ( state . is_reader_online ( reader_id ) ) { n throw new reader_not_in_reader_group_exception ( reader_id ) n } n return state . get_segments ( reader_id ) . contains ( segment ) n }	0
Q_571	generate the answer_annotation label of the combine model for the give	C_571_2	public boolean add ( object o ) { n try { n this . add_element ( ( element ) o ) n return true n } n catch ( class_cast_exception cce ) { n throw new class_cast_exception ( codstr ) n } n catch ( bad_element_exception bee ) { n throw new class_cast_exception ( bee . get_message ( ) ) n } n }	0
Q_572	use this api to kill aaasession	C_572_0	public static base_response kill ( nitro_service client , aaasession resource ) throws exception { n aaasession killresource = new aaasession ( ) n killresource . username = resource . username n killresource . groupname = resource . groupname n killresource . iip = resource . iip n killresource . netmask = resource . netmask n killresource . all = resource . all n return killresource . perform_operation ( client , codstr ) n }	1
Q_572	use this api to kill aaasession	C_572_1	public static void print_result ( number [ ] [ ] m1 , number [ ] [ ] m2 , number [ ] [ ] m3 , char op , print_stream out ) n { n for ( int i = codint i < m1 . length i + + ) n { n for ( int j = codint j < m1 [ codint ] . length j + + ) n { n out . print ( codstr + m1 [ i ] [ j ] ) n } n n if ( i = = m1 . length / codint ) n { n out . print ( codstr + op + codstr ) n } n else n { n out . print ( codstr ) n } n n for ( int j = codint j < m2 . length j + + ) n { n out . print ( codstr + m2 [ i ] [ j ] ) n } n n if ( i = = m1 . length / codint ) n { n out . print ( codstr ) n } n else n { n out . print ( codstr ) n } n n for ( int j = codint j < m3 . length j + + ) n { n out . print ( m3 [ i ] [ j ] + codstr ) n } n n out . println ( ) n }	0
Q_572	use this api to kill aaasession	C_572_2	protected void append_to_string_functions ( generation_context context , xtend_type_declaration source , n final jvm_generic_type target ) { n if ( is_append_to_string_functions_enable ( context ) ) { n return n } n / / create a list of the declared non _ static fields . n final list < jvm_field > declared_instance_fields = new array_list < > ( ) n for ( final jvm_field field target . get_declared_fields ( ) ) { n if ( field . is_static ( ) ) { n declared_instance_fields . add ( field ) n } n } n n if ( declared_instance_fields . is_empty ( ) ) { n final jvm_type_reference void_type = this . _type_reference_builder . type_ref ( void . type ) n final jvm_operation op = sarl_jvm_model_inferrer . this . type_builder . to_method ( n source , n codstr , / / non _ nls _ codint n void_type , it2 _ > { n it2 . set_visibility ( jvm_visibility . protected ) n sarl_jvm_model_inferrer . this . type_builder . set_documentation ( it2 , n message_format . format ( messages . sarl_jvm_model_inferrer_2 , n target . get_simple_name ( ) ) ) n final jvm_formal_parameter param = this . types_factory . create_jvm_formal_parameter ( ) n param . set_name ( codstr ) / / non _ nls _ codint n param . set_parameter_type ( sarl_jvm_model_inferrer . this . _type_reference_builder . type_ref ( to_string_builder . class ) ) n it2 . get_parameters ( ) . add ( param ) n set_body ( it2 , it3 _	0
Q_573	parse the previously split query string into a query request and fill the parameter of the object	C_573_0	private query_request create_query_request ( string [ ] elements ) { n query_request request = query_request . create ( ) n for ( string element elements ) { n string [ ] parts = string_utils . split ( element , codstr , codint ) n parts [ codint ] = parts [ codint ] . replace ( codstr , codstr ) n parts [ codint ] = parts [ codint ] . replace ( codstr , codstr ) n request . add_parameter ( parts [ codint ] , parts [ codint ] . substring ( codint , parts [ codint ] . length ( ) _ codint ) ) n } n return request n }	1
Q_573	parse the previously split query string into a query request and fill the parameter of the object	C_573_1	public static column_family_definition create_column_family_definition ( n string keyspace , string cf_name , comparator_type comparator_type ) { n return new thrift_cf_def ( keyspace , cf_name , comparator_type ) n }	0
Q_573	parse the previously split query string into a query request and fill the parameter of the object	C_573_2	before_bench_class n public void generate_data ( ) { n final random ran = new random ( ) n int_data = new int [ arraysize ] n int counter = codint n while ( counter < arraysize ) { n int_data [ counter ] = ran . next_int ( ) n counter + + n } n }	0
Q_574	remove all the similar part from all the file	C_574_0	public static void remove_similarities_and_save_files ( list < string > filepathes , n log logging , boolean is_windows ) throws io_exception { n list < file > files = new linked_list < file > ( ) n for ( string path filepathes ) { n files . add ( new file ( path ) ) n } n file_comparer fcomparer n for ( int i = codint i < files . size ( ) i + + ) { n for ( int y = i + codint y < files . size ( ) y + + ) { n fcomparer = new file_comparer ( files . get ( i ) , files . get ( y ) , n logging , is_windows ) n fcomparer . remove_similar_classes_from_file1 ( ) n } n } n }	1
Q_574	remove all the similar part from all the file	C_574_1	private synchronized void initialize ( ) { n iterator types = entity_types_locator . get_entity_types ( ) . get_all_entity_types ( ) n string factory_name = null n n while ( types . has_next ( ) ) { n class type = ( class ) types . next ( ) n if ( type = object . class ) { n string factory_key = n codstr n + type . get_name ( ) n try { n factory_name = properties_manager . get_property ( factory_key ) n } catch ( exception runtime ) { n string d_msg = n codstr n + codstr n + type . get_name ( ) n + codstr n log . debug ( d_msg ) n } n if ( factory_name = null ) { n try { n i_entity_name_finder_factory factory = n ( i_entity_name_finder_factory ) class . for_name ( factory_name ) . new_instance ( ) n get_name_finders ( ) . put ( type , factory . new_finder ( ) ) n } catch ( exception e ) { n string e_msg = n codstr n + codstr n + type . get_name ( ) n + codstr n log . error ( e_msg , e ) n } n } n } n } n set_initialized ( true ) n }	0
Q_574	remove all the similar part from all the file	C_574_2	"initializer n public static void init_stapler_crumb_issuer ( ) { n web_app . get ( jenkins . get_instance ( ) . servlet_context ) . set_crumb_issuer ( new org . kohsuke . stapler . crumb_issuer ( ) { n override n public string issue_crumb ( stapler_request request ) { n crumb_issuer ci = jenkins . get_instance ( ) . get_crumb_issuer ( ) n return ci = null ? ci . get_crumb ( request ) default . issue_crumb ( request ) n } n n override n public void validate_crumb ( stapler_request request , string submitted_crumb ) { n crumb_issuer ci = jenkins . get_instance ( ) . get_crumb_issuer ( ) n if ( ci = = null ) { n default . validate_crumb ( request , submitted_crumb ) n } else { n if ( ci . validate_crumb ( request , ci . get_descriptor ( ) . get_crumb_salt ( ) , submitted_crumb ) ) n throw new security_exception ( codstr t match "" ) n } n } n } ) n }"	0
Q_575	get all declare method on the leaf class and all superclass	C_575_0	public static method [ ] get_all_declared_methods ( class < ? > leaf_class ) { n final list < method > methods = new array_list < method > ( codint ) n do_with_methods ( leaf_class , new method_callback ( ) { n public void do_with ( method method ) { n methods . add ( method ) n } n } ) n return methods . to_array ( new method [ methods . size ( ) ] ) n }	1
Q_575	get all declare method on the leaf class and all superclass	C_575_1	public custom_emoji get_known_custom_emoji_or_create_custom_emoji ( long id , string name , boolean animated ) { n custom_emoji emoji = custom_emojis . get ( id ) n return emoji = = null ? new custom_emoji_impl ( this , id , name , animated ) emoji n }	0
Q_575	get all declare method on the leaf class and all superclass	C_575_2	private void finish ( ) { n try { n global_enablement_builder global_enablement_builder = get_bean_manager ( ) . get_services ( ) . get ( global_enablement_builder . class ) n for ( bean_registration registration additional_beans ) { n process_bean_registration ( registration , global_enablement_builder ) n } n for ( observer_registration registration additional_observers ) { n process_observer_registration ( registration ) n } n } catch ( exception e ) { n throw new definition_exception ( e ) n } n }	0
Q_576	write a java_script script tag that a time in the user be locale	C_576_0	"public static void write_time_java_script ( date date , sequence sequence , appendable out , appendable script_out ) throws io_exception { n if ( date = = null ) out . append ( codstr < span id = codstr ) n out . append ( id_string ) n out . append ( codstr > codstr < / span > codstr function chain_writer_update_time ( id , millis , server_value ) { n codstr if ( document . get_element_by_id ) { n codstr var date = new date ( millis ) n codstr var hour = date . get_hours ( ) n codstr var client_value = ( hour < codint ) ? codstr codstr n codstr client_value + = hour + codstr n codstr var minute = date . get_minutes ( ) n codstr if ( minute < codint ) client_value + = codstr n codstr client_value + = minute + codstr n codstr var second = date . get_seconds ( ) n codstr if ( second < codint ) client_value + = codstr n codstr client_value + = second n codstr if ( client_value = server_value ) document . get_element_by_id ( codstr + id ) . first_child . node_value = client_value n codstr } n codstr } n codstr chain_writer_update_time ( codstr , codstr , codstr ) n encode_java_script_in_xhtml ( time_string , script_out ) n script_out . append ( codstr ) n "" ) n } n }"	1
Q_576	write a java_script script tag that a time in the user be locale	C_576_1	public float norm ( ) n { n float sum = codint n n for ( int r = codint r < m_n_rows + + r ) n { n for ( int c = codint c < m_n_cols + + c ) n { n final float v = m_a_values [ r ] [ c ] n sum + = v * v n } n } n n return ( float ) math . sqrt ( sum ) n }	0
Q_576	write a java_script script tag that a time in the user be locale	C_576_2	override n public void rejected_execution ( runnable r , thread_pool_executor executor ) { n int counts = reject_counts . increment_and_get ( ) n if ( logger . is_warn_enabled ( ) ) { n int t = counts codint n if ( t = = codint ) n { n logger . warn ( new string_builder ( ) . append ( codstr ) . append ( counts ) . append ( codstr ) . to_string ( ) ) n } n } n / / n try { n executor . get_queue ( ) . put ( r ) n } catch ( interrupted_exception e1 ) { n throw new rejected_execution_exception ( e1 ) n } n }	0
Q_577	render the sql fragment that correspond to this criterion	C_577_0	"public string to_sql_string ( criteria criteria , criteria_query criteria_query ) throws hibernate_exception { n n string [ ] columns n try n { n columns = criteria_query . get_columns_using_projection ( criteria , property_name ) n } n catch ( query_exception e ) n { n columns = new string [ codint ] n } n n / / if there are columns that map the given property . the property exists , so we don codstr false codstr true "" n }"	1
Q_577	render the sql fragment that correspond to this criterion	C_577_1	public void login ( string user_name , string password , string project_name ) { n n http_session session = null n m_login_exception = null n try { n n / / login the user and create a new session n cms_user user = get_cms_object ( ) . read_user ( user_name ) n open_cms . get_session_manager ( ) . check_create_session_for_user ( user ) n get_cms_object ( ) . login_user ( user_name , password , get_request_context ( ) . get_remote_address ( ) ) n n / / make sure we have a new session after login for security reasons n session = get_request ( ) . get_session ( false ) n if ( session = null ) { n session . invalidate ( ) n } n session = get_request ( ) . get_session ( true ) n if ( project_name = null ) { n / / if this fails , the login is regarded as a failure as well n get_cms_object ( ) . get_request_context ( ) . set_current_project ( get_cms_object ( ) . read_project ( project_name ) ) n } n if ( get_cms_object ( ) . get_request_context ( ) . get_current_project ( ) . is_online_project ( ) ) { n / / in case the user is logged into an offline project , send any available login message n cms_login_message login_message = open_cms . get_login_manager ( ) . get_login_message ( ) n if ( ( login_message = null ) login_message . is_active ( ) ) { n	0
Q_577	render the sql fragment that correspond to this criterion	C_577_2	public static graph decode ( string encoded_graph , boolean no_month ) n throws graph_encoding_exception { n graph_configuration config = new graph_configuration ( ) n if ( no_month ) { n config . value_highlight_color = config . value_color n } n return decode ( encoded_graph , config ) n }	0
Q_578	specify the master property that be part of the binding	C_578_0	public static < mo > multiple_master_binding < mo , collection < mo read ( readable_property < mo > . masters ) { n return new multiple_master_binding < mo , collection < mo ( arrays . as_list ( masters ) , null ) n }	1
Q_578	specify the master property that be part of the binding	C_578_1	public void export_data ( string resource_group_name , string name , export_rdb_parameters parameters ) { n export_data_with_service_response_async ( resource_group_name , name , parameters ) . to_blocking ( ) . last ( ) . body ( ) n }	0
Q_578	specify the master property that be part of the binding	C_578_2	private interface_declaration get_control_interface_or_extension ( type_mirror intf_or_bean_class ) n { n if ( intf_or_bean_class instanceof interface_type ) n { n return ( ( interface_type ) intf_or_bean_class ) . get_declaration ( ) n } n else if ( intf_or_bean_class instanceof class_type ) n { n class_type class_type = ( class_type ) intf_or_bean_class n n / / if the bean type declaration cannot be found , then the only ( valid ) possibility n / / is that it is a generated type from the current processor pass . see if a base n / / interface type can be determined from the current processor input list . n if ( class_type . get_declaration ( ) = = null ) n { n / / n / / compute the bean type name , and the associated interface name by stripping n / / the codstr suffix n / / n string class_name = class_type . to_string ( ) n annotation_processor_environment ape = get_annotation_processor_environment ( ) n interface_declaration id = null n string intf_name = null n if ( class_name . length ( ) > codint ) { n intf_name = class_name . substring ( codint , class_name . length ( ) _ codint ) n id = ( interface_declaration ) ape . get_type_declaration ( intf_name ) n } n n if ( id = = null intf_name = null ) n { n / / the specified class name may not be fully qualified . in this case , the n	0
Q_579	provide a task group specification builder	C_579_0	deprecated n public task_group_specification . builder to_specification_builder ( ) { n if ( get_locale ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n return new task_group_specification . builder ( get_input_type ( ) , get_output_type ( ) , get_locale ( ) , get_activity ( ) ) n }	1
Q_579	provide a task group specification builder	C_579_1	"protected void send_message ( string xml ) { n byte [ ] bytes = null n try { n bytes = xml . get_bytes ( codstr ) n write_bytes ( bytes ) n } catch ( socket_exception se ) { n / / when we get a socket exception , let "" s try to re _ establish n stop ( ) n start ( ) n try { n write_bytes ( bytes ) n } catch ( io_exception e ) { n throw new web_driver_exception ( e ) n } n } catch ( io_exception e ) { n throw new web_driver_exception ( e ) n } n }"	0
Q_579	provide a task group specification builder	C_579_2	pure n public static < t > iterable < t > drop ( final iterable < t > iterable , final int count ) { n if ( iterable = = null ) n throw new null_pointer_exception ( codstr ) n if ( count = = codint ) n return iterable n if ( count < codint ) n throw new illegal_argument_exception ( codstr count codstr n + count ) n return new iterable < t > ( ) { n override n public iterator < t > iterator ( ) { n return iterator_extensions . drop ( iterable . iterator ( ) , count ) n } n } n }	0
Q_580	decode the byte from the specify input stream	C_580_0	public static string decode_string ( input_stream stream ) throws io_exception { n byte [ ] complete_buffer = new byte [ codint ] n final byte [ ] buffer = new byte [ buffer_size ] n int read n while ( ( read = stream . read ( buffer ) ) > codint ) { n final byte [ ] tmp = new byte [ complete_buffer . length + read ] n system . arraycopy ( complete_buffer , codint , tmp , codint , complete_buffer . length ) n system . arraycopy ( buffer , codint , tmp , complete_buffer . length , read ) n complete_buffer = tmp n } n return decode_string ( complete_buffer ) n }	1
Q_580	decode the byte from the specify input stream	C_580_1	public int get_offset_in_end_section ( ) { n if ( passage_type . feat_ok_tst ( ( passage_type ) jcas_type ) . cas_feat_offset_in_end_section = = null ) n jcas_type . jcas . throw_feat_missing ( codstr , codstr ) n return jcas_type . ll_cas . ll_get_int_value ( addr , ( ( passage_type ) jcas_type ) . cas_feat_code_offset_in_end_section ) }	0
Q_580	decode the byte from the specify input stream	C_580_2	public base_template xml_declaration ( ) throws io_exception { n out . write ( codstr ) n write_attribute ( codstr , codstr ) n if ( configuration . get_declaration_encoding ( ) = null ) { n write_attribute ( codstr , configuration . get_declaration_encoding ( ) ) n } n out . write ( codstr ) n out . write ( configuration . get_new_line_string ( ) ) n return this n }	0
Q_581	set the prefer value of traffic direction	C_581_0	public static void set_preferred_attribute_value_for_traffic_direction ( traffic_direction direction , int index , string value ) { n final preferences prefs = preferences . user_node_for_package ( road_network_constants . class ) n if ( prefs = null ) { n final string_builder key_name = new string_builder ( ) n key_name . append ( codstr ) / / non _ nls _ codint n key_name . append ( direction . name ( ) ) n key_name . append ( codstr ) / / non _ nls _ codint n key_name . append ( index ) n string sys_def n try { n sys_def = get_system_default ( direction , index ) n } catch ( index_out_of_bounds_exception exception ) { n sys_def = null n } n if ( value = = null codstr . equals ( value ) / / non _ nls _ codint n ( sys_def = null sys_def . equals_ignore_case ( value ) ) ) { n prefs . remove ( key_name . to_string ( ) ) n return n } n prefs . put ( key_name . to_string ( ) , value ) n } n }	1
Q_581	set the prefer value of traffic direction	C_581_1	public static void intercept ( this final object runner , super_call final callable < ? > proxy , n argument ( codint ) final object child , n argument ( codint ) final run_notifier notifier ) throws exception { n n run . attach_run_listeners ( runner , notifier ) n n synchronized ( notify_map ) { n string key = runner . to_string ( ) n if ( notify_map . contains_key ( key ) ) { n notify_map . put ( key , run . fire_run_started ( runner ) ) n } n } n n try { n run . push_thread_runner ( runner ) n if ( child instanceof framework_method ) { n framework_method method = ( framework_method ) child n n apply_timeout ( method ) n int count = retry_handler . get_max_retry ( runner , method ) n boolean is_ignored = ( null = method . get_annotation ( ignore . class ) ) n n run_announcer . new_atomic_test ( runner , method ) n n if ( count = = codint ) { n lifecycle_hooks . call_proxy ( proxy ) n } else if ( is_ignored ) { n retry_handler . run_child_with_retry ( runner , method , notifier , count ) n } n } else { n lifecycle_hooks . call_proxy ( proxy ) n } n } finally { n run . pop_thread_runner ( ) n } n }	0
Q_581	set the prefer value of traffic direction	C_581_2	public void clear ( ) { n assert_edt ( ) n log . debug ( codstr ) n for ( int row = codint row < size row + + ) { n for ( int col = codint col < size col + + ) { n remove_item ( new point ( col , row ) ) n } n } n }	0
Q_582	set this pane with the give factor	C_582_0	public void set ( double a , double b , double c , double d ) { n this . a_property . set ( a ) n this . b_property . set ( b ) n this . c_property . set ( c ) n this . d_property . set ( d ) n clear_buffered_values ( ) n }	1
Q_582	set this pane with the give factor	C_582_1	static float get_float_attribute ( element element , string attr ) throws parsing_exception { n string cx = element . get_attribute ( attr ) n if ( ( cx = = null ) ( cx . equals ( codstr ) ) ) { n cx = element . get_attribute_ns ( sodipodi , attr ) n } n n try { n return float . parse_float ( cx ) n } catch ( number_format_exception e ) { n throw new parsing_exception ( element , codstr + attr , e ) n } n }	0
Q_582	set this pane with the give factor	C_582_2	protected attachment get_image_message ( message_envelope envelope ) { n if ( envelope = null n envelope . get_message ( ) = null n envelope . get_message ( ) . get_attachments ( ) = null n envelope . get_message ( ) . get_attachments ( ) . get ( codint ) = null n envelope . get_message ( ) . get_attachments ( ) . get ( codint ) . get_type ( ) = = attachment_type . image ) { n n n return envelope . get_message ( ) . get_attachments ( ) . get ( codint ) n } n return null n }	0
Q_583	give a list of string return the first string in the list which exist as a parameter	C_583_0	public string get_first_existing_param_name ( string [ ] param_names ) { n for ( final string param_name param_names ) { n if ( is_present ( param_name ) ) { n return param_name n } n } n throw new parameter_exception ( codstr + arrays . to_string ( param_names ) n + codstr ) n }	1
Q_583	give a list of string return the first string in the list which exist as a parameter	C_583_1	public static void trace_pre_invoke_ends ( ejs_deployed_support s , ejs_wrapper_base wrapper ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_debug_enabled ( ) ) n { n string_buffer sbuf = new string_buffer ( ) n n sbuf n . append ( mthd_pre_invoke_exit_type_str ) . append ( data_delimiter ) n . append ( mthd_pre_invoke_exit_type ) . append ( data_delimiter ) n n write_deployed_support_info ( s , sbuf , wrapper , null ) n n tr . debug ( tc , sbuf . to_string ( ) ) n } n }	0
Q_583	give a list of string return the first string in the list which exist as a parameter	C_583_2	public void check_for_rotation ( ) { n try { n buffered_reader probe = new buffered_reader ( new file_reader ( file . get_absolute_file ( ) ) ) n if ( first_line = = null ( first_line . equals ( probe . read_line ( ) ) ) ) { n probe . close ( ) n / / start reading the file from the beginning n reader . close ( ) n reader = new buffered_reader ( new file_reader ( file . get_absolute_file ( ) ) ) n first_line = null n offset = codint n } n } catch ( io_exception e ) { n e . print_stack_trace ( ) n } n }	0
Q_584	update the chart with new datasets	C_584_0	nonnull n public i_has_js_code get_js_update_code ( nonnull final ijs_expression a_js_data_var ) n { n final js_package ret = new js_package ( ) n / / cleanup old chart n ret . invoke ( js_expr . ref ( get_js_chart_var ( ) ) , codstr ) n / / use new chart n ret . assign ( js_expr . ref ( get_js_chart_var ( ) ) , new js_defined_class ( codstr ) . _new ( ) n . arg ( js_expr . ref ( get_canvas_id ( ) ) n . invoke ( codstr ) n . arg ( codstr ) ) n . invoke ( m_a_chart . get_js_method_name ( ) ) n . arg ( a_js_data_var ) n . arg ( get_js_options ( ) ) ) n return ret n }	1
Q_584	update the chart with new datasets	C_584_1	public write_concern with_w_timeout ( final long w_timeout , final time_unit time_unit ) { n not_null ( codstr , time_unit ) n long new_w_time_out_ms = time_unit . milliseconds . convert ( w_timeout , time_unit ) n is_true_argument ( codstr , w_timeout > = codint ) n is_true_argument ( codstr + integer . max_value + codstr , new_w_time_out_ms < = integer . max_value ) n return new write_concern ( w , ( int ) new_w_time_out_ms , fsync , journal ) n }	0
Q_584	update the chart with new datasets	C_584_2	override n public void rot90 ( ind_array to_rotate ) { n if ( to_rotate . is_matrix ( ) ) n throw new illegal_argument_exception ( codstr ) n n ind_array start = to_rotate . transpose ( ) n for ( int i = codint i < start . rows ( ) i + + ) n start . put_row ( i , reverse ( start . get_row ( i ) ) ) n n }	0
Q_585	the footer render after suggestion in the dropdown menu	C_585_0	nonnull n public typeahead_dataset set_footer ( nullable final ihc_node a_footer ) n { n return set_footer ( a_footer = null ? hc_renderer . get_as_html_string_without_namespaces ( a_footer ) ( string ) null ) n }	1
Q_585	the footer render after suggestion in the dropdown menu	C_585_1	final set < string > get_connector_configuration_names ( ) { n n set < string > connector_names = new hash_set < string > ( ) n n enumeration < object > key_enumeration = get_system_properties ( ) . keys ( ) n while ( key_enumeration . has_more_elements ( ) ) { n string key = key_enumeration . next_element ( ) . to_string ( ) n n / / check if property key has tracee connector format n matcher matcher = key_matcher_pattern . matcher ( key ) n if ( matcher . matches ( ) matcher . group_count ( ) > codint ) { n n connector_names . add ( matcher . group ( codint ) ) n n } n n } n n return connector_names n n }	0
Q_585	the footer render after suggestion in the dropdown menu	C_585_2	override n public ble_illegal_operation_exception handle_mismatch_data ( bluetooth_gatt_characteristic characteristic , int needed_properties ) { n string message = message_creator . create_mismatch_message ( characteristic , needed_properties ) n return new ble_illegal_operation_exception ( message , n characteristic . get_uuid ( ) , n characteristic . get_properties ( ) , n needed_properties ) n }	0
Q_586	check if pass object allow for the specify action	C_586_0	override_on_demand n protected boolean is_action_allowed ( nonnull final wpectype a_wpec , n nonnull final e_web_page_form_action e_form_action , n nullable final datatype a_selected_object ) n { n return true n }	1
Q_586	check if pass object allow for the specify action	C_586_1	public static synchronized void run_operations ( ) { n try { n for ( runnable shutdown_operation shutdown_operations ) { n try { n shutdown_operation . run ( ) n } catch ( exception e ) { n log . warn ( codstr + e . get_message ( ) , e ) n } n } n } finally { n shutdown_operations . clear ( ) n shutdown_operations . add_all ( preserved_shutdown_operations ) n } n }	0
Q_586	check if pass object allow for the specify action	C_586_2	private void populate_alias_destinations ( map < string , object > properties , n hash_map < string , base_destination > destination_list , configuration_admin config_admin ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) { n sib_tr . entry ( tc , codstr , new object [ ] { properties , destination_list , config_admin } ) n } n n string [ ] alias_destinations = ( string [ ] ) properties . get ( js_admin_constants . alias ) n n if ( alias_destinations = null ) { n n for ( string alias_destination_pid alias_destinations ) { n pids . add ( alias_destination_pid ) n configuration config = null n try { n config = config_admin . get_configuration ( alias_destination_pid , bundle_location ) n } catch ( io_exception e ) { n sib_tr . exception ( tc , e ) n ffdc_filter . process_exception ( e , this . get_class ( ) . get_name ( ) , codstr , this ) n } n dictionary alias_destination_properties = config . get_properties ( ) n alias_destination alias_dest = new alias_destination_impl ( ) n n string alias_destination_name = ( string ) alias_destination_properties . get ( js_admin_constants . id ) n string target_destination_name = ( string ) alias_destination_properties . get ( js_admin_constants . targetdestination ) n n if ( destination_list . contains_key ( alias_destination_name ) ) { n sib_tr . error ( tc , codstr , new object [ ] { alias_destination_name } ) n continue n } n	0
Q_587	turn special character into escape character conform to java_script	C_587_0	nullable n public static string java_script_escape ( nullable final string s_input ) n { n if ( string_helper . has_no_text ( s_input ) ) n return s_input n n final char [ ] a_input = s_input . to_char_array ( ) n if ( string_helper . contains_any ( a_input , chars_to_mask ) ) n return s_input n n final char [ ] ret = new char [ a_input . length * codint ] n int n_index = codint n char c_prev_char = codstr n for ( final char c_current a_input ) n { n switch ( c_current ) n { n case codstr codstr codstr n case codstr n case codstr n ret [ n_index + + ] = mask_char n ret [ n_index + + ] = c_current n break n case codstr n ret [ n_index + + ] = mask_char n ret [ n_index + + ] = codstr n break n case codstr n if ( c_prev_char = codstr ) n { n ret [ n_index + + ] = mask_char n ret [ n_index + + ] = codstr n } n break n case codstr n ret [ n_index + + ] = mask_char n ret [ n_index + + ] = codstr n break n case codstr n ret [ n_index + + ] = mask_char n ret [ n_index + + ] = codstr n break n default n ret [ n_index + + ] = c_current n break n } n	1
Q_587	turn special character into escape character conform to java_script	C_587_1	public void set_property ( final string property , final object new_value ) { n if ( property . starts_with ( codstr ) ) { n if ( new_value instanceof string new_value instanceof g_string ) { n final iterator iter = iterator ( ) n n while ( iter . has_next ( ) ) { n final node_child child = ( node_child ) iter . next ( ) n n child . attributes ( ) . put ( property . substring ( codint ) , new_value ) n } n } n } else { n final g_path_result result = new node_children ( this , property , this . namespace_tag_hints ) n n if ( new_value instanceof map ) { n for ( object o ( ( map ) new_value ) . entry_set ( ) ) { n final map . entry entry = ( map . entry ) o n result . set_property ( codstr + entry . get_key ( ) , entry . get_value ( ) ) n } n } else { n if ( new_value instanceof closure ) { n result . replace_node ( ( closure ) new_value ) n } else { n result . replace_body ( new_value ) n } n } n } n }	0
Q_587	turn special character into escape character conform to java_script	C_587_2	public coordinate snap ( coordinate coordinate , double distance ) { n / / some initialization n calculated_distance = distance n has_snapped = false n coordinate snapping_point = coordinate n n / / calculate the distances for all coordinate arrays n for ( coordinate [ ] coordinate_array coordinates ) { n if ( coordinate_array . length > codint ) { n for ( int j = codint j < coordinate_array . length j + + ) { n double d = math_service . distance ( coordinate_array [ j ] , coordinate_array [ j _ codint ] , coordinate ) n if ( d < calculated_distance ( d = = calculated_distance has_snapped ) ) { n snapping_point = math_service . nearest ( coordinate_array [ j ] , coordinate_array [ j _ codint ] , coordinate ) n calculated_distance = d n has_snapped = true n } n } n } else if ( coordinate_array . length = = codint ) { n / / in the case of points , see if we can snap to them n double d = math_service . distance ( coordinate_array [ codint ] , coordinate ) n if ( d < calculated_distance ) { n snapping_point = coordinate_array [ codint ] n calculated_distance = d n has_snapped = true n } n } n } n n return snapping_point n }	0
Q_588	return whether the data which correspond to a specific key be currently cache or not	C_588_0	public final boolean is_cached ( non_null final key_type key ) { n condition . instance . ensure_not_null ( key , codstr ) n n synchronized ( cache ) { n return cache . get ( key ) = null n } n }	1
Q_588	return whether the data which correspond to a specific key be currently cache or not	C_588_1	public synchronized set < runnable > get_in_progress ( ) { n set < runnable > items = new hash_set < > ( ) n for ( queue_entry entry in_progress ) { n items . add ( entry . item ) n } n return items n }	0
Q_588	return whether the data which correspond to a specific key be currently cache or not	C_588_2	private static boolean verify ( input_stream is_signature , input_stream is_message , input_stream is_public_key ) throws lr_exception n { n / / get the public key ring collection from the public key input stream n pgp_public_key_ring_collection pgp_rings = null n n try n { n pgp_rings = new pgp_public_key_ring_collection ( pgp_util . get_decoder_stream ( is_public_key ) ) n } n catch ( exception e ) n { n throw new lr_exception ( lr_exception . invalid_public_key ) n } n n / / add the bouncy castle security provider n security . add_provider ( new bouncy_castle_provider ( ) ) n n / / build an output stream from the message for verification n boolean verify = false n int ch n byte_array_output_stream b_out = new byte_array_output_stream ( ) n armored_input_stream a_in = null n n try n { n a_in = new armored_input_stream ( is_message ) n / / we are making no effort to clean the input for this example n / / if this turns into a fully _ featured verification utility in a future version , this will need to be handled n while ( ( ch = a_in . read ( ) ) > = codint a_in . is_clear_text ( ) ) n { n b_out . write ( ( byte ) ch ) n } n n b_out . close ( ) n } n catch ( exception e ) n { n throw new lr_exception ( lr_exception . message_invalid ) n } n n /	0
Q_589	create a code dictionary_feature_vector_generator which contain	C_589_0	public static < t , u > dictionary_feature_vector_generator < t , u > create_from_data ( collection < t > data , n feature_generator < t , u > generator , boolean ignore_oov_features ) { n indexed_list < u > features = new indexed_list < u > ( ) n for ( t datum data ) { n features . add_all ( generator . generate_features ( datum ) . key_set ( ) ) n } n return new dictionary_feature_vector_generator < t , u > ( features , generator , ignore_oov_features ) n }	1
Q_589	create a code dictionary_feature_vector_generator which contain	C_589_1	public observable < service_response_with_headers < page < node_file > , file_list_from_task_headers list_from_task_next_with_service_response_async ( final string next_page_link , final file_list_from_task_next_options file_list_from_task_next_options ) { n return list_from_task_next_single_page_async ( next_page_link , file_list_from_task_next_options ) n . concat_map ( new func1 < service_response_with_headers < page < node_file > , file_list_from_task_headers > , observable < service_response_with_headers < page < node_file > , file_list_from_task_headers ( ) { n override n public observable < service_response_with_headers < page < node_file > , file_list_from_task_headers call ( service_response_with_headers < page < node_file > , file_list_from_task_headers > page ) { n string next_page_link = page . body ( ) . next_page_link ( ) n if ( next_page_link = = null ) { n return observable . just ( page ) n } n return observable . just ( page ) . concat_with ( list_from_task_next_with_service_response_async ( next_page_link , file_list_from_task_next_options ) ) n } n } ) n }	0
Q_589	create a code dictionary_feature_vector_generator which contain	C_589_2	public void argument ( closure < ? > closure ) { n arguments . add ( ( plugin_argument ) project . configure ( new plugin_argument ( ) , closure ) ) n }	0
Q_590	get the end of the block of variable index which can contain a	C_590_0	private int get_plate_end_index ( int plate_num ) { n preconditions . check_argument ( plate_num > = codint plate_num < plate_names . size ( ) ) n return get_plate_start_index ( plate_num ) n + ( plates . get ( plate_num ) . get_maximum_plate_size ( ) * maximum_replications [ plate_num ] ) n }	1
Q_590	get the end of the block of variable index which can contain a	C_590_1	private static boolean validate_term_with_distance ( bytes_ref term , n component_term_vector term_vector ) throws io_exception { n if ( term_vector . distances = = null term_vector . distances . is_empty ( ) ) { n return true n } else { n / / first check maximum for all distances n for ( sub_component_distance item term_vector . distances ) { n if ( item . maximum = = null ) { n continue n } else { n if ( item . get_distance ( ) . validate_maximum ( term ) ) { n return false n } n } n } n / / then check minimum for all distances n for ( sub_component_distance item term_vector . distances ) { n if ( item . minimum = = null ) { n continue n } else { n if ( item . get_distance ( ) . validate_minimum ( term ) ) { n return false n } n } n } n / / try { n / / system . out . println ( codstr + term . utf8_to_string ( ) + codstr + term_vector . distances . size ( ) + codstr ) n / / for ( sub_component_distance item term_vector . distances ) { n / / system . out . println ( n / / item . hash_code ( ) + codstr + n / / term . utf8_to_string ( ) + codstr + item . get_distance ( ) . get_class ( ) . get_name (	0
Q_590	get the end of the block of variable index which can contain a	C_590_2	public boolean validate_crumb ( servlet_request request , multipart_form_data_parser parser ) { n crumb_issuer_descriptor < crumb_issuer > desc = get_descriptor ( ) n string crumb_field = desc . get_crumb_request_field ( ) n string crumb_salt = desc . get_crumb_salt ( ) n n return validate_crumb ( request , crumb_salt , parser . get ( crumb_field ) ) n }	0
Q_591	replicate the value in code tensor across all dimension of	C_591_0	private void repmat_increment ( tensor_base other , double multiplier ) { n / / maps a key of other into a partial key of this . n int [ ] dimension_mapping = get_dimension_mapping ( other . get_dimension_numbers ( ) ) n int [ ] partial_key = array_utils . copy_of ( get_dimension_sizes ( ) , get_dimension_sizes ( ) . length ) n for ( int i = codint i < dimension_mapping . length i + + ) { n partial_key [ dimension_mapping [ i ] ] = codint n } n n int num_values = codint n for ( int i = codint i < partial_key . length i + + ) { n num_values * = partial_key [ i ] n } n int [ ] key_offsets = new int [ num_values ] n iterator < int [ ] > my_key_iterator = new integer_array_iterator ( partial_key , new int [ codint ] ) n int ind = codint n while ( my_key_iterator . has_next ( ) ) { n key_offsets [ ind ] = dim_key_to_index ( my_key_iterator . next ( ) ) n ind + + n } n preconditions . check_state ( ind = = key_offsets . length ) n n iterator < key_value > other_key_values = other . key_value_iterator ( ) n while ( other_key_values . has_next ( ) ) { n key_value other_key_value = other_key_values . next ( ) n int base_offset = codint n for ( int i = codint i < other_key_value . get_key	1
Q_591	replicate the value in code tensor across all dimension of	C_591_1	public static string encode_hash ( lat_long p ) { n return encode_hash ( p . get_lat ( ) , p . get_lon ( ) , max_hash_length ) n }	0
Q_591	replicate the value in code tensor across all dimension of	C_591_2	public void write_long ( long value ) n throws io_exception n { n int offset = _offset n byte [ ] buffer = _buffer n n if ( size < = offset + codint ) { n flush_buffer ( ) n offset = _offset n } n n if ( long_direct_min < = value value < = long_direct_max ) { n buffer [ offset + + ] = ( byte ) ( value + bc_long_zero ) n } n else if ( long_byte_min < = value value < = long_byte_max ) { n buffer [ offset + + ] = ( byte ) ( bc_long_byte_zero + ( value codint ) ) n buffer [ offset + + ] = ( byte ) ( value ) n } n else if ( long_short_min < = value value < = long_short_max ) { n buffer [ offset + + ] = ( byte ) ( bc_long_short_zero + ( value codint ) ) n buffer [ offset + + ] = ( byte ) ( value codint ) n buffer [ offset + + ] = ( byte ) ( value ) n } n else if ( _ codint < = value value < = codint ) { n buffer [ offset + codint ] = ( byte ) bc_long_int n buffer [ offset + codint ] = ( byte ) ( value codint ) n buffer [ offset + codint ] = ( byte ) ( value codint ) n	0
Q_592	fetch multiple domain object as specify by an array of identifier value	C_592_0	public static < t > list < t > fetch_objects ( class < t > clazz , string [ ] ids ) { n return get_factory ( clazz ) . fetch_objects ( clazz , ids ) n }	1
Q_592	fetch multiple domain object as specify by an array of identifier value	C_592_1	private void add_theme_links ( page_parameters parameters ) { n list < i_named_parameters . named_pair > pairs = parameters . get_all_named ( ) n if ( parameters . get_all_named ( ) . size ( ) < codint ) { n add ( new update_theme_link ( codstr , codstr ) ) n add ( new update_theme_link ( codstr , codstr ) ) n add ( new update_theme_link ( codstr , codstr ) ) n add ( new update_theme_link ( codstr , codstr ) ) n add ( new update_theme_link ( codstr , codstr ) ) n } else { n string chart_string = parameters . get_all_named ( ) . get ( codint ) . get_value ( ) n add ( new update_theme_link ( codstr , chart_string ) ) n add ( new update_theme_link ( codstr , chart_string ) ) n add ( new update_theme_link ( codstr , chart_string ) ) n add ( new update_theme_link ( codstr , chart_string ) ) n add ( new update_theme_link ( codstr , chart_string ) ) n } n }	0
Q_592	fetch multiple domain object as specify by an array of identifier value	C_592_2	public string get_full_name ( ) { n string_buffer buf = new string_buffer ( ) n if ( get_parent_privlige ( ) = null ) { n buf . append ( parent_privlige . get_full_name ( ) . concat ( codstr ) ) n } n buf . append ( get_privilige_name ( ) ) n return buf . to_string ( ) n }	0
Q_593	set the trigger be link job_data_map add any value to it that be	C_593_0	nonnull n public jdk8_trigger_builder < t > using_job_data ( nonnull final job_data_map new_job_data_map ) n { n / / add any existing data to this new map n new_job_data_map . put_all ( m_a_job_data_map ) n m_a_job_data_map = new_job_data_map / / set new map as the map to use n return this n }	1
Q_593	set the trigger be link job_data_map add any value to it that be	C_593_1	private void add_ou_to_table ( cms_organizational_unit ou ) { n n if ( m_app . is_parent_of_managable_ou ( ou . get_name ( ) ) ) { n item item = m_container . add_item ( ou . get_name ( ) ) n if ( item = null ) { n item . get_item_property ( table_property . name ) . set_value ( ou . get_name ( ) ) n item . get_item_property ( table_property . description ) . set_value ( ou . get_display_name ( a_cms_ui . get ( ) . get_locale ( ) ) ) n if ( ou . has_flag_webuser ( ) ) { n item . get_item_property ( table_property . icon ) . set_value ( new cms_css_icon ( open_cms_theme . icon_ou_web ) ) n } n } n } n }	0
Q_593	set the trigger be link job_data_map add any value to it that be	C_593_2	public boolean add_element ( p element ) { n boolean changed = false n if ( element = null ) { n final grid_cell_element < p > grid_element = new grid_cell_element < > ( element ) n for ( final grid_cell < p > cell get_grid_cells_on ( element . get_geo_location ( ) . to_bounds2_d ( ) , true ) ) { n if ( cell . add_element ( grid_element ) ) { n changed = true n } n } n } n if ( changed ) { n + + this . element_count n } n return changed n }	0
Q_594	return the start of the give day as a code link calendar code	C_594_0	protected calendar get_start_of_day_java_calendar ( final long time_in_millis ) n { n final calendar start_of_day = create_java_calendar ( time_in_millis ) n start_of_day . set ( calendar . hour_of_day , codint ) n start_of_day . set ( calendar . minute , codint ) n start_of_day . set ( calendar . second , codint ) n start_of_day . set ( calendar . millisecond , codint ) n return start_of_day n }	1
Q_594	return the start of the give day as a code link calendar code	C_594_1	public static throwable get_only_cause ( collection < message > messages ) { n throwable only_cause = null n for ( message message messages ) { n throwable message_cause = message . get_cause ( ) n if ( message_cause = = null ) { n continue n } n n if ( only_cause = null throwable_equivalence . instance . equivalent ( only_cause , message_cause ) ) { n return null n } n n only_cause = message_cause n } n n return only_cause n }	0
Q_594	return the start of the give day as a code link calendar code	C_594_2	public void marshall ( leave_organization_request leave_organization_request , protocol_marshaller protocol_marshaller ) { n n if ( leave_organization_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_595	be the give class a transfer object class	C_595_0	public boolean is_to_class ( class < ? > to_class ) { n list < domain_class > domain_classes = reflection_helper . get_annotation_with_meta ( to_class , domain_class . class ) n return codint = domain_classes . size ( ) n }	1
Q_595	be the give class a transfer object class	C_595_1	override n public e_class get_ifc_plane_angle_measure ( ) { n if ( ifc_plane_angle_measure_e_class = = null ) { n ifc_plane_angle_measure_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_plane_angle_measure_e_class n }	0
Q_595	be the give class a transfer object class	C_595_2	guarded_by ( codstr ) n int evict_from_window ( ) { n int candidates = codint n node < k , v > node = access_order_window_deque ( ) . peek ( ) n while ( window_weighted_size ( ) > window_maximum ( ) ) { n / / the pending operations will adjust the size to reflect the correct weight n if ( node = = null ) { n break n } n n node < k , v > next = node . get_next_in_access_order ( ) n if ( node . get_weight ( ) = codint ) { n node . make_main_probation ( ) n access_order_window_deque ( ) . remove ( node ) n access_order_probation_deque ( ) . add ( node ) n candidates + + n n set_window_weighted_size ( window_weighted_size ( ) _ node . get_policy_weight ( ) ) n } n node = next n } n n return candidates n }	0
Q_596	set the list of type converter	C_596_0	void set_pre_converters ( collection < pre_converter > pre_converters ) { n for ( pre_converter pc pre_converters ) { n / / register using specific name ( if any ) n if ( pc instanceof named ) { n pre_converter_instances . put ( ( ( named ) pc ) . get_name ( ) , pc ) n } n / / always register using class name n pre_converter_instances . put ( pc . get_class ( ) . get_name ( ) , pc ) n } n }	1
Q_596	set the list of type converter	C_596_1	public void set_preferred_editor ( string resource_type , string editor_uri ) { n n if ( editor_uri = = null ) { n m_editor_settings . remove ( resource_type ) n } else { n m_editor_settings . put ( resource_type , editor_uri ) n } n }	0
Q_596	set the list of type converter	C_596_2	private cloud_foundry_raw_service_data cred_hub_to_connectors ( n services_data interpolated_data ) { n cloud_foundry_raw_service_data raw_services_data = new cloud_foundry_raw_service_data ( ) n raw_services_data . put_all ( interpolated_data ) n return raw_services_data n }	0
Q_597	proxy a ternary function spy for first parameter	C_597_0	public static < t1 , t2 , t3 , r > tri_function < t1 , t2 , t3 , r > spy1st ( tri_function < t1 , t2 , t3 , r > function , box < t1 > param1 ) { n return spy ( function , box . < r > empty ( ) , param1 , box . < t2 > empty ( ) , box . < t3 > empty ( ) ) n }	1
Q_597	proxy a ternary function spy for first parameter	C_597_1	deprecated n public static long parse_timestamp_without_time_zone ( time_zone_key time_zone_key , string value ) n { n return timestamp_with_or_without_time_zone_formatter . with_chronology ( get_chronology ( time_zone_key ) ) . parse_millis ( value ) n }	0
Q_597	proxy a ternary function spy for first parameter	C_597_2	protected void initialize ( ) { n this . mapped_fields = new hash_map < string , property_descriptor > ( ) n property_descriptor [ ] pds = bean_utils . get_property_descriptors ( mapped_class ) n if ( check_properties ) { n mapped_properties = new hash_set < string > ( ) n } n for ( int i = codint i < pds . length i + + ) { n property_descriptor pd = pds [ i ] n if ( pd . get_write_method ( ) = null ) { n if ( check_properties ) { n this . mapped_properties . add ( pd . get_name ( ) ) n } n this . mapped_fields . put ( pd . get_name ( ) . to_lower_case ( ) , pd ) n for ( string underscored_name underscore_name ( pd . get_name ( ) ) ) { n if ( underscored_name = null n pd . get_name ( ) . to_lower_case ( ) . equals ( underscored_name ) ) { n this . mapped_fields . put ( underscored_name , pd ) n } n } n } n } n }	0
Q_598	construct and initialize a new link type_not_found_exception with the give link string message	C_598_0	public static type_not_found_exception new_type_not_found_exception ( string message , object . args ) { n return new_type_not_found_exception ( null , message , args ) n }	1
Q_598	construct and initialize a new link type_not_found_exception with the give link string message	C_598_1	public static proxy as_proxy ( org . apache . maven . settings . proxy proxy ) { n final authentication authentication n if ( proxy . get_username ( ) = null proxy . get_password ( ) = null ) { n authentication = new authentication_builder ( ) . add_username ( proxy . get_username ( ) ) n . add_password ( proxy . get_password ( ) ) . build ( ) n } else { n authentication = null n } n return new proxy ( proxy . get_protocol ( ) , proxy . get_host ( ) , proxy . get_port ( ) , authentication ) n }	0
Q_598	construct and initialize a new link type_not_found_exception with the give link string message	C_598_2	public static class_loader get_class_loader ( j2_ee_name bean_name ) { n class_loader cl = null n final boolean is_trace_on = trace_component . is_any_tracing_enabled ( ) / / dnumber n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . entry ( tc , codstr + bean_name + codstr ) n n home_internal hi = home_of_homes . get_home ( bean_name ) n if ( hi = null ) { n cl = hi . get_class_loader ( ) n } else { n if ( is_trace_on tc . is_debug_enabled ( ) ) n tr . exit ( tc , codstr ) n } n n if ( is_trace_on tc . is_entry_enabled ( ) ) n tr . exit ( tc , codstr + cl ) n n return cl n }	0
Q_599	search the collection of element in order to find the element or element match the criterion define	C_599_0	override n public < e > e search ( final collection < e > collection ) { n for ( e element collection ) { n if ( get_matcher ( ) . is_match ( element ) ) { n return element n } n } n n return null n }	1
Q_599	search the collection of element in order to find the element or element match the criterion define	C_599_1	override n public list < string > get_packages ( ) { n list < string > list = new array_list < > ( ) n n consumer < json_array > reader = array _ > { n if ( ( array = null array . is_empty ( ) ) ) { n for ( int i = codint i < array . size ( ) i + + ) { n list . add ( array . get_string ( i ) ) n } n } n } n n json_array resources = config . get_json_array ( config_resources , null ) n json_array packages = config . get_json_array ( config_packages , null ) n n reader . accept ( resources ) n reader . accept ( packages ) n n return list n }	0
Q_599	search the collection of element in order to find the element or element match the criterion define	C_599_2	protected string create_response_message ( exception e , string request , object msgdoc , map < string , string > meta_info ) { n listener_helper helper = new listener_helper ( ) n if ( e instanceof service_exception ) n return helper . create_error_response ( request , meta_info , ( service_exception ) e ) . get_content ( ) n else if ( e = null ) n return helper . create_error_response ( request , meta_info , new service_exception ( service_exception . internal_error , e . get_message ( ) ) ) . get_content ( ) n else n return helper . create_ack_response ( request , meta_info ) n }	0
Q_600	associate the specify value with the specify key in the session	C_600_0	public object set_session_attribute ( final string _key , n final object _value ) n { n return this . session_attributes . put ( _key , _value ) n }	1
Q_600	associate the specify value with the specify key in the session	C_600_1	public pre_execution_interceptor_context should_not_collect_call_tree ( string reason ) { n if ( must_collect_call_tree ) { n logger . debug ( codstr , reason ) n collect_call_tree = false n } n return this n }	0
Q_600	associate the specify value with the specify key in the session	C_600_2	static boolean is_error_status ( http_response http_response , http_response_decode_data decode_data ) { n final int [ ] expected_statuses = decode_data . expected_status_codes ( ) n if ( expected_statuses = null ) { n return contains ( expected_statuses , http_response . status_code ( ) ) n } else { n return http_response . status_code ( ) / codint = codint n } n }	0
Q_601	return the worksheet with the give name in the workbook	C_601_0	override n public xls_worksheet get_sheet ( string name ) n { n xls_worksheet ret = null n if ( workbook = null ) n { n sheet sheet = workbook . get_sheet ( name ) n if ( sheet = null ) n ret = new xls_worksheet ( sheet ) n } n else if ( writable_workbook = null ) n { n sheet sheet = writable_workbook . get_sheet ( name ) n if ( sheet = null ) n ret = new xls_worksheet ( sheet ) n } n return ret n }	1
Q_601	return the worksheet with the give name in the workbook	C_601_1	protected void process_input ( string input ) { n string command = input . trim ( ) n if ( command . is_empty ( ) ) { n run_command ( command ) n } n }	0
Q_601	return the worksheet with the give name in the workbook	C_601_2	chronology get_effective_chronology ( ) { n chronology chrono = current_parsed ( ) . chrono n if ( chrono = = null ) { n chrono = formatter . get_chronology ( ) n if ( chrono = = null ) { n chrono = iso_chronology . instance n } n } n return chrono n }	0
Q_602	return all document template for the specify link document_type order by type then most specific to	C_602_0	programmatic n public document_template find_first_by_type_and_applicable_to_at_path ( final document_type document_type , final string at_path ) { n final list < document_template > templates = find_by_type_and_applicable_to_at_path ( document_type , at_path ) n return templates . is_empty ( ) ? null templates . get ( codint ) n }	1
Q_602	return all document template for the specify link document_type order by type then most specific to	C_602_1	private void unpack_file ( file file ) throws mojo_execution_exception { n n / / initialize unpacker to validate patterns n content_unpacker_properties props = new content_unpacker_properties ( ) n props . set_exclude_files ( this . exclude_files ) n props . set_exclude_nodes ( this . exclude_nodes ) n props . set_exclude_properties ( this . exclude_properties ) n props . set_exclude_mixins ( this . exclude_mixins ) n content_unpacker unpacker = new content_unpacker ( props ) n n / / validate output directory n if ( this . unpack_directory = = null ) { n throw new mojo_execution_exception ( codstr ) n } n if ( this . unpack_directory . exists ( ) ) { n this . unpack_directory . mkdirs ( ) n } n n / / remove existing content n if ( this . unpack_delete_directories = null ) { n for ( string directory unpack_delete_directories ) { n file directory_file = file_utils . get_file ( this . unpack_directory , directory ) n if ( directory_file . exists ( ) ) { n if ( delete_directory_with_retries ( directory_file , codint ) ) { n throw new mojo_execution_exception ( codstr n + directory_file . get_absolute_path ( ) ) n } n } n } n } n n / / unpack file n unpacker . unpack ( file , this . unpack_directory ) n n get_log ( ) . info ( codstr + this . unpack_directory . get_absolute_path ( ) ) n }	0
Q_602	return all document template for the specify link document_type order by type then most specific to	C_602_2	public backchannel_authentication_complete_request set_claims ( map < string , object > claims ) n { n if ( claims = = null claims . size ( ) = = codint ) n { n this . claims = null n } n else n { n set_claims ( utils . to_json ( claims ) ) n } n n return this n }	0
Q_603	remove a listener object	C_603_0	"override n public void remove_service_listener ( service_listener listener ) { n / / note if unfiltered service listeners are implemented n / / this method needs to look for , and remove , the listener there n / / as well n n / / go through all of the filters , and for each filter n / / remove the listener from the filter "" s list . n for ( entry < string , list < service_listener filtered_list filtered_service_listeners . entry_set ( ) ) { n filtered_list . get_value ( ) . remove ( listener ) n } n }"	1
Q_603	remove a listener object	C_603_1	override n public list < v > load ( final int first , final int page_size , n final list < sort_meta > multi_sort_meta , n final map < string , object > filters ) { n n final boolean filters_changed = handle_filters ( filters ) n final boolean sort_order_changed = handle_sort_order ( multi_sort_meta ) n boolean notify = false n n / / clear cache n if ( filters_changed sort_order_changed ) { n adaptee . clear_cache ( ) n notify = filters_changed notify_on_sort_order_changes n } n n adaptee . set_page_size ( page_size ) n final int size = adaptee . get_size ( ) n adaptee . set_first ( first > = size ? math . max ( codint , size _ codint ) first ) n set_row_count ( size ) n n / / notify observers n if ( filters_changed clear_selection_on_filter_changes ) { n adaptee . clear_selection ( ) n } n if ( notify ) { n adaptee . notify ( change_event_type . data ) n } n n return adaptee . get_data ( ) n }	0
Q_603	remove a listener object	C_603_2	public void set_on_query_text_listener ( non_null final search_view . on_query_text_listener listener ) { n if ( search_view = null ) { n search_view . set_on_query_text_listener ( listener ) n } else if ( support_view = null ) { n support_view . set_on_query_text_listener ( new android . support . v7 . widget . search_view . on_query_text_listener ( ) { n override public boolean on_query_text_submit ( string query ) { n return listener . on_query_text_submit ( query ) n } n n override public boolean on_query_text_change ( string new_text ) { n return listener . on_query_text_change ( new_text ) n } n } ) n } else { n throw new illegal_state_exception ( error_no_searchview ) n } n }	0
Q_604	get the current socket for this call	C_604_0	public static socket get_current_socket ( ) { n connection_handler handler = connection_map . get ( thread . current_thread ( ) ) n return ( handler = = null ? null handler . get_socket ( ) ) n }	1
Q_604	get the current socket for this call	C_604_1	private < s extends parameterizable > s get_parameterizable ( string class_name_with_params , string pkg ) throws vector_print_exception { n s st = ( s ) get_parser ( new string_reader ( class_name_with_params ) ) n . set_settings ( settings ) . set_package_name ( pkg ) n . parse_parameterizable ( ) n styler_factory_helper . init_styling_object ( st , writer , document , image_loader , layer_manager , settings , ( element_producer ) image_loader , this , this ) n if ( st instanceof import_pdf ) { n impdf . add ( ( import_pdf ) st ) n } else if ( st instanceof base_styler ) { n for ( import_pdf ipdf impdf ) { n ipdf . add_styler ( ( base_styler ) st ) n } n } n if ( st instanceof simple_columns ) { n imcol . add ( ( simple_columns ) st ) n } else if ( st instanceof base_styler ) { n for ( simple_columns sc imcol ) { n sc . add_styler ( ( base_styler ) st ) n } n } n if ( st instanceof import_tiff ) { n imtiff . add ( ( import_tiff ) st ) n } else if ( st instanceof base_styler ) { n for ( import_tiff ipt imtiff ) { n ipt . add_styler ( ( base_styler ) st ) n } n } n return st n }	0
Q_604	get the current socket for this call	C_604_2	deprecated n public static terminals case_sensitive ( string [ ] ops , string [ ] keywords ) { n return operators ( ops ) . words ( scanners . identifier ) . keywords ( as_list ( keywords ) ) . build ( ) n }	0
Q_605	return a long average number by round down with specify dividend and	C_605_0	public static < t extends number > long divide_round_down ( final t dividend , final t divisor ) { n n return ( long ) divide ( dividend , divisor ) n }	1
Q_605	return a long average number by round down with specify dividend and	C_605_1	public static date convert_date ( json_node node , string date_time_format ) { n if ( node instanceof pojo_node ) { n return convert_date ( d_path_utils . extract_value ( ( pojo_node ) node ) , date_time_format ) n } n return node . is_number ( ) ? new date ( node . as_long ( ) ) n node . is_textual ( ) ? date_format_utils . from_string ( node . as_text ( ) , date_time_format ) n null n }	0
Q_605	return a long average number by round down with specify dividend and	C_605_2	public object get_object_instance ( object service_value , object obj , name name , context name_ctx , n hashtable < ? , ? > environment ) throws exception { n return service_value n }	0
Q_606	query_by method for field updated_by	C_606_0	public iterable < d_contact > query_by_updated_by ( object parent , java . lang . string updated_by ) { n return query_by_field ( parent , d_contact_mapper . field . updatedby . get_field_name ( ) , updated_by ) n }	1
Q_606	query_by method for field updated_by	C_606_1	public static void swap ( char [ ] char_array1 , char [ ] char_array2 ) { n int min_length = math . min ( char_array1 . length , char_array2 . length ) n n for ( int i = codint i < min_length i + + ) { n xor_swap . swap ( char_array1 , char_array2 , i ) n } n }	0
Q_606	query_by method for field updated_by	C_606_2	void set_script_type ( int type ) { n n / / o_oo related code n if ( database . is_stored_file_access ( ) ) { n return n } n n / / o_oo end n boolean needs_checkpoint = script_format = type n n script_format = type n n properties . set_property ( hsql_database_properties . hsqldb_script_format , n string . value_of ( script_format ) ) n n if ( needs_checkpoint ) { n database . logger . needs_checkpoint = true n } n }	0
Q_607	this method let user get the status of whether or not the tv show have	C_607_0	public media_state get_tv_account_state ( int tv_id , string session_id ) throws movie_db_exception { n return tmdb_tv . get_tv_account_state ( tv_id , session_id ) n }	1
Q_607	this method let user get the status of whether or not the tv show have	C_607_1	protected final void set_report_form_groups ( final f report ) { n if ( report . get_groups ( ) . is_empty ( ) ) { n return n } n n final set < aggregated_group_mapping > groups = this . get_groups ( ) n if ( groups . is_empty ( ) ) { n report . get_groups ( ) . add ( groups . iterator ( ) . next ( ) . get_id ( ) ) n } n }	0
Q_607	this method let user get the status of whether or not the tv show have	C_607_2	public e_class get_ifc_classification_notation_select ( ) { n if ( ifc_classification_notation_select_e_class = = null ) { n ifc_classification_notation_select_e_class = ( e_class ) e_package . registry . instance n . get_e_package ( ifc2x3tc1_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return ifc_classification_notation_select_e_class n }	0
Q_608	process a message	C_608_0	public boolean process_message ( byte [ ] msg ) throws ssh_exception { n n try { n if ( msg . length < codint ) { n disconnect ( transport_protocol . protocol_error , n codstr ) n throw new ssh_exception ( codstr , n ssh_exception . internal_error ) n } n n switch ( msg [ codint ] ) { n case ssh_msg_disconnect { n if ( log . is_debug_enabled ( ) ) { n log . debug ( this , codstr ) n } n internal_disconnect ( ) n byte_array_reader bar = new byte_array_reader ( msg , codint , n msg . length _ codint ) n try { n event_service_implementation . get_instance ( ) . fire_event ( n new event ( this , n j2_ssh_event_codes . event_received_disconnect , n true ) ) n throw new ssh_exception ( bar . read_string ( ) , n ssh_exception . remote_host_disconnected ) n } finally { n bar . close ( ) n } n } n case ssh_msg_ignore { n if ( log . is_debug_enabled ( ) ) { n log . debug ( this , codstr ) n } n n return true n } n case ssh_msg_debug { n last_activity = system . current_time_millis ( ) n n if ( log . is_debug_enabled ( ) ) { n log . debug ( this , codstr ) n } n n return true n } n case ssh_msg_newkeys { n n last_activity = system . current_time_millis ( ) n	1
Q_608	process a message	C_608_1	public static socket_transport connect ( inet_socket_address address , x509_certificate pinnedcert ) throws io_exception { n ssl_socket_factory factory = get_ssl_socket_factory ( pinnedcert ) n socket s = factory . create_socket ( address . get_host_string ( ) , address . get_port ( ) ) n return new socket_transport ( s ) n }	0
Q_608	process a message	C_608_2	server_request peek_at ( int index ) { n server_request req = null n synchronized ( req_queue_lock_object ) { n try { n req = queue . get ( index ) n } catch ( index_out_of_bounds_exception no_such_element_exception ignored ) { n } n } n return req n }	0
Q_609	use for the command line this ensure that the count_down_latch object be only set to tagint	C_609_0	private void start ( string docs_file , string monitor_address , boolean use_beer_sample ) throws io_exception { n try { n if ( port = = codint ) { n server_socket_channel ch = server_socket_channel . open ( ) n ch . socket ( ) . bind ( new inet_socket_address ( codint ) ) n port = ch . socket ( ) . get_local_port ( ) n if ( monitor_address = = null debug ) { n system . out . println ( codstr + port ) n } n http_server . bind ( ch ) n } else { n http_server . bind ( new inet_socket_address ( port ) ) n } n } catch ( io_exception ex ) { n logger . get_logger ( couchbase_mock . class . get_name ( ) ) . log ( level . severe , null , ex ) n system . exit ( _ codint ) n } n n for ( bucket_configuration config initial_configs . values ( ) ) { n try { n create_bucket ( config ) n } catch ( bucket_already_exists_exception ex ) { n throw new io_exception ( ex ) n } n } n http_server . start ( ) n n / / see if we need to load documents n if ( docs_file = null ) { n document_loader loader = new document_loader ( this , codstr ) n loader . load_documents ( docs_file ) n } else if ( use_beer_sample ) { n rest_api_util . load_beer_sample (	1
Q_609	use for the command line this ensure that the count_down_latch object be only set to tagint	C_609_1	public com . google . api . ads . adwords . axis . v201809 . cm . sort_order get_sort_order ( ) { n return sort_order n }	0
Q_609	use for the command line this ensure that the count_down_latch object be only set to tagint	C_609_2	public dependency_result resolve_dependencies ( gav a , string scope ) throws dependency_resolution_exception { n dependency_filter classpath_flter = dependency_filter_utils . classpath_filter ( scope ) n n collect_request collect_request = new collect_request ( ) n collect_request . set_root ( new dependency ( new default_artifact ( a . to_string ( ) ) , java_scopes . compile ) ) n collect_request . set_repositories ( remote_repositories ) n n dependency_request dependency_request = new dependency_request ( collect_request , classpath_flter ) n n return resolve_dependencies ( dependency_request ) n }	0
Q_610	signal all wait thread	C_610_0	"public void signal_all ( ) n { n if ( has_waiters ( ) ) n return n n / / to avoid a race where the condition is not met and the woken thread managed to wait on the queue before n / / we finish signalling it all , we pick a random thread we have woken _ up and hold onto it , so that if we encounter n / / it again we know we codstr correct "" solution to this problem is to use a queue that permits snapshot iteration , but this solution is sufficient n int i = codint , s = codint n thread random_thread = null n iterator < registered_signal > iter = queue . iterator ( ) n while ( iter . has_next ( ) ) n { n registered_signal signal = iter . next ( ) n thread signalled = signal . signal ( ) n n if ( signalled = null ) n { n if ( signalled = = random_thread ) n break n n if ( + + i = = s ) n { n random_thread = signalled n s < < = codint n } n } n n iter . remove ( ) n } n }"	1
Q_610	signal all wait thread	C_610_1	"private void add_possible_signature ( string name , node node , node_traversal t ) { n if ( node . is_function ( ) ) { n / / the node we "" re looking at is a function , so we can add it directly n add_signature ( name , node , t . get_source_name ( ) ) n } else { n non_method_properties . add ( name ) n } n }"	0
Q_610	signal all wait thread	C_610_2	public final boolean on_activity_result ( activity current_activity , int request_code , int result_code , intent data ) { n validate . not_null ( current_activity , codstr ) n n initialize_static_context ( current_activity ) n n synchronized ( lock ) { n if ( pending_authorization_request = = null ( request_code = pending_authorization_request . get_request_code ( ) ) ) { n return false n } n } n n exception exception = null n authorization_client . result . code code = authorization_client . result . code . error n n if ( data = null ) { n authorization_client . result result = ( authorization_client . result ) data . get_serializable_extra ( n login_activity . result_key ) n if ( result = null ) { n / / this came from login_activity . n handle_authorization_result ( result_code , result ) n return true n } else if ( authorization_client = null ) { n / / delegate to the auth client . n authorization_client . on_activity_result ( request_code , result_code , data ) n return true n } n } else if ( result_code = = activity . result_canceled ) { n exception = new facebook_operation_canceled_exception ( codstr ) n code = authorization_client . result . code . cancel n } n n if ( exception = = null ) { n exception = new facebook_exception ( codstr ) n } n n log_authorization_complete ( code , null , exception ) n finish_auth_or_reauth ( null , exception ) n n return	0
Q_611	create an uri as a string	C_611_0	"public static string create_uri ( final string scheme , final string host , int port , final string path , n final string query , final string fragment ) { n string_builder buffer = new string_builder ( parameters . small_buffer_size ) n if ( host = null ) { n if ( scheme = null ) { n buffer . append ( scheme ) n buffer . append ( codstr ) n } n buffer . append ( host ) n if ( port > codint ) { n buffer . append ( codstr ) n buffer . append ( port ) n } n } n if ( path = = null path . starts_with ( codstr ) ) { n buffer . append ( codstr ) n } n if ( path = null ) { n buffer . append ( path ) n } n if ( query = null ) { n buffer . append ( codstr ) n buffer . append ( query ) n } n if ( fragment = null ) { n buffer . append ( "" buffer . append ( fragment ) n } n return buffer . to_string ( ) n }"	1
Q_611	create an uri as a string	C_611_1	private static void bind_logger ( injector_impl injector ) { n key < logger > key = key . get ( logger . class ) n logger_factory logger_factory = new logger_factory ( ) n injector . state . put_binding ( n key , n new provider_instance_binding_impl < logger > ( n injector , n key , n source_provider . unknown_source , n logger_factory , n scoping . unscoped , n logger_factory , n immutable_set . < injection_point > of ( ) ) ) n n try { n key < org . slf4j . logger > slf4j_key = key . get ( org . slf4j . logger . class ) n slf4_j_logger_factory slf4j_logger_factory = new slf4_j_logger_factory ( injector ) n injector . state . put_binding ( slf4j_key , n new provider_instance_binding_impl < org . slf4j . logger > ( injector , slf4j_key , n source_provider . unknown_source , slf4j_logger_factory , scoping . unscoped , n slf4j_logger_factory , immutable_set . < injection_point > of ( ) ) ) n } catch ( throwable e ) { } n }	0
Q_611	create an uri as a string	C_611_2	protected map < string , attribute_value > transform_attributes ( string hash_key , string range_key , n map < string , attribute_value > attribute_values ) { n return attribute_values n }	0
Q_612	determine whether a new span at start end will overlap with any exist span	C_612_0	private static boolean span_will_overlap ( spannable span_text , url_span [ ] span_list , int start , n int end ) { n if ( start = = end ) { n / / empty span , ignore n return false n } n for ( url_span span span_list ) { n int existing_start = span_text . get_span_start ( span ) n int existing_end = span_text . get_span_end ( span ) n if ( ( start > = existing_start start < existing_end ) n end > existing_start end < = existing_end ) { n if ( log . is_loggable ( tag , log . verbose ) ) { n char_sequence seq = span_text . sub_sequence ( start , end ) n log . v ( tag , codstr + seq + codstr ) n } n return true n } n } n n return false n }	1
Q_612	determine whether a new span at start end will overlap with any exist span	C_612_1	public static boolean needs_exporting_js ( final options options ) { n / / when no exporting_options are set , they are enabled by default , hence n / / return true when they are null n return options . get_exporting ( ) = = null n ( options . get_exporting ( ) . get_enabled ( ) = null options . get_exporting ( ) . get_enabled ( ) ) n }	0
Q_612	determine whether a new span at start end will overlap with any exist span	C_612_2	private void report_exception ( int s ) { n throwable ex = ( ( s = = cancelled ) ? new cancellation_exception ( ) n ( s = = exceptional ) ? get_throwable_exception ( ) n null ) n if ( ex = null ) n u . throw_exception ( ex ) n }	0
Q_613	determine the close point orientation	C_613_0	public polygon_orientation get_orientation ( list < lat_lng > points ) { n return spherical_util . compute_signed_area ( points ) > = codint ? polygon_orientation . counterclockwise polygon_orientation . clockwise n }	1
Q_613	determine the close point orientation	C_613_1	public static double [ ] [ ] append_columns ( final double [ ] [ ] m1 , final double [ ] [ ] m2 ) { n final int columndimension = get_column_dimensionality ( m1 ) n final int ccolumndimension = get_column_dimensionality ( m2 ) n assert m1 . length = = m2 . length codstr n n final int rcolumndimension = columndimension + ccolumndimension n final double [ ] [ ] result = new double [ m1 . length ] [ rcolumndimension ] n for ( int i = codint i < rcolumndimension i + + ) { n / / fixme optimize _ excess copying n if ( i < columndimension ) { n set_col ( result , i , get_col ( m1 , i ) ) n } n else { n set_col ( result , i , get_col ( m2 , i _ columndimension ) ) n } n } n return result n }	0
Q_613	determine the close point orientation	C_613_2	public void set ( double x , double y , double z , euler_type type , double rot_a , double rot_b , double rot_c ) { n t . set ( x , y , z ) n convert_rotation3_d_f64 . euler_to_matrix ( type , rot_a , rot_b , rot_c , r ) n }	0
Q_614	check if the tile request be within the desire tile bound	C_614_0	public boolean is_within_bounding_box ( int x , int y , int zoom ) { n boolean within_bounds = true n n / / if a bounding box is set , check if it overlaps with the request n if ( web_mercator_bounding_box = null ) { n n / / get the bounding box of the requested tile n bounding_box tile_web_mercator_bounding_box = tile_bounding_box_utils n . get_web_mercator_bounding_box ( x , y , zoom ) n n / / adjust the bounding box if needed n bounding_box adjusted_web_mercator_bounding_box = get_web_mercator_bounding_box ( tile_web_mercator_bounding_box ) n n / / check if the request overlaps n within_bounds = adjusted_web_mercator_bounding_box . intersects ( n tile_web_mercator_bounding_box , true ) n } n n return within_bounds n }	1
Q_614	check if the tile request be within the desire tile bound	C_614_1	public boolean is_hidden_display ( final target_mode _mode ) n { n boolean ret = false n if ( this . mode2display . contains_key ( _mode ) ) { n ret = this . mode2display . get ( _mode ) . equals ( field . display . hidden ) n } n return ret n }	0
Q_614	check if the tile request be within the desire tile bound	C_614_2	public sd_variable norm2 ( string name , boolean keep_dims , int . dimensions ) { n return same_diff . norm2 ( name , this , keep_dims , dimensions ) n }	0
Q_615	build a feature result information message	C_615_0	public string build_results_info_message ( feature_index_results results , double tolerance ) { n return build_results_info_message ( results , tolerance , null , null ) n }	1
Q_615	build a feature result information message	C_615_1	private optional < long > get_long_value ( string path ) { n n string string_value = get_string_value ( path ) n if ( string_value = = null ) { n return optional . absent ( ) n } else { n try { n return optional . < long > of ( long . value_of ( string_value . trim ( ) ) ) n } catch ( number_format_exception e ) { n throw new number_format_exception ( codstr + path + codstr + string_value ) n } n } n }	0
Q_615	build a feature result information message	C_615_2	public int read_n ( final byte [ ] abuf , final int off , final int len ) n throws otp_erlang_decode_exception { n if ( len = = codint available ( ) = = codint ) { n return codint n } n final int i = super . read ( abuf , off , len ) n if ( i < codint ) { n throw new otp_erlang_decode_exception ( codstr ) n } n return i n }	0
Q_616	_ begin_user_doc _	C_616_0	override n public object e_get ( int feature_id , boolean resolve , boolean core_type ) { n switch ( feature_id ) { n case afplib_package . window_specification_flags n return get_flags ( ) n case afplib_package . window_specification_res3 n return get_res3 ( ) n case afplib_package . window_specification_cformat n return get_cformat ( ) n case afplib_package . window_specification_ubase n return get_ubase ( ) n case afplib_package . window_specification_xresol n return get_xresol ( ) n case afplib_package . window_specification_yresol n return get_yresol ( ) n case afplib_package . window_specification_imgxyres n return get_imgxyres ( ) n case afplib_package . window_specification_xlwind n return get_xlwind ( ) n case afplib_package . window_specification_xrwind n return get_xrwind ( ) n case afplib_package . window_specification_ybwind n return get_ybwind ( ) n case afplib_package . window_specification_ytwind n return get_ytwind ( ) n } n return super . e_get ( feature_id , resolve , core_type ) n }	1
Q_616	_ begin_user_doc _	C_616_1	protected void populate_authentication_metadata_attributes ( final authentication_builder builder , n final authentication_transaction transaction ) { n logger . debug ( codstr ) n val pops = get_authentication_metadata_populators_for_transaction ( transaction ) n pops . for_each ( populator _ > transaction . get_credentials ( ) n . stream ( ) n . filter ( populator supports ) n . for_each ( credential _ > populator . populate_attributes ( builder , transaction ) ) ) n }	0
Q_616	_ begin_user_doc _	C_616_2	override n public void process ( final task < diff > task ) n throws configuration_exception , io_exception , sql_consumer_exception n { n n try { n list < string > data = data_file_encoder . encode_task ( task ) n n for ( string d data ) { n this . writer . write ( d + codstr ) n this . writer . flush ( ) n } n n if ( task . get_task_type ( ) = = task_types . task_full n task . get_task_type ( ) = = task_types . task_partial_last ) { n n if ( this . data_file . length ( ) > limit_sql_file_size ) { n write_header ( ) n } n n if ( mode_statistical_output ) { n system . out . println ( task . to_string ( ) ) n } n n } n else { n system . out . println ( task . to_string ( ) ) n } n n } n catch ( decoding_exception e ) { n n throw error_factory . create_sql_consumer_exception ( n error_keys . difftool_sqlconsumer_filewriter_exception , e ) n n } n catch ( encoding_exception e ) { n n throw error_factory . create_sql_consumer_exception ( n error_keys . difftool_sqlconsumer_filewriter_exception , e ) n } n }	0
Q_617	_ begin_user_doc _	C_617_0	override n public boolean e_is_set ( int feature_id ) { n switch ( feature_id ) { n case afplib_package . epf_pf_name n return pf_name_edefault = = null ? pf_name = null pf_name_edefault . equals ( pf_name ) n case afplib_package . epf_triplets n return triplets = null triplets . is_empty ( ) n } n return super . e_is_set ( feature_id ) n }	1
Q_617	_ begin_user_doc _	C_617_1	"public void shuffle ( long seed ) { n / / just skip shuffle if there "" s only codint example n if ( num_examples ( ) < codint ) n return n n / / note here we use the same seed with different random objects guaranteeing same order n n list < ind_array > arrays = new array_list < > ( ) n list < int [ ] > dimensions = new array_list < > ( ) n n arrays . add ( get_features ( ) ) n dimensions . add ( array_util . range ( codint , get_features ( ) . rank ( ) ) ) n n arrays . add ( get_labels ( ) ) n dimensions . add ( array_util . range ( codint , get_labels ( ) . rank ( ) ) ) n n if ( features_mask = null ) { n arrays . add ( get_features_mask_array ( ) ) n dimensions . add ( array_util . range ( codint , get_features_mask_array ( ) . rank ( ) ) ) n } n n if ( labels_mask = null ) { n arrays . add ( get_labels_mask_array ( ) ) n dimensions . add ( array_util . range ( codint , get_labels_mask_array ( ) . rank ( ) ) ) n } n n nd4j . shuffle ( arrays , new random ( seed ) , dimensions ) n n / / as per cpu_nd_array_factory . shuffle ( list < ind_array >"	0
Q_617	_ begin_user_doc _	C_617_2	public muc_config_form_manager set_is_password_protected ( boolean is_password_protected ) n throws muc_configuration_not_supported_exception { n if ( supports_members_only ( ) ) { n throw new muc_configuration_not_supported_exception ( muc_roomconfig_passwordprotectedroom ) n } n answer_form . set_answer ( muc_roomconfig_passwordprotectedroom , is_password_protected ) n return this n }	0
Q_618	_ begin_user_doc _	C_618_0	suppress_warnings ( codstr ) n override n public void e_set ( int feature_id , object new_value ) { n switch ( feature_id ) { n case afplib_package . miorg_rg_length n set_rg_length ( ( integer ) new_value ) n return n case afplib_package . miorg_triplets n get_triplets ( ) . clear ( ) n get_triplets ( ) . add_all ( ( collection < ? extends triplet > ) new_value ) n return n } n super . e_set ( feature_id , new_value ) n }	1
Q_618	_ begin_user_doc _	C_618_1	private void read_header ( random_access_input_stream raf ) throws io_exception n { n raf . seek ( head_location ) n n byte [ ] head = new byte [ head_size ] n if ( raf . read ( head ) = head_size ) n { n throw new io_exception ( codstr ) n } n n major_version = ( int ) head [ codint ] n n if ( major_version < = new_major_version ) n { n minor_version = ( int ) head [ codint ] n unsynchronisation = ( head [ codint ] codint ) = codint n extended = ( head [ codint ] codint ) = codint n experimental = ( head [ codint ] codint ) = codint n footer = ( head [ codint ] codint ) = codint n tag_size = helpers . convert_d_word_to_int ( head , codint ) n } n }	0
Q_618	_ begin_user_doc _	C_618_2	public static boolean is_integer ( string number ) { n boolean result = false n try { n integer . parse_int ( number ) n result = true n } catch ( number_format_exception e ) { n } n return result n }	0
Q_619	_ begin_user_doc _	C_619_0	public rendering_intent_ptocri create_rendering_intent_ptocri_from_string ( e_data_type e_data_type , string initial_value ) { n rendering_intent_ptocri result = rendering_intent_ptocri . get ( initial_value ) n if ( result = = null ) throw new illegal_argument_exception ( codstr codstr codstr codstr codstr ) n return result n }	1
Q_619	_ begin_user_doc _	C_619_1	public void marshall ( describe_resource_server_request describe_resource_server_request , protocol_marshaller protocol_marshaller ) { n n if ( describe_resource_server_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( describe_resource_server_request . get_user_pool_id ( ) , userpoolid_binding ) n protocol_marshaller . marshall ( describe_resource_server_request . get_identifier ( ) , identifier_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_619	_ begin_user_doc _	C_619_2	public list < monolingual_text_value > get_added_aliases ( string language ) { n aliases_with_update update = new_aliases . get ( language ) n if ( update = = null ) { n return collections . < monolingual_text_value > empty_list ( ) n } n return update . added n }	0
Q_620	_ begin_user_doc _	C_620_0	public e_enum get_mdd_xm_base ( ) { n if ( mdd_xm_base_e_enum = = null ) { n mdd_xm_base_e_enum = ( e_enum ) e_package . registry . instance . get_e_package ( afplib_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return mdd_xm_base_e_enum n }	1
Q_620	_ begin_user_doc _	C_620_1	public static void main ( string [ ] args ) { n n system . out . println ( ) n system . out . println ( hr ) n system . out . println ( codstr + new date ( system . current_time_millis ( ) ) ) n system . out . println ( hr ) n system . out . println ( ) n n string path = null n n boolean setup_db_only = false n if ( ( args . length > codint ) ( args [ codint ] = null ) ) { n for ( int i = codint i < args . length i + + ) { n if ( args [ i ] = null ) { n if ( param_config_path . equals ( args [ i ] ) ( args . length > ( i + codint ) ) ) { n path = args [ i + codint ] n } else if ( args [ i ] . starts_with ( param_config_path ) ) { n path = args [ i ] . substring ( param_config_path . length ( ) ) . trim ( ) n } else if ( param_db_only . equals ( args [ i ] ) ) { n setup_db_only = true n } n } n } n } n if ( ( null = path ) ( new file ( path ) . exists ( ) ) ) { n system . out .	0
Q_620	_ begin_user_doc _	C_620_2	override n public void launch_task ( final executor_driver executor_driver , final protos . task_info task_info ) { n final string task_id = task_info . get_task_id ( ) . get_value ( ) n n log . info ( codstr , task_id ) n n try { n final ch . qos . logback . classic . logger task_log = task_builder . build_task_logger ( task_id , task_info . get_executor ( ) . get_executor_id ( ) . get_value ( ) ) n final singularity_executor_task task = task_builder . build_task ( task_id , executor_driver , task_info , task_log ) n n submit_state submit_state = monitor . submit ( task ) n n switch ( submit_state ) { n case rejected n log . warn ( codstr t launch task { } , it was rejected ( probably due to shutdown ) codstr can codstr , task_info ) n break n case submitted n task . get_log ( ) . info ( codstr , task_id , task . get_executor_data ( ) ) n break n } n n } catch ( throwable t ) { n log . error ( codstr , task_id , t ) n n executor_utils . send_status_update ( executor_driver , task_info . get_task_id ( ) , task_state . task_lost , string . format ( codstr , task_id , t . get_message ( ) ) , log ) n } n }	0
Q_621	return all of the source key that have a require dependency on any key in the target set	C_621_0	private collection < key < ? get_required_sources_targeting ( n dependency_graph graph , iterable < key < ? targets ) { n collection < key < ? required_sources = new linked_hash_set < key < ? ( ) n for ( key < ? > target targets ) { n for ( dependency edge graph . get_dependencies_targeting ( target ) ) { n if ( edge . is_optional ( ) ) { n pretty_printer . log ( logger , tree_logger . debug , codstr , n edge . get_source ( ) , edge ) n required_sources . add ( edge . get_source ( ) ) n } n } n } n return required_sources n }	1
Q_621	return all of the source key that have a require dependency on any key in the target set	C_621_1	protected boolean is_no_exception ( string token , n analyzed_token_readings [ ] tokens , int i , int j , n boolean prec_space , n boolean foll_space , unsync_stack < symbol_locator > symbol_stack ) { n string token_str = tokens [ i ] . get_token ( ) n if ( i > = codint ) { n string prev_prev_token = tokens [ i _ codint ] . get_token ( ) n string prev_token = tokens [ i _ codint ] . get_token ( ) n / / smiley codstr and codstr n if ( prev_prev_token . equals ( codstr ) prev_token . equals ( codstr ) ( token_str . equals ( codstr ) token_str . equals ( codstr ) ) ) { n return false n } n / / smiley codstr and codstr n if ( prev_prev_token . equals ( codstr ) prev_token . equals ( codstr ) ( token_str . equals ( codstr ) token_str . equals ( codstr ) ) ) { n return false n } n } n if ( i > = codint ) { n string prev_token = tokens [ i _ codint ] . get_token ( ) n / / smiley codstr and codstr n if ( prev_token . equals ( codstr ) tokens [ i ] . is_whitespace_before ( ) ( token_str . equals ( codstr ) token_str . equals ( codstr ) ) ) { n return false n } n / / smiley codstr and codstr n if (	0
Q_621	return all of the source key that have a require dependency on any key in the target set	C_621_2	public static boolean is_letter ( char c ) n { n / / [ codint ] letter = base_char ideographic n / / [ codint ] base_char = . too much to repeat n / / [ codint ] ideographic = . too much to repeat n n / / n / / optimize the typical case . n / / n if ( c > = codstr c < = codstr ) n return true n if ( c = = codstr ) n return false n if ( c > = codstr c < = codstr ) n return true n n / / n / / since the tables are too ridiculous to use in code , n / / we codstr name start codstr . n case character . lowercase_letter / / ll n case character . uppercase_letter / / lu n case character . other_letter / / lo n case character . titlecase_letter / / lt n case character . letter_number / / nl n n / / ok , here we just have some exceptions to check . n return is_compatibility_char ( c ) n / / per codstr , rule out some combiners n ( c > = codint c < = codint ) n n default n / / check for some exceptions these are codstr n return ( ( c > = codint c < = codint ) n c = = codint c = = codint c = =	0
Q_622	configure parent scanner to search for the right interface	C_622_0	public void register_filters ( ) { n add_exclude_filter ( new type_filter ( ) { n override n public boolean match ( metadata_reader metadata_reader , metadata_reader_factory metadata_reader_factory ) { n return metadata_reader . get_class_metadata ( ) . is_interface ( ) n } n } ) n add_include_filter ( new annotation_type_filter ( spring_rest_client_enabled . class ) ) n }	1
Q_622	configure parent scanner to search for the right interface	C_622_1	public static < t > collection < t > unique ( collection < t > self , boolean mutate ) { n list < t > answer = new array_list < t > ( ) n for ( t t self ) { n boolean duplicated = false n for ( t t2 answer ) { n if ( coerced_equals ( t , t2 ) ) { n duplicated = true n break n } n } n if ( duplicated ) n answer . add ( t ) n } n if ( mutate ) { n self . clear ( ) n self . add_all ( answer ) n } n return mutate ? self answer n }	0
Q_622	configure parent scanner to search for the right interface	C_622_2	void update_server ( server_heartbeat server , update_server_heartbeat update ) n { n if ( server . is_self ( ) ) { n return n } n n string external_id = update . get_external_id ( ) n n update_external ( server , external_id ) n n / / xxx validation n server . set_seed_index ( update . get_seed_index ( ) ) n n if ( server . on_heartbeat_update ( update ) ) { n if ( server . is_up ( ) ) { n on_server_start ( server ) n } n else { n on_server_stop ( server ) n } n } n }	0
Q_623	par a tt string tt into an link ipv6_range	C_623_0	public static ipv6_range parse ( string range ) { n int idx = range . index_of ( dash ) n if ( idx = _ codint ) { n ipv6 start = ipv6 . parse ( range . substring ( codint , idx ) ) n ipv6 end = ipv6 . parse ( range . substring ( idx + codint , range . length ( ) ) ) n return new ipv6_range ( start , end ) n } else { n return parse_cidr ( range ) n } n }	1
Q_623	par a tt string tt into an link ipv6_range	C_623_1	public static < t , e extends throwable > non_null consumer < t > rethrow_consumer ( final non_null throwing_consumer < t , e > consumer ) { n return consumer n }	0
Q_623	par a tt string tt into an link ipv6_range	C_623_2	private entity_metadata get_metadata ( class < ? > clazz ) n { n entity_metadata metadata = kundera_metadata_manager . get_entity_metadata ( kundera_metadata , clazz ) n if ( metadata = = null ) n { n log . error ( codstr n + codstr n + codstr n + clazz ) n throw new kundera_exception ( codstr + clazz . get_name ( ) ) n } n return metadata n }	0
Q_624	compute the distance between approximate value and the real t	C_624_0	"public double approximation_distance_paa ( double [ ] ts , int win_size , int paa_size , n double norm_threshold ) throws exception { n n double res_distance = codreal n int window_counter = codint n n double points_per_window = ( double ) win_size / ( double ) paa_size n n for ( int i = codint i < ts . length _ win_size + codint i + + ) { n n double [ ] subseries = arrays . copy_of_range ( ts , i , i + win_size ) n n if ( ts_processor . st_dev ( subseries ) > norm_threshold ) { n subseries = ts_processor . znorm ( subseries , norm_threshold ) n } n n double [ ] paa = ts_processor . paa ( subseries , paa_size ) n n window_counter + + n n / / essentially the distance here is the distance between the segment "" s n / / paa value and the real ts value n / / n double subsequence_distance = codint . n for ( int j = codint j < subseries . length j + + ) { n n int paa_idx = ( int ) math . floor ( ( ( double ) j + number ) / ( double ) points_per_window ) n if ( paa_idx < codint ) { n paa_idx = codint n } n if ( paa_idx > paa . length ) { n paa_idx = paa . length _ codint n } n n"	1
Q_624	compute the distance between approximate value and the real t	C_624_1	public void setup_s_fields ( ) n { / / set up the screen fields n int last_column n record record = this . get_main_record ( ) n if ( record = = null ) n return n last_column = record . get_field_count ( ) + db_constants . main_field _ codint n int i_select_count = codint n for ( int i_query_column = db_constants . main_field i_query_column < = last_column i_query_column + + ) n { n base_field field = record . get_field ( i_query_column ) n if ( field . is_hidden ( ) ) n continue / / don codstr t display in a grid n if ( field . get_max_length ( ) > screen_constants . max_edit_line_chars ) n continue / / by default , don codstr t display all the fields ( just the first codint ? ) n } n }	0
Q_624	compute the distance between approximate value and the real t	C_624_2	protected boolean is_idle_longer_than ( int sec ) { n long now = system . current_time_millis ( ) n try ( lock ignored = locker . lock_if_not_held ( ) ) { n return ( ( session_data . get_accessed_time ( ) + ( sec * codint ) ) < = now ) n } n }	0
Q_625	this function initialize the connection factory	C_625_0	override n protected void initialize_impl ( ) n { n / / get port name n this . port_name = this . factory_configuration_holder . get_configuration_value ( fax_client_spi_configuration_constants . port_name_property_key ) n if ( this . port_name = = null ) n { n throw new fax_exception ( codstr + fax_client_spi_configuration_constants . port_name_property_key ) n } n n / / get timeout n string value_str = this . factory_configuration_holder . get_configuration_value ( fax_client_spi_configuration_constants . timeout_property_key ) n this . timeout = comm_fax_client_spi . timeout_default_value n if ( ( value_str = null ) ( value_str . length ( ) > codint ) ) n { n try n { n this . timeout = integer . parse_int ( value_str ) n } n catch ( exception exception ) n { n this . timeout = comm_fax_client_spi . timeout_default_value n } n } n if ( this . timeout < = codint ) n { n this . timeout = comm_fax_client_spi . timeout_default_value n } n }	1
Q_625	this function initialize the connection factory	C_625_1	private void check_key_modifications ( model_def model_def , string check_level ) throws constraint_exception n { n if ( checklevel_none . equals ( check_level ) ) n { n return n } n n class_descriptor_def class_def n field_descriptor_def field_def n n / / we check for every inherited field n for ( iterator class_it = model_def . get_classes ( ) class_it . has_next ( ) ) n { n class_def = ( class_descriptor_def ) class_it . next ( ) n for ( iterator field_it = class_def . get_fields ( ) field_it . has_next ( ) ) n { n field_def = ( field_descriptor_def ) field_it . next ( ) n if ( field_def . is_inherited ( ) ) n { n check_key_modifications ( model_def , field_def ) n } n } n } n }	0
Q_625	this function initialize the connection factory	C_625_2	public int max_number_of_frames ( int streamsize ) / / e . b n { n if ( h_vbr = = true ) return h_vbr_frames n else n { n if ( ( framesize + codint _ h_padding_bit ) = = codint ) return codint n else return ( streamsize / ( framesize + codint _ h_padding_bit ) ) n } n }	0
Q_626	this method be use to create a persistent mapping between the give id and an internal id equal to	C_626_0	protected void create_mapping ( string id ) { n database_entry key = new database_entry ( ) n database_entry data = new database_entry ( ) n integer_binding . int_to_entry ( load_counter , key ) n string_binding . string_to_entry ( id , data ) n iid_to_id_db . put ( null , key , data ) / / required during name look _ up n id_to_iid_db . put ( null , data , key ) / / required during indexing n }	1
Q_626	this method be use to create a persistent mapping between the give id and an internal id equal to	C_626_1	public search_result search ( string query ) throws smartsheet_exception { n return search ( query , null , null , null , null ) n }	0
Q_626	this method be use to create a persistent mapping between the give id and an internal id equal to	C_626_2	public static alphabet get_by_first_letter_of_name ( char letter ) { n letter = character . to_lower_case ( letter ) n for ( alphabet alphabet alphabets_by_name . values ( ) ) n if ( alphabet . get_alphabet_name ( ) . char_at ( codint ) = = letter ) n return alphabet n throw new illegal_argument_exception ( codstr + letter ) n }	0
Q_627	check if class version comparable	C_627_0	public static boolean check_if_class_version_applicable ( object cache_entry , boolean use_structured_cache ) { n if ( use_structured_cache cache_entry instanceof cache_entry ) { n return true n } n n if ( use_structured_cache cache_entry instanceof map ) { n return true n } n return false n }	1
Q_627	check if class version comparable	C_627_1	override n public void visit_code ( code obj ) { n stack . reset_for_method_entry ( this ) n null_guards . clear ( ) n super . visit_code ( obj ) n }	0
Q_627	check if class version comparable	C_627_2	private static string java_lang_spelling ( n elements element_utils , string code_package_name , type_element type_element ) { n / / if this is java . lang . thread . state or the like , we have to look for a clash with thread . n type_element top_level_type = top_level_type ( type_element ) n type_element clash = n element_utils . get_type_element ( code_package_name + codstr + top_level_type . get_simple_name ( ) ) n string full_name = type_element . get_qualified_name ( ) . to_string ( ) n return ( clash = = null ) ? full_name . substring ( codstr . length ( ) ) full_name n }	0
Q_628	attempt to invalidate android internal gatt table cache	C_628_0	"private void refresh_device_cache ( bluetooth_gatt gatt ) { n try { n bluetooth_gatt local_bluetooth_gatt = gatt n method local_method = local_bluetooth_gatt . get_class ( ) . get_method ( codstr , new class [ codint ] ) n if ( local_method = null ) { n local_method . invoke ( local_bluetooth_gatt , new object [ codint ] ) n } else { n log . e ( tag , codstr t find local method refresh codstr an exception occurred while refreshing device "" ) n } n }"	1
Q_628	attempt to invalidate android internal gatt table cache	C_628_1	"public model_handler borrowt_handler_object ( string form_name ) { n model_handler model_handler = null n try { n model_handler = handler_object_factory . borrow_handler_object ( form_name ) n model_handler . set_model_mapping ( model_factory . get_model_mapping ( form_name ) ) n } catch ( exception ex ) { n debug . log_error ( codstr t get the model_handler for the form_name "" + form_name , module ) n return_handler_object ( model_handler ) n } n return model_handler n }"	0
Q_628	attempt to invalidate android internal gatt table cache	C_628_2	public static final ser_iterable multiset ( final class < ? > value_type , final list < class < ? value_type_types ) { n final multiset < object > coll = hash_multiset . create ( ) n return multiset ( value_type , value_type_types , coll ) n }	0
Q_629	p validate that the argument condition be code true otherwise	C_629_0	public static void is_true ( final boolean expression , final string message , final object . values ) { n if ( expression ) { n throw new illegal_argument_exception ( string_utils . simple_format ( message , values ) ) n } n }	1
Q_629	p validate that the argument condition be code true otherwise	C_629_1	override n public void action_performed ( action_event e ) { n string cmd = e . get_action_command ( ) n if ( cmd . equals ( codstr ) ) { n set_visible ( false ) n value = null n } else if ( cmd . equals ( codstr ) ) { n value = list . get_selected_value ( ) n set_visible ( false ) n swing_gui . show_file_window ( value , _ codint ) n } n }	0
Q_629	p validate that the argument condition be code true otherwise	C_629_2	private int convert_access_mask_to_modifier_mask ( int asm_access_mask ) { n int modifier = codint n n / / convert the asm access info into reflection api modifiers . n n if ( ( asm_access_mask opcodes . acc_final ) = codint ) n modifier = modifier . final n n if ( ( asm_access_mask opcodes . acc_native ) = codint ) n modifier = modifier . native n n if ( ( asm_access_mask opcodes . acc_interface ) = codint ) n modifier = modifier . interface n n if ( ( asm_access_mask opcodes . acc_abstract ) = codint ) n modifier = modifier . abstract n n if ( ( asm_access_mask opcodes . acc_private ) = codint ) n modifier = modifier . private n n if ( ( asm_access_mask opcodes . acc_protected ) = codint ) n modifier = modifier . protected n n if ( ( asm_access_mask opcodes . acc_public ) = codint ) n modifier = modifier . public n n if ( ( asm_access_mask opcodes . acc_static ) = codint ) n modifier = modifier . static n n if ( ( asm_access_mask opcodes . acc_strict ) = codint ) n modifier = modifier . strict n n if ( ( asm_access_mask opcodes . acc_synchronized ) = codint ) n modifier = modifier . synchronized n n if ( ( asm_access_mask opcodes . acc_transient ) = codint ) n modifier = modifier . transient n n if ( ( asm_access_mask opcodes . acc_volatile ) = codint )	0
Q_630	get the value of a code static link field by name	C_630_0	public static object read_declared_static_field ( final class < ? > cls , final string field_name ) throws illegal_access_exception { n return read_declared_static_field ( cls , field_name , false ) n }	1
Q_630	get the value of a code static link field by name	C_630_1	public channel . id create_channel ( ) n { n final int num = get_next_path_num ( ) n return new channel . id ( this . paths [ num ] , num , this . random ) n }	0
Q_630	get the value of a code static link field by name	C_630_2	public integer lock_activity_instance ( long act_inst_id ) n throws data_access_exception { n try { n if ( is_in_transaction ( ) ) throw n new data_access_exception ( codstr ) n return engine_impl . get_data_access ( ) . lock_activity_instance ( act_inst_id ) n } catch ( sql_exception e ) { n throw new data_access_exception ( codint , codstr , e ) n } n }	0
Q_631	p check if the char_sequence contain mix casing of both uppercase and lowercase character	C_631_0	public static boolean is_mixed_case ( final char_sequence cs ) { n if ( is_empty ( cs ) cs . length ( ) = = codint ) { n return false n } n boolean contains_uppercase = false n boolean contains_lowercase = false n final int sz = cs . length ( ) n for ( int i = codint i < sz i + + ) { n if ( contains_uppercase contains_lowercase ) { n return true n } else if ( character . is_upper_case ( cs . char_at ( i ) ) ) { n contains_uppercase = true n } else if ( character . is_lower_case ( cs . char_at ( i ) ) ) { n contains_lowercase = true n } n } n return contains_uppercase contains_lowercase n }	1
Q_631	p check if the char_sequence contain mix casing of both uppercase and lowercase character	C_631_1	suppress_warnings ( { codstr , codstr } ) n public static < v > listenable_future < v > dereference ( n listenable_future < ? extends listenable_future < ? extends v nested ) { n return futures . transform ( ( listenable_future ) nested , ( async_function ) dereferencer ) n }	0
Q_631	p check if the char_sequence contain mix casing of both uppercase and lowercase character	C_631_2	"public buffered_image get_image_resource ( string rset , string path ) n throws io_exception n { n / / grab the resource bundles in the specified resource set n resource_bundle [ ] bundles = get_resource_set ( rset ) n if ( bundles = = null ) { n throw new file_not_found_exception ( n codstr + rset + codstr + path + codstr ) n } n n string locale_path = get_locale_path ( path ) n / / look for the resource in any of the bundles n for ( resource_bundle bundle bundles ) { n buffered_image image n / / try a localized version first n if ( locale_path = null ) { n image = bundle . get_image_resource ( locale_path , false ) n if ( image = null ) { n return image n } n } n / / if we didn codstr unable to locate image resource [ set = codstr , path = codstr ] "" ) n }"	0
Q_632	restore the state of all the instance from the current target handler	C_632_0	void restore_all_instances ( ) { n n / / instances_mngr ( ) instead of this . instances_mngr ( for unit tests ) . n this . logger . fine ( codstr ) n for ( managed_application ma this . application_mngr . get_managed_applications ( ) ) { n n / / build a new snapshot on every loop n list < target_handler > snapshot = this . default_target_handler_resolver . get_target_handlers_snapshot ( ) n for ( target_handler target_handler snapshot ) n instances_mngr ( ) . restore_instance_states ( ma , target_handler ) n } n }	1
Q_632	restore the state of all the instance from the current target handler	C_632_1	public static string base64_to_hex ( string base64_value ) throws illegal_argument_exception { n byte [ ] binary = base64_to_binary ( base64_value ) n return datatype_converter . print_hex_binary ( binary ) n }	0
Q_632	restore the state of all the instance from the current target handler	C_632_2	public void add_component ( object screen_field ) n { / / set up the dependencies n n if ( m_i_name_prefix = null ) n m_rec_this . get_field ( m_i_name_prefix ) . add_component ( screen_field ) n m_rec_this . get_field ( m_i_name_first ) . add_component ( screen_field ) n if ( m_i_name_middle = null ) n m_rec_this . get_field ( m_i_name_middle ) . add_component ( screen_field ) n m_rec_this . get_field ( m_i_name_sur ) . add_component ( screen_field ) n if ( m_i_name_suffix = null ) n m_rec_this . get_field ( m_i_name_suffix ) . add_component ( screen_field ) n if ( m_i_name_title = null ) n m_rec_this . get_field ( m_i_name_title ) . add_component ( screen_field ) n n super . add_component ( screen_field ) n }	0
Q_633	method to access reflection on clazz	C_633_0	public < t > class_controller < t > on ( final class < t > clazz ) { n return new default_class_controller < t > ( provider , clazz ) n }	1
Q_633	method to access reflection on clazz	C_633_1	private void init_attribute ( object p_attrval ) { n if ( p_attrval instanceof string ) { n attribute_names = escape_util . split ( ( string ) p_attrval , escape_util . csv_escape , codstr ) n multi_attribute_mode = attribute_names . size ( ) > codint n } else if ( p_attrval instanceof collection ) { n collection < string > attributes = ( collection < string > ) p_attrval n if ( attributes . size ( ) = = codint attributes . iterator ( ) . next ( ) = = null ) { n attribute_names = null n multi_attribute_mode = false n } else { n attribute_names = new array_list < string > ( attributes ) n multi_attribute_mode = true n } n } else if ( p_attrval = = null ) { n attribute_names = null n multi_attribute_mode = false n } else { n throw new illegal_argument_exception ( codstr + p_attrval . get_class ( ) + codstr ) n } n }	0
Q_633	method to access reflection on clazz	C_633_2	private map < transition < a , s > , n > predecessors_map ( s current ) { n / / map < transition , node > containing predecessors relations n map < transition < a , s > , n > map_predecessors = new hash_map < transition < a , s > , n > ( ) n / / fill with non _ null pairs of < transition , node > n for ( transition < a , s > predecessor predecessor_function . transitions_from ( current ) ) { n n predecessor_node = visited . get ( predecessor . get_state ( ) ) n if ( predecessor_node = null ) { n map_predecessors . put ( predecessor , predecessor_node ) n } n } n return map_predecessors n }	0
Q_634	this method list the available plug_in and log it	C_634_0	public void list_plugins ( ) { n n if ( this . plugins . is_empty ( ) ) { n this . logger . info ( codstr s agent . codstr available plug _ ins in roboconf codstr ) n for ( iterator < plugin_interface > it = this . plugins . iterator ( ) it . has_next ( ) ) { n sb . append ( it . next ( ) . get_plugin_name ( ) ) n if ( it . has_next ( ) ) n sb . append ( codstr ) n } n n sb . append ( codstr ) n this . logger . info ( sb . to_string ( ) ) n } n }	1
Q_634	this method list the available plug_in and log it	C_634_1	public static double_binding next_down ( final observable_double_value d ) { n return create_double_binding ( ( ) _ > math . next_down ( d . get ( ) ) , d ) n }	0
Q_634	this method list the available plug_in and log it	C_634_2	public static es_version from_string ( string version ) { n string l_version = version n final boolean snapshot = l_version . ends_with ( codstr ) n if ( snapshot ) { n l_version = l_version . substring ( codint , l_version . length ( ) _ codint ) n } n string [ ] parts = l_version . split ( codstr ) n if ( parts . length < codint parts . length > codint ) { n throw new illegal_argument_exception ( n codstr + l_version ) n } n n try { n final int raw_major = integer . parse_int ( parts [ codint ] ) n if ( raw_major > = codint snapshot ) { / / we don codstr illegal l_version format _ snapshots are only supported until l_version codint . x codstr t reliably reverse the modulo n final int major = raw_major * codint n final int minor = integer . parse_int ( parts [ codint ] ) * codint n final int revision = integer . parse_int ( parts [ codint ] ) * codint n n n int build = codint n if ( parts . length = = codint ) { n string build_str = parts [ codint ] n if ( build_str . starts_with ( codstr ) ) { n assert raw_major > = codint codstr + major n build = integer . parse_int ( build_str . substring ( codint ) ) n assert build < codint codstr + build	0
Q_635	store a unique token in the session to prevent repeat submission of the same form	C_635_0	override n public void encode_begin ( faces_context context , ui_component component ) throws io_exception { n long timer = system . nano_time ( ) n long random = ( long ) ( math . random ( ) * integer . max_value ) n long token = timer ^ random n ng_secure_utilities . set_security_token ( string . value_of ( token ) , component . get_client_id ( ) ) n super . encode_begin ( context , component ) n n ng_security_filter filter = find_and_verify_security_filter ( context , component ) n show_legal_disclaimer ( context , filter ) n }	1
Q_635	store a unique token in the session to prevent repeat submission of the same form	C_635_1	public list < faces_config_redirect_redirect_param_type < faces_config_redirect_type < t get_all_redirect_param ( ) n { n list < faces_config_redirect_redirect_param_type < faces_config_redirect_type < t list = new array_list < faces_config_redirect_redirect_param_type < faces_config_redirect_type < t ( ) n list < node > node_list = child_node . get ( codstr ) n for ( node node node_list ) n { n faces_config_redirect_redirect_param_type < faces_config_redirect_type < t type = new faces_config_redirect_redirect_param_type_impl < faces_config_redirect_type < t ( this , codstr , child_node , node ) n list . add ( type ) n } n return list n }	0
Q_635	store a unique token in the session to prevent repeat submission of the same form	C_635_2	public v remove ( final k key ) { n v old_value = cache_map . remove ( key ) n if ( old_value = null ) { n log . debug ( codstr { } codstr , key ) n } n return old_value n }	0
Q_636	extract all property from the supply property object with the specify prefix	C_636_0	public static properties get_sub_properties ( properties source , string prefix ) n { n properties dest = new properties ( ) n extract_sub_properties ( source , dest , prefix ) n return dest n }	1
Q_636	extract all property from the supply property object with the specify prefix	C_636_1	protected rectangle2_d get_string_bounds ( text_layout tl ) n { n return new rectangle2_d . float ( codint , _ tl . get_ascent ( ) , tl . get_advance ( ) , n tl . get_ascent ( ) + tl . get_descent ( ) + tl . get_leading ( ) ) n }	0
Q_636	extract all property from the supply property object with the specify prefix	C_636_2	deprecated n public boolean remove_circle_from_field ( profile_field < ? > field , string circle , spf_persona persona ) { n return m_profile_table . remove_circle_from_field ( circle , field , persona ) n }	0
Q_637	call when a method throw an exception during template evaluation	C_637_0	suppress_warnings ( codstr ) / / our super class declares a bare class n public object method_exception ( class clazz , string method , exception e ) n throws exception n { n log . warning ( codstr , codstr , clazz . get_name ( ) , codstr , method , e ) n return codstr n }	1
Q_637	call when a method throw an exception during template evaluation	C_637_1	public static boolean is_cjk_char ( int c ) n { n / * n * note added at codint _ codint _ codint n * for foreign country translated name recognize n * add codstr as cjk chars n * / n if ( c = = codint n character . get_type ( c ) = = character . other_letter ) n return true n return false n }	0
Q_637	call when a method throw an exception during template evaluation	C_637_2	public static socket connect ( final string hostname , final int port , final int connection_timeout ) throws io_exception { n final socket socket = new socket ( ) n if ( connection_timeout < = codint ) { n socket . connect ( new inet_socket_address ( hostname , port ) ) n } n else { n socket . connect ( new inet_socket_address ( hostname , port ) , connection_timeout ) n } n return socket n }	0
Q_638	add status message delete request type invalid	C_638_0	public void type_invalid ( final string type ) { n this . add_status_message ( n protocol_constants . status_codes . delete . type_invalid , n codstr codstr codstr codstr codstr codstr codstr codstr codstr ) n }	1
Q_638	add status message delete request type invalid	C_638_1	public static string concat ( string main_url , string relative_url ) { n if ( string_utils . is_empty ( main_url ) ) { n return relative_url n } else if ( string_utils . is_empty ( relative_url ) ) { n return main_url n } else { n string_builder joined_url = new string_builder ( main_url ) n n if ( main_url . ends_with ( codstr ) relative_url . starts_with ( codstr ) ) { n relative_url = string_utils . strip_start ( relative_url , codstr ) n } else if ( main_url . ends_with ( codstr ) relative_url . starts_with ( codstr ) ) { n joined_url . append ( codstr ) n } n n joined_url . append ( relative_url ) n n return joined_url . to_string ( ) n } n }	0
Q_638	add status message delete request type invalid	C_638_2	public void set_orientation ( final orientation orientation ) { n if ( orientation = m_orientation ) { n m_orientation = orientation n if ( m_container = null ) { n m_container . on_layout_changed ( this ) n } n } n }	0
Q_639	return the property name or property_table_name	C_639_0	public string foreign_key_column_name ( n string property_name , string property_entity_name , string property_table_name , string referenced_column_name n ) { n string header = property_name = null ? unqualify ( property_name ) property_table_name n n check_state ( header = null , codstr ) n n return column_name ( header ) / / + codstr + referenced_column_name not used for backward compatibility n }	1
Q_639	return the property name or property_table_name	C_639_1	public static void init_teapps ( nonnull final validation_executor_set_registry a_registry ) n { n value_enforcer . not_null ( a_registry , codstr ) n n final boolean b_not_deprecated = false n n / / no schematrons here n a_registry . register_validation_executor_set ( validation_executor_set . create ( vid_teapps_272 , n codstr + vid_teapps_272 . get_version ( ) , n b_not_deprecated , n validation_executor_xsd . create ( new class_path_resource ( codstr ) ) ) ) n a_registry . register_validation_executor_set ( validation_executor_set . create ( vid_teapps_30 , n codstr + vid_teapps_30 . get_version ( ) , n b_not_deprecated , n validation_executor_xsd . create ( new class_path_resource ( codstr ) ) ) ) n }	0
Q_639	return the property name or property_table_name	C_639_2	public static void main ( string [ ] args ) throws exception { n logger logger = logger . get_logger ( codstr ) n n properties beast_config_properties = new properties ( ) n string beast_config_properties_file = null n if ( args . length > codint ) { n beast_config_properties_file = args [ codint ] n beast_config_properties . load ( new file_input_stream ( n beast_config_properties_file ) ) n logger . info ( codstr n + beast_config_properties_file ) n } else { n logger . severe ( codstr ) n throw new beast_exception ( n codstr ) n } n string logger_config_properties_file n if ( args . length > codint ) { n properties logger_config_properties = new properties ( ) n logger_config_properties_file = args [ codint ] n try { n file_input_stream logger_config_file = new file_input_stream ( n logger_config_properties_file ) n logger_config_properties . load ( logger_config_file ) n log_manager . get_log_manager ( ) . read_configuration ( logger_config_file ) n logger . info ( codstr n + logger_config_properties_file ) n } catch ( io_exception ex ) { n logger . warning ( codstr ) n logger . warning ( codstr ) n } n } else { n logger_config_properties_file = null n } n n mas_reader . generate_java_files ( n beast_config_properties . get_property ( codstr ) , codstr codstr mas_platform codstr codstr , n beast_config_properties . get_property ( codstr ) , n beast_config_properties . get_property ( codstr ) , n beast_config_properties . get_property ( codstr ) , n logger_config_properties_file , n beast_config_properties	0
Q_640	set csrf xsrf cookie	C_640_0	public void set_cookie ( final http_servlet_request prequest , final http_servlet_response presponse ) n throws io_exception { n final csrf_token csrf = ( csrf_token ) prequest . get_attribute ( csrf_token . class . get_name ( ) ) n if ( csrf = null ) { n cookie cookie = web_utils . get_cookie ( prequest , resource_paths . xsrf_cookie ) n final string token = csrf . get_token ( ) n if ( cookie = = null token = null token . equals ( cookie . get_value ( ) ) ) { n cookie = new cookie ( resource_paths . xsrf_cookie , token ) n cookie . set_path ( n string_utils . default_string ( string_utils . trim_to_null ( prequest . get_context_path ( ) ) , codstr ) ) n presponse . add_cookie ( cookie ) n } n } n }	1
Q_640	set csrf xsrf cookie	C_640_1	public static < t extends sequence_element > void write_sequence_vectors ( non_null sequence_vectors < t > vectors , n non_null sequence_element_factory < t > factory , non_null string path ) throws io_exception { n try ( file_output_stream fos = new file_output_stream ( path ) ) { n write_sequence_vectors ( vectors , factory , fos ) n } n }	0
Q_640	set csrf xsrf cookie	C_640_2	override n public void modify_config ( i_aggregator aggregator , object config_obj ) { n / / let the superclass do its thing n super . modify_config ( aggregator , config_obj ) n n scriptable config = ( scriptable ) config_obj n / / get the server _ side config properties we need to start with n object paths_obj = config . get ( i_config . paths_configparam , config ) n object packages_obj = config . get ( i_config . packages_configparam , config ) n object aliases_obj = config . get ( i_config . aliases_configparam , config ) n object text_plugin_delegators_obj = config . get ( i_config . textplugindelegators_configparam , config ) n object js_plugin_delegators_obj = config . get ( i_config . jsplugindelegators_configparam , config ) n n scriptable paths = ( paths_obj = null paths_obj instanceof scriptable ) ? ( scriptable ) paths_obj null n scriptable packages = ( packages_obj = null packages_obj instanceof scriptable ) ? ( scriptable ) packages_obj null n scriptable aliases = ( aliases_obj = null aliases_obj instanceof scriptable ) ? ( scriptable ) aliases_obj null n scriptable text_plugin_delegators = ( text_plugin_delegators_obj = null text_plugin_delegators_obj instanceof scriptable ) ? ( scriptable ) text_plugin_delegators_obj null n scriptable js_plugin_delegators = ( js_plugin_delegators_obj = null js_plugin_delegators_obj instanceof scriptable ) ? ( scriptable ) js_plugin_delegators_obj null n / / get the uri for the location of the dojo package on the server n i_config . location dojo_loc = null n if ( packages = null ) { n for	0
Q_641	assert that the give string be not empty that be it must not be code null and not the	C_641_0	public static void has_length ( nullable final string text , n final supplier < string > message_supplier ) { n if ( string_utils . has_length ( text ) ) { n throw new illegal_argument_exception ( assert . null_safe_get ( message_supplier ) ) n } n }	1
Q_641	assert that the give string be not empty that be it must not be code null and not the	C_641_1	public byte [ ] load ( ) throws io_exception , interrupted_exception { n try ( input_stream is = open ( ) ) { n return file_utils . read_all_bytes_as_array ( is , uncompressed_size ) n } n }	0
Q_641	assert that the give string be not empty that be it must not be code null and not the	C_641_2	public static string get_lib_info ( ) { n string info = lib_info . get ( ) n if ( info = = null ) { n info = string . format ( locale . english , lib_info , c4 . get_version ( ) ) n n lib_info . compare_and_set ( null , info ) n } n n return info n }	0
Q_642	create a default instance of the worker pool and call link request_queue start on it	C_642_0	public static request_queue new_request_queue ( file cache_location , http_stack stack ) { n n file cache_dir = null n if ( cache_location = null ) { n cache_dir = new file ( cache_location , default_cache_dir ) n } n n string user_agent = codstr n n if ( stack = = null ) { n stack = new hurl_stack ( ) n } n n network network = new http_network ( stack ) n n cache cache = null n n if ( cache_dir = null ) { n cache = new disk_based_cache ( cache_dir ) n } else { n cache = new no_cache ( ) n } n n n request_queue queue = new request_queue ( cache , network ) n queue . start ( ) n n return queue n }	1
Q_642	create a default instance of the worker pool and call link request_queue start on it	C_642_1	public j_code_model get_code_model ( string base_package , string schema_location , annotator annotator ) { n if ( type = null ) { n return code_model n } else { n return schema_helper . build_body_j_code_model ( schema_location , base_package , name , schema , annotator ) n } n }	0
Q_642	create a default instance of the worker pool and call link request_queue start on it	C_642_2	override n public e_enum get_si_prefix ( ) { n if ( si_prefix_e_enum = = null ) { n si_prefix_e_enum = ( e_enum ) e_package . registry . instance . get_e_package ( store_package . e_ns_uri ) . get_e_classifiers ( ) . get ( codint ) n } n return si_prefix_e_enum n }	0
Q_643	send a message over the serial port and block wait for the message response	C_643_0	public < t extends message > t send_message_synchronous ( class < t > response_type , transmittable_message message ) { n t response_message = null n synchronous_message_listener < t > message_listener = new synchronous_message_listener < > ( response_type ) n n add_message_listener ( message_listener ) n n if ( send_message ( message ) ) { n if ( message_listener . wait_for_response ( ) ) { n response_message = message_listener . get_response_message ( ) n } n } n n remove_message_listener ( message_listener ) n n return response_message n }	1
Q_643	send a message over the serial port and block wait for the message response	C_643_1	public void notify_package_removed ( string package_name ) { n for ( pair < launcher_apps . callback , handler > callback_pair callbacks ) { n callback_pair . second . post ( n ( ) _ > callback_pair . first . on_package_removed ( package_name , process . my_user_handle ( ) ) ) n } n }	0
Q_643	send a message over the serial port and block wait for the message response	C_643_2	public x509_certificate [ ] get_certificates ( ) { n if ( this . cert_subject_dn_map = = null ) { n return null n } n collection certs = this . cert_subject_dn_map . values ( ) n return ( x509_certificate [ ] ) certs . to_array ( new x509_certificate [ certs . size ( ) ] ) n }	0
Q_644	get a serializer instance	C_644_0	public static serializer get_serializer ( class < ? > type ) { n class < ? > serializable = lookup_serializable_type ( type ) n serializer serializer = serializers . get ( serializable ) n if ( serializer = = null ) { n serializer = get_instance ( ) . create_serializer ( serializable ) n serializers . put ( serializable , serializer ) n } n return serializer n }	1
Q_644	get a serializer instance	C_644_1	public long [ ] read_long_array ( final int items , final jbbp_byte_order byte_order ) throws io_exception { n int pos = codint n if ( items < codint ) { n long [ ] buffer = new long [ initial_array_buffer_size ] n / / till end n while ( has_available_data ( ) ) { n final long next = read_long ( byte_order ) n if ( buffer . length = = pos ) { n final long [ ] newbuffer = new long [ buffer . length < < codint ] n system . arraycopy ( buffer , codint , newbuffer , codint , buffer . length ) n buffer = newbuffer n } n buffer [ pos + + ] = next n } n if ( buffer . length = = pos ) { n return buffer n } n final long [ ] result = new long [ pos ] n system . arraycopy ( buffer , codint , result , codint , pos ) n return result n } else { n / / number n final long [ ] buffer = new long [ items ] n for ( int i = codint i < items i + + ) { n buffer [ i ] = read_long ( byte_order ) n } n return buffer n } n }	0
Q_644	get a serializer instance	C_644_2	static byte [ ] row_key_template ( final tsdb tsdb , final string metric , n final map < string , string > tags ) { n final short metric_width = tsdb . metrics . width ( ) n final short tag_name_width = tsdb . tag_names . width ( ) n final short tag_value_width = tsdb . tag_values . width ( ) n final short num_tags = ( short ) tags . size ( ) n n int row_size = ( const . salt_width ( ) + metric_width + const . timestamp_bytes n + tag_name_width * num_tags + tag_value_width * num_tags ) n final byte [ ] row = new byte [ row_size ] n n short pos = ( short ) const . salt_width ( ) n n copy_in_row_key ( row , pos , n ( tsdb . config . auto_metric ( ) ? tsdb . metrics . get_or_create_id ( metric ) n tsdb . metrics . get_id ( metric ) ) ) n pos + = metric_width n n pos + = const . timestamp_bytes n n for ( final byte [ ] tag tags . resolve_or_create_all ( tsdb , tags ) ) { n copy_in_row_key ( row , pos , tag ) n pos + = tag . length n } n return row n }	0
Q_645	get the temp file	C_645_0	public file get_file ( ) throws illegal_state_exception { n file f = temp_file n if ( f = = null ) throw new illegal_state_exception ( ) n return f n }	1
Q_645	get the temp file	C_645_1	beta_api n public final operation set_ssl_policy_target_ssl_proxy ( n project_global_target_ssl_proxy_name target_ssl_proxy , n ssl_policy_reference ssl_policy_reference_resource ) { n n set_ssl_policy_target_ssl_proxy_http_request request = n set_ssl_policy_target_ssl_proxy_http_request . new_builder ( ) n . set_target_ssl_proxy ( target_ssl_proxy = = null ? null target_ssl_proxy . to_string ( ) ) n . set_ssl_policy_reference_resource ( ssl_policy_reference_resource ) n . build ( ) n return set_ssl_policy_target_ssl_proxy ( request ) n }	0
Q_645	get the temp file	C_645_2	private wyal_file . stmt and ( wyal_file . stmt lhs , wyal_file . stmt rhs ) { n if ( lhs = = null ) { n return rhs n } else if ( rhs = = null ) { n return rhs n } else { n return new wyal_file . stmt . block ( lhs , rhs ) n } n }	0
Q_646	create an instance of link jaxb_element code link missing_attribute_detail_type code	C_646_0	xml_element_decl ( namespace = codstr , name = codstr ) n public jaxb_element < missing_attribute_detail_type > create_missing_attribute_detail ( missing_attribute_detail_type value ) { n return new jaxb_element < missing_attribute_detail_type > ( _missing_attribute_detail_qname , missing_attribute_detail_type . class , null , value ) n }	1
Q_646	create an instance of link jaxb_element code link missing_attribute_detail_type code	C_646_1	public string make_request_ctx ( request_ctx req_ctx ) { n byte_array_output_stream request = new byte_array_output_stream ( ) n req_ctx . encode ( request , new indenter ( ) ) n return new string ( request . to_byte_array ( ) ) n }	0
Q_646	create an instance of link jaxb_element code link missing_attribute_detail_type code	C_646_2	public void remove_source ( vehicle_data_source source ) { n if ( source = null ) { n m_sources . remove ( source ) n source . stop ( ) n } n }	0
Q_647	"for more info on mail carrier api go a href "" http wiki"	C_647_0	public void get_all_map_id ( callback < list < integer callback ) throws null_pointer_exception { n gw2_api . get_all_map_i_ds ( ) . enqueue ( callback ) n }	1
Q_647	"for more info on mail carrier api go a href "" http wiki"	C_647_1	"public static void write_nanopub ( nanopub nanopub , output_stream out , rdf_format format ) n throws rdf_handler_exception { n rdf_writer writer = rio . create_writer ( format , new output_stream_writer ( out , charset . for_name ( codstr ) ) ) n writer . start_rdf ( ) n string s = nanopub . get_uri ( ) . to_string ( ) n writer . handle_namespace ( codstr , s ) n writer . handle_namespace ( codstr , s + rdf_utils . post_ac_char ) n if ( ( rdf_utils . bnode_char + codstr ) . matches ( codstr ) ) { n writer . handle_namespace ( codstr , s + rdf_utils . post_ac_char + rdf_utils . bnode_char ) n } n writer . handle_namespace ( codstr , codstr rdfs codstr http / / www . w3 . org / codint / codint / rdf _ schema writer . handle_namespace ( codstr , codstr ) n writer . handle_namespace ( codstr , codstr owl codstr http / / www . w3 . org / codint / codint / owl writer . handle_namespace ( codstr , codstr ) n writer . handle_namespace ( codstr , codstr ) n writer . handle_namespace ( codstr , codstr ) n writer . handle_namespace ( codstr , "" http / / www . nanopub . org / nschema for ( statement st nanopub_utils . get_statements ( nanopub ) ) { n writer . handle_statement ( st ) n } n writer . end_rdf ( ) n }"	0
Q_647	"for more info on mail carrier api go a href "" http wiki"	C_647_2	public void push_attribute_error_event ( final string device_name , final string attribute_name , final dev_failed dev_failed ) n throws dev_failed { n xlogger . entry ( ) n for ( final event_type event_type event_type . values ( ) ) { n final string full_name = event_utilities . build_event_name ( device_name , attribute_name , event_type ) n final event_impl event_impl = get_event_impl ( full_name ) n if ( event_impl = null ) { n for ( zmq . socket event_socket event_endpoints . values ( ) ) { n event_impl . push_dev_failed_event ( dev_failed , event_socket ) n } n } n } n xlogger . exit ( ) n }	0
Q_648	insert the specify element into this queue if it be possible to do so immediately without violate	C_648_0	public boolean add ( long value ) { n n / / volatile read n final int write_location = this . producer_write_location n n final int next_write_location = get_next_write_location_throw_if_full ( write_location ) n n / / purposely not volatile n data [ write_location ] = value n n set_write_location ( next_write_location ) n return true n }	1
Q_648	insert the specify element into this queue if it be possible to do so immediately without violate	C_648_1	public static graph_ql_type unwrap_one ( graph_ql_type type ) { n if ( is_non_null ( type ) ) { n return ( ( graph_ql_non_null ) type ) . get_wrapped_type ( ) n } else if ( is_list ( type ) ) { n return ( ( graph_ql_list ) type ) . get_wrapped_type ( ) n } n return type n }	0
Q_648	insert the specify element into this queue if it be possible to do so immediately without violate	C_648_2	override n public long size ( resource . contexts ) throws repository_exception { n if ( contexts = = null ) { n contexts = new resource [ ] { null } n } n try { n string_builder sb = new string_builder ( ) n sb . append ( codstr ) n boolean first = true n / / with no args , measure the whole triple store . n if ( contexts = null contexts . length > codint ) { n sb . append ( codstr ) n for ( resource context contexts ) { n if ( first ) { n first = first n } n else { n sb . append ( codstr ) n } n if ( context = = null ) { n sb . append ( codstr codstr codstr ) n } else { n sb . append ( codstr codstr codstr ) n } n } n sb . append ( codstr ) n } else { n sb . append ( codstr codstr codstr ) n } n sb . append ( codstr ) n logger . debug ( sb . to_string ( ) ) n mark_logic_tuple_query tuple_query = prepare_tuple_query ( sb . to_string ( ) ) n tuple_query . set_include_inferred ( false ) n tuple_query . set_rulesets ( ( sparql_ruleset ) null ) n tuple_query . set_constraining_query_definition ( ( query_definition ) null ) n tuple_query_result q_res = tuple_query . evaluate ( ) n / / just	0
Q_649	"for more info on wv_w match api go a href "" http wiki"	C_649_0	public wv_w_match get_wv_w_match_info ( int world_id , wv_w_match . endpoint type ) throws guild_wars2_exception { n if ( type = = null ) return get_wv_w_match_info_using_world ( world_id ) n try { n switch ( type ) { n case all n return get_wv_w_match_info_using_world ( world_id ) n case overview n response < wv_w_match_overview > overview = gw2_api . get_wv_w_match_overview_using_world ( integer . to_string ( world_id ) ) . execute ( ) n if ( overview . is_successful ( ) ) throw_error ( overview . code ( ) , overview . error_body ( ) ) n return overview . body ( ) n case stat n response < wv_w_match_stat > stat = gw2_api . get_wv_w_match_stat_using_world ( integer . to_string ( world_id ) ) . execute ( ) n if ( stat . is_successful ( ) ) throw_error ( stat . code ( ) , stat . error_body ( ) ) n return stat . body ( ) n case score n response < wv_w_match_score > score = gw2_api . get_wv_w_match_score_using_world ( integer . to_string ( world_id ) ) . execute ( ) n if ( score . is_successful ( ) ) throw_error ( score . code ( ) , score . error_body ( ) ) n return score . body ( ) n default n return get_wv_w_match_info_using_world ( world_id ) n } n } catch ( io_exception e ) { n throw new guild_wars2_exception ( error_code . network , codstr + e . get_message ( ) ) n } n }	1
Q_649	"for more info on wv_w match api go a href "" http wiki"	C_649_1	public int [ ] partition ( int k ) { n int n = merge . length + codint n int [ ] membership = new int [ n ] n n int_heap_select heap = new int_heap_select ( k ) n for ( int i = codint i < = k i + + ) { n heap . add ( merge [ n _ i ] [ codint ] ) n heap . add ( merge [ n _ i ] [ codint ] ) n } n n for ( int i = codint i < k i + + ) { n bfs ( membership , heap . get ( i ) , i ) n } n n return membership n }	0
Q_649	"for more info on wv_w match api go a href "" http wiki"	C_649_2	override n public data_response < list < feature get_relevant_stories ( object_id component_id , string team_id , string project_id , n optional < string > agile_type ) { n component component = component_repository . find_one ( component_id ) n if ( ( component = = null ) collection_utils . is_empty ( component . get_collector_items ( ) ) n collection_utils n . is_empty ( component . get_collector_items ( ) . get ( collector_type . agile_tool ) ) n ( component . get_collector_items ( ) . get ( collector_type . agile_tool ) . get ( codint ) = = null ) ) { n return get_empty_legacy_data_response ( ) n } n n collector_item item = component . get_collector_items ( ) . get ( collector_type . agile_tool ) . get ( codint ) n n q_scope_owner team = new q_scope_owner ( codstr ) n boolean_builder builder = new boolean_builder ( ) n builder . and ( team . collector_item_id . eq ( item . get_id ( ) ) ) n n / / get team_id first from available collector item , based on component n list < feature > relevant_stories = get_features_for_current_sprints ( team_id , project_id , item . get_collector_id ( ) , agile_type . is_present ( ) ? agile_type . get ( ) null , false ) n n collector collector = collector_repository . find_one ( item . get_collector_id ( ) ) n n return new data_response < > ( relevant_stories , collector . get_last_executed ( ) ) n }	0
Q_650	notify the zrtp protocol that the user have revoke their trust in the	C_650_0	public void untrust ( ) { n cache . update_entry ( cache_expiry_time ( ) , false , new_rs , keep_rs2 , null ) n delayed_cache_update = true n }	1
Q_650	notify the zrtp protocol that the user have revoke their trust in the	C_650_1	public void set_text ( string text ) n { n if ( _label . set_text ( text ) ) { n _dirty = true n / / clear out our constrained size where appropriate n if ( _constrain = = horizontal _constrain = = vertical ) { n _constrained_size = codint n _label . clear_target_dimens ( ) n } n revalidate ( ) n repaint ( ) n } n }	0
Q_650	notify the zrtp protocol that the user have revoke their trust in the	C_650_2	public void open_path ( string path , i_cms_ou_tree_type type , cms_uuid group_id ) { n n if ( type = = null ) { n return n } n try { n expand_item ( m_root_ou ) n string [ ] path_p = path . split ( codstr ) n string compl_path = codstr n for ( string sub_p path_p ) { n compl_path + = sub_p + codstr n cms_organizational_unit ou = open_cms . get_org_unit_manager ( ) . read_organizational_unit ( m_cms , compl_path ) n add_children_for_ou_node ( ou ) n expand_item ( ou ) n } n n if ( type . is_group ( ) type . is_role ( ) ) { n string item_id = type . get_id ( ) n + open_cms . get_org_unit_manager ( ) . read_organizational_unit ( m_cms , path ) . get_name ( ) n expand_item ( item_id ) n if ( group_id = = null ) { n set_value ( item_id ) n return n } n set_value ( group_id ) n return n } n if ( type . is_user ( ) ) { n set_value ( type . get_id ( ) + open_cms . get_org_unit_manager ( ) . read_organizational_unit ( m_cms , path ) . get_name ( ) ) n return n } n n set_value ( open_cms . get_org_unit_manager ( ) . read_organizational_unit ( m_cms , path ) ) n n } catch ( cms_exception e ) { n log . error ( codstr , e ) n } n }	0
Q_651	dh3_k rim implementation be currently buggy and do not work	C_651_0	public void set_algorithm ( key_agreement_type dh ) n { n log ( codstr + get_dh_name ( dh_mode ) + codstr + get_dh_name ( dh ) ) n try { n if ( dh_mode = null dh . key_type = = dh_mode . key_type ) return n dh_mode = dh n switch ( dh_mode . key_type ) { n case key_agreement_type . dh_mode_dh3_k n byte [ ] dh_gen = new byte [ codint ] n arrays . zero ( dh_gen ) n dh_gen [ codint ] = codint n dh_system = new dh_crypto_system ( dh_prime , dh_gen ) n dh_key_pair = dh_system . create_dh_key_pair ( ) n clear_ecdh ( ) n break n case key_agreement_type . dh_mode_ec25 n ec_system = new ec_crypto_system ( ec_crypto_system . ec256_r1 ) n ec_key_pair = ec_system . create_ec_key_pair ( ) n clear_dh ( ) n break n case key_agreement_type . dh_mode_ec38 n default n ec_system = new ec_crypto_system ( ec_crypto_system . ec384_r1 ) n ec_key_pair = ec_system . create_ec_key_pair ( ) n clear_dh ( ) n break n } n } catch ( invalid_crypto_system_exception e ) { n / / todo auto _ generated catch block n e . print_stack_trace ( ) n } catch ( unsupported_crypto_system_exception e ) { n / / todo auto _ generated catch block n e . print_stack_trace ( ) n } catch ( crypto_token_exception e ) { n / / todo auto _ generated catch block n e . print_stack_trace ( ) n } catch ( crypto_unsupported_operation_exception e )	1
Q_651	dh3_k rim implementation be currently buggy and do not work	C_651_1	public void billing_account_easy_hunting_service_name_screen_list_conditions_put ( string billing_account , string service_name , ovh_easy_hunting_screen_lists_conditions_settings body ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , billing_account , service_name ) n exec ( q_path , codstr , sb . to_string ( ) , body ) n }	0
Q_651	dh3_k rim implementation be currently buggy and do not work	C_651_2	trivial n public static file delete ( file file ) { n string method_name = codstr n n string file_path n if ( tc . is_debug_enabled ( ) ) { n file_path = file . get_absolute_path ( ) n } else { n file_path = null n } n n if ( file . is_directory ( ) ) { n if ( file_path = null ) { n tr . debug ( tc , method_name + codstr + file_path + codstr ) n } n n file first_failure = null n n file [ ] sub_files = file . list_files ( ) n if ( sub_files = null ) { n for ( file sub_file sub_files ) { n file next_failure = delete ( sub_file ) n if ( ( next_failure = null ) ( first_failure = = null ) ) { n first_failure = next_failure n } n } n } n n if ( first_failure = null ) { n if ( file_path = null ) { n tr . debug ( tc , method_name + n codstr + file_path + codstr + n codstr + first_failure . get_absolute_path ( ) + codstr ) n } n return first_failure n } n } else { n if ( file_path = null ) { n tr . debug ( tc , method_name + codstr + file_path + codstr ) n } n } n n if ( file . delete ( ) ) { n if ( file_path	0
Q_652	create a new probe_wrapper from the wireline payload	C_652_0	public probe_wrapper unmarshal ( string payload ) throws probe_parse_exception { n probe xml_probe = parse_probe_payload ( payload ) n n probe_wrapper probe = new probe_wrapper ( xml_probe . get_id ( ) ) n probe . set_client_id ( xml_probe . get_client ( ) ) n probe . set_des_version ( xml_probe . get_des_version ( ) ) n probe . set_respond_to_payload_type ( xml_probe . get_respond_to_payload_type ( ) ) n n if ( xml_probe . get_ra ( ) = null ) { n for ( respond_to respond_to_url xml_probe . get_ra ( ) . get_respond_to ( ) ) { n probe . add_respond_to_url ( respond_to_url . get_label ( ) , respond_to_url . get_value ( ) ) n } n } n n if ( xml_probe . get_scids ( ) = null ) { n for ( string scid xml_probe . get_scids ( ) . get_service_contract_id ( ) ) { n probe . add_service_contract_id ( scid ) n } n } n n if ( xml_probe . get_siids ( ) = null ) { n for ( string siid xml_probe . get_siids ( ) . get_service_instance_id ( ) ) { n probe . add_service_instance_id ( siid ) n } n } n n return probe n }	1
Q_652	create a new probe_wrapper from the wireline payload	C_652_1	"private boolean block_until_open_shards_at_most ( int max_open_shards , nullable transfer_key permitted_key , instant timeout ) n throws io_exception , interrupted_exception { n stopwatch stop_watch = stopwatch . create_started ( ) n instant now n n _lock . lock ( ) n try { n while ( _closed n max_open_shards_greater_than ( max_open_shards , permitted_key ) n ( now = instant . now ( ) ) . is_before ( timeout ) ) { n / / stop blocking if there is an exception n propagate_exception_if_present ( ) n n / / wait no longer than codint seconds we want to log at least every codint seconds we codstr after { } seconds task { } still has { } open shards "" , n stop_watch . elapsed ( time_unit . seconds ) , _task_id , _open_shard_files . size ( ) ) n } n n propagate_exception_if_present ( ) n return max_open_shards_greater_than ( max_open_shards , permitted_key ) n } finally { n _lock . unlock ( ) n } n }"	0
Q_652	create a new probe_wrapper from the wireline payload	C_652_2	public void billing_account_line_service_name_phone_phonebook_book_key_put ( string billing_account , string service_name , string book_key , ovh_phonebook body ) throws io_exception { n string q_path = codstr n string_builder sb = path ( q_path , billing_account , service_name , book_key ) n exec ( q_path , codstr , sb . to_string ( ) , body ) n }	0
Q_653	fill the request region with the background define by our source image	C_653_0	public void paint ( graphics g , int x , int y , int width , int height ) n { n / / bail out now if we were passed a bogus source image at construct time n if ( _tiles = = null ) { n return n } n n int rwid = width _ codint * _w3 , rhei = height _ codint * _h3 n n g . draw_image ( _tiles [ codint ] , x , y , _w3 , _h3 , null ) n g . draw_image ( _tiles [ codint ] , x + _w3 , y , rwid , _h3 , null ) n g . draw_image ( _tiles [ codint ] , x + _w3 + rwid , y , _w3 , _h3 , null ) n n y + = _h3 n g . draw_image ( _tiles [ codint ] , x , y , _w3 , rhei , null ) n g . draw_image ( _tiles [ codint ] , x + _w3 , y , rwid , rhei , null ) n g . draw_image ( _tiles [ codint ] , x + _w3 + rwid , y , _w3 , rhei , null ) n n y + = rhei n g . draw_image ( _tiles [ codint ] , x , y , _w3 , _h3 , null ) n g . draw_image ( _tiles [ codint ] , x + _w3 , y	1
Q_653	fill the request region with the background define by our source image	C_653_1	private node create_node ( final iterable < range < c ranges ) { n range < c > span = iterables . get_first ( ranges , null ) n if ( span = = null ) { n return null n } n for ( range < c > range ranges ) { n check_not_null ( range , codstr ) n span = range . span ( span ) n } n if ( span . is_empty ( ) ) { n return null n } n c center = ranges . center ( span ) n list < range < c left = lists . new_array_list ( ) n list < range < c right = lists . new_array_list ( ) n list < range < c overlap = lists . new_array_list ( ) n for ( range < c > range ranges ) { n if ( ranges . is_less_than ( range , center ) ) { n left . add ( range ) n } n else if ( ranges . is_greater_than ( range , center ) ) { n right . add ( range ) n } n else { n overlap . add ( range ) n } n } n return new node ( center , create_node ( left ) , create_node ( right ) , overlap ) n }	0
Q_653	fill the request region with the background define by our source image	C_653_2	protected void put ( byte [ ] bytes ) n { n if ( tc . is_entry_enabled ( ) ) tr . entry ( tc , codstr , new object [ ] { rls_utils . to_hex_string ( bytes , rls_utils . max_display_bytes ) , this } ) n n if ( tc . is_debug_enabled ( ) ) tr . debug ( tc , codstr + _buffer . position ( ) ) n n _buffer . put ( bytes ) n n if ( tc . is_entry_enabled ( ) ) tr . exit ( tc , codstr ) n }	0
Q_654	build the parameter definition	C_654_0	public parameter < t > build ( ) { n if ( this . name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . type = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . application_id = = null ) { n throw new illegal_argument_exception ( codstr ) n } n return new parameter < t > ( n this . name , n this . type , n this . application_id , n this . default_osgi_config_property , n this . default_value , n immutable_value_map . copy_of ( this . properties ) ) n }	1
Q_654	build the parameter definition	C_654_1	public static boolean is_descendant_of ( soy_node node , soy_node ancestor ) { n for ( node = null node = node . get_parent ( ) ) { n if ( ancestor = = node ) { n return true n } n } n return false n }	0
Q_654	build the parameter definition	C_654_2	override n public boolean e_is_set ( int feature_id ) { n switch ( feature_id ) { n case afplib_package . bii_imo_name n return imo_name_edefault = = null ? imo_name = null imo_name_edefault . equals ( imo_name ) n } n return super . e_is_set ( feature_id ) n }	0
Q_655	require empty space in the output buffer	C_655_0	private void require ( int len ) n { n int offset = _offset n int length = _length n n if ( offset + len < length ) { n return n } n n flush ( _offset ) n }	1
Q_655	require empty space in the output buffer	C_655_1	override n public boolean is_package_installer ( final string package_name ) { n logger . d ( codstr , package_name ) n n final package_manager package_manager = context . get_package_manager ( ) n final string installer_package_name = package_manager . get_installer_package_name ( package_name ) n n logger . d ( codstr , installer_package_name ) n n return nokia_installer . equals ( installer_package_name ) n }	0
Q_655	require empty space in the output buffer	C_655_2	public cms_resource create_sibling ( n cms_db_context dbc , n cms_resource source , n string destination , n list < cms_property > properties ) n throws cms_exception { n n if ( source . is_folder ( ) ) { n throw new cms_vfs_exception ( messages . get ( ) . container ( messages . err_vfs_folders_dont_support_siblings_0 ) ) n } n n / / determine destination folder and resource name n string destination_foldername = cms_resource . get_parent_folder ( destination ) n n / / read the destination folder ( will also check read permissions ) n cms_folder destination_folder = read_folder ( dbc , destination_foldername , cms_resource_filter . ignore_expiration ) n n / / no further permission check required here , will be done in create_resource ( ) n n / / check the resource flags n int flags = source . get_flags ( ) n if ( label_resource ( dbc , source , destination , codint ) ) { n / / set codstr link flag for new resource n flags = cms_resource . flag_labeled n } n n / / create the new resource n cms_resource new_resource = new cms_resource ( n new cms_uuid ( ) , n source . get_resource_id ( ) , n destination , n source . get_type_id ( ) , n source . is_folder ( ) , n flags , n dbc . current_project ( ) . get_uuid ( ) , n cms_resource . state_keep , n source . get_date_created ( ) , / / ensures	0
Q_656	go to the next opcode	C_656_0	protected int next_offset ( ) n { n int opcode = get_code ( ) [ _offset ] codint n n int length = op_len [ opcode ] n n switch ( opcode ) { n case goto n case goto_w n case ret n case ireturn n case lreturn n case freturn n case dreturn n case areturn n case return n case athrow n return _ codint n n case tableswitch n { n int arg = _offset + codint n arg + = ( codint _ arg codint ) codint n n int low = get_int ( arg + codint ) n int high = get_int ( arg + codint ) n n return arg + codint + ( high _ low + codint ) * codint n } n n case lookupswitch n { n return _ codint n n / * n int arg = _offset + codint n arg + = ( codint _ arg codint ) codint n n int n = get_int ( arg + codint ) n n int next = arg + codint + n * codint n n return next n * / n } n n case wide n { n int op2 = get_code ( ) [ _offset + codint ] codint n n if ( op2 = = iinc ) n length = codint n else n length = codint n break n } n } n n if ( length < codint length > codint	1
Q_656	go to the next opcode	C_656_1	public static boolean overlapping ( version min1 , version max1 , version min2 , version max2 ) n { n / / versions overlap if n / / _ either min or max values are identical ( fast test for real scenarios ) n / / _ min1 max1 are within the range min2 _ max2 n / / _ min2 max2 are within the range min1 _ max1 n n return min1 . equals ( min2 ) max1 . equals ( max2 ) min2 . within ( min1 , max1 ) max2 . within ( min1 , min2 ) n min1 . within ( min2 , max2 ) max1 . within ( min2 , max2 ) n }	0
Q_656	go to the next opcode	C_656_2	ui_thread n public void remove_marker ( non_null marker_view marker_view ) { n if ( map_view . is_destroyed ( ) markers . contains ( marker_view ) ) { n return n } n n map_view . remove_view ( marker_view . get_view ( ) ) n markers . remove ( marker_view ) n }	0
Q_657	read a block from a give location	C_657_0	public int read ( byte [ ] buffer , int offset , int length ) n throws io_exception n { n log . finest ( codstr + long . to_hex_string ( get_file_pointer ( ) ) + codstr + n length + codstr ) n n return _file . read ( buffer , offset , length ) n }	1
Q_657	read a block from a give location	C_657_1	public static multi_layer_network restore_multi_layer_network ( non_null input_stream is , boolean load_updater ) n throws io_exception { n check_input_stream ( is ) n n file tmp_file = null n try { n tmp_file = temp_file_from_stream ( is ) n return restore_multi_layer_network ( tmp_file , load_updater ) n } finally { n if ( tmp_file = null ) { n tmp_file . delete ( ) n } n } n }	0
Q_657	read a block from a give location	C_657_2	public void scan_for_menu_items ( ) { n map < string , map < string , menu_item_ext all_menu_items = new put_if_absent_map < string , map < string , menu_item_ext ( n new hash_map < string , map < string , menu_item_ext ( ) , n new map_value_factory < string , map < string , menu_item_ext ( ) { n override n public map < string , menu_item_ext > create_value ( string key ) { n return new tree_map < string , menu_item_ext > ( ) n } n } ) n / / new hash_map < string , map < string , menu_item_ext ( ) / / < menu_name , < path , menu_item_ext n n / / get all beans that may have menu items defined n map < string , object > beans = app_context . get_beans_with_annotation ( web_menu . class ) n beans . put_all ( app_context . get_beans_with_annotation ( request_mapping . class ) ) n n / / find all menu items n for ( object bean beans . values ( ) ) { n class < ? > bean_class n if ( bean instanceof advised ) { / / if enhancer_by_spring_cglib n bean_class = ( ( advised ) bean ) . get_target_class ( ) n } else { n bean_class = bean . get_class ( ) n } n n / / check class level annotations first n request_mapping class_request_mapping = bean_class . get_annotation ( request_mapping . class ) n web_menu class_web_menu = bean_class .	0
Q_658	initialize the temp stream for write	C_658_0	public void open_write ( ) n { n temp_char_buffer ptr = _head n n _head = null n _tail = null n n temp_char_buffer . free_all ( ptr ) n }	1
Q_658	initialize the temp stream for write	C_658_1	public static int cjk_index_of ( string str , int offset ) n { n for ( int j = offset j < str . length ( ) j + + ) { n if ( is_cjk_char ( str . char_at ( j ) ) ) { n return j n } n } n n return _ codint n }	0
Q_658	initialize the temp stream for write	C_658_2	public static int get_int ( string key , int def ) { n string value = get ( key ) n if ( value = = null ) { n return def n } n n value = value . trim ( ) n try { n return integer . parse_int ( value ) n } catch ( exception e ) { n / / ignore n } n n logger . warn ( n codstr { } codstr , n key , value , def n ) n n return def n }	0
Q_659	return the exception	C_659_0	public void set_attributes ( array_list < attribute > attributes ) n { n if ( _attributes = attributes ) { n _attributes . clear ( ) n _attributes . add_all ( attributes ) n } n }	1
Q_659	return the exception	C_659_1	static string get_consumed_content_type ( http_servlet_request request ) { n string mime_type = first_not_null ( request . get_parameter ( codstr ) , request n . get_content_type ( ) ) n n return ( ( mime_type = null ) ? mime_type . replace ( codstr , n base_rest_resource . xml ) null ) n }	0
Q_659	return the exception	C_659_2	public static filter_stream_type unserialize ( string str ) n { n if ( str = = null ) { n return null n } n n string wiki_type = str n string data = null n string version = null n n / / version n n int version_index = str . last_index_of ( codstr ) n n if ( version_index = = codint ) { n throw new illegal_argument_exception ( codstr / codstr + str ) n } n n if ( version_index = _ codint ) { n version = wiki_type . substring ( version_index + codint ) n wiki_type = wiki_type . substring ( codint , version_index ) n } n n / / data n n int data_index = str . index_of ( codstr ) n n if ( data_index = = codint ) { n throw new illegal_argument_exception ( codstr + codstr + str ) n } n n if ( data_index = _ codint ) { n data = wiki_type . substring ( data_index + codint ) n wiki_type = wiki_type . substring ( codint , data_index ) n } n n return new filter_stream_type ( system_type . unserialize ( wiki_type ) , data , version ) n }	0
Q_660	build key from a class and annotation	C_660_0	public static < t > key < t > of ( class < t > type , n annotation ann ) n { n objects . require_non_null ( type ) n objects . require_non_null ( ann ) n n return new key < > ( type , new annotation [ ] { ann } ) n }	1
Q_660	build key from a class and annotation	C_660_1	public void add ( i_converter converter , object source_object , n type_reference < ? > destination_type , object converted_object ) { n converted_objects . put ( new converted_objects_key ( converter , source_object , n destination_type ) , converted_object ) n }	0
Q_660	build key from a class and annotation	C_660_2	public coin get_value ( transaction_bag wallet ) throws script_exception { n / / fixme temp perf hack for android _ this crap can go away once we have a real payments api . n boolean is_android = utils . is_android_runtime ( ) n if ( is_android cached_value = null cached_for_bag = = wallet ) n return cached_value n coin result = get_value_sent_to_me ( wallet ) . subtract ( get_value_sent_from_me ( wallet ) ) n if ( is_android ) { n cached_value = result n cached_for_bag = wallet n } n return result n }	0
Q_661	fill the entry set from the tree map	C_661_0	void fill_delta_entries ( set < page_leaf_entry > entries , n row row , n int tail ) n { n int row_offset = _row_head n n byte [ ] buffer = _buffer n n while ( row_offset < tail ) { n int code = buffer [ row_offset ] code_mask n n int len = get_length ( code , row ) n if ( code = = insert code = = remove ) { n page_leaf_entry entry = new page_leaf_entry ( this , row , row_offset , len , code ) n n entries . add ( entry ) n } n n row_offset + = len n } n }	1
Q_661	fill the entry set from the tree map	C_661_1	public project . calendars . calendar . work_weeks . work_week . time_period create_project_calendars_calendar_work_weeks_work_week_time_period ( ) n { n return new project . calendars . calendar . work_weeks . work_week . time_period ( ) n }	0
Q_661	fill the entry set from the tree map	C_661_2	override n public iterator < integer > iterator ( ) { n return new iterator < integer > ( ) { n private int hs = codint n n private short_iterator iter n n private int pos = codint n n private int x n n override n public boolean has_next ( ) { n return pos < roaring_bitmap . this . high_low_container . size ( ) n } n n private iterator < integer > init ( ) { n if ( pos < roaring_bitmap . this . high_low_container . size ( ) ) { n iter = roaring_bitmap . this . high_low_container . get_container_at_index ( pos ) . get_short_iterator ( ) n hs = roaring_bitmap . this . high_low_container . get_key_at_index ( pos ) < < codint n } n return this n } n n override n public integer next ( ) { n x = iter . next_as_int ( ) hs n if ( iter . has_next ( ) ) { n + + pos n init ( ) n } n return x n } n n override n public void remove ( ) { n / / todo implement n throw new unsupported_operation_exception ( ) n } n n } . init ( ) n }	0
Q_662	add the specify element to the builder	C_662_0	public int add ( t item ) { n final string source_method = codstr / / non _ nls _ codint n if ( item = = null ) { n throw new null_pointer_exception ( ) n } n lock lock = null n int idx = index . get_and_increment ( ) n lock = ( idx > = items . length ) ? rwl . write_lock ( ) rwl . read_lock ( ) n signal_util . lock ( lock , source_class , source_method ) n try { n if ( idx > = items . length ) { n int new_length = items . length n while ( idx > = new_length ) { new_length * = codint } n items = arrays . copy_of ( items , new_length ) n } n items [ idx ] = item n } finally { n lock . unlock ( ) n } n return idx n }	1
Q_662	add the specify element to the builder	C_662_1	public job_detail retrieve_job ( job_key job_key , t jedis ) throws job_persistence_exception , class_not_found_exception { n final string job_hash_key = redis_schema . job_hash_key ( job_key ) n final string job_data_map_hash_key = redis_schema . job_data_map_hash_key ( job_key ) n n final map < string , string > job_detail_map = jedis . hget_all ( job_hash_key ) n if ( job_detail_map = = null job_detail_map . size ( ) = = codint ) { n / / desired job does not exist n return null n } n job_detail_impl job_detail = mapper . convert_value ( job_detail_map , job_detail_impl . class ) n job_detail . set_key ( job_key ) n n final map < string , string > job_data = jedis . hget_all ( job_data_map_hash_key ) n if ( job_data = null job_data . is_empty ( ) ) { n job_data_map job_data_map = new job_data_map ( ) n job_data_map . put_all ( job_data ) n job_detail . set_job_data_map ( job_data_map ) n } n n return job_detail n }	0
Q_662	add the specify element to the builder	C_662_2	override n public com . liferay . commerce . product . model . cp_rule_asset_category_rel get_cp_rule_asset_category_rel ( n long cp_rule_asset_category_rel_id ) n throws com . liferay . portal . kernel . exception . portal_exception { n return _cp_rule_asset_category_rel_local_service . get_cp_rule_asset_category_rel ( cp_rule_asset_category_rel_id ) n }	0
Q_663	read an expect double	C_663_0	public static double required_double ( json_object o , string id ) throws json_converter_exception { n check_keys ( o , id ) n object x = o . get ( id ) n if ( ( x instanceof number ) ) { n throw new json_converter_exception ( codstr codstr codstr codstr codstr ) n } n return ( ( number ) x ) . double_value ( ) n }	1
Q_663	read an expect double	C_663_1	string emit_human_description ( list < binding > bindings ) { n string_builder builder = new string_builder ( ) n switch ( bindings . size ( ) ) { n case codint n builder . append ( bindings . get ( codint ) . get_description ( ) ) n break n case codint n builder n . append ( bindings . get ( codint ) . get_description ( ) ) n . append ( codstr ) n . append ( bindings . get ( codint ) . get_description ( ) ) n break n default n for ( int i = codint , count = bindings . size ( ) i < count i + + ) { n binding required_field = bindings . get ( i ) n if ( i = codint ) { n builder . append ( codstr ) n } n if ( i = = count _ codint ) { n builder . append ( codstr ) n } n builder . append ( required_field . get_description ( ) ) n } n break n } n return builder . to_string ( ) n }	0
Q_663	read an expect double	C_663_2	"static discordian_date create ( int proleptic_year , int month , int day_of_month ) { n discordian_chronology . year_range . check_valid_value ( proleptic_year , year ) n discordian_chronology . month_of_year_range . check_valid_value ( month , month_of_year ) n discordian_chronology . day_of_month_range . check_valid_value ( day_of_month , day_of_month ) n n if ( month = = codint day_of_month = = codint ) { n if ( month = codint day_of_month = codint ) { n throw new date_time_exception ( codstr codstr codstr codstr s day is the only special day inserted in a non _ existent month . codstr invalid date codstr as codstr + proleptic_year + codstr is not a leap year "" ) n } n } n n return new discordian_date ( proleptic_year , month , day_of_month ) n }"	0
Q_664	read the current record and increment the counter if the record be find	C_664_0	protected o_record_internal < ? > read_current_record ( o_record_internal < ? > i_record , final int i_movement ) { n if ( limit > _ codint browsed_records > = limit ) n / / limit reached n return null n n current . cluster_position + = i_movement n n if ( i_record = null ) { n i_record . set_identity ( current ) n i_record = low_level_database . load ( i_record , fetch_plan ) n } else n i_record = low_level_database . load ( current , fetch_plan ) n n if ( i_record = null ) n browsed_records + + n n return i_record n }	1
Q_664	read the current record and increment the counter if the record be find	C_664_1	public t item_long_clicked ( adapter_view . on_item_long_click_listener listener ) { n n if ( view instanceof adapter_view ) { n n adapter_view < ? > alv = ( adapter_view < ? > ) view n alv . set_on_item_long_click_listener ( listener ) n n } n n return self ( ) n n }	0
Q_664	read the current record and increment the counter if the record be find	C_664_2	safe_varargs n public static < t > permutation_chromosome < t > of ( final t . alleles ) { n return of ( i_seq . of ( alleles ) ) n }	0
Q_665	try to load an img from the specify url	C_665_0	public static img load_img_from_url ( string urlspec ) { n try { n url url = new url ( urlspec ) n try ( input_stream is = url . open_stream ( ) ) { n return load_img ( is ) n } n } catch ( io_exception e ) { n throw new image_loader_exception ( e ) n } n }	1
Q_665	try to load an img from the specify url	C_665_1	public boolean matches_all_of ( char_sequence sequence ) { n for ( int i = sequence . length ( ) _ codint i > = codint i _ ) { n if ( matches ( sequence . char_at ( i ) ) ) { n return false n } n } n return true n }	0
Q_665	try to load an img from the specify url	C_665_2	public byte [ ] nto_wire ( ) { n dns_output out = new dns_output ( ) n to_wire ( out ) n size = out . current ( ) n return out . to_byte_array ( ) n }	0
Q_666	get resource url for delete_shipping_inclusion_rule	C_666_0	public static mozu_url delete_shipping_inclusion_rule_url ( string id , string profilecode ) n { n url_formatter formatter = new url_formatter ( codstr ) n formatter . format_url ( codstr , id ) n formatter . format_url ( codstr , profilecode ) n return new mozu_url ( formatter . get_resource_url ( ) , mozu_url . url_location . tenant_pod ) n }	1
Q_666	get resource url for delete_shipping_inclusion_rule	C_666_1	public void add_role_for_group ( string group_name , string role_name ) { n if ( workgroups = = null ) { n workgroups = new workgroup [ codint ] n workgroups [ codint ] = new workgroup ( null , group_name , null ) n } n list < string > roles = workgroups [ codint ] . get_roles ( ) n if ( roles = = null ) { n roles = new array_list < string > ( ) n workgroups [ codint ] . set_roles ( roles ) n } n roles . add ( role_name ) n }	0
Q_666	get resource url for delete_shipping_inclusion_rule	C_666_2	override n protected void render_bundle_links ( joinable_resource_bundle bundle , string requested_path , bundle_renderer_context ctx , n writer out , boolean debug_on , boolean render_dependency_links ) throws io_exception { n n boolean bundle_already_included = ctx . get_included_bundles ( ) . contains ( bundle . get_id ( ) ) n n super . render_bundle_links ( bundle , requested_path , ctx , out , debug_on , render_dependency_links ) n n if ( bundle_already_included display_alternate_styles ) { n n if ( debug_on ) { n add_comment ( codstr codstr codstr codstr codstr , out ) n } n n list < map < string , string variants = variant_utils . get_all_variants ( bundle . get_variants ( ) ) n map < string , string > current_variant = bundler . get_config ( ) . get_generator_registry ( ) n . get_available_variant_map ( bundle . get_variants ( ) , ctx . get_variants ( ) ) n string current_locale = ( string ) current_variant . get ( jawr_constant . locale_variant_type ) n variants . remove ( current_variant ) n n / / renders the different variant as alternate stylesheet n alternate = true n for ( iterator < map < string , string it_variant_map = variants . iterator ( ) it_variant_map . has_next ( ) ) { n map < string , string > variant = it_variant_map . next ( ) n if ( variant = null ) { n string skin = variant . get ( jawr_constant . skin_variant_type ) n if ( skin = =	0
Q_667	calculate the value at a particular point	C_667_0	void calculate_value_at ( double x ) { n int len = points . size ( ) n for ( int i = codint i < len i + + ) { n point p1 = points . get ( i _ codint ) n point p2 = points . get ( i ) n n if ( x > = p1 . get_x ( ) . double_value ( ) x < = p2 . get_x ( ) . double_value ( ) ) { n / / calculate the slope intercept form n double m = ( p2 . get_y ( ) . double_value ( ) _ p1 . get_y ( ) . double_value ( ) ) / ( p2 . get_x ( ) . double_value ( ) _ p1 . get_x ( ) . double_value ( ) ) n double b = p1 . get_y ( ) . double_value ( ) _ m * p1 . get_x ( ) . double_value ( ) n n double interpolated = m * x + b n n / / apply the hedge if we have one n if ( have_hedge ( ) ) { n interpolated = get_hedge ( ) . calculate_value ( interpolated ) n } n exploded . add ( interpolated ) n return n } n } n }	1
Q_667	calculate the value at a particular point	C_667_1	public json_writer key ( int key ) { n start_key ( ) n n writer . write ( codstr codstr codstr ) n writer . write ( codstr ) n return this n }	0
Q_667	calculate the value at a particular point	C_667_2	public int update_expiration_time ( object id , long old_expiration_time , int size , long new_expiration_time , long new_validator_expiration_time ) { n int return_code = this . htod . update_expiration_time ( id , old_expiration_time , size , new_expiration_time , new_validator_expiration_time ) n if ( return_code = = htod_dynacache . disk_exception ) { n stop_on_error ( this . htod . disk_cache_exception ) n } n return return_code n }	0
Q_668	check if the give protocol version be enable and available	C_668_0	boolean is_negotiable ( protocol_version protocol_version ) { n if ( active_protocols = = null ) { n active_protocols = get_active_protocols ( ) n } n n return active_protocols . contains ( protocol_version ) n }	1
Q_668	check if the give protocol version be enable and available	C_668_1	public cluster to_cluster ( ) { n double [ ] output = new double [ this . sum_points . length ] n system . arraycopy ( this . sum_points , codint , output , codint , this . sum_points . length ) n for ( int i = codint i < output . length i + + ) { n output [ i ] / = this . num_points n } n return new sphere_cluster ( output , get_threshold ( ) , this . num_points ) n }	0
Q_668	check if the give protocol version be enable and available	C_668_2	public static string generate_flyweight_property_javadoc ( n final string indent , final token property_token , final string type_name ) n { n final string description = property_token . description ( ) n if ( null = = description description . is_empty ( ) ) n { n return codstr n } n n return n indent + codstr + n indent + codstr + description + codstr + n indent + codstr + n indent + codstr + type_name + codstr + description + codstr + n indent + codstr n }	0
Q_669	stop tracking this expectation	C_669_0	protected synchronized boolean unset_expectation ( final abstract_expectation < c , p > expectation ) { n if ( this . expectations . contains_key ( expectation ) ) { n this . expectations . remove ( expectation ) n abstract_expectation_manager . logger . info ( codstr , expectation ) n return true n } n return false n }	1
Q_669	stop tracking this expectation	C_669_1	public faces_config_flow_definition_flow_return_type < faces_config_flow_definition_type < t get_or_create_flow_return ( ) n { n list < node > node_list = child_node . get ( codstr ) n if ( node_list = null node_list . size ( ) > codint ) n { n return new faces_config_flow_definition_flow_return_type_impl < faces_config_flow_definition_type < t ( this , codstr , child_node , node_list . get ( codint ) ) n } n return create_flow_return ( ) n }	0
Q_669	stop tracking this expectation	C_669_2	public void parse ( i_vdm_source_unit file ) n { n n parse_result result n try n { n lex_location . reset_locations ( ) n result = start_parse ( file , file_utility . make_string ( file_utility . get_content ( file . get_file ( ) ) ) , file . get_file ( ) . get_charset ( ) ) n set_file_markers ( file . get_file ( ) , result ) n if ( result = null result . get_ast ( ) = null ) n { n file . reconcile ( result . get_ast ( ) , result . has_parse_errors ( ) ) n } n n } catch ( core_exception e ) n { n if ( vdm_core . debug ) n { n vdm_core . log ( codstr , e ) n } n } n }	0
Q_670	define a server send event endpoint with a specify handler	C_670_0	public static synchronized void sse ( string url , bi_consumer < server_sent_event_connection , string > connection_callback ) { n check_started ( ) n instance ( ) . endpoints . add ( handler_util . sse ( url , connection_callback ) ) n }	1
Q_670	define a server send event endpoint with a specify handler	C_670_1	public static void set_partition_avg_record_millis ( state state , kafka_partition partition , double millis ) { n state . set_prop ( n get_partition_prop_name ( partition . get_topic_name ( ) , partition . get_id ( ) ) + codstr + kafka_source . avg_record_millis , n millis ) n }	0
Q_670	define a server send event endpoint with a specify handler	C_670_2	private static string get_full_path ( final context_model model , final string path ) { n string full_path = path . trim ( ) n if ( model . get_context_name ( ) . length ( ) > codint ) { n full_path = codstr + model . get_context_name ( ) n if ( codstr . equals ( path . trim ( ) ) ) { n if ( ( ( full_path . ends_with ( codstr ) ) ) ( ( path . starts_with ( codstr ) ) ) ) { n full_path + = codstr n } n full_path = full_path + path n } n } n return full_path n }	0
Q_671	replace the give argument by repeatedly substitute all expression of the form property_key with the	C_671_0	protected string substitute ( string expression ) throws abstract_tracer . exception { n pattern compiled_pattern = pattern . compile ( codstr ) n matcher matcher = compiled_pattern . matcher ( expression ) n int pos = codint n string_builder string_builder = new string_builder ( ) n boolean flag n n do { n flag = false n n while ( matcher . find ( ) ) { n string_builder . append ( expression . substring ( pos , matcher . start ( ) ) ) n string property_key = expression . substring ( matcher . start ( ) + codint , matcher . end ( ) _ codint ) n if ( system . get_properties ( ) . contains_key ( property_key ) ) { n string property_value = system . get_property ( property_key ) n string_builder . append ( property_value ) n pos = matcher . end ( ) n flag = true n } n else { n throw new abstract_tracer . exception ( codstr ) n } n } n n string_builder . append ( expression . substring ( pos ) ) n expression = string_builder . to_string ( ) n n if ( flag ) { n string_builder = new string_builder ( ) n matcher . reset ( expression ) n pos = codint n } n } while ( flag ) n n return expression n }	1
Q_671	replace the give argument by repeatedly substitute all expression of the form property_key with the	C_671_1	private void check_shape_dist_traveled ( stop_time previous , stop_time current ) { n if ( n current . shape_dist_traveled = entity . double_missing n ( n previous . shape_dist_traveled = = entity . double_missing n current . shape_dist_traveled < = previous . shape_dist_traveled n ) n ) { n register_error ( current , shape_dist_traveled_not_increasing , current . shape_dist_traveled ) n } n }	0
Q_671	replace the give argument by repeatedly substitute all expression of the form property_key with the	C_671_2	private string fixup_scheme_slashes ( string surt ) { n if ( surt . index_of ( codstr ) = = surt . index_of ( codstr ) ) { n int i = surt . index_of ( codstr ) n surt = surt . substring ( codint , i + codint ) + codstr + surt . substring ( i + codint ) n } n return surt n }	0
Q_672	return the link semantic_status semantic status of the supply	C_672_0	public semantic_status matches ( final signature other ) { n if ( other = = null ) return null n n / / check simple function / return types first n if ( get_function ( ) = other . get_function ( ) ) return invalid_function n if ( get_return_type ( ) = other . get_return_type ( ) ) n return invalid_return_type n n string [ ] myargs = this . get_arguments ( ) n string [ ] otherargs = other . get_arguments ( ) n n return arguments_match ( myargs , otherargs ) n }	1
Q_672	return the link semantic_status semantic status of the supply	C_672_1	override n public json_element serialize ( local_date_time src , type type_of_src , json_serialization_context context ) n { n return new json_primitive ( formatter . format ( src ) ) n }	0
Q_672	return the link semantic_status semantic status of the supply	C_672_2	public service_future < list < job_inner list_by_experiment_async ( final string resource_group_name , final string workspace_name , final string experiment_name , final jobs_list_by_experiment_options jobs_list_by_experiment_options , final list_operation_callback < job_inner > service_callback ) { n return azure_service_future . from_page_response ( n list_by_experiment_single_page_async ( resource_group_name , workspace_name , experiment_name , jobs_list_by_experiment_options ) , n new func1 < string , observable < service_response < page < job_inner ( ) { n override n public observable < service_response < page < job_inner call ( string next_page_link ) { n return list_by_experiment_next_single_page_async ( next_page_link ) n } n } , n service_callback ) n }	0
Q_673	give a certain geometry get the edge the index point to	C_673_0	public coordinate [ ] get_edge ( geometry geometry , geometry_index index ) throws geometry_index_not_found_exception { n try { n return delegate . get_edge ( geometry , to_delegate ( index ) ) n } catch ( org . geomajas . geometry . service . geometry_index_not_found_exception e ) { n throw from_delegate ( e ) n } n }	1
Q_673	give a certain geometry get the edge the index point to	C_673_1	public list < t > element_list ( ) { n n if ( m_cache = null ) { n return m_cache n } n if ( m_relative_ordered ) { n list < t > object_list = new array_list < t > ( ) n iterator < cms_id_object_element < t it_objs = m_ordered_object_list . iterator ( ) n while ( it_objs . has_next ( ) ) { n cms_id_object_element < t > object = it_objs . next ( ) n object_list . add ( object . get_object ( ) ) n } n m_cache = collections . unmodifiable_list ( object_list ) n } else { n m_cache = collections . unmodifiable_list ( m_object_list ) n } n return m_cache n }	0
Q_673	give a certain geometry get the edge the index point to	C_673_2	public final void print ( object obj ) throws exception { n if ( ( m_output_override_permitted m_buffer = = null ) n m_output_receiver = null ) { n m_output_receiver . print ( obj ) n } n else if ( m_buffer = null ) { n m_buffer . append ( to_string ( obj ) ) n } n }	0
Q_674	factory method to create a new link string_resource_model from the give resource key the	C_674_0	public static i_model < string > new_resource_model ( final string resource_key , n final object [ ] parameters , final component component , final string default_value ) n { n if ( ( parameters = null ) ( parameters . length > codint ) ) n { n if ( ( default_value = null ) default_value . is_empty ( ) ) n { n return resource_model_factory . new_resource_model ( resource_key , default_value , component , n parameters ) n } n else n { n return resource_model_factory . new_resource_model ( resource_key , component , parameters ) n } n } n else n { n if ( ( default_value = null ) default_value . is_empty ( ) ) n { n return resource_model_factory . new_resource_model ( resource_key , component , default_value ) n } n else n { n return resource_model_factory . new_resource_model ( resource_key , component ) n } n } n }	1
Q_674	factory method to create a new link string_resource_model from the give resource key the	C_674_1	private void handle_on_visible_menu_items_width_changed ( int menu_items_width ) { n if ( menu_items_width = = codint ) { n m_clear_button . set_translation_x ( _ util . dp_to_px ( codint ) ) n int padding_right = util . dp_to_px ( codint ) n if ( m_is_focused ) { n padding_right + = util . dp_to_px ( clear_btn_width_dp ) n } else { n padding_right + = util . dp_to_px ( codint ) n } n m_search_input . set_padding ( codint , codint , padding_right , codint ) n } else { n m_clear_button . set_translation_x ( _ menu_items_width ) n int padding_right = menu_items_width n if ( m_is_focused ) { n padding_right + = util . dp_to_px ( clear_btn_width_dp ) n } n m_search_input . set_padding ( codint , codint , padding_right , codint ) n } n }	0
Q_674	factory method to create a new link string_resource_model from the give resource key the	C_674_2	public void set_editor_handler ( i_cms_editor_handler clazz ) { n n m_editor_handler = clazz n if ( cms_log . init . is_info_enabled ( ) ) { n cms_log . init . info ( n messages . get ( ) . get_bundle ( ) . key ( n messages . init_editor_handler_class_1 , n m_editor_handler . get_class ( ) . get_name ( ) ) ) n } n }	0
Q_675	return a optional double array value	C_675_0	nullable n public static double [ ] opt_double_array ( nullable bundle bundle , nullable string key , nullable double [ ] fallback ) { n if ( bundle = = null ) { n return fallback n } n return bundle . get_double_array ( key ) n }	1
Q_675	return a optional double array value	C_675_1	public mock_mvc_request_spec_builder add_header ( string header_name , string header_value ) { n spec . header ( header_name , header_value ) n return this n }	0
Q_675	return a optional double array value	C_675_2	void accept_as_source_segment ( merge_segment_operation operation ) { n exceptions . check_argument ( this . id = = operation . get_source_segment_id ( ) , n codstr , codstr ) n n this . sealed = true n this . merged = true n this . is_changed = true n }	0
Q_676	stage one validation of the file return the convert document or	C_676_0	private document stage1 ( final file file ) { n begin_stage ( phase1_stage1_hdr , codstr , num_phases ) n final string_builder bldr = new string_builder ( ) n n stage_output ( codstr + file ) n long t1 = current_time_millis ( ) n n final stage1_output output n if ( is_bel_script ( file ) ) { n output = p1 . stage1_bel_validation ( file ) n } else { n output = p1 . stage1_xbel_validation ( file ) n } n n if ( output . has_validation_errors ( ) ) { n for ( final validation_error error output . get_validation_errors ( ) ) { n stage_error ( error . get_user_facing_message ( ) ) n } n return null n } n n if ( output . has_conversion_error ( ) ) { n stage_error ( output . get_conversion_error ( ) . get_user_facing_message ( ) ) n return null n } n n if ( output . get_symbol_warning ( ) = null ) { n stage_warning ( output . get_symbol_warning ( ) . get_user_facing_message ( ) ) n } n n long t2 = current_time_millis ( ) n mark_time ( bldr , t1 , t2 ) n mark_end_stage ( bldr ) n stage_output ( bldr . to_string ( ) ) n return output . get_document ( ) n }	1
Q_676	stage one validation of the file return the convert document or	C_676_1	public static void process_exception ( object source n , class source_class n , string method_name n , throwable throwable n , string probe n , object [ ] objects n ) n { n if ( trace_component . is_any_tracing_enabled ( ) trace . is_entry_enabled ( ) ) n trace . entry ( cclass n , codstr n , new object [ ] { source n , source_class n , method_name n , throwable n , probe n , objects n } n ) n if ( trace_component . is_any_tracing_enabled ( ) trace . is_event_enabled ( ) ) n trace . event ( cclass , n codstr , n throwable ) n n print ( source n , source_class n , method_name n , throwable n , probe n , objects ) n n com . ibm . ws . ffdc . ffdc_filter . process_exception ( throwable n , source_class . get_name ( ) + codstr + method_name n , probe n , source n , objects ) n n if ( trace_component . is_any_tracing_enabled ( ) trace . is_entry_enabled ( ) ) n trace . exit ( cclass , codstr ) n }	0
Q_676	stage one validation of the file return the convert document or	C_676_2	public vector3d set ( vector3dc v ) { n return set ( v . x ( ) , v . y ( ) , v . z ( ) ) n }	0
Q_677	copy the link kam by create a new link kam_impl instance with	C_677_0	public static kam copy ( final kam kam ) { n if ( kam = = null ) { n return null n } n n final kam copy = new kam_impl ( kam . get_kam_info ( ) ) n n final collection < kam_node > nodes = kam . get_nodes ( ) n if ( has_items ( nodes ) ) { n for ( final kam_node node nodes ) { n copy . create_node ( node . get_id ( ) , node . get_function_type ( ) , n node . get_label ( ) ) n } n } n n final collection < kam_edge > edges = kam . get_edges ( ) n if ( has_items ( edges ) ) { n for ( final kam_edge edge edges ) { n final kam_node source = copy . find_node ( edge . get_source_node ( ) n . get_id ( ) ) n final kam_node target = copy . find_node ( edge . get_target_node ( ) n . get_id ( ) ) n n assert source = null n assert target = null n n copy . create_edge ( edge . get_id ( ) , source , n edge . get_relationship_type ( ) , target ) n } n } n n return copy n }	1
Q_677	copy the link kam by create a new link kam_impl instance with	C_677_1	public static string rewrite_generated_binary_resource_debug_url ( string request_path , string content , string binary_servlet_mapping ) { n n / / write the content of the css in the stringwriter n if ( binary_servlet_mapping = = null ) { n binary_servlet_mapping = codstr n } n n / / define the replacement pattern for the generated binary resource n / / ( like jar img / my_img . png ) n string relative_root_url_path = path_normalizer . get_root_relative_path ( request_path ) n string replacement_pattern = path_normalizer n . normalize_path ( codstr + relative_root_url_path + binary_servlet_mapping + codstr ) n n matcher matcher = generated_binary_resource_pattern . matcher ( content ) n n / / rewrite the images define in the classpath , to point to the image n / / servlet n string_buffer result = new string_buffer ( ) n while ( matcher . find ( ) ) { n matcher . append_replacement ( result , replacement_pattern ) n } n matcher . append_tail ( result ) n n return result . to_string ( ) n }	0
Q_677	copy the link kam by create a new link kam_impl instance with	C_677_2	private controllable create_topic_m_bean ( controllable c ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( tc , codstr , new object [ ] { c } ) n topic_impl pp = new topic_impl ( _me , c ) n controllable_map . put ( c , pp ) n try { n dictionary < string , object > properties = new hashtable < string , object > ( ) n properties . put ( codstr , codstr ) n string c_name = c . get_name ( ) n properties . put ( codstr , codstr + c_name ) n service_registration < topic_m_bean > topic_m_bean = ( service_registration < topic_m_bean > ) bcontext . register_service ( topic_m_bean . class . get_name ( ) , pp , properties ) n service_objects . put ( c_name , topic_m_bean ) n } catch ( exception e ) { n sib_tr . exception ( tc , e ) n } n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( tc , codstr , new object [ ] { pp } ) n return pp n n }	0
Q_678	initialize an instance of this class in the servlet_context	C_678_0	public static void init ( servlet_context servlet_context ) n { n page_flow_factories_config factories_bean = config_util . get_config ( ) . get_page_flow_factories ( ) n flow_controller_factory factory = null n n if ( factories_bean = null ) n { n page_flow_factory_config fc_factory_bean = factories_bean . get_page_flow_factory ( ) n factory = ( flow_controller_factory ) factory_utils . get_factory ( servlet_context , fc_factory_bean , flow_controller_factory . class ) n } n n if ( factory = = null ) n factory = new flow_controller_factory ( ) n n factory . reinit ( servlet_context ) n n servlet_context . set_attribute ( context_attr , factory ) n }	1
Q_678	initialize an instance of this class in the servlet_context	C_678_1	protected int run ( string [ ] args ) { n / / parse command line options n command_line line n try { n line = parser . parse ( run_options , args , false ) n evaluate_general_options ( line ) n } n catch ( missing_option_exception e ) { n system . out . println ( e . get_message ( ) ) n print_help_for_run ( ) n return codint n } n catch ( unrecognized_option_exception e ) { n system . out . println ( e . get_message ( ) ) n print_help_for_run ( ) n return codint n } n catch ( exception e ) { n return handle_error ( e ) n } n n / / _ check for help first _ n n if ( print_help ) { n print_help_for_run ( ) n return codint n } n n try { n packaged_program program = build_program ( line ) n if ( program = = null ) { n print_help_for_run ( ) n return codint n } n n client client = get_client ( line ) n if ( client = = null ) { n print_help_for_run ( ) n return codint n } n n int parallelism = _ codint n if ( line . has_option ( parallelism_option . get_opt ( ) ) ) { n string par_string = line . get_option_value ( parallelism_option . get_opt ( ) ) n try { n parallelism = integer . parse_int ( par_string ) n }	0
Q_678	initialize an instance of this class in the servlet_context	C_678_2	protected void generate_title_band ( ) { n log . debug ( codstr ) n jr_design_band band = ( jr_design_band ) get_design ( ) . get_page_header ( ) n int y_offset = codint n n / / if title is not present then subtitle will be ignored n if ( get_report ( ) . get_title ( ) = = null ) n return n n if ( band = null get_design ( ) . is_title_new_page ( ) ) { n / / title and subtitle comes afer the page header n y_offset = band . get_height ( ) n n } else { n band = ( jr_design_band ) get_design ( ) . get_title ( ) n if ( band = = null ) { n band = new jr_design_band ( ) n get_design ( ) . set_title ( band ) n } n } n n jr_design_expression print_when_expression = new jr_design_expression ( ) n print_when_expression . set_value_class ( boolean . class ) n print_when_expression . set_text ( expression_true_when_first_page ) n n jr_design_text_field title = new jr_design_text_field ( ) n jr_design_expression exp = new jr_design_expression ( ) n if ( get_report ( ) . is_title_is_jr_expression ( ) ) { n exp . set_text ( get_report ( ) . get_title ( ) ) n } else { n exp . set_text ( codstr codstr codstr ) n } n exp . set_value_class ( string . class ) n title . set_expression ( exp ) n title . set_width ( get_report (	0
Q_679	this method walk all of the naming chain and allow them to rewrite the code name code parameter	C_679_0	"protected string apply_naming_chain ( string name ) n throws jsp_exception n { n assert ( name = null ) codstr n n list naming_chain = get_naming_chain ( ) n if ( naming_chain = = null ) n return rewrite_name ( name ) n n / / if ( logger . is_debug_enabled ( ) ) n / / logger . debug ( codstr codstr codstr codstr with naming_chain codstr size codstr null codstr rewrite_name codstr + new_name + codstr with i_name_interceptor codstr rewrite result codstr tags_expression_qualifying_failure codstr data_source "" n info . tag_type = get_tag_name ( ) n n / / report the error n register_tag_error ( info ) n return null n } n }"	1
Q_679	this method walk all of the naming chain and allow them to rewrite the code name code parameter	C_679_1	public static void info ( string str ) { n switch ( zap . get_process_type ( ) ) { n case cmdline system . out . println ( str ) break n default / / ignore n } n / / always write to the log n logger . info ( str ) n }	0
Q_679	this method walk all of the naming chain and allow them to rewrite the code name code parameter	C_679_2	override n public string get_full_pred_string ( ) n { n if ( valuetree . get_predicate ( ) = = null ) n { n return codstr n } n string result = valuetree . get_predicate ( ) . to_string ( ) n return result n }	0
Q_680	set the value for this filter	C_680_0	public void set_value ( object value ) { n n if ( logger . is_info_enabled ( ) ( value instanceof java . io . serializable ) ) n logger . info ( codstr ) n n _value = value n }	1
Q_680	set the value for this filter	C_680_1	public static type create_instance ( string name , int max_length , string pattern ) n { n synchronized ( string_pattern_types ) n { n string_pattern_type new_type = new string_pattern_type ( name , max_length , pattern ) n n / / ensure that the named type does not already exist . n string_pattern_type old_type = string_pattern_types . get ( name ) n n if ( ( old_type = null ) old_type . equals ( new_type ) ) n { n throw new illegal_argument_exception ( codstr codstr codstr ) n } n else if ( ( old_type = null ) old_type . equals ( new_type ) ) n { n return old_type n } n else n { n / / add the newly created type to the map of all types . n string_pattern_types . put ( name , new_type ) n n return new_type n } n } n }	0
Q_680	set the value for this filter	C_680_2	protected boolean is_array_json_steno_event ( nullable final marker marker ) { n return marker = null marker . contains ( steno_marker . array_json_marker ) n }	0
Q_681	set label for feature list	C_681_0	public void set_features_list_labels ( map < string , string > features_list_labels ) { n this . features_list_labels = features_list_labels n controller . set_features_list_labels ( features_list_labels ) n }	1
Q_681	set label for feature list	C_681_1	protected void add ( final update_operator op , final string f , final object value , final boolean convert ) { n if ( value = = null ) { n throw new query_exception ( codstr ) n } n n object val = value n path_target path_target = new path_target ( mapper , clazz , f , validate_names ) n mapped_field mf = path_target . get_target ( ) n n if ( convert ) { n if ( update_operator . pull_all . equals ( op ) value instanceof list ) { n val = to_db_obj_list ( mf , ( list < ? > ) value ) n } else { n val = mapper . to_mongo_object ( mf , null , value ) n } n } n n n if ( update_operator . add_to_set_each . equals ( op ) ) { n val = new basic_db_object ( update_operator . each . val ( ) , val ) n } n n add_operation ( op , path_target . translated_path ( ) , val ) n }	0
Q_681	set label for feature list	C_681_2	public void to ( output_stream output_stream ) throws writer_exception { n if ( with_raw ( null = = rows rows . is_empty ( ) ) ) { n throw new writer_exception ( codstr ) n } n if ( excel_type = = excel_type . xlsx ) { n new writer_with2007 ( output_stream ) . write_sheet ( this ) n } n if ( excel_type = = excel_type . xls ) { n new writer_with2003 ( output_stream ) . write_sheet ( this ) n } n if ( excel_type = = excel_type . csv ) { n new writer_with_csv ( output_stream ) . write_sheet ( this ) n } n }	0
Q_682	return the value as array	C_682_0	public json_array get_as_array ( ) { n if ( ( value instanceof json_array ) ) { n json_array val = new json_array ( ) n val . add ( value ) n value = val n } n return ( json_array ) value n }	1
Q_682	return the value as array	C_682_1	override n protected infix_expression create_correct_oddness_check ( ast_rewrite rewrite , expression number_expression ) { n assert . is_not_null ( rewrite ) n assert . is_not_null ( number_expression ) n n final ast ast = rewrite . get_ast ( ) n infix_expression and_oddness_check = ast . new_infix_expression ( ) n parenthesized_expression parenthesized_expression = ast . new_parenthesized_expression ( ) n infix_expression and_expression = ast . new_infix_expression ( ) n n and_expression . set_left_operand ( ( expression ) rewrite . create_move_target ( number_expression ) ) n and_expression . set_operator ( and ) n and_expression . set_right_operand ( ast . new_number_literal ( codstr ) ) n parenthesized_expression . set_expression ( and_expression ) n and_oddness_check . set_left_operand ( parenthesized_expression ) n and_oddness_check . set_operator ( equals ) n and_oddness_check . set_right_operand ( ast . new_number_literal ( codstr ) ) n n return and_oddness_check n n }	0
Q_682	return the value as array	C_682_2	override n public void close ( ) throws io_exception { n if ( m_closed ) { n return n } n n try { n / / this aborts the block if the block is not fully read . n update_block_writer ( m_block_meta . get_block_size ( ) ) n n if ( m_under_file_system_input_stream = null ) { n m_ufs_instream_manager . release ( m_under_file_system_input_stream ) n m_under_file_system_input_stream = null n } n n if ( m_block_writer = null ) { n m_block_writer . close ( ) n } n n m_ufs_resource . close ( ) n } finally { n m_closed = true n } n }	0
Q_683	like link message	C_683_0	public void merge_from ( final field_set < field_descriptor_type > other ) { n for ( int i = codint i < other . fields . get_num_array_entries ( ) i + + ) { n merge_from_field ( other . fields . get_array_entry_at ( i ) ) n } n for ( final map . entry < field_descriptor_type , object > entry n other . fields . get_overflow_entries ( ) ) { n merge_from_field ( entry ) n } n }	1
Q_683	like link message	C_683_1	public void write_to ( packet_output_stream pos ) throws io_exception { n pos . write ( quote ) n if ( length = = long . max_value ) { n pos . write ( reader , true , no_backslash_escapes ) n } else { n pos . write ( reader , length , true , no_backslash_escapes ) n } n pos . write ( quote ) n }	0
Q_683	like link message	C_683_2	public key < byte [ ] > start ( final private_key key ) throws no_such_algorithm_exception , invalid_key_exception { n final signature signature = signature . get_instance ( key . get_algorithm ( ) ) n signature . init_sign ( key ) n final key < byte [ ] > object = new key < byte [ ] > ( ) n consumers . put ( object , new consumer < byte [ ] > ( ) { n public void consume ( final byte_buffer buffer ) { n try { n signature . update ( buffer ) n } catch ( exception e ) { n throw new runtime_exception ( e ) n } n } n public byte [ ] finish ( ) { n try { n return signature . sign ( ) n } catch ( exception e ) { n throw new runtime_exception ( e ) n } n } n } ) n return object n }	0
Q_684	construct a cli command from the give parameter	C_684_0	public static cli_command from ( identifier identifier , list < cli_param > params , command_executor executor ) { n final cli_param_manager param_manager = new cli_param_manager_impl ( params ) n return new cli_command ( identifier , param_manager , executor ) n }	1
Q_684	construct a cli command from the give parameter	C_684_1	public observable < page < user_subscription_quota_inner list_async ( ) { n return list_with_service_response_async ( ) . map ( new func1 < service_response < list < user_subscription_quota_inner , page < user_subscription_quota_inner ( ) { n override n public page < user_subscription_quota_inner > call ( service_response < list < user_subscription_quota_inner response ) { n page_impl1 < user_subscription_quota_inner > page = new page_impl1 < > ( ) n page . set_items ( response . body ( ) ) n return page n } n } ) n }	0
Q_684	construct a cli command from the give parameter	C_684_2	public kie_server_http_request accept ( final string accept ) { n request_info request_info = get_request_info ( ) n if ( request_info . get_header ( accept ) . is_empty ( ) ) { n request_info . set_header ( accept , new array_list < string > ( ) ) n } n request_info . headers . get ( accept ) . set ( codint , accept ) n return this n }	0
Q_685	return the font size express in point	C_685_0	public final float to_point ( ) { n if ( unit = = font_size_unit . pixel ) { n return ( size / codint * codint ) n } n if ( unit = = font_size_unit . em ) { n return ( size * codint ) n } n if ( unit = = font_size_unit . percent ) { n return ( size / codint * codint ) n } n if ( unit = = font_size_unit . point ) { n return size n } n throw new illegal_state_exception ( codstr + unit ) n }	1
Q_685	return the font size express in point	C_685_1	public si_prefix create_si_prefix_from_string ( e_data_type e_data_type , string initial_value ) { n si_prefix result = si_prefix . get ( initial_value ) n if ( result = = null ) n throw new illegal_argument_exception ( codstr codstr codstr codstr codstr ) n return result n }	0
Q_685	return the font size express in point	C_685_2	public class < ? > get_domain_class ( class < ? > to_class ) { n class < ? > declared_class = get_declared_domain_class ( to_class ) n return class_replacer . replace_class ( declared_class ) n }	0
Q_686	get story and defect own by this member	C_686_0	public collection < primary_workitem > get_owned_primary_workitems ( primary_workitem_filter filter ) { n filter = ( filter = null ) ? filter new primary_workitem_filter ( ) n n filter . owners . clear ( ) n filter . owners . add ( this ) n return get_instance ( ) . get ( ) . primary_workitems ( filter ) n }	1
Q_686	get story and defect own by this member	C_686_1	private boolean vulnerabilities_match ( dependency dependency1 , dependency dependency2 ) { n final set < vulnerability > one = dependency1 . get_vulnerabilities ( ) n final set < vulnerability > two = dependency2 . get_vulnerabilities ( ) n return one = null two = null n one . size ( ) = = two . size ( ) n one . contains_all ( two ) n }	0
Q_686	get story and defect own by this member	C_686_2	public e_enum get_ifc_projected_or_true_length_enum ( ) { n if ( ifc_projected_or_true_length_enum_e_enum = = null ) { n ifc_projected_or_true_length_enum_e_enum = ( e_enum ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_projected_or_true_length_enum_e_enum n }	0
Q_687	concatenate element to form a dot name elide any null value or empty string	C_687_0	public string name ( string name , string . names ) { n return com . codahale . metrics . metric_registry . name ( string . format ( codstr , metric_prefix , name ) , names ) n }	1
Q_687	concatenate element to form a dot name elide any null value or empty string	C_687_1	public synchronized void execute_task_with_unified_listener ( non_null download_task task , n non_null download_listener listener ) { n attach_listener ( task , listener ) n n task . execute ( host_listener ) n }	0
Q_687	concatenate element to form a dot name elide any null value or empty string	C_687_2	public audio_format . type get_supported_audio_format ( int index ) { n return audio_format . type . swig_to_enum ( video_jni . codec_get_supported_audio_format ( swig_c_ptr , this , index ) ) n }	0
Q_688	get bulk processor builder	C_688_0	public builder get_bulk_processor_builder ( listener bulk_processor_listener , n integer bulk_actions , byte_size_value byte_size_value , n time_value flush_interval , integer concurrent_requests , n backoff_policy backoff_policy ) { n builder builder = n bulk_processor . builder ( jm_es_client , bulk_processor_listener ) n if_not_null ( bulk_actions , builder set_bulk_actions ) n if_not_null ( byte_size_value , builder set_bulk_size ) n if_not_null ( flush_interval , builder set_flush_interval ) n if_not_null ( concurrent_requests , builder set_concurrent_requests ) n if_not_null ( backoff_policy , builder set_backoff_policy ) n return builder n }	1
Q_688	get bulk processor builder	C_688_1	public e_enum get_ifc_geometric_projection_enum ( ) { n if ( ifc_geometric_projection_enum_e_enum = = null ) { n ifc_geometric_projection_enum_e_enum = ( e_enum ) e_package . registry . instance . get_e_package ( ifc2x3tc1_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_geometric_projection_enum_e_enum n }	0
Q_688	get bulk processor builder	C_688_2	private stmt parse_headless_statement ( enclosing_scope scope ) { n int start = index n n / / see if it is a named block n identifier block_name = parse_optional_identifier ( scope ) n if ( block_name = null ) { n if ( try_and_match ( true , colon ) = null is_at_eol ( ) ) { n int end = index n match_end_line ( ) n scope = scope . new_enclosing_scope ( ) n scope . declare_lifetime ( block_name ) n stmt . block body = parse_block ( scope , false ) n return annotate_source_location ( new stmt . named_block ( block_name , body ) , start ) n } else { n index = start / / backtrack n } n } n / / assignment identifier left_brace star n / / variable decl identifier left_brace left_curly ampersand n / / invoke identifier left_brace star n if ( try_and_match ( false , final ) = null ( skip_type ( scope ) try_and_match ( false , identifier ) = null ) ) { n / / must be a variable declaration as this is the only situation in which a type n / / can be followed by an identifier . n index = start / / backtrack n / / n return parse_variable_declaration ( scope ) n } n / / must be an assignment or invocation n index = start / / backtrack n / / n expr e = parse_expression ( scope , false ) n	0
Q_689	delete bulk doc boolean	C_689_0	public boolean delete_bulk_docs ( string index , string type ) { n return execute_bulk_request ( build_delete_bulk_request_builder ( n build_all_delete_request_builder_list ( index , type ) ) ) . has_failures ( ) n }	1
Q_689	delete bulk doc boolean	C_689_1	private void parse_misc ( ) throws exception { n while ( true ) { n skip_whitespace ( ) n if ( try_read ( start_delim_pi ) ) { n parse_pi ( ) n } else if ( try_read ( start_delim_comment ) ) { n parse_comment ( ) n } else { n return n } n } n }	0
Q_689	delete bulk doc boolean	C_689_2	public t remove_file ( final string name , final list < string > path , final byte [ ] existing_hash , final boolean is_directory ) { n return remove_file ( name , path , existing_hash , is_directory , null ) n }	0
Q_690	return the best_matching policy for the request document	C_690_0	public string get_policy ( string url , date capture_date , date retrieval_date , n string who ) throws robots_unavailable_exception , n rule_oracle_unavailable_exception { n return get_policy ( url , get_rule ( url , capture_date , retrieval_date , who ) ) n }	1
Q_690	return the best_matching policy for the request document	C_690_1	public static date read_date ( final parcel parcel ) { n final byte is_a_date_stored = parcel . read_byte ( ) n return ( is_a_date_stored = = marker_an_element_stored ) ? new date ( parcel . read_long ( ) ) null n }	0
Q_690	return the best_matching policy for the request document	C_690_2	public not_null sub_channel register ( not_null string endpoint , not_null request_handler request_handler ) { n request_handlers . put ( endpoint , request_handler ) n return this n }	0
Q_691	load a yml_file as link map contain key and value where value	C_691_0	suppress_warnings ( codstr ) n public static map < string , object > load_map ( string file_name ) n throws io_exception { n map < string , object > yml_map = load_as ( file_name , hash_map . class ) n if ( yml_map = = null ) { n return new hash_map < string , object > ( ) n } n return yml_map n }	1
Q_691	load a yml_file as link map contain key and value where value	C_691_1	public static bitmap apply_color ( bitmap bitmap , int accent_color ) { n int r = color . red ( accent_color ) n int g = color . green ( accent_color ) n int b = color . blue ( accent_color ) n n int width = bitmap . get_width ( ) n int height = bitmap . get_height ( ) n int [ ] pixels = new int [ width * height ] n bitmap . get_pixels ( pixels , codint , width , codint , codint , width , height ) n n for ( int i = codint i < pixels . length i + + ) { n int color = pixels [ i ] n int alpha = color . alpha ( color ) n pixels [ i ] = color . argb ( alpha , r , g , b ) n } n return bitmap . create_bitmap ( pixels , width , height , bitmap . config . argb_8888 ) n }	0
Q_691	load a yml_file as link map contain key and value where value	C_691_2	public static api_body_metadata map_schema_to_pojo ( raml_root document , string schema , string base_package , string name , n string schema_location ) { n string resolved_name = null n string schema_name = schema n n / / check if we have the name of a schema or an actual schema n string resolved_schema = schema_helper . resolve_schema ( schema , document ) n if ( resolved_schema = = null ) { n resolved_schema = schema n schema_name = null n } n n / / extract name from schema n resolved_name = extract_name_from_schema ( resolved_schema , schema_name , name ) n j_code_model code_model = build_body_j_code_model ( base_package , string_utils . has_text ( schema_location ) ? schema_location codstr , n resolved_name , resolved_schema , null ) n if ( code_model = null ) { n if ( code_model . count_artifacts ( ) = = codint ) { n try { n / / checking has next twice might be more efficient but this n / / is more readable , if n / / we ever run into speed issues here . optimise n iterator < j_package > packages = code_model . packages ( ) n n / / in the case that we have empty packages we need to skip n / / them to get to the n / / class n j_package next_package = packages . next ( ) n while ( next_package . classes ( ) . has_next ( ) packages . has_next ( ) ) {	0
Q_692	return true if the specify object equal at least one of the specify other object	C_692_0	deprecated n public static boolean equals_one ( object _obj , object . _arr_obj ) { n return compare_util . equals_one ( _obj , _arr_obj ) n }	1
Q_692	return true if the specify object equal at least one of the specify other object	C_692_1	public void assert_topmost_element ( by by ) { n if ( is_topmost_element_check_applicable ( by ) ) { n logger . warn ( codstr { } codstr n + codstr n + codstr , by ) n return n } n logger . info ( codstr { } codstr , by ) n web_element topmost_element = find_topmost_element ( by ) n web_element element = find_element ( by ) n if ( element . equals ( topmost_element ) ) { n throw new assertion_error ( format ( codstr s codstr s codstr s codstr , n outer_html_preview ( element ) , by , outer_html_preview ( topmost_element ) ) ) n } n }	0
Q_692	return true if the specify object equal at least one of the specify other object	C_692_2	public string check_messaging_connection_for_the_dm ( string message ) n throws debug_ws_exception { n n this . logger . finer ( codstr + message ) n n web_resource path = this . resource . path ( url_constants . debug ) . path ( codstr ) n if ( message = null ) n path = path . query_param ( codstr , message ) n n client_response response = this . ws_client . create_builder ( path ) . get ( client_response . class ) n if ( family . successful = response . get_status_info ( ) . get_family ( ) ) { n string value = response . get_entity ( string . class ) n this . logger . finer ( response . get_status_info ( ) + codstr + value ) n throw new debug_ws_exception ( response . get_status_info ( ) . get_status_code ( ) , value ) n } n n this . logger . finer ( string . value_of ( response . get_status_info ( ) ) ) n return response . get_entity ( string . class ) n }	0
Q_693	create new link overrider implementation instance base on default statement handler	C_693_0	public static overrider get_default_overrider ( ) { n overrider result = null n n class < overrider > clazz = instance ( ) . default_overrider n n try { n result = clazz . new_instance ( ) n } catch ( instantiation_exception e ) { n throw new mjdbc_runtime_exception ( error_or_init_failed , e ) n } catch ( illegal_access_exception e ) { n throw new mjdbc_runtime_exception ( error_or_init_failed , e ) n } n n return result n }	1
Q_693	create new link overrider implementation instance base on default statement handler	C_693_1	public static string resolve ( string rb_and_property , object [ ] args ) { n string value = common ( ) . resolve0 ( rb_and_property ) n return message_format . format ( value , args ) n }	0
Q_693	create new link overrider implementation instance base on default statement handler	C_693_2	public static elk_timer get_named_timer ( string timer_name , int todo_flags ) { n return get_named_timer ( timer_name , todo_flags , thread . current_thread ( ) n . get_id ( ) ) n }	0
Q_694	set the authorization header for the request	C_694_0	public request authorization ( string authorization_value ) { n final string authorization = request_header_fields . authorization . get_name ( ) n return this . set_header ( authorization , authorization_value ) n }	1
Q_694	set the authorization header for the request	C_694_1	unbind ( id = codstr ) n void unbind_importer_service ( service_reference < importer_service > service_reference ) { n n log . debug ( linker_name + codstr + importers_manager . get_declaration_binder ( service_reference ) ) n synchronized ( lock ) { n importers_manager . remove_links ( service_reference ) n importers_manager . remove ( service_reference ) n } n }	0
Q_694	set the authorization header for the request	C_694_2	public void notify_error ( url resource , string message ) n { n m_out . println ( resource . to_external_form ( ) + codstr + message ) n }	0
Q_695	check that the texture be of a depth stencil_renderable format	C_695_0	public static void check_depth_stencil_renderable_texture2_d ( n final jcgl_texture_format t ) n throws jcgl_exception_format_error n { n if ( is_depth_renderable ( t ) n is_stencil_renderable ( t ) ) { n return n } n n final string m = n string . format ( codstr , t ) n assert m = null n throw new jcgl_exception_format_error ( m ) n }	1
Q_695	check that the texture be of a depth stencil_renderable format	C_695_1	target_api ( build . version_codes . kitkat ) n public static boolean has_consumer_ir_feature ( context context ) { n return has_consumer_ir_feature ( context . get_package_manager ( ) ) n }	0
Q_695	check that the texture be of a depth stencil_renderable format	C_695_2	public final user_managed_cache_builder < k , v , t > with_class_loader ( class_loader class_loader ) { n if ( class_loader = = null ) { n throw new null_pointer_exception ( codstr ) n } n user_managed_cache_builder < k , v , t > other_builder = new user_managed_cache_builder < > ( this ) n other_builder . class_loader = class_loader n return other_builder n }	0
Q_696	release the lock	C_696_0	public void unlock ( ) { n array_list < runnable > list n thread t = thread . current_thread ( ) n synchronized ( this ) { n if ( t = locking_thread ) return n if ( _ locked_times > codint ) return n locking_thread = null n list = listeners n listeners = null n } n if ( list = null ) { n for ( runnable r list ) r . run ( ) n } n / / notify after listeners n synchronized ( this ) { n this . notify_all ( ) n } n }	1
Q_696	release the lock	C_696_1	public void marshall ( generic_revision_info generic_revision_info , protocol_marshaller protocol_marshaller ) { n n if ( generic_revision_info = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( generic_revision_info . get_description ( ) , description_binding ) n protocol_marshaller . marshall ( generic_revision_info . get_deployment_groups ( ) , deploymentgroups_binding ) n protocol_marshaller . marshall ( generic_revision_info . get_first_used_time ( ) , firstusedtime_binding ) n protocol_marshaller . marshall ( generic_revision_info . get_last_used_time ( ) , lastusedtime_binding ) n protocol_marshaller . marshall ( generic_revision_info . get_register_time ( ) , registertime_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_696	release the lock	C_696_2	void write_index ( filer filer ) { n standard_location location = standard_location . source_output n file_object index_file n try { n index_file = filer . create_resource ( location , codstr , n env_file ) n output_stream fos = index_file . open_output_stream ( ) n print_writer out = new print_writer ( fos ) n / / dump converters n out . println ( begin_converters ) n for ( converter_model converter converters ) { n converter . write_to_index ( out ) n } n out . println ( end_converters ) n / / dump databases n for ( database_model db_model db_models . values ( ) ) { n db_model . write_to_index ( out ) n } n out . close ( ) n } catch ( io_exception e ) { n throw new runtime_exception ( e ) n } n }	0
Q_697	transform a content spec datasource entity into a generic content spec object	C_697_0	public static content_spec transform ( final content_spec_wrapper spec , final data_provider_factory provider_factory , n final boolean include_checksum ) { n / / local variables that are used to map transformed content n map < integer , node > nodes = new hash_map < integer , node > ( ) n map < string , spec_topic > topic_targets = new hash_map < string , spec_topic > ( ) n list < cs_node_wrapper > relationship_from_nodes = new array_list < cs_node_wrapper > ( ) n list < process > processes = new array_list < process > ( ) n n / / start the transformation n final content_spec content_spec = new content_spec ( ) n n content_spec . set_id ( spec . get_id ( ) ) n transform_global_options ( spec , content_spec ) n n / / add all the levels / topics n boolean locale_found = false n if ( spec . get_children ( ) = null ) { n final list < cs_node_wrapper > child_nodes = spec . get_children ( ) . get_items ( ) n final hash_map < cs_node_wrapper , node > level_nodes = new hash_map < cs_node_wrapper , node > ( ) n for ( final cs_node_wrapper child_node child_nodes ) { n if ( child_node . get_node_type ( ) = = common_constants . cs_node_topic ) { n final spec_topic topic = transform_spec_topic ( child_node , nodes , topic_targets , relationship_from_nodes ) n level_nodes . put ( child_node , topic ) n } else if ( child_node . get_node_type	1
Q_697	transform a content spec datasource entity into a generic content spec object	C_697_1	public int update_id ( database_connection database_connection , t data , id new_id , object_cache object_cache ) n throws sql_exception { n if ( mapped_update_id = = null ) { n mapped_update_id = mapped_update_id . build ( dao , table_info ) n } n int result = mapped_update_id . execute ( database_connection , data , new_id , object_cache ) n if ( dao = null local_is_in_batch_mode . get ( ) ) { n dao . notify_changes ( ) n } n return result n }	0
Q_697	transform a content spec datasource entity into a generic content spec object	C_697_2	public static < item extends i_item > void attach_to_view ( final event_hook < item > event , final recycler_view . view_holder view_holder , view view ) { n if ( event instanceof click_event_hook ) { n view . set_on_click_listener ( new view . on_click_listener ( ) { n override n public void on_click ( view v ) { n / / get the adapter for this view n object tag_adapter = view_holder . item_view . get_tag ( r . id . fastadapter_item_adapter ) n if ( tag_adapter instanceof fast_adapter ) { n fast_adapter < item > adapter = ( fast_adapter < item > ) tag_adapter n / / we get the adapter_position from the view_holder n int pos = adapter . get_holder_adapter_position ( view_holder ) n / / make sure the click was done on a valid item n if ( pos = recycler_view . no_position ) { n item item = adapter . get_item ( pos ) n if ( item = null ) { n / / we update our item with the changed property n ( ( click_event_hook < item > ) event ) . on_click ( v , pos , adapter , item ) n } n } n } n } n } ) n } else if ( event instanceof long_click_event_hook ) { n view . set_on_long_click_listener ( new view . on_long_click_listener ( ) { n override n public boolean on_long_click ( view v ) { n / / get the adapter for	0
Q_698	set up the key area	C_698_0	public void setup_keys ( ) n { n key_area_info key_area = null n key_area = new key_area_info ( this , constants . unique , id_key ) n key_area . add_key_field ( id , constants . ascending ) n key_area = new key_area_info ( this , constants . not_unique , class_name_key ) n key_area . add_key_field ( class_name , constants . ascending ) n key_area . add_key_field ( sequence_no , constants . ascending ) n }	1
Q_698	set up the key area	C_698_1	public static multi_polygon remove_holes_multi_polygon ( multi_polygon multi_polygon ) { n int num = multi_polygon . get_num_geometries ( ) n polygon [ ] polygons = new polygon [ num ] n for ( int i = codint i < num i + + ) { n polygons [ i ] = remove_holes_polygon ( ( polygon ) multi_polygon . get_geometry_n ( i ) ) n } n return multi_polygon . get_factory ( ) . create_multi_polygon ( polygons ) n }	0
Q_698	set up the key area	C_698_2	public soy_sauce compile_templates ( map < string , supplier < object plugin_instances ) { n reset_error_reporter ( ) n disallow_external_calls ( ) n server_compilation_primitives primitives = compile_for_server_rendering ( ) n throw_if_errors_present ( ) n soy_sauce sauce = do_compile_soy_sauce ( primitives , plugin_instances ) n n report_warnings ( ) n return sauce n }	0
Q_699	fluent factory method	C_699_0	public static < s , t > convert < s , t > to ( typed < t > target_type , position . readable < s > source_position ) { n return new convert < > ( source_position , target_type . get_type ( ) ) n }	1
Q_699	fluent factory method	C_699_1	"public static void check_directory ( file directory ) { n if ( ( directory . exists ( ) directory . mkdirs ( ) ) ) { n throw new report_generation_exception ( n string . format ( codstr t create data directory < s > "" , directory . get_absolute_path ( ) ) n ) n } n }"	0
Q_699	fluent factory method	C_699_2	public void replace ( file file , boolean preserve_external_file_name , string text ) { n string path = entries . contains_key ( file ) ? entries . remove ( file ) zip_path_for ( file , preserve_external_file_name ) n entries . put ( text , path ) n }	0
Q_700	return an instance configure as link therian standard link therian_module s discover use the	C_700_0	public static synchronized therian using_discovered_modules ( ) { n if ( using_discovered_modules = = null ) { n final list < therian_module > modules = new array_list < > ( ) n modules . add ( default_module ) n for ( therian_module module service_loader . load ( therian_module . class ) ) { n modules . add ( module ) n } n using_discovered_modules = new therian ( modules . to_array ( new therian_module [ modules . size ( ) ] ) ) n } n return using_discovered_modules n }	1
Q_700	return an instance configure as link therian standard link therian_module s discover use the	C_700_1	override n public void write ( byte_appendable os , char ch ) n throws io_exception n { n if ( ch < codint ) { n os . write ( ch ) n } n else if ( ch < codint ) { n os . write ( ( codint + ( ch codint ) ) ) n os . write ( ( codint + ( ch codint ) ) ) n } n else { n os . write ( ( codint + ( ch codint ) ) ) n os . write ( ( codint + ( ( ch codint ) codint ) ) ) n os . write ( ( codint + ( ch codint ) ) ) n } n }	0
Q_700	return an instance configure as link therian standard link therian_module s discover use the	C_700_2	public static int get_data_plane_size_needed ( int num_samples , int num_channels , audio_format . type format ) { n return video_jni . audio_format_get_data_plane_size_needed ( num_samples , num_channels , format . swig_value ( ) ) n }	0
Q_701	switch execute thread	C_701_0	public m switch_to ( k to , m msg ) n { n do_fork ( to , msg ) n return do_join ( ) n }	1
Q_701	switch execute thread	C_701_1	override n public byte read_byte ( ) throws jms_exception { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( this , tc , codstr ) n n try { n / / check that we are in read mode n check_body_readable ( codstr ) n if ( requires_init ) n lazy_init_for_reading ( ) n n / / read the byte from the input stream n byte byte_read = read_stream . read_byte ( ) / / read the byte n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( this , tc , codstr , byte_read ) n return byte_read n } catch ( io_exception e ) { n jms_exception jmse = ( jms_exception ) jms_error_utils . new_throwable ( n message_eof_exception . class , n codstr , n null , n tc ) n jmse . init_cause ( e ) n throw jmse n } n }	0
Q_701	switch execute thread	C_701_2	public byte [ ] unsafe_bitcoin_serialize ( ) { n / / codint st attempt to use a cached array . n if ( payload = null ) { n if ( offset = = codint length = = payload . length ) { n / / cached byte array is the entire message with no extras so we can return as is and avoid an array n / / copy . n return payload n } n n byte [ ] buf = new byte [ length ] n system . arraycopy ( payload , offset , buf , codint , length ) n return buf n } n n / / no cached array available so serialize parts by stream . n byte_array_output_stream stream = new unsafe_byte_array_output_stream ( length < codint ? codint length + codint ) n try { n bitcoin_serialize_to_stream ( stream ) n } catch ( io_exception e ) { n / / cannot happen , we are serializing to a memory stream . n } n n if ( serializer . is_parse_retain_mode ( ) ) { n / / a free set of steak knives n / / if there happens to be a call to this method we gain an opportunity to recache n / / the byte array and in this case it contains no bytes from parent messages . n / / this give a dual benefit . releasing references to the larger byte array so that it n / / it	0
Q_702	get this task be environment	C_702_0	public environment get_environment ( ) n { n environment env = ( ( base_application ) this . get_application ( ) ) . get_environment ( ) n if ( env = = null ) n env = environment . get_environment ( null ) / / never n return env n }	1
Q_702	get this task be environment	C_702_1	public final upload_notification_config set_icon_color_for_all_statuses ( int icon_color_resource_id ) { n progress . icon_color_resource_id = icon_color_resource_id n completed . icon_color_resource_id = icon_color_resource_id n error . icon_color_resource_id = icon_color_resource_id n cancelled . icon_color_resource_id = icon_color_resource_id n return this n }	0
Q_702	get this task be environment	C_702_2	null_safe n public static < t > t [ ] shuffle ( t [ ] array ) { n n if ( is_not_empty ( array ) ) { n n random random = new random ( system . current_time_millis ( ) ) n n for ( int index = codint , length_minus_one = array . length _ codint index < length_minus_one index + + ) { n n int random_index = ( random . next_int ( length_minus_one _ index ) + codint ) n n swap ( array , index , index + random_index ) n } n } n n return array n }	0
Q_703	return true if intersection be not empty	C_703_0	public static final < t > boolean intersect ( collection < set < t sets ) n { n set < t > set = intersection ( sets ) n return set . is_empty ( ) n }	1
Q_703	return true if intersection be not empty	C_703_1	public boolean write_xml ( query_capability dqc , string filename ) { n try { n buffered_output_stream os = new buffered_output_stream ( new file_output_stream ( filename ) ) n write_xml ( dqc , os ) n os . close ( ) n } catch ( io_exception e ) { n e . print_stack_trace ( ) n return false n } n return true n }	0
Q_703	return true if intersection be not empty	C_703_2	builder to_builder ( ) { n builder builder = n builder ( ) n . set_id ( get_id ( ) ) n . set_is_hidden ( is_hidden ( ) ) n . set_parts ( get_parts ( ) ) n . add_all_source_locations ( get_source_locations ( ) ) n . set_is_plrsel_msg ( is_plrsel_msg ( ) ) n if ( get_locale_string ( ) = null ) { n builder . set_locale_string ( get_locale_string ( ) ) n } n if ( get_meaning ( ) = null ) { n builder . set_meaning ( get_meaning ( ) ) n } n if ( get_desc ( ) = null ) { n builder . set_desc ( get_desc ( ) ) n } n if ( get_alt_id ( ) = _ codint ) { n builder . set_alt_id ( get_alt_id ( ) ) n } n if ( get_content_type ( ) = null ) { n builder . set_content_type ( get_content_type ( ) ) n } n return builder n }	0
Q_704	split out because episode map method be too complex for intellij	C_704_0	suppress_warnings ( { codstr } ) n private map < string , string > build_episode_map ( string [ ] show_ids , string [ ] episode_ids , string search_term , n search_type search_type , tag_mode tag_mode , episode . episode_status status , n sort_by sort_by , sort_dir sort_dir , boolean include_views , integer page , n integer per_page , integer embed_width , integer embed_height ) { n map < string , string > map = new hash_map < string , string > ( ) n map . put ( codstr , expires ( ) ) n if ( show_ids = null ) map . put ( codstr , join ( show_ids ) ) n if ( episode_ids = null ) map . put ( codstr , join ( episode_ids ) ) n if ( search_term = null ) map . put ( codstr , search_type . name ( ) ) n if ( tag_mode = null ) map . put ( codstr , tag_mode . name ( ) ) n if ( status = null ) map . put ( codstr , status . name ( ) ) n if ( sort_by = null ) map . put ( codstr , sort_by . name ( ) ) n if ( sort_dir = null ) map . put ( codstr , sort_dir . name ( ) ) n if ( include_views = null ) map . put ( codstr , include_views . to_string ( ) ) n if ( page =	1
Q_704	split out because episode map method be too complex for intellij	C_704_1	nonnull n public static key_value_sink < symbol , byte [ ] > for_pal_db ( final file db_file , n final boolean compress_values ) n throws io_exception { n return pal_db_key_value_sink . for_file ( db_file , compress_values ) n }	0
Q_704	split out because episode map method be too complex for intellij	C_704_2	static double determine_scale ( view base , motion edge ) n throws exception n { n view view_a = edge . view_src n view view_b = edge . view_dst n n boolean base_is_a = base = = view_a n n / / determine the scale factor difference n point3_d_f64 world_in_base3_d = new point3_d_f64 ( ) n point3_d_f64 local_in_base3_d = new point3_d_f64 ( ) n grow_queue_f64 scales = new grow_queue_f64 ( ) n for ( int i = codint i < edge . stereo_triangulations . size ( ) i + + ) { n / / get the feature as triangulated in this edge . n feature3_d edge3_d = edge . stereo_triangulations . get ( i ) n n int index_src = edge3_d . obs_idx . get ( codint ) n int index_dst = edge3_d . obs_idx . get ( codint ) n n feature3_d world3_d = base_is_a ? view_a . features3_d [ index_src ] view_b . features3_d [ index_dst ] n if ( world3_d = = null ) n continue n / / find the world point in the local coordinate system n se_point_ops_f64 . transform_reverse ( base . view_to_world , world3_d . world_pt , world_in_base3_d ) n n / / put this point into the base frame n if ( base_is_a ) { n se_point_ops_f64 . transform ( edge . a_to_b , edge3_d . world_pt , local_in_base3_d ) n } else { n local_in_base3_d . set ( edge3_d . world_pt ) n } n n scales . add	0
Q_705	get the table name	C_705_0	public string get_table_names ( boolean b_add_quotes ) n { n return ( m_table_name = = null ) ? record . format_table_names ( user_log_type_file , b_add_quotes ) super . get_table_names ( b_add_quotes ) n }	1
Q_705	get the table name	C_705_1	public static type_category get_category ( type_repository type_repository , string type_name ) { n try { n class < ? > type = type_repository . load_class ( type_name ) n if ( type . is_interface ( ) ) { n return type_category . interface n } else if ( type . is_enum ( ) ) { n return type_category . enum n } else { n if ( modifier . is_abstract ( type . get_modifiers ( ) ) ) { n return type_category . abstract_class n } else { n return type_category . class n } n } n } catch ( class_not_found_exception e ) { n log . warn ( codstr + type_name + codstr ) n return null n } n }	0
Q_705	get the table name	C_705_2	public static uri get_local_base_uri ( ) { n inet_address local_addr n string addr n try { n local_addr = inet_address . get_local_host ( ) n addr = local_addr . get_host_address ( ) n } catch ( unknown_host_exception e ) { n logger . warn ( codstr localhost codstr ) n addr = codstr n } n return uri_builder . from_uri ( codstr + addr + codstr ) . port ( default_port ) . build ( ) n }	0
Q_706	tell whether all character in a string be digit or letter	C_706_0	public static boolean is_alpha_numeric ( string in ) { n char c = codint n for ( int i = in . length ( ) i > codint i _ ) { n c = in . char_at ( i _ codint ) n if ( character . is_letter_or_digit ( c ) ) { n return false n } n } n return true n }	1
Q_706	tell whether all character in a string be digit or letter	C_706_1	public void marshall ( api api , protocol_marshaller protocol_marshaller ) { n n if ( api = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( api . get_api_endpoint ( ) , apiendpoint_binding ) n protocol_marshaller . marshall ( api . get_api_id ( ) , apiid_binding ) n protocol_marshaller . marshall ( api . get_api_key_selection_expression ( ) , apikeyselectionexpression_binding ) n protocol_marshaller . marshall ( api . get_created_date ( ) , createddate_binding ) n protocol_marshaller . marshall ( api . get_description ( ) , description_binding ) n protocol_marshaller . marshall ( api . get_disable_schema_validation ( ) , disableschemavalidation_binding ) n protocol_marshaller . marshall ( api . get_name ( ) , name_binding ) n protocol_marshaller . marshall ( api . get_protocol_type ( ) , protocoltype_binding ) n protocol_marshaller . marshall ( api . get_route_selection_expression ( ) , routeselectionexpression_binding ) n protocol_marshaller . marshall ( api . get_version ( ) , version_binding ) n protocol_marshaller . marshall ( api . get_warnings ( ) , warnings_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_706	tell whether all character in a string be digit or letter	C_706_2	public void update_user ( user_update update ) { n get_resource_factory ( ) . get_api_resource ( codstr ) n . entity ( update , media_type . application_json_type ) . put ( ) n }	0
Q_707	get the conversion map	C_707_0	public string [ ] [ ] get_popup_map ( ) n { n string string [ ] [ ] = { n { codstr , codstr } , n { menu_constants . help_pane , codstr } , n { menu_constants . help_web , codstr } , n { menu_constants . help_window , codstr } , n } n return string n }	1
Q_707	get the conversion map	C_707_1	public void move_sql_to_field ( result_set resultset , int i_column ) throws sql_exception n { n boolean b_result = false n if ( db_constants . true . equals ( this . get_record ( ) . get_table ( ) . get_database ( ) . get_properties ( ) . get ( sql_params . bit_type_supported ) ) ) n b_result = resultset . get_boolean ( i_column ) n else n b_result = resultset . get_byte ( i_column ) = = codint ? false true n if ( resultset . was_null ( ) ) n this . set_string ( constants . blank , false , db_constants . read_move ) / / null value n else n this . set_state ( b_result , false , db_constants . read_move ) n }	0
Q_707	get the conversion map	C_707_2	override n public e_class get_ifc_reinforcement_bar_properties ( ) { n if ( ifc_reinforcement_bar_properties_e_class = = null ) { n ifc_reinforcement_bar_properties_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) n . get_e_classifiers ( ) . get ( codint ) n } n return ifc_reinforcement_bar_properties_e_class n }	0
Q_708	add full new case for the argument that be of specific class	C_708_0	nonnull n public < v1 extends t1 , v2 extends t2 , v3 extends t3 > l_to_int_tri_function_builder < t1 , t2 , t3 > a_case ( class < v1 > arg_c1 , class < v2 > arg_c2 , class < v3 > arg_c3 , l_to_int_tri_function < v1 , v2 , v3 > function ) { n partial_case_with_int_product . the pc = partial_case_factory_method ( ( a1 , a2 , a3 ) _ > ( arg_c1 = = null arg_c1 . is_instance ( a1 ) ) ( arg_c2 = = null arg_c2 . is_instance ( a2 ) ) ( arg_c3 = = null arg_c3 . is_instance ( a3 ) ) ) n n pc . evaluate ( function ) n return self ( ) n }	1
Q_708	add full new case for the argument that be of specific class	C_708_1	override n public commerce_tax_method fetch_by_primary_key ( serializable primary_key ) { n serializable serializable = entity_cache . get_result ( commerce_tax_method_model_impl . entity_cache_enabled , n commerce_tax_method_impl . class , primary_key ) n n if ( serializable = = null_model ) { n return null n } n n commerce_tax_method commerce_tax_method = ( commerce_tax_method ) serializable n n if ( commerce_tax_method = = null ) { n session session = null n n try { n session = open_session ( ) n n commerce_tax_method = ( commerce_tax_method ) session . get ( commerce_tax_method_impl . class , n primary_key ) n n if ( commerce_tax_method = null ) { n cache_result ( commerce_tax_method ) n } n else { n entity_cache . put_result ( commerce_tax_method_model_impl . entity_cache_enabled , n commerce_tax_method_impl . class , primary_key , null_model ) n } n } n catch ( exception e ) { n entity_cache . remove_result ( commerce_tax_method_model_impl . entity_cache_enabled , n commerce_tax_method_impl . class , primary_key ) n n throw process_exception ( e ) n } n finally { n close_session ( session ) n } n } n n return commerce_tax_method n }	0
Q_708	add full new case for the argument that be of specific class	C_708_2	protected static prepared_statement create_by_iterator ( connection conn , string sql , iterator < ? > parameters ) throws sql_exception { n prepared_statement ps = conn . prepare_statement ( sql ) n if ( parameters = null ) { n int index = codint n while ( parameters . has_next ( ) ) { n object parameter = parameters . next ( ) n if ( parameter = = null ) { n ps . set_object ( index , null ) n } else { n ps . set_object ( index , parameter ) n } n index + + n } n } n return ps n }	0
Q_709	swap the element of two char array at the same position	C_709_0	public static void swap ( char [ ] char_array1 , char [ ] char_array2 , int index ) { n xor_swap . swap ( char_array1 , index , char_array2 , index ) n }	1
Q_709	swap the element of two char array at the same position	C_709_1	private void design_trapezium_pipe ( double tau , double g , double maxd , double c , string_builder str_warnings ) { n / * [ cm ] base della sezione effettivamente adottata . * / n double base n / * n * [ ] pendenza naturale , calcolata in funzione dei dati geometrici n * della rete n * / n double natural_slope n / * [ cm ] altezza del canale trapezoidale . * / n double d n / * n * [ ] pendenza minima da adottare per il tratto che si sta n * dimensionando . n * / n double ms n n / * due formule * / n n / * n * dimensiona il diametro del tubo da adottare col criterio di n * autopulizia , calcola altre grandezze correlate come la pendenza e il n * grado di riempimento , e restituisce il riempimento effettivo nel n * tratto progettato n * / n base = get_height2 ( tau , g , maxd , c ) n n / * [ ] pendenza minima per il tratto che si sta dimensionando . * / n ms = get_minimum_pipe_slope ( ) n / * [ ] pendenza del terreno * / n natural_slope = meter2_cm * ( initial_elevation _ final_elevation ) / lenght n n / * n * avvisa l codstr trento_p . warning . slope codstr inizio del tubo [ m s . l . m . ] n	0
Q_709	swap the element of two char array at the same position	C_709_2	public object create ( string url ) n throws malformed_url_exception , class_not_found_exception n { n hessian_meta_info_api meta_info n n meta_info = ( hessian_meta_info_api ) create ( hessian_meta_info_api . class , url ) n n string api_class_name = n ( string ) meta_info . _hessian_get_attribute ( codstr ) n n if ( api_class_name = = null ) n throw new hessian_runtime_exception ( url + codstr ) n n class < ? > api_class = class . for_name ( api_class_name , false , _loader ) n n return create ( api_class , url ) n }	0
Q_710	initialize this class	C_710_0	public void init ( object parent , object record ) n { n if ( parent instanceof base_applet ) n m_str_init_param = ( ( base_applet ) parent ) . get_property ( params . menu ) n super . init ( parent , record ) n }	1
Q_710	initialize this class	C_710_1	private static map < variable , type > get_label_var_type_map ( transaction_oltp tx , set < fragment > all_fragments ) { n map < variable , type > label_var_type_map = new hash_map < > ( ) n all_fragments . stream ( ) n . filter ( label_fragment . class is_instance ) n . for_each ( fragment _ > { n / / todo labels ( ) should return one label instead of a set n schema_concept schema_concept = tx . get_schema_concept ( n iterators . get_only_element ( ( ( label_fragment ) fragment ) . labels ( ) . iterator ( ) ) ) n if ( schema_concept = null schema_concept . is_role ( ) schema_concept . is_rule ( ) ) { n label_var_type_map . put ( fragment . start ( ) , schema_concept . as_type ( ) ) n } n } ) n return label_var_type_map n }	0
Q_710	initialize this class	C_710_2	suppress_warnings ( codstr ) n override n public e_list < long > get_ref_longitude ( ) { n return ( e_list < long > ) e_get ( ifc4_package . literals . ifc_site_ref_longitude , true ) n }	0
Q_711	turn a long value into an array of byte contain the compact_int	C_711_0	public static byte [ ] to_bytes ( long value ) { n if ( is_less_than ( value , codint ) ) { n return new byte [ ] { ( byte ) value } n } else if ( is_less_than ( value , codint ) ) { n return new byte [ ] { ( byte ) codint , ( byte ) ( value ) , ( byte ) ( value codint ) } n } else if ( is_less_than ( value , codint ) ) { n byte [ ] bytes = new byte [ codint ] n bytes [ codint ] = ( byte ) codint n bit_utils . uint32_to_byte_array_le ( value , bytes , codint ) n return bytes n } else { n byte [ ] bytes = new byte [ codint ] n bytes [ codint ] = ( byte ) codint n bit_utils . uint32_to_byte_array_le ( value , bytes , codint ) n bit_utils . uint32_to_byte_array_le ( value codint , bytes , codint ) n return bytes n } n }	1
Q_711	turn a long value into an array of byte contain the compact_int	C_711_1	int pcode_dpa ( byte_buffer bos , int pos , int hoff , int hedsiz , boolean is_z , int slayer , int code ) n { n byte [ ] b2 = new byte [ codint ] n int soff n array_list dims = new array_list ( ) n bos . position ( pos ) n bos . get ( b2 , codint , codint ) / / reserved n bos . get ( b2 , codint , codint ) / / reserved n n bos . get ( b2 , codint , codint ) n short num_box = ( short ) get_int ( b2 , codint ) n bos . get ( b2 , codint , codint ) n short num_row = ( short ) get_int ( b2 , codint ) n soff = codint n n num_y0 = codint n num_x0 = codint n num_x = num_box n num_y = num_row n if ( slayer = = codint ) { n dimension j_dim = new dimension ( codstr , num_y ) n dimension i_dim = new dimension ( codstr , num_x ) n ncfile . add_dimension ( null , i_dim ) n ncfile . add_dimension ( null , j_dim ) n dims . add ( j_dim ) n dims . add ( i_dim ) n variable v = new variable ( ncfile , null , null , cname + codstr + slayer ) n v . set_data_type ( data_type . short ) n v . set_dimensions (	0
Q_711	turn a long value into an array of byte contain the compact_int	C_711_2	public static < t extends comparable < ? super t list < t > max_list ( iterable < t > iterable ) n { n return max_list ( iterable , new comparator < t > ( ) { n public int compare ( t o1 , t o2 ) { n return o1 . compare_to ( o2 ) n } n } ) n }	0
Q_712	merge all word number collector bundle	C_712_0	public word_number_collector_bundle merge_all ( n list < word_number_collector_bundle > word_number_collector_list ) { n for ( word_number_collector_bundle word_number_collector word_number_collector_list ) n merge ( word_number_collector ) n return this n } n n n / * * n * gets word collector . n * n * return the word collector n * / n public word_item_collector get_word_collector ( ) { return this . word_collector } n n / * * n * gets number collector . n * n * return the number collector n * / n public number_item_collector get_number_collector ( ) { return this . number_collector } n n override n public string to_string ( ) { n return codstr + codstr codstr codstr + codstr + word_collector + n codstr + number_collector + codstr n } n }	1
Q_712	merge all word number collector bundle	C_712_1	public list < transaction > get_address_transactions ( string address , int limit ) throws io_exception { n return get_address_transactions ( address , limit , null ) n }	0
Q_712	merge all word number collector bundle	C_712_2	public string get_field ( string name ) { n if ( xfa . is_xfa_present ( ) ) { n name = xfa . find_field_name ( name , this ) n if ( name = = null ) n return null n name = xfa_form . xml2_som . get_short_name ( name ) n return xfa_form . get_node_text ( xfa . find_datasets_node ( name ) ) n } n item item = ( item ) fields . get ( name ) n if ( item = = null ) n return null n last_was_string = false n pdf_dictionary merged_dict = item . get_merged ( codint ) n n / / jose a . rodriguez posted a fix to the mailing list ( may codint , codint ) n / / explaining that the value can also be a stream value n / / the fix was made against an old i_text version . bruno adapted it . n pdf_object v = pdf_reader . get_pdf_object ( merged_dict . get ( pdf_name . v ) ) n if ( v = = null ) n return codstr n if ( v instanceof pr_stream ) { n byte [ ] val_bytes n try { n val_bytes = pdf_reader . get_stream_bytes ( ( pr_stream ) v ) n return new string ( val_bytes ) n } catch ( io_exception e ) { n throw new exception_converter ( e ) n } n } n n pdf_name type = merged_dict . get_as_name ( pdf_name . ft	0
Q_713	pad leave byte byte	C_713_0	public static byte [ ] pad_left_bytes ( final byte [ ] src , final int bytes ) { n final byte [ ] dst = new byte [ bytes ] n for ( int i = codint i < = src . length i + + ) { n dst [ dst . length _ i ] = src [ src . length _ i ] n } n return dst n }	1
Q_713	pad leave byte byte	C_713_1	public not_null < t > list < t > find_all ( not_null row_mapper < t > row_mapper , not_null sql string sql , object . args ) { n return find_all ( row_mapper , sql_query . query ( sql , args ) ) n }	0
Q_713	pad leave byte byte	C_713_2	public < r > stream_ex < r > flat_array ( function < ? super t , ? extends r [ ] > mapper ) { n return flat_map ( t _ > { n r [ ] a = mapper . apply ( t ) n return a = = null ? null stream_ex . of ( arrays . spliterator ( a ) ) n } ) n }	0
Q_714	build new list list	C_714_0	public static < t , r > list < r > build_new_list ( collection < t > collection , n function < t , r > transform_function ) { n return collection . stream ( ) . map ( transform_function ) n . collect ( collectors . to_list ( ) ) n }	1
Q_714	build new list list	C_714_1	public void assign_group_in_db ( final jaas_system _jaas_system , n final group _group ) n throws e_faps_exception n { n assign_to_user_object_in_db ( ci_admin_user . person2_group . get_type ( ) , _jaas_system , _group ) n }	0
Q_714	build new list list	C_714_2	public collection < object > eval ( collection < string > expressions , entity entity ) { n stopwatch stopwatch = null n if ( log . is_trace_enabled ( ) ) { n stopwatch = stopwatch . create_started ( ) n } n bindings bindings = create_bindings ( entity , entity_reference_default_fetching_depth ) n list < object > result = n expressions . stream ( ) . map ( expression _ > eval ( bindings , expression ) ) . collect ( to_list ( ) ) n if ( stopwatch = null ) { n stopwatch . stop ( ) n log . trace ( codstr , stopwatch . elapsed ( microseconds ) ) n } n return result n }	0
Q_715	collect into batch of max n item per batch	C_715_0	"public static < t > collector < t , linked_list < list < t , stream < list < t in_batches_of ( int items_per_batch ) { n return collector . of ( / / instantiation n linked_list new , n / / accumulator n ( l , i ) _ > { n if ( l . is_empty ( ) l . peek_last ( ) . size ( ) > = items_per_batch ) { n l . add ( new array_list < > ( items_per_batch ) ) n } n l . peek_last ( ) . add ( i ) n } , n / / combiner n ( a , b ) _ > { n / / merge the two lists so the batches matches the order n / / of the non _ parallel in_batches_of with ( a1 . an ) + ( b1 . bn ) n / / as the set of items . it "" s not extremely efficient , but n / / works fine as this is not optimized for parallel streams . n while ( b . is_empty ( ) ) { n for ( t i b . peek_first ( ) ) { n if ( a . peek_last ( ) . size ( ) > = items_per_batch ) { n a . add ( new array_list < > ( items_per_batch ) ) n } n a . peek_last ( ) . add ( i ) n } n"	1
Q_715	collect into batch of max n item per batch	C_715_1	public void remove_list_field_value ( string field_name , int index ) { n object val = get_field_value ( field_name , true ) / / internal n n do_field fld = get_domain_object_type ( ) . get_field_by_name ( field_name ) n string ctn = fld . get_component_type_name ( ) n class < ? > clazz n try { n clazz = get_domain_object_type ( ) . get_domain_model ( ) . get_class_for_name ( ctn ) n } catch ( class_not_found_exception e ) { n throw new runtime_exception ( e ) n } n n if ( val instanceof list < ? > ) n ( ( list < ? > ) val ) . remove ( index ) n else if ( val = null val . get_class ( ) . is_array ( ) ) { n int len = array . get_length ( val ) n object array = array . new_instance ( clazz , len _ codint ) n for ( int i = codint i < index i + + ) { n array . set ( array , i , array . get ( val , i ) ) n } n for ( int i = index i < len _ codint i + + ) { n array . set ( array , i , array . get ( val , i _ codint ) ) n } n } else { n if ( get_domain_object_type ( ) . get_field_by_name ( field_name ) . is_list_or_array ( ) )	0
Q_715	collect into batch of max n item per batch	C_715_2	public static string get_hash_md5 ( string text ) { n byte [ ] bytes = text . get_bytes ( standard_charsets . iso_8859_1 ) n return get_hash_md5 ( bytes ) n }	0
Q_716	escape a single character	C_716_0	public static string escape ( char c ) { n switch ( c ) { n case codstr n return codstr n case codstr n return codstr n case codstr n return codstr n case codstr n return codstr n case codstr n return codstr n case codstr codstr codstr n case codstr codstr codstr n case codstr n return codstr n default n if ( c < codint c = = codint ) { n return string . format ( codstr , ( int ) c ) n } else if ( is_console_printable ( c ) n is_high_surrogate ( c ) n is_low_surrogate ( c ) ) { n return string . format ( codstr , ( int ) c ) n } n return string . value_of ( c ) n } n }	1
Q_716	escape a single character	C_716_1	public void restore_resource_request_info ( resource_request_info n resource_request_info ) { n list < requested_node > requested_nodes = null n list < string > hosts = resource_request_info . get_hosts ( ) n if ( hosts = null hosts . size ( ) > codint ) { n requested_nodes = new array_list < requested_node > ( hosts . size ( ) ) n for ( string host hosts ) { n requested_nodes . add ( resolve ( host , resource_request_info . get_type ( ) ) ) n } n } n resource_request_info . nodes = requested_nodes n }	0
Q_716	escape a single character	C_716_2	public static iterable < table > list_tables ( data_store data_store ) { n return list_tables ( data_store , null , long . max_value ) n }	0
Q_717	check if delegate string contain all string in the give string list	C_717_0	public boolean contains_all ( list < string > contain_with ) { n return contain_all ( check_not_null ( contain_with ) . to_array ( new string [ contain_with . size ( ) ] ) ) n }	1
Q_717	check if delegate string contain all string in the give string list	C_717_1	private static long mix_k1 ( long k1 ) { n k1 * = c1 n k1 = long . rotate_left ( k1 , codint ) n k1 * = c2 n return k1 n }	0
Q_717	check if delegate string contain all string in the give string list	C_717_2	private repository_quota_manager get_repository_quota_manager ( string repository_name ) throws illegal_state_exception n { n repository_quota_manager rqm = r_quota_managers . get ( repository_name ) n if ( rqm = = null ) n { n throw new illegal_state_exception ( codstr + repository_name + codstr ) n } n n return rqm n }	0
Q_718	replace null with empty_data	C_718_0	private void set_records ( byte [ ] [ ] data ) { n if ( data = = null data . length = = codint ) { n this . records = empty_data n return n } n n this . records = new byte [ data . length ] [ ] n for ( int i = codint i < data . length i + + ) { n if ( data [ i ] = null ) { n this . records [ i ] = data [ i ] n } else { n this . records [ i ] = empty_bytes n } n } n }	1
Q_718	replace null with empty_data	C_718_1	public static commerce_discount find_by_uuid_c_first ( string uuid , n long company_id , order_by_comparator < commerce_discount > order_by_comparator ) n throws com . liferay . commerce . discount . exception . no_such_discount_exception { n return get_persistence ( ) n . find_by_uuid_c_first ( uuid , company_id , order_by_comparator ) n }	0
Q_718	replace null with empty_data	C_718_2	deprecated n public object eval ( final string code , final object . args ) { n command_result result = do_eval ( code , args ) n result . throw_on_error ( ) n return result . get ( codstr ) n }	0
Q_719	return the sha1 hash of the input string	C_719_0	public static string get_sha1_hash ( final string input ) throws hibiscus_exception { n n string hash_value = null n n try { n n final message_digest message_digest = message_digest . get_instance ( message_digest_algorithm_sha1 ) n byte [ ] sha1_hash = new byte [ byte_length_sha1 ] n n message_digest . update ( input . get_bytes ( encoding_charset_name ) , message_digest_update_offset , input . length ( ) ) n sha1_hash = message_digest . digest ( ) n n hash_value = convert_to_hex ( sha1_hash ) n n } catch ( no_such_algorithm_exception e ) { n throw new hibiscus_exception ( codstr + message_digest_algorithm_sha1 , e ) n } catch ( unsupported_encoding_exception e ) { n throw new hibiscus_exception ( codstr + encoding_charset_name , e ) n } n n return hash_value n }	1
Q_719	return the sha1 hash of the input string	C_719_1	boolean is_task ( int sequence ) { n int index = to_index ( sequence ) n check_sequence ( index , sequence ) n return is_task [ index ] n }	0
Q_719	return the sha1 hash of the input string	C_719_2	pure n inline ( value = codstr , imported = { vector2ifx . class } ) n public static vector2ifx to_orientation_vector ( double angle ) { n return new vector2ifx ( math . cos ( angle ) , math . sin ( angle ) ) n }	0
Q_720	append a range of value to the end of this array	C_720_0	public boolean add_all ( short_array items ) { n ensure_capacity ( size + items . size ) n for ( int i = codint i < items . size i + + ) { n elements [ size + + ] = items . elements [ i ] n } n return items . size > codint n }	1
Q_720	append a range of value to the end of this array	C_720_1	public send_users_message_response with_result ( java . util . map < string , java . util . map < string , endpoint_message_result result ) { n set_result ( result ) n return this n }	0
Q_720	append a range of value to the end of this array	C_720_2	"override n public list < map < string , object get ( data_fetching_environment environment ) { n / / get_source is the context in which this this data_fetcher has been created , in this case a map representing n / / the parent feed ( feed_fetcher ) . n map < string , object > parent_entity_map = environment . get_source ( ) n n / / apparently you can codstr namespace codstr namespace codstr where "" n / / clause using the values found here . note , these are used in the below get_results call . n list < string > parent_join_values = new array_list < > ( ) n if ( parent_join_field = null ) { n map < string , object > enclosing_entity = environment . get_source ( ) n / / fixme this is broken if parent_join_value is null n object parent_join_value = enclosing_entity . get ( parent_join_field ) n / / check for null parent_join_value to protect against npe . n string parent_join_string = parent_join_value = = null ? null parent_join_value . to_string ( ) n parent_join_values . add ( parent_join_string ) n if ( parent_join_value = = null ) { n return new array_list < > ( ) n } n } n map < string , object > arguments = environment . get_arguments ( ) n n return get_results ( namespace , parent_join_values , arguments ) n }"	0
Q_721	parameterized configuration template give as string with dynamic parameter	C_721_0	protected static string parameterize ( string config , config_params parameters ) throws io_exception { n if ( parameters = = null ) { n return config n } n n handlebars handlebars = new handlebars ( ) n template template = handlebars . compile_inline ( config ) n n return template . apply ( parameters ) n }	1
Q_721	parameterized configuration template give as string with dynamic parameter	C_721_1	public string remove_prefix ( final string path , final string prefix ) { n string path_without_prefix = path n n if ( path_without_prefix . starts_with ( prefix ) ) { n path_without_prefix = path_without_prefix . substring ( prefix . length ( ) ) n n while ( path_without_prefix . starts_with ( codstr ) path_without_prefix . starts_with ( codstr ) ) { n path_without_prefix = path_without_prefix . substring ( codint ) n } n } n n return path_without_prefix n }	0
Q_721	parameterized configuration template give as string with dynamic parameter	C_721_2	private static int min_start_indexed_binary_search ( n list < ? extends temporal_proposition > list , long tstamp ) { n int low = codint n int high = list . size ( ) _ codint n n while ( low < = high ) { n / * n * we use instead of or / codint to avoid overflow . sun codstr t do this ( bug n * * / n int mid = ( low + high ) codint n temporal_proposition mid_val = list . get ( mid ) n long min_start = mid_val . get_interval ( ) . get_minimum_start ( ) n int cmp = min_start = null ? min_start . compare_to ( tstamp ) _ codint n if ( cmp < codint ) { n low = mid + codint n } else if ( cmp > codint ) { n high = mid _ codint n } else { n return mid n } n } n return low n }	0
Q_722	create a new file_logger for an add_on	C_722_0	public synchronized extended_logger create_file_logger ( string add_on_id , string level ) { n try { n logger_context ctx = log_manager . get_context ( false ) n configuration config = ( ( org . apache . logging . log4j . core . logger_context ) ctx ) . get_configuration ( ) n n / / creates a new pattern layout ( what determines how the log is formated , i . e . date , thread etc . ) n layout layout = pattern_layout . create_layout ( codstr , config , null , null , true , n false , null , null ) n n / / creates a file appender for the logger ( so that it knows what file to log to ) n appender file_appender = file_appender . create_appender ( codstr + file . separator + add_on_id + codstr , codstr , n codstr , codstr , codstr , codstr , codstr , codstr , layout , null , codstr , null , config ) n file_appender . start ( ) n config . add_appender ( file_appender ) n n / / creates also a console appender for the logger ( so that the logger also outputs the log in the console ) n appender console_appender = console_appender . create_appender ( layout , null , codstr , codstr , null , null ) n console_appender . start ( ) n config . add_appender ( console_appender ) n n / / adds appenders to an array called refs	1
Q_722	create a new file_logger for an add_on	C_722_1	protected boolean is_saml_soap_response ( http_response res ) n { n boolean is_saml_soap = false n if ( res . get_first_header ( http_headers . content_type ) = null ) { n content_type content_type = content_type . parse ( res . get_first_header ( http_headers . content_type ) n . get_value ( ) ) n is_saml_soap = mime_type_paos . equals ( content_type . get_mime_type ( ) ) n } n return is_saml_soap n }	0
Q_722	create a new file_logger for an add_on	C_722_2	protected locking_cursor get_get_cursor ( int classification ) n { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( tc , codstr , integer . value_of ( classification ) ) n n / / first we need to get the index for the appropriate cursor n / / the zeroth index is reserved for non _ classified messages n n locking_cursor cursor = consumer_key_filter [ classification ] . get_get_cursor ( ) n if ( key_group = null ) n cursor = key_group . get_get_cursor ( classification ) n n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( tc , codstr , cursor ) n n return cursor n }	0
Q_723	demultiplexes the sent message and pass it to the appropriate method of the io_adapter	C_723_0	override n public void message_sent ( io_session session , object message ) throws exception { n log . debug ( codstr , message , session ) n if ( this . sensor_io_adapter = = null ) { n log . warn ( codstr , n session , message ) n return n } n n if ( message instanceof handshake_message ) { n log . debug ( codstr , session , message ) n if ( this . sensor_io_adapter = null ) { n this . sensor_io_adapter . handshake_message_sent ( session , n ( handshake_message ) message ) n } n } else if ( message instanceof sample_message ) { n if ( this . sensor_io_adapter = null ) { n this . sensor_io_adapter . sensor_sample_sent ( session , n ( sample_message ) message ) n } n } else { n log . warn ( codstr , session , message ) n } n n }	1
Q_723	demultiplexes the sent message and pass it to the appropriate method of the io_adapter	C_723_1	public key_bundle import_key ( string vault_base_url , string key_name , json_web_key key ) { n return import_key_with_service_response_async ( vault_base_url , key_name , key ) . to_blocking ( ) . single ( ) . body ( ) n }	0
Q_723	demultiplexes the sent message and pass it to the appropriate method of the io_adapter	C_723_2	public service_future < version_info > get_async ( uuid app_id , string version_id , final service_callback < version_info > service_callback ) { n return service_future . from_response ( get_with_service_response_async ( app_id , version_id ) , service_callback ) n }	0
Q_724	combine three iterables into a single iterable	C_724_0	public static < t > iterable < t > concat ( n iterable < ? extends t > a , iterable < ? extends t > b , iterable < ? extends t > c ) { n return fluent_iterable . concat ( a , b , c ) n }	1
Q_724	combine three iterables into a single iterable	C_724_1	suppress_warnings ( codstr ) n override n public e_list < ifc_curve_style_font_pattern > get_pattern_list ( ) { n return ( e_list < ifc_curve_style_font_pattern > ) e_get ( ifc4_package . literals . ifc_curve_style_font_pattern_list , true ) n }	0
Q_724	combine three iterables into a single iterable	C_724_2	public void setup_panel ( ) n { n this . set_layout ( new box_layout ( this , box_layout . y_axis ) ) n this . add_grid_heading ( ) n n j_panel panel = new j_panel ( ) n panel . set_opaque ( false ) n panel . set_minimum_size ( new dimension ( codint , codint ) ) n panel . set_layout ( new border_layout ( ) ) n j_scroll_pane scroll_pane = new j_scroll_pane ( j_scroll_pane . vertical_scrollbar_as_needed , j_scroll_pane . horizontal_scrollbar_as_needed ) n panel . add ( scroll_pane ) n this . add ( panel ) n m_panel_grid = new j_panel ( ) n j_panel panel_aligner = new j_panel ( ) / / this panel keeps the panelgrid in the upper left hand of the scrollpane . n panel_aligner . add ( m_panel_grid ) n panel_aligner . set_layout ( new flow_layout ( flow_layout . leading ) ) n scroll_pane . get_viewport ( ) . add ( panel_aligner ) n panel_aligner . set_opaque ( false ) n m_panel_grid . set_opaque ( false ) n scroll_pane . get_viewport ( ) . set_opaque ( false ) n scroll_pane . set_opaque ( false ) n n this . add_grid_detail ( ) n }	0
Q_725	return an iterator contain only code value	C_725_0	public static < t > unmodifiable_iterator < t > singleton_iterator ( final nullable t value ) { n return new unmodifiable_iterator < t > ( ) { n boolean done n n override n public boolean has_next ( ) { n return done n } n n override n public t next ( ) { n if ( done ) { n throw new no_such_element_exception ( ) n } n done = true n return value n } n } n }	1
Q_725	return an iterator contain only code value	C_725_1	public observable < service_response < storage_bundle set_storage_account_with_service_response_async ( string vault_base_url , string storage_account_name , string resource_id , string active_key_name , boolean auto_regenerate_key ) { n if ( vault_base_url = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( storage_account_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( resource_id = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( active_key_name = = null ) { n throw new illegal_argument_exception ( codstr ) n } n final string regeneration_period = null n final storage_account_attributes storage_account_attributes = null n final map < string , string > tags = null n storage_account_create_parameters parameters = new storage_account_create_parameters ( ) n parameters . with_resource_id ( resource_id ) n parameters . with_active_key_name ( active_key_name ) n parameters . with_auto_regenerate_key ( auto_regenerate_key ) n parameters . with_regeneration_period ( null ) n parameters . with_storage_account_attributes ( null ) n parameters . with_tags ( null ) n string parameterized_host = joiner . on ( codstr ) . join ( codstr , vault_base_url ) n return service . set_storage_account ( storage_account_name , this . api_version ( ) , this . accept_language ( ) , parameters , parameterized_host , this . user_agent ( ) ) n . flat_map ( new func1 < response < response_body >	0
Q_725	return an iterator contain only code value	C_725_2	public collection < ? extends repository_resource > get_all_resources ( license_type license_type , n resource_type type ) throws repository_backend_exception { n collection < ? extends repository_resource > all_resources = get_all_resources ( type ) n n if ( license_type = null ) { n collection < repository_resource > licensed_resources = new array_list < repository_resource > ( ) n n for ( repository_resource resource get_all_resources ( type ) ) { n if ( license_type . equals ( resource . get_license_type ( ) ) ) { n licensed_resources . add ( resource ) n } n } n n return licensed_resources n } else { n return all_resources n } n }	0
Q_726	a factory that choose the most space_efficient representation of the table	C_726_0	static < r , c , v > regular_immutable_table < r , c , v > for_ordered_components ( n immutable_list < cell < r , c , v cell_list , n immutable_set < r > row_space , n immutable_set < c > column_space ) { n / / use a dense table if more than half of the cells have values n / / todo ( gak ) tune this condition based on empirical evidence n return ( cell_list . size ( ) > ( ( ( long ) row_space . size ( ) * column_space . size ( ) ) / codint ) ) n ? new dense_immutable_table < r , c , v > ( cell_list , row_space , column_space ) n new sparse_immutable_table < r , c , v > ( cell_list , row_space , column_space ) n }	1
Q_726	a factory that choose the most space_efficient representation of the table	C_726_1	public static string mangle_name ( string name ) n { n boolean to_lower = caucho_util . is_case_insensitive ( ) n n char_buffer cb = new char_buffer ( ) n cb . append ( codstr ) n n for ( int i = codint i < name . length ( ) i + + ) { n char ch = name . char_at ( i ) n n if ( ch = = codstr ch = = caucho_util . get_path_separator_char ( ) ) { n if ( i = = codint ) { n } n else if ( cb . char_at ( cb . length ( ) _ codint ) = codstr n ( i + codint < name . length ( ) name . char_at ( i + codint ) = codstr ) ) n cb . append ( codstr ) n } n else if ( ch = = codstr ) n cb . append ( codstr ) n else if ( ch = = codstr ) n cb . append ( codstr ) n else if ( character . is_java_identifier_part ( ch ) ) n cb . append ( to_lower ? character . to_lower_case ( ch ) ch ) n else if ( ch < = codint ) n cb . append ( codstr + encode_hex ( ch codint ) + encode_hex ( ch ) ) n else n cb . append ( codstr + encode_hex ( ch codint ) + encode_hex ( ch codint )	0
Q_726	a factory that choose the most space_efficient representation of the table	C_726_2	override n public void receive ( vehicle_message message ) { n if ( message = = null ) { n return n } n n if ( message instanceof keyed_message ) { n keyed_message keyed_message = message . as_keyed_message ( ) n m_keyed_messages . put ( keyed_message . get_key ( ) , keyed_message ) n } n n list < vehicle_data_sink > dead_sinks = new array_list < > ( ) n for ( vehicle_data_sink sink m_sinks ) { n try { n sink . receive ( message ) n } catch ( data_sink_exception e ) { n log . w ( tag , this . get_class ( ) . get_name ( ) + codstr + n sink + codstr + n codstr + e ) n dead_sinks . add ( sink ) n } n } n n m_messages_received + + n for ( vehicle_data_sink sink dead_sinks ) { n remove_sink ( sink ) n } n }	0
Q_727	return the raw type of code t	C_727_0	public final class < ? super t > get_raw_type ( ) { n / / for wildcard or type variable , the first bound determines the runtime type . n class < ? > raw_type = get_raw_types ( ) . iterator ( ) . next ( ) n suppress_warnings ( codstr ) / / raw type is t n class < ? super t > result = ( class < ? super t > ) raw_type n return result n }	1
Q_727	return the raw type of code t	C_727_1	public < t extends serializable > t parse ( string input , class < t > clazz ) { n try { n return parse_input ( input , clazz ) n } catch ( invocation_target_exception instantiation_exception illegal_access_exception no_such_method_exception number_format_exception parser_exception e ) { n throw new parser_exception ( e . get_message ( ) ) n } n }	0
Q_727	return the raw type of code t	C_727_2	protected string [ ] resolve_arguments_from ( class type , string . args ) { n n int index = index_of ( args , type . get_name ( ) ) n int position = ( index + codint ) n n string [ ] arguments = string_utils . empty_string_array n n if ( index = _ codint position < args . length ) { n int length = ( args . length _ position ) n arguments = new string [ length ] n system . arraycopy ( args , position , arguments , codint , length ) n } n n return arguments n }	0
Q_728	an unexpected event be about to be drop	C_728_0	public static < t > void on_next_dropped ( t t , context context ) { n objects . require_non_null ( t , codstr ) n objects . require_non_null ( context , codstr ) n consumer < object > hook = context . get_or_default ( hooks . key_on_next_dropped , null ) n if ( hook = = null ) { n hook = hooks . on_next_dropped_hook n } n if ( hook = null ) { n hook . accept ( t ) n } n else if ( log . is_debug_enabled ( ) ) { n log . debug ( codstr + t ) n } n }	1
Q_728	an unexpected event be about to be drop	C_728_1	override n protected result check ( ) throws exception { n n m_repository . select ( context . default_context , new resource ( codstr ) , optional . of ( timestamp . from_epoch_millis ( codint ) ) , optional . of ( timestamp . from_epoch_millis ( codint ) ) ) n n return result . healthy ( ) n }	0
Q_728	an unexpected event be about to be drop	C_728_2	public observable < domain_shared_access_keys_inner > list_shared_access_keys_async ( string resource_group_name , string domain_name ) { n return list_shared_access_keys_with_service_response_async ( resource_group_name , domain_name ) . map ( new func1 < service_response < domain_shared_access_keys_inner > , domain_shared_access_keys_inner > ( ) { n override n public domain_shared_access_keys_inner call ( service_response < domain_shared_access_keys_inner > response ) { n return response . body ( ) n } n } ) n }	0
Q_729	register and assign a new unique native id for give object	C_729_0	public synchronized long register ( t o ) { n check_not_null ( o ) n long native_id = native_obj_to_id_map . inverse ( ) . get ( o ) n if ( native_id = null ) { n if ( debug ) { n debug_info debug_info = id_to_debug_info_map . get ( native_id ) n if ( debug_info = null ) { n system . out . printf ( n codstr , name , native_id , o ) n debug_info . registration_trace . print_stack_trace ( system . out ) n } n } n throw new illegal_state_exception ( codstr + native_id ) n } n n native_id = next_id n if ( debug ) { n system . out . printf ( codstr , name , native_id , o ) n id_to_debug_info_map . put ( native_id , new debug_info ( new trace ( o ) ) ) n } n native_obj_to_id_map . put ( native_id , o ) n next_id + + n return native_id n }	1
Q_729	register and assign a new unique native id for give object	C_729_1	public completable_future < connection > get_connection ( address address ) { n connection connection = connections . get ( address ) n return connection = = null ? create_connection ( address ) completable_future . completed_future ( connection ) n }	0
Q_729	register and assign a new unique native id for give object	C_729_2	protected void invoke_handler ( event event , api_context api_context ) n throws class_not_found_exception , no_such_method_exception , security_exception , illegal_access_exception , n illegal_argument_exception , invocation_target_exception , instantiation_exception n { n string topic [ ] = event . get_topic ( ) . split ( codstr ) n string event_category = topic [ codint ] . substring ( codint , codint ) . to_upper_case ( ) + topic [ codint ] . substring ( codint ) n string event_action = topic [ codint ] n n / / get list of registered handlers n object handler = event_manager . get_instance ( ) . get_registered_class_handlers ( event_category ) n if ( handler = null ) { n string method_name = event_action n string class_name = handler . get_class ( ) . get_name ( ) n try { n method m n m = handler . get_class ( ) . get_method ( method_name , api_context . class , event . class ) n m . invoke ( handler , api_context , event ) n } catch ( no_such_method_exception e ) { n logger . warn ( codstr + event_action + codstr + class_name ) n throw e n } catch ( security_exception e ) { n logger . warn ( codstr + e . get_message ( ) ) n throw e n } catch ( illegal_access_exception e ) { n logger . warn ( codstr + event_action + codstr + class_name ) n throw e n } catch ( illegal_argument_exception e ) { n	0
Q_730	put a byte and a short into this byte vector	C_730_0	byte_vector put12 ( final int b , final int s ) { n int length = this . length n if ( length + codint > data . length ) { n enlarge ( codint ) n } n byte [ ] data = this . data n data [ length + + ] = ( byte ) b n data [ length + + ] = ( byte ) ( s codint ) n data [ length + + ] = ( byte ) s n this . length = length n return this n }	1
Q_730	put a byte and a short into this byte vector	C_730_1	public map < integer , string > get_signatures ( ) { n ensure_running ( ) n / / make a copy so callers get an immutable snapshot of the current state . n return collections . unmodifiable_map ( new hash_map < integer , string > ( signatures ) ) n }	0
Q_730	put a byte and a short into this byte vector	C_730_2	public static java . sql . timestamp to_timestamp ( object value ) throws parse_exception { n if ( value = = null ) { n return null n } n if ( value instanceof java . sql . timestamp ) { n return ( java . sql . timestamp ) value n } n if ( value instanceof string ) { n n if ( codstr . equals ( ( string ) value ) ) { n return null n } n return new java . sql . timestamp ( in_timestamp_format . parse ( ( string ) value ) . get_time ( ) ) n } n n return new java . sql . timestamp ( in_timestamp_format . parse ( value . to_string ( ) ) . get_time ( ) ) n }	0
Q_731	return instance of all implement database type	C_731_0	public list < database > get_implemented_databases ( ) { n list < database > return_list = new array_list < > ( ) n for ( sorted_set < database > set implemented_databases . values ( ) ) { n return_list . add ( set . iterator ( ) . next ( ) ) n } n return return_list n }	1
Q_731	return instance of all implement database type	C_731_1	public int update ( ) throws sql_exception { n check_for_dao ( ) n suppress_warnings ( codstr ) n t t = ( t ) this n return dao . update ( t ) n }	0
Q_731	return instance of all implement database type	C_731_2	post n path ( codstr ) n public string run_report ( run_report_meta_data run_report_meta_data ) { n n if ( log . is_debug_enabled ( ) ) { n log . debug ( codstr + run_report_meta_data + codstr ) n log . debug ( codstr + run_report_meta_data . get_report_id ( ) ) n log . debug ( codstr + run_report_meta_data . get_format ( ) ) n log . debug ( codstr + report_util . get_debug_parameters ( run_report_meta_data . get_parameters_values ( ) ) ) n } n n report report = null n date start_date = new date ( ) n boolean error = false n string message = codstr n string url = codstr n try { n n report = ( report ) storage_service . get_entity_by_id ( run_report_meta_data . get_report_id ( ) ) n n report_runtime runtime = new report_runtime ( ) n runtime . set_output_type ( run_report_meta_data . get_format ( ) ) n if ( run_report_meta_data . get_parameters_values ( ) = = null ) { n run_report_meta_data . set_parameters_values ( new hash_map < string , object > ( ) ) n } n runtime . set_parameters_values ( run_report_meta_data . get_parameters_values ( ) , null ) n n string [ ] result = report_service . report_to_url ( report , runtime , codstr , uuid . random_uuid ( ) . to_string ( ) ) n if ( result = = null ) { n return codstr n } n n if ( log . is_debug_enabled ( ) ) { n log	0
Q_732	check whether the extension of the filename be one of those specify	C_732_0	public static boolean is_extension ( string filename , collection extensions ) { n if ( filename = = null ) { n return false n } n if ( ( extensions = = null ) extensions . is_empty ( ) ) { n return ( index_of_extension ( filename ) = = _ codint ) n } n string file_ext = get_extension ( filename ) n for ( iterator it = extensions . iterator ( ) it . has_next ( ) ) { n if ( file_ext . equals ( it . next ( ) ) ) { n return true n } n } n return false n }	1
Q_732	check whether the extension of the filename be one of those specify	C_732_1	public final cell_name clustering_key ( column_family column_family ) { n iterator < cell > iterator = column_family . iterator ( ) n return iterator . has_next ( ) ? clustering_key ( iterator . next ( ) . name ( ) ) null n }	0
Q_732	check whether the extension of the filename be one of those specify	C_732_2	private mailbox allocate_mailbox ( final definition definition , final address address , final mailbox maybe_mailbox ) { n final mailbox mailbox = maybe_mailbox = null ? n maybe_mailbox actor_factory . actor_mailbox ( this , address , definition ) n return mailbox n }	0
Q_733	create a new task that wrap the give task	C_733_0	deprecated n public static < t > task < t > timeout_with_error ( final long time , final time_unit unit , final task < t > task ) { n return task . with_timeout ( time , unit ) n }	1
Q_733	create a new task that wrap the give task	C_733_1	public optional < synthetics_alert_condition > create ( long policy_id , synthetics_alert_condition condition ) n { n return http . post ( string . format ( codstr , policy_id ) , condition , synthetics_alert_condition ) n }	0
Q_733	create a new task that wrap the give task	C_733_2	public void unsubscribe_resource_for_all ( cms_object cms , string resource_path ) throws cms_exception { n n cms_resource resource = cms . read_resource ( resource_path , cms_resource_filter . all ) n unsubscribe_resource_for_all ( cms , resource ) n }	0
Q_734	get a name logger	C_734_0	public static logger get ( string name ) n { n java . util . logging . logger logger = java . util . logging . logger . get_logger ( name ) n return new logger ( logger ) n }	1
Q_734	get a name logger	C_734_1	public static codec < long [ ] , long_gene > of_vector ( n final long_range domain , n final int length n ) { n require_non_null ( domain ) n require . positive ( length ) n n return codec . of ( n genotype . of ( long_chromosome . of ( domain , length ) ) , n gt _ > gt . get_chromosome ( ) . as ( long_chromosome . class ) . to_array ( ) n ) n }	0
Q_734	get a name logger	C_734_2	public input_stream get_input_stream ( ) throws io_exception { n file_item_wrap wrapper = get_value ( ) n n if ( wrapper = null ) { n return wrapper . get_input_stream ( ) n } n n return null n }	0
Q_735	dispatch the link android	C_735_0	override n public boolean on_touch_event ( non_null final motion_event event ) { n boolean handled = false n n / * we are in the process of animating the hover drawable back , do not start a new drag yet . * / n if ( m_is_settling_hover_drawable ) { n switch ( event . get_action ( ) motion_event . action_mask ) { n case motion_event . action_down n m_last_motion_event_y = event . get_y ( ) n handled = handle_down_event ( event ) n break n case motion_event . action_move n m_last_motion_event_y = event . get_y ( ) n handled = handle_move_event ( event ) n break n case motion_event . action_up n handled = handle_up_event ( ) n m_last_motion_event_y = _ codint n break n case motion_event . action_cancel n handled = handle_cancel_event ( ) n m_last_motion_event_y = _ codint n break n default n handled = false n break n } n } n return handled n }	1
Q_735	dispatch the link android	C_735_1	public int get_namespace_type ( final int node_handle ) n { n n int identity = make_node_identity ( node_handle ) n int expanded_name_id = _exptype ( identity ) n n return m_expanded_name_table . get_namespace_id ( expanded_name_id ) n }	0
Q_735	dispatch the link android	C_735_2	public < t_column extends user_column > void create_table ( n user_table < t_column > table ) { n n / / verify the table does not already exist n if ( db . table_exists ( table . get_table_name ( ) ) ) { n throw new geo_package_exception ( n codstr n + table . get_table_name ( ) ) n } n n / / build the create table sql n string_builder sql = new string_builder ( ) n sql . append ( codstr ) n . append ( core_sql_utils . quote_wrap ( table . get_table_name ( ) ) ) n . append ( codstr ) n n / / add each column to the sql n list < ? extends user_column > columns = table . get_columns ( ) n for ( int i = codint i < columns . size ( ) i + + ) { n user_column column = columns . get ( i ) n if ( i > codint ) { n sql . append ( codstr ) n } n sql . append ( codstr ) . append ( core_sql_utils . quote_wrap ( column . get_name ( ) ) ) n . append ( codstr ) . append ( column . get_type_name ( ) ) n if ( column . get_max ( ) = null ) { n sql . append ( codstr ) . append ( column . get_max ( ) ) . append ( codstr ) n } n if (	0
Q_736	check same date	C_736_0	private static date check_same_date ( final list < vote_data_dto > vote_list ) throws parse_exception { n final set < string > set = new hash_set < > ( ) n date result = null n n for ( final vote_data_dto vote_data vote_list ) { n final string vote_date = vote_data . get_vote_date ( ) n if ( vote_date = null vote_date . length ( ) > = yyyy_mm_dd . length ( ) ) { n set . add ( vote_data . get_vote_date ( ) ) n } n } n n if ( set . size ( ) = = contains_one ) { n final string date_string = set . iterator ( ) . next ( ) n result = new simple_date_format ( yyyy_mm_dd , locale . english ) . parse ( date_string ) n } n return result n }	1
Q_736	check same date	C_736_1	private list < i_submission > get_more_submissions ( lr_importer importer , list < i_submission > submissions , string resumption_token ) throws exception { n n lr_result result n n n if ( resumption_token = = null ) { n / / n / / if there is no resumption token , this is the first request so n / / supply all the parameters for the initial request n / / n result = importer . get_obtain_json_data ( widget_identifier , true , false , false ) n } else { n / / n / / if there is a resumption token , use it to obtain the next paged set of results n / / n result = importer . get_obtain_json_data ( resumption_token ) n } n n / / n / / if there are no results return the initial list without modification n / / n if ( result = = null result . get_documents ( ) . size ( ) = = codint ) return submissions n n / / n / / get the result document n / / n json_array records = result . get_documents ( ) . get ( codint ) . get_json_array ( codstr ) n n / / n / / creating submission objects for each record n / / n for ( int i = codint i < records . length ( ) i + + ) { n json_object record = records . get_json_object ( i ) n i_submission	0
Q_736	check same date	C_736_2	beta_api n public final aggregated_list_interconnect_attachments_paged_response n aggregated_list_interconnect_attachments ( string project ) { n aggregated_list_interconnect_attachments_http_request request = n aggregated_list_interconnect_attachments_http_request . new_builder ( ) . set_project ( project ) . build ( ) n return aggregated_list_interconnect_attachments ( request ) n }	0
Q_737	parse json receive from reddit into a full submission	C_737_0	public full_submission parse ( string json_text ) throws reddit_parse_exception { n n try { n n / / parse json text n object response = json_parser . parse ( json_text ) n n / / validate response n validate ( response ) n n / / create submission ( casting with json is horrible ) n json_object main = ( json_object ) ( ( json_array ) response ) . get ( codint ) n submission submission = new submission ( ( json_object ) ( ( json_object ) ( ( json_array ) ( ( json_object ) main . get ( codstr ) ) . get ( codstr ) ) . get ( codint ) ) . get ( codstr ) ) n n / / create comment tree n json_object main_tree = ( json_object ) ( ( json_array ) response ) . get ( codint ) n list < comment_tree_element > comment_tree = parse_recursive ( main_tree ) n n / / return the set of submission and its comment tree n return new full_submission ( submission , comment_tree ) n n } catch ( parse_exception pe ) { n throw new reddit_parse_exception ( pe ) n } n n }	1
Q_737	parse json receive from reddit into a full submission	C_737_1	public read_document_response read_document ( string document_id ) { n read_document_request request = new read_document_request ( ) n request . set_document_id ( document_id ) n return this . read_document ( request ) n }	0
Q_737	parse json receive from reddit into a full submission	C_737_2	public element_collection < embeddable_attributes < t get_or_create_element_collection ( ) n { n list < node > node_list = child_node . get ( codstr ) n if ( node_list = null node_list . size ( ) > codint ) n { n return new element_collection_impl < embeddable_attributes < t ( this , codstr , child_node , node_list . get ( codint ) ) n } n return create_element_collection ( ) n }	0
Q_738	create a new quaternion from the rotation double angle in degree around the axis vector	C_738_0	public static quaterniond from_angle_deg_axis ( double angle , vector3d axis ) { n return from_angle_rad_axis ( ( double ) math . to_radians ( angle ) , axis ) n }	1
Q_738	create a new quaternion from the rotation double angle in degree around the axis vector	C_738_1	void update ( long index , instant instant , type type ) { n this . index = index n this . type = type n clock . set ( instant ) n }	0
Q_738	create a new quaternion from the rotation double angle in degree around the axis vector	C_738_2	public void add_out_put_streams ( list < output_stream > output_streams ) { n check_not_null ( output_streams , codstr ) n for ( output_stream stream output_streams ) { n add_out_put_stream ( stream ) n } n }	0
Q_739	return true if the character at the give cursor be escape otherwise return false	C_739_0	public static boolean is_escaped ( final char [ ] chars , final int cursor ) n { n assert . not_null ( chars , codstr ) n assert . assert_true ( cursor > = codint , codstr ) n assert . assert_true ( cursor < ( chars . length ) , n codstr ) n n if ( ( cursor > codint ) ( chars [ cursor _ codint ] = = escape_char ) ) n { n if ( ( cursor = = codint ) ( ( cursor > codint ) ( chars [ cursor _ codint ] = escape_char ) ) ) n { n return true n } n } n return false n }	1
Q_739	return true if the character at the give cursor be escape otherwise return false	C_739_1	public string get_archive_filename ( boolean b_physical_name ) n { n string str_file_separator = system . get_property ( codstr ) n char ch_file_separator = codstr n if ( ( str_file_separator = null ) ( str_file_separator . length ( ) = = codint ) ) n ch_file_separator = str_file_separator . char_at ( codint ) n string str_archive_folder = null n if ( this . get_table ( ) . get_database ( ) = null ) n { n if ( ( this . get_database_type ( ) db_constants . user_data ) = codint ) n str_archive_folder = this . get_table ( ) . get_database ( ) . get_property ( db_constants . user_archive_folder ) n else n str_archive_folder = this . get_table ( ) . get_database ( ) . get_property ( db_constants . shared_archive_folder ) n if ( str_archive_folder = = null ) n str_archive_folder = this . get_table ( ) . get_database ( ) . get_property ( db_constants . archive_folder ) n } n if ( ( str_archive_folder = = null ) ( str_archive_folder . length ( ) = = codint ) ) n if ( this . get_record_owner ( ) = null ) n { n if ( ( this . get_database_type ( ) db_constants . user_data ) = codint ) n str_archive_folder = this . get_record_owner ( ) . get_property ( db_constants . user_archive_folder ) n else n str_archive_folder = this . get_record_owner ( ) . get_property ( db_constants . shared_archive_folder ) n if ( str_archive_folder = = null ) n	0
Q_739	return true if the character at the give cursor be escape otherwise return false	C_739_2	public void set_message_text ( sendable_text_message . sendable_text_message_builder message_builder ) { n sendable_text_message message = message_builder . build ( ) n base_message . get_bot_instance ( ) . edit_message_text ( base_message , message . get_message ( ) , message . get_parse_mode ( ) , n message . is_disable_web_page_preview ( ) , to_keyboard ( ) ) n }	0
Q_740	generate a property filter condition string for a code byte code value	C_740_0	public static string generate_filter_condition ( string property_name , string operation , final byte [ ] value ) { n string_builder sb = new string_builder ( ) n formatter formatter = new formatter ( sb ) n for ( byte b value ) { n formatter . format ( codstr , b ) n } n formatter . flush ( ) n formatter . close ( ) n n return generate_filter_condition ( property_name , operation , sb . to_string ( ) , edm_type . binary ) n }	1
Q_740	generate a property filter condition string for a code byte code value	C_740_1	public list < t > to_list ( ) { n final list < t > results = new array_list < t > ( ) n try { n while ( wrapped . has_next ( ) ) { n results . add ( next ( ) ) n } n } finally { n wrapped . close ( ) n } n return results n }	0
Q_740	generate a property filter condition string for a code byte code value	C_740_2	private void evict ( ) { n if ( window_size < = max_window ) { n return n } n n node candidate = head_window . next n window_size _ n n candidate . remove ( ) n candidate . queue = probation n candidate . append_to_tail ( head_probation ) n n if ( data . size ( ) > maximum_size ) { n node victim = head_probation . next n node evict = admittor . admit ( candidate . key , victim . key ) ? victim candidate n data . remove ( evict . key ) n evict . remove ( ) n n policy_stats . record_eviction ( ) n } n }	0
Q_741	update the specify message in the queue with a new visibility timeout value in second	C_741_0	public void update_message ( final cloud_queue_message message , final int visibility_timeout_in_seconds ) n throws storage_exception { n this . update_message ( message , visibility_timeout_in_seconds , enum_set . of ( message_update_fields . visibility ) , n null / * options * / , null / * op_context * / ) n }	1
Q_741	update the specify message in the queue with a new visibility timeout value in second	C_741_1	override n public connection_factory create_connection_factory ( jms_jca_connection_factory jca_connection_factory , jms_jca_managed_connection_factory jca_managed_connection_factory ) { n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . entry ( this , tc , codstr , new object [ ] { jca_connection_factory , jca_managed_connection_factory } ) n connection_factory cf = new jms_connection_factory_impl ( jca_connection_factory , jca_managed_connection_factory ) n if ( trace_component . is_any_tracing_enabled ( ) tc . is_entry_enabled ( ) ) n sib_tr . exit ( this , tc , codstr , cf ) n return cf n }	0
Q_741	update the specify message in the queue with a new visibility timeout value in second	C_741_2	public random get_random ( ) { n try { n if ( thread_random . get ( ) = = null ) { n random t = ( random ) random_class . new_instance ( ) n if ( t . get_state_pointer ( ) = null ) { n / / todo attach this thing to deallocator n / / if it codstr t care then n } n thread_random . set ( t ) n return t n } n n n return thread_random . get ( ) n } catch ( exception e ) { n throw new runtime_exception ( e ) n } n }	0
Q_742	contribution from naoki nishihara from oki for issue tagint sip lb can not forward when node be listen on tagint	C_742_0	protected array_list < sip_node > get_reachable_sip_node_info ( inet_address balancer_addr , array_list < sip_node > info ) { n if ( balancer_addr . is_loopback_address ( ) ) { n return info n } n n array_list < sip_node > rv = new array_list < sip_node > ( ) n for ( sip_node node info ) { n if ( logger . is_logging_enabled ( stack_logger . trace_trace ) ) { n logger . log_trace ( codstr + node + codstr ) n } n try { n network_interface ni = network_interface . get_by_inet_address ( inet_address . get_by_name ( node . get_ip ( ) ) ) n / / fixme how can i determine the ttl ? n boolean b = balancer_addr . is_reachable ( ni , codint , codint ) n if ( logger . is_logging_enabled ( stack_logger . trace_trace ) ) { n logger . log_trace ( node + codstr + b ) n } n if ( b ) { n rv . add ( node ) n } n } catch ( io_exception e ) { n logger . log_error ( codstr , e ) n } n } n n if ( logger . is_logging_enabled ( stack_logger . trace_trace ) ) { n logger . log_trace ( codstr + balancer_addr + codstr + rv + codstr ) n } n n return rv n }	1
Q_742	contribution from naoki nishihara from oki for issue tagint sip lb can not forward when node be listen on tagint	C_742_1	public static type get_first_visible_super_class ( class_doc class_doc , n configuration configuration ) { n if ( class_doc = = null ) { n return null n } n type sup = class_doc . superclass_type ( ) n class_doc sup_class_doc = class_doc . superclass ( ) n while ( sup = null n ( ( sup_class_doc . is_public ( ) n is_linkable ( sup_class_doc , configuration ) ) ) ) { n if ( sup_class_doc . superclass ( ) . qualified_name ( ) . equals ( sup_class_doc . qualified_name ( ) ) ) n break n sup = sup_class_doc . superclass_type ( ) n sup_class_doc = sup_class_doc . superclass ( ) n } n if ( class_doc . equals ( sup_class_doc ) ) { n return null n } n return sup n }	0
Q_742	contribution from naoki nishihara from oki for issue tagint sip lb can not forward when node be listen on tagint	C_742_2	private void parse_properties ( i_transaction transaction , n http_servlet_request req , n xml_writer generated_xml , n string path , n int type , n vector < string > properties_vector , n string mime_type ) throws webdav_exception { n n stored_object so = store . get_stored_object ( transaction , path ) n if ( so = = null ) return n n boolean is_folder = so . is_folder ( ) n final string creationdate = creation_date_format ( so . get_creation_date ( ) ) n final string last_modified = last_modified_date_format ( so . get_last_modified ( ) ) n string resource_length = string . value_of ( so . get_resource_length ( ) ) n n / / resource_info resource_info = new resource_info ( path , resources ) n n generated_xml . write_element ( codstr , xml_writer . opening ) n string status = codstr + webdav_status . sc_ok + codstr + webdav_status . get_status_text ( webdav_status . sc_ok ) n n / / generating href element n generated_xml . write_element ( codstr , xml_writer . opening ) n n string href = req . get_context_path ( ) n string servlet_path = req . get_servlet_path ( ) n if ( servlet_path = null ) { n if ( ( href . ends_with ( codstr ) ) ( servlet_path . starts_with ( codstr ) ) ) { n href + = servlet_path . substring ( codint ) n } else { n href + = servlet_path n } n } n if ( ( href	0
Q_743	start the open_dj in_memory directory server	C_743_0	override n public void start ( final logger logger ) { n try { n logger . log_info ( codstr ) n final memory_backend backend n if ( get_ldif_file ( ) = = null ) { n backend = new memory_backend ( ) n } else { n final input_stream input_stream = new file_input_stream ( get_ldif_file ( ) ) n final ldif_entry_reader reader = new ldif_entry_reader ( input_stream ) n backend = new memory_backend ( reader ) n } n final server_connection_factory < ldap_client_context , integer > connection_handler = connections . new_server_connection_factory ( backend ) n final ldap_listener_options options = new ldap_listener_options ( ) . set_backlog ( codint ) n listener = new ldap_listener ( codstr , get_server_port ( ) , connection_handler , options ) n logger . log_info ( codstr ) n } catch ( final io_exception e ) { n logger . log_error ( codstr , e ) n } n }	1
Q_743	start the open_dj in_memory directory server	C_743_1	private static field find_id_field ( final object value ) { n field res = null n final class < ? > type = value . get_class ( ) n if ( o_database_record_thread_local . instance ( ) . is_defined ( ) ) { n res = o_object_entity_serializer . get_id_field ( type ) n } else { n final string id_field = o_object_serializer_helper . get_object_id_field_name ( value ) n if ( id_field = null ) { n try { n res = type . get_declared_field ( id_field ) n } catch ( no_such_field_exception e ) { n logger . warn ( string n . format ( codstr s codstr s codstr , id_field , type . get_simple_name ( ) ) , e ) n } n } n } n return res n }	0
Q_743	start the open_dj in_memory directory server	C_743_2	public int get_index ( string method_name , class . param_types ) { n for ( int i = codint , n = method_names . length i < n i + + ) n if ( method_names [ i ] . equals ( method_name ) arrays . equals ( param_types , parameter_types [ i ] ) ) return i n throw new illegal_argument_exception ( codstr + method_name + codstr + arrays . to_string ( param_types ) ) n }	0
Q_744	remove the give attribute from this tag	C_744_0	public boolean remove_attributes ( final boolean update_client , n final string . attribute_names ) { n n boolean removed = false n boolean listener_invoked = false n final lock lock = shared_object . get_lock ( access_object ) . write_lock ( ) n try { n lock . lock ( ) n n if ( attributes_map = = null ) { n return false n } n n for ( final string attribute_name attribute_names ) { n n final abstract_attribute attribute = attributes_map n . get ( attribute_name ) n n if ( attribute = null ) { n attribute . unset_owner_tag ( this ) n attributes_map . remove ( attribute_name ) n removed = true n } n n } n n if ( removed ) { n attributes = new abstract_attribute [ attributes_map . size ( ) ] n attributes_map . values ( ) . to_array ( attributes ) n set_modified ( true ) n shared_object . set_child_modified ( true ) n n / / invoke_listener n if ( update_client ) { n final attribute_remove_listener listener = shared_object n . get_attribute_remove_listener ( access_object ) n if ( listener = null ) { n final attribute_remove_listener . removed_event event = new attribute_remove_listener . removed_event ( n this , attribute_names ) n n listener . removed_attributes ( event ) n listener_invoked = true n } n } n } n } finally { n lock . unlock ( ) n } n n if ( listener_invoked ) { n final	1
Q_744	remove the give attribute from this tag	C_744_1	public final void enum_body_declarations ( ) throws recognition_exception { n int enum_body_declarations_start_index = input . index ( ) n n try { n if ( state . backtracking > codint already_parsed_rule ( input , codint ) ) { return } n n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint ( codstr ( class_body_declaration ) * ) n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint codstr ( class_body_declaration ) * n { n match ( input , codint , follow_52_in_enum_body_declarations521 ) if ( state . failed ) return n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint ( class_body_declaration ) * n loop26 n while ( true ) { n int alt26 = codint n int la26_0 = input . la ( codint ) n if ( ( la26_0 = = enum la26_0 = = identifier ( la26_0 > = codint la26_0 < = codint ) la26_0 = = codint la26_0 = = codint la26_0 = = codint la26_0 = = codint ( la26_0 > = codint la26_0 < = codint ) la26_0 = = codint la26_0 = = codint la26_0 = = codint ( la26_0 > = codint la26_0 < = codint ) la26_0 = =	0
Q_744	remove the give attribute from this tag	C_744_2	void add_literal ( token literal_content ) { n check_argument ( literal_content . kind = = soy_file_parser_constants . literal_raw_text_content ) n n maybe_finish_basic ( ) n / / note the literal_raw_text_content already has the correct image content ( it matches the n / / closing { / literal } but excludes the actual closing tag ) . n if ( literal_content . image . is_empty ( ) ) { n append ( literal_content , literal_content . image ) n } n discontinuity_reason = reason . literal n }	0
Q_745	set the markupid into the model	C_745_0	override n protected void on_after_render ( ) n { n super . on_after_render ( ) n if ( get_default_model ( ) = null ) { n final ui_table_header headermodel = ( ui_table_header ) get_default_model_object ( ) n headermodel . set_markup_id ( this . get_markup_id ( ) ) n } n }	1
Q_745	set the markupid into the model	C_745_1	public void marshall ( kinesis_streams_output kinesis_streams_output , protocol_marshaller protocol_marshaller ) { n n if ( kinesis_streams_output = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( kinesis_streams_output . get_resource_arn ( ) , resourcearn_binding ) n protocol_marshaller . marshall ( kinesis_streams_output . get_role_arn ( ) , rolearn_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_745	set the markupid into the model	C_745_2	check_for_null n protected i_compilation_unit get_compilation_unit ( i_marker marker ) { n i_resource res = marker . get_resource ( ) n if ( res instanceof i_file res . is_accessible ( ) ) { n i_java_element element = java_core . create ( ( i_file ) res ) n if ( element instanceof i_compilation_unit ) { n return ( i_compilation_unit ) element n } n } n return null n }	0
Q_746	this method retrieve tagstr property from bw	C_746_0	private boolean is_is_ft ( bw bw ) { n boolean value = false / / default to false ( ? ) n for ( object o bw . get_rest ( ) ) { n if ( o . get_class ( ) . equals ( jaxb_element . class ) ) { n / / should never be other than boolean according to n / / com . tibco . xmlns . applicationmanagement . bw_service_type n suppress_warnings ( codstr ) n jaxb_element < boolean > e = ( jaxb_element < boolean > ) o n value = e . get_value ( ) n } n } n n return value n }	1
Q_746	this method retrieve tagstr property from bw	C_746_1	public void close ( ) { n n / / result set n if ( m_resultset = null ) { n try { n m_resultset . close ( ) n } catch ( exception e ) { n e . print_stack_trace ( ) n n } n } n / / statement n if ( m_statement = null ) { n try { n m_statement . close ( ) n } catch ( exception e ) { n e . print_stack_trace ( ) n n } n } n / / prepared statement n if ( m_prepared_statement = null ) { n try { n m_prepared_statement . close ( ) n } catch ( exception e ) { n e . print_stack_trace ( ) n n } n } n n }	0
Q_746	this method retrieve tagstr property from bw	C_746_2	protected void dispatch_queued_events ( ) { n / / don codstr re already dispatching , that would allow reentrancy and out _ of _ order events . instead , leave n / / the events to be dispatched after the in _ progress dispatch is complete . n if ( is_dispatching . get ( ) ) { n return n } n n is_dispatching . set ( true ) n try { n while ( true ) { n event_with_handler event_with_handler = events_to_dispatch . get ( ) . poll ( ) n if ( event_with_handler = = null ) { n break n } n n if ( event_with_handler . handler . is_valid ( ) ) { n dispatch ( event_with_handler . event , event_with_handler . handler ) n } n } n } finally { n is_dispatching . set ( false ) n } n }	0
Q_747	"this will create an alias file "" alias"	C_747_0	private void copy_aliases_file ( ) throws io_exception { n / / create the aliases . properties in the target folder n file aliases_file = get_aliases_file ( ) n file_writer file = null n buffered_writer buffer = null n print_writer aliases_file_out = null n try { n file = new file_writer ( aliases_file ) n buffer = new buffered_writer ( file ) n aliases_file_out = new print_writer ( buffer ) n n / / copy all of the required aliases for the project , and map them with their path in designer5 . prefs n for ( dependency dependency get_jar_dependencies ( ) ) { n string jar_name = get_jar_name ( dependency , false ) n string jar_alias = format_alias ( get_jar_alias ( dependency , false ) ) n string jar_path = get_dependency_path ( jar_name ) n n if ( new file ( jar_path ) . exists ( ) ) { n aliases_file_out . println ( tibco_alias_prefix + jar_alias + codstr + jar_path ) n } n } n n for ( dependency dependency get_projlibs_dependencies ( ) ) { n string projlib_name = get_projlib_name ( dependency ) n string projlib_alias = format_alias ( get_projlib_alias ( dependency ) ) n string projlib_path = get_dependency_path ( projlib_name ) n n aliases_file_out . println ( tibco_alias_prefix + projlib_alias + codstr + projlib_path ) n } n } finally { n aliases_file_out . close ( ) n buffer . close ( ) n file . close ( ) n } n }	1
Q_747	"this will create an alias file "" alias"	C_747_1	public void update_lob_usage ( boolean commit ) { n n if ( has_lob_ops ) { n return n } n n has_lob_ops = false n n if ( commit ) { n for ( int i = codint i < created_lobs . size ( ) i + + ) { n long lob_id = created_lobs . get ( i ) n int delta = lob_usage_count . get ( lob_id , codint ) n n if ( delta = = codint ) { n lob_usage_count . remove ( lob_id ) n created_lobs . remove ( i ) n n i _ n } else if ( session . is_batch ) { n database . lob_manager . adjust_usage_count ( lob_id , delta _ codint ) n lob_usage_count . remove ( lob_id ) n created_lobs . remove ( i ) n n i _ n } n } n n if ( lob_usage_count . is_empty ( ) ) { n iterator it = lob_usage_count . key_set ( ) . iterator ( ) n n while ( it . has_next ( ) ) { n long lob_id = it . next_long ( ) n int delta = lob_usage_count . get ( lob_id ) n n database . lob_manager . adjust_usage_count ( lob_id , delta _ codint ) n } n n lob_usage_count . clear ( ) n } n n return n } else { n for ( int i = codint i < created_lobs . size ( ) i + + )	0
Q_747	"this will create an alias file "" alias"	C_747_2	programmatic n public list < string > choices ( final object tagged_object , final string tag_key ) { n final bookmark bookmark = bookmark_service . bookmark_for ( tagged_object ) n final string object_type = bookmark . get_object_type ( ) n n final query q = isis_jdo_support . get_jdo_persistence_manager ( ) . new_named_query ( tag . class , codstr ) n final list < string > results = ( list < string > ) q . execute ( object_type , tag_key ) n return results n }	0
Q_748	obtain a code runtime_instance instance use the method describe in	C_748_0	private static runtime_instance find_delegate ( ) { n try { n runtime_instance result = create_runtime_instance_from_spi ( ) n if ( result = = null ) { n result = create_runtime_instance_from_configuration_file ( ) n } n n if ( result = = null ) { n final string delegate_class_name = system . get_property ( rdf_api_spi_property ) n if ( delegate_class_name = null ) { n result = create_runtime_instance_for_class_name ( delegate_class_name ) n } n } n n if ( result = = null ) { n result = new default_runtime_instance ( ) n } n n return result n } catch ( final exception ex ) { n throw new illegal_state_exception ( codstr , ex ) n } n }	1
Q_748	obtain a code runtime_instance instance use the method describe in	C_748_1	private boolean ctx_has_error_node ( parser_rule_context ctx ) { n for ( int i = codint i < ctx . children . size ( ) i + + ) { n if ( ctx . get_child ( i ) instanceof error_node ) { n return true n } n } n return false n }	0
Q_748	obtain a code runtime_instance instance use the method describe in	C_748_2	public static list < offline > new_offline ( collection < node > nodes ) { n return nodes . stream ( ) . map ( offline new ) . collect ( collectors . to_list ( ) ) n }	0
Q_749	test if set be null or empty	C_749_0	public static < t > void is_null_or_empty ( set < t > set , string message ) { n n is_true ( set = = null set . size ( ) = = codint , message ) n }	1
Q_749	test if set be null or empty	C_749_1	override n public e_class get_ifc_slab ( ) { n if ( ifc_slab_e_class = = null ) { n ifc_slab_e_class = ( e_class ) e_package . registry . instance . get_e_package ( ifc4_package . e_ns_uri ) . get_e_classifiers ( ) n . get ( codint ) n } n return ifc_slab_e_class n }	0
Q_749	test if set be null or empty	C_749_2	public boolean is_geo_xy ( ) { n if ( ( x_axis = = null ) ( y_axis = = null ) ) return false n return null = get_projection ( ) ( projection instanceof lat_lon_projection ) n }	0
Q_750	add a file to the list of file that be delete locally but not yet delete from index use	C_750_0	public void add_to_deleted_files_not_updated ( file file ) { n deleted_files_not_updated . add ( file ) n file_to_status . put ( file , status . deleted ) n }	1
Q_750	add a file to the list of file that be delete locally but not yet delete from index use	C_750_1	public static string to_bundle_name ( string bundle_base_name , locale locale ) { n n string base_name = bundle_base_name n if ( is_plugin_resouce_path ( bundle_base_name ) ) { n base_name = bundle_base_name . replace ( codstr , codstr ) n } n if ( locale = = null ) { n return base_name n } n n string language = locale . get_language ( ) n string country = locale . get_country ( ) n string variant = locale . get_variant ( ) n n if ( language = = codstr country = = codstr variant = = codstr ) { n return base_name n } n n string_buffer sb = new string_buffer ( base_name ) n sb . append ( codstr ) n if ( variant = codstr ) { n sb . append ( language ) . append ( codstr ) . append ( country ) . append ( codstr ) n . append ( variant ) n } else if ( country = codstr ) { n sb . append ( language ) . append ( codstr ) . append ( country ) n } else { n sb . append ( language ) n } n return sb . to_string ( ) n }	0
Q_750	add a file to the list of file that be delete locally but not yet delete from index use	C_750_2	override n public final long from_string ( final map < string , object > p_add_param , n final string p_str_val ) throws exception { n if ( p_str_val = = null codstr . equals ( p_str_val ) ) { n return null n } n if ( p_add_param = null ) { n string dgsep = ( string ) p_add_param . get ( codstr ) n if ( dgsep = null ) { n string str_val = p_str_val . replace ( dgsep , codstr ) n return long . value_of ( str_val ) n } n } n return long . value_of ( p_str_val ) n }	0
Q_751	return a maybe that emit the result of a specify function to the pair of value emit by the	C_751_0	check_return_value n non_null n scheduler_support ( scheduler_support . none ) n public final < u , r > maybe < r > flat_map ( function < ? super t , ? extends maybe_source < ? extends u mapper , n bi_function < ? super t , ? super u , ? extends r > result_selector ) { n object_helper . require_non_null ( mapper , codstr ) n object_helper . require_non_null ( result_selector , codstr ) n return rx_java_plugins . on_assembly ( new maybe_flat_map_bi_selector < t , u , r > ( this , mapper , result_selector ) ) n }	1
Q_751	return a maybe that emit the result of a specify function to the pair of value emit by the	C_751_1	protected string get_current_release_version ( ) { n http_url_connection conn = null n try { n final string str = settings . get_string ( settings . keys . engine_version_check_url , codstr ) n final url url = new url ( str ) n final url_connection_factory factory = new url_connection_factory ( settings ) n conn = factory . create_http_url_connection ( url ) n conn . connect ( ) n if ( conn . get_response_code ( ) = codint ) { n return null n } n final string release_version = io_utils . to_string ( conn . get_input_stream ( ) , standard_charsets . utf_8 ) n if ( release_version = null ) { n return release_version . trim ( ) n } n } catch ( malformed_url_exception ex ) { n logger . debug ( codstr ) n } catch ( url_connection_failure_exception ex ) { n logger . debug ( codstr ) n } catch ( io_exception ex ) { n logger . debug ( codstr ) n } finally { n if ( conn = null ) { n conn . disconnect ( ) n } n } n return null n }	0
Q_751	return a maybe that emit the result of a specify function to the pair of value emit by the	C_751_2	public void execute ( bbox world_bounds ) { n view end_view = map_presenter . get_view_port ( ) . as_view ( world_bounds , zoom_option . level_closest ) n map_presenter . get_view_port ( ) . register_animation ( navigation_animation_factory . create_zoom_in ( map_presenter , end_view ) ) n }	0
Q_752	return a completable instance that call the give on_terminate callback just before this completable	C_752_0	check_return_value n scheduler_support ( scheduler_support . none ) n public final completable do_on_terminate ( final action on_terminate ) { n return do_on_lifecycle ( functions . empty_consumer ( ) , functions . empty_consumer ( ) , n functions . empty_action , on_terminate , n functions . empty_action , functions . empty_action ) n }	1
Q_752	return a completable instance that call the give on_terminate callback just before this completable	C_752_1	private static < t > listenable_future < t > submit_and_add_queue_listener ( n listening_executor_service executor_service , callable < t > task , n final blocking_queue < future < t queue ) { n final listenable_future < t > future = executor_service . submit ( task ) n future . add_listener ( new runnable ( ) { n override public void run ( ) { n queue . add ( future ) n } n } , direct_executor ( ) ) n return future n }	0
Q_752	return a completable instance that call the give on_terminate callback just before this completable	C_752_2	override n public object e_get ( int feature_id , boolean resolve , boolean core_type ) { n switch ( feature_id ) { n case afplib_package . ide_structure_flags n return get_flags ( ) n case afplib_package . ide_structure_format n return get_format ( ) n case afplib_package . ide_structure_size1 n return get_size1 ( ) n case afplib_package . ide_structure_size2 n return get_size2 ( ) n case afplib_package . ide_structure_size3 n return get_size3 ( ) n case afplib_package . ide_structure_size4 n return get_size4 ( ) n } n return super . e_get ( feature_id , resolve , core_type ) n }	0
Q_753	subscribe a give completable_observer to this completable and return the give	C_753_0	check_return_value n scheduler_support ( scheduler_support . none ) n public final < e extends completable_observer > e subscribe_with ( e observer ) { n subscribe ( observer ) n return observer n }	1
Q_753	subscribe a give completable_observer to this completable and return the give	C_753_1	private void push ( final int type ) { n / / creates and / or resizes the output stack array if necessary n if ( output_stack = = null ) { n output_stack = new int [ codint ] n } n int n = output_stack . length n if ( output_stack_top > = n ) { n int [ ] t = new int [ math . max ( output_stack_top + codint , codint * n ) ] n system . arraycopy ( output_stack , codint , t , codint , n ) n output_stack = t n } n / / pushes the type on the output stack n output_stack [ output_stack_top + + ] = type n / / updates the maximun height reached by the output stack , if needed n int top = owner . input_stack_top + output_stack_top n if ( top > owner . output_stack_max ) { n owner . output_stack_max = top n } n }	0
Q_753	subscribe a give completable_observer to this completable and return the give	C_753_2	validation_result clean_multi_value_property_key ( string name ) { n validation_result vr = clean_object_key ( name ) n n name = ( string ) vr . get_object ( ) n n / / make sure its not a known property key ( reserved in the case of multi _ value ) n n try { n restricted_multi_value_fields rf = restricted_multi_value_fields . value_of ( name ) n / / noinspection constant_conditions n if ( rf = null ) { n vr . set_error_desc ( name + codstr ) n vr . set_error_code ( codint ) n vr . set_object ( null ) n } n } catch ( throwable t ) { n / / no _ op n } n n return vr n }	0
Q_754	set the url to which a user should be redirect if the switch fail	C_754_0	public void set_switch_failure_url ( string switch_failure_url ) { n assert . is_true ( url_utils . is_valid_redirect_url ( switch_failure_url ) , n codstr ) n this . switch_failure_url = switch_failure_url n }	1
Q_754	set the url to which a user should be redirect if the switch fail	C_754_1	public < t > void set_default_value ( class < t > type , t default_value ) { n assert . not_null ( type , codstr ) n this . default_values . put ( type , default_value ) n }	0
Q_754	set the url to which a user should be redirect if the switch fail	C_754_2	protected boolean has_content_type ( ) { n n boolean result = false n if ( this . request . get_header ( rest_message_headers . content_type ) = null ) { n result = true n } else { n logger . error ( codstr ) n rest_error_handler . write_error_response ( this . message_event , n http_response_status . bad_request , n codstr ) n } n return result n }	0
Q_755	return the constructor identify by argument or code null code if not find	C_755_0	public ctor_descriptor get_ctor_descriptor ( final class [ ] args , final boolean declared ) { n ctor_descriptor ctor_descriptor = get_ctors ( ) . get_ctor_descriptor ( args ) n n if ( ( ctor_descriptor = null ) ctor_descriptor . match_declared ( declared ) ) { n return ctor_descriptor n } n return null n }	1
Q_755	return the constructor identify by argument or code null code if not find	C_755_1	public void connect_server ( connection connection ) { n thread_context . check_thread ( ) n n / / handlers for all request types are registered since requests can be proxied between servers . n / / note we do not use method references here because the codstr variable changes over time . n / / we have to use lambdas to ensure the request handler points to the current state . n connection . handler ( register_request . class , ( function < register_request , completable_future < register_response ) request _ > state . register ( request ) ) n connection . handler ( connect_request . class , ( function < connect_request , completable_future < connect_response ) request _ > state . connect ( request , connection ) ) n connection . handler ( keep_alive_request . class , ( function < keep_alive_request , completable_future < keep_alive_response ) request _ > state . keep_alive ( request ) ) n connection . handler ( unregister_request . class , ( function < unregister_request , completable_future < unregister_response ) request _ > state . unregister ( request ) ) n connection . handler ( reset_request . class , ( consumer < reset_request > ) request _ > state . reset ( request ) ) n connection . handler ( configure_request . class , ( function < configure_request , completable_future < configure_response ) request _ > state . configure ( request ) ) n connection . handler ( install_request . class , ( function	0
Q_755	return the constructor identify by argument or code null code if not find	C_755_2	private map < string , provisioning_feature_definition > get_product_ext_feature_definitions ( string product_name ) { n read_product_ext_feature_locations ( ) n map < string , provisioning_feature_definition > features = null n n bundle_repository_holder feature_data = bundle_repository_registry . get_repository_holder ( product_name ) n if ( feature_data = null ) { n file product_install_dir = new file ( feature_data . get_install_dir ( ) ) n n if ( product_install_dir . exists ( ) ) { n file features_dir = new file ( product_install_dir , feature_dir ) n if ( features_dir . exists ( ) ) { n features = new tree_map < string , provisioning_feature_definition > ( ) n file [ ] product_manifest_files = features_dir . list_files ( mf_filter ) n if ( product_manifest_files = null ) { n for ( file product_manifest_file product_manifest_files ) { n try { n provisioning_feature_definition fd = new subsystem_feature_definition_impl ( product_name , product_manifest_file ) n features . put ( fd . get_symbolic_name ( ) , fd ) n } catch ( io_exception e ) { n / / todo proper nls message n throw new feature_tool_exception ( codstr + product_manifest_file , n ( string ) null , n e , n return_code . bad_feature_definition ) n } n } n } n } n } n } n n return features n }	0
Q_756	copy a link file to another link file	C_756_0	public static void copy_file ( final file src_file , final file dest_file ) throws io_exception { n check_file_copy ( src_file , dest_file ) n _copy_file ( src_file , dest_file ) n }	1
Q_756	copy a link file to another link file	C_756_1	public waiter < describe_auto_scaling_groups_request > group_exists ( ) { n n return new waiter_builder < describe_auto_scaling_groups_request , describe_auto_scaling_groups_result > ( ) n . with_sdk_function ( new describe_auto_scaling_groups_function ( client ) ) n . with_acceptors ( new group_exists . is_true_matcher ( ) , new group_exists . is_false_matcher ( ) ) n . with_default_polling_strategy ( new polling_strategy ( new max_attempts_retry_strategy ( codint ) , new fixed_delay_strategy ( codint ) ) ) n . with_executor_service ( executor_service ) . build ( ) n }	0
Q_756	copy a link file to another link file	C_756_2	private constant_dynamic read_constant_dynamic ( n final int constant_pool_entry_index , final char [ ] char_buffer ) { n constant_dynamic constant_dynamic = constant_dynamic_values [ constant_pool_entry_index ] n if ( constant_dynamic = null ) { n return constant_dynamic n } n int cp_info_offset = cp_info_offsets [ constant_pool_entry_index ] n int name_and_type_cp_info_offset = cp_info_offsets [ read_unsigned_short ( cp_info_offset + codint ) ] n string name = read_utf8 ( name_and_type_cp_info_offset , char_buffer ) n string descriptor = read_utf8 ( name_and_type_cp_info_offset + codint , char_buffer ) n int bootstrap_method_offset = bootstrap_method_offsets [ read_unsigned_short ( cp_info_offset ) ] n handle handle = ( handle ) read_const ( read_unsigned_short ( bootstrap_method_offset ) , char_buffer ) n object [ ] bootstrap_method_arguments = new object [ read_unsigned_short ( bootstrap_method_offset + codint ) ] n bootstrap_method_offset + = codint n for ( int i = codint i < bootstrap_method_arguments . length i + + ) { n bootstrap_method_arguments [ i ] = read_const ( read_unsigned_short ( bootstrap_method_offset ) , char_buffer ) n bootstrap_method_offset + = codint n } n return constant_dynamic_values [ constant_pool_entry_index ] = n new constant_dynamic ( name , descriptor , handle , bootstrap_method_arguments ) n }	0
Q_757	move to next element	C_757_0	private boolean move_to_next ( ) { n if ( last ) { n / / last has been set to true , so no more rows to iterate _ close everything n n if ( close_on_end ) { n query . close ( ) n } else { n query . close_result_set ( result_set_mapper . get_result_set ( ) ) n } n n return false n } n n while ( true ) { n n if ( result_set_mapper . next ( ) ) { n / / no more rows , no more parsing , previous_element is the last one to iterate n last = true n return entity_aware_mode n } n n / / parse row n n object [ ] objects = result_set_mapper . parse_objects ( types ) n n object row = query . resolve_row_results ( objects ) n n new_element = ( t ) row n n if ( entity_aware_mode ) { n n if ( count = = codint previous_element = = null ) { n previous_element = new_element n n continue n } n n if ( previous_element = null new_element = null ) { n boolean equals n n if ( new_element . get_class ( ) . is_array ( ) ) { n equals = arrays . equals ( ( object [ ] ) previous_element , ( object [ ] ) new_element ) n } else { n equals = previous_element . equals ( new_element ) n } n n if	1
Q_757	move to next element	C_757_1	public stream < discussion > get_commit_discussions_stream ( object project_id_or_path , integer commit_id ) throws git_lab_api_exception { n pager < discussion > pager = get_commit_discussions_pager ( project_id_or_path , commit_id , get_default_per_page ( ) ) n return ( pager . stream ( ) ) n }	0
Q_757	move to next element	C_757_2	public static string encode_string_url ( byte_buffer source , boolean wrap ) { n return encoder . encode_string ( source , wrap , true ) n }	0
Q_758	copy link input_stream to a new link fast_char_array_writer use buffer and specify encode	C_758_0	public static fast_char_array_writer copy ( final input_stream input , final string encoding , final int count ) throws io_exception { n try ( fast_char_array_writer output = create_fast_char_array_writer ( ) ) { n copy ( input , output , encoding , count ) n return output n } n }	1
Q_758	copy link input_stream to a new link fast_char_array_writer use buffer and specify encode	C_758_1	private boolean contains_numeric_matcher ( string matcher_expression ) { n for ( string numeric_matcher numeric_matchers ) { n if ( matcher_expression . contains ( numeric_matcher ) ) { n return true n } n } n n return false n }	0
Q_758	copy link input_stream to a new link fast_char_array_writer use buffer and specify encode	C_758_2	public static void remove_all ( ) { n internal_thread_local_map thread_local_map = internal_thread_local_map . get_if_set ( ) n if ( thread_local_map = = null ) { n return n } n n try { n object v = thread_local_map . indexed_variable ( variables_to_remove_index ) n if ( v = null v = internal_thread_local_map . unset ) { n suppress_warnings ( codstr ) n set < fast_thread_local < ? variables_to_remove = ( set < fast_thread_local < ? ) v n fast_thread_local < ? > [ ] variables_to_remove_array = n variables_to_remove . to_array ( new fast_thread_local [ codint ] ) n for ( fast_thread_local < ? > tlv variables_to_remove_array ) { n tlv . remove ( thread_local_map ) n } n } n } finally { n internal_thread_local_map . remove ( ) n } n }	0
Q_759	insert node after provide node	C_759_0	public void insert_after ( final node new_child , final node ref_child ) { n int sibling_index = ref_child . get_sibling_index ( ) + codint n if ( sibling_index = = ref_child . parent_node . get_child_nodes_count ( ) ) { n ref_child . parent_node . add_child ( new_child ) n } else { n ref_child . parent_node . insert_child ( new_child , sibling_index ) n } n }	1
Q_759	insert node after provide node	C_759_1	"public synchronized thread start_thread ( string name ) throws illegal_thread_state_exception n { n if ( running ) n { n log . info ( codstr + name ) n this . running = true n this_thread = new thread ( this , name ) n this_thread . set_daemon ( should_start_as_daemon ( ) ) / / set whether we codstr daemon must be stopped before it may be started "" ) n } n }"	0
Q_759	insert node after provide node	C_759_2	private synchronized void start_querying ( ) { n boolean consistent_snapshot_first_query_has_run = false n for ( forest forest get_forest_config ( ) . list_forests ( ) ) { n query_task runnable = new query_task ( get_move_mgr ( ) , this , forest , query , codint , codint ) n if ( consistent_snapshot = = true consistent_snapshot_first_query_has_run = = false ) { n / / let codstr ll have the server_timestamp set n / / before we launch all the parallel threads n runnable . run ( ) n consistent_snapshot_first_query_has_run = true n } else { n thread_pool . execute ( runnable ) n } n } n }	0
Q_760	return code true code if class or resource name match	C_760_0	protected boolean is_matching_rules ( final string name , final string . rules ) { n for ( string rule rules ) { n if ( wildcard . equals_or_match ( name , rule ) ) { n return true n } n } n return false n }	1
Q_760	return code true code if class or resource name match	C_760_1	static synchronized boolean restart_singleton ( cloud_watch_metric_config config ) { n if ( singleton = = null ) { n throw new illegal_state_exception ( metric_collector_support . class . get_simple_name ( ) n + codstr ) n } n log . info ( codstr + metric_collector_support . class . get_simple_name ( ) ) n singleton . stop ( ) n / / singleton is set to null at this point via the stop method n return create_and_start_collector ( config ) n }	0
Q_760	return code true code if class or resource name match	C_760_2	public void marshall ( describe_agents_request describe_agents_request , protocol_marshaller protocol_marshaller ) { n n if ( describe_agents_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( describe_agents_request . get_agent_ids ( ) , agentids_binding ) n protocol_marshaller . marshall ( describe_agents_request . get_filters ( ) , filters_binding ) n protocol_marshaller . marshall ( describe_agents_request . get_max_results ( ) , maxresults_binding ) n protocol_marshaller . marshall ( describe_agents_request . get_next_token ( ) , nexttoken_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_761	find the last recording that match the give criterion	C_761_0	public boolean find_last_matching_recording ( n final long min_recording_id , n final string channel_fragment , n final int stream_id , n final int session_id , n final long correlation_id , n final long control_session_id ) n { n find_last_matching_recording_request_encoder n . wrap_and_apply_header ( buffer , codint , message_header_encoder ) n . control_session_id ( control_session_id ) n . correlation_id ( correlation_id ) n . min_recording_id ( min_recording_id ) n . session_id ( session_id ) n . stream_id ( stream_id ) n . channel ( channel_fragment ) n n return offer ( find_last_matching_recording_request_encoder . encoded_length ( ) ) n }	1
Q_761	find the last recording that match the give criterion	C_761_1	public final void formal_parameter_decls_rest ( ) throws recognition_exception { n int formal_parameter_decls_rest_start_index = input . index ( ) n n try { n if ( state . backtracking > codint already_parsed_rule ( input , codint ) ) { return } n n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint ( variable_declarator_id ( codstr formal_parameter_decls ) ? codstr variable_declarator_id ) n int alt82 = codint n int la82_0 = input . la ( codint ) n if ( ( la82_0 = = identifier ) ) { n alt82 = codint n } n else if ( ( la82_0 = = codint ) ) { n alt82 = codint n } n n else { n if ( state . backtracking > codint ) { state . failed = true return } n no_viable_alt_exception nvae = n new no_viable_alt_exception ( codstr , codint , codint , input ) n throw nvae n } n n switch ( alt82 ) { n case codint n / / src / main / resources / org / drools / compiler / semantics / java / parser / java . g codint codint variable_declarator_id ( codstr formal_parameter_decls ) ? n { n push_follow ( follow_variable_declarator_id_in_formal_parameter_decls_rest2070 ) n variable_declarator_id ( ) n state . _fsp _ n if ( state . failed ) return n / / src / main / resources / org / drools / compiler	0
Q_761	find the last recording that match the give criterion	C_761_2	public static string get_response_desc ( int code ) { n string [ ] iab_msgs = ( codstr + n codstr + n codstr + n codstr ) . split ( codstr ) n string [ ] iabhelper_msgs = ( codstr + n codstr + n codstr + n codstr + n codstr + n codstr + n codstr + n codstr + n codstr + n codstr ) . split ( codstr ) n n if ( code < = iabhelper_error_base ) { n int index = iabhelper_error_base _ code n if ( index > = codint index < iabhelper_msgs . length ) return iabhelper_msgs [ index ] n else return string . value_of ( code ) + codstr n } else if ( code < codint code > = iab_msgs . length ) { n return string . value_of ( code ) + codstr n } else { n return iab_msgs [ code ] n } n }	0
Q_762	generate column definition for create table add column	C_762_0	public string generate_column_type_definition ( hive_type_info hive_type_info , string column_name ) { n return string . format ( n hive_metastore_util . column_type , n column_name , n hive_type_info . to_string ( ) , n hive_type_info . get_comment ( ) n ) n }	1
Q_762	generate column definition for create table add column	C_762_1	public void marshall ( reputation_options reputation_options , protocol_marshaller protocol_marshaller ) { n n if ( reputation_options = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( reputation_options . get_reputation_metrics_enabled ( ) , reputationmetricsenabled_binding ) n protocol_marshaller . marshall ( reputation_options . get_last_fresh_start ( ) , lastfreshstart_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_762	generate column definition for create table add column	C_762_2	private void init ( cms_object cms , final window window , final cms_accounts_app app ) { n n cms_vaadin_utils . read_and_localize_design ( this , cms_vaadin_utils . get_wp_messages_for_current_locale ( ) , null ) n m_icon . set_content_mode ( content_mode . html ) n m_icon . set_value ( font_open_cms . warning . get_html ( ) ) n m_icon2 . set_content_mode ( content_mode . html ) n m_icon2 . set_value ( font_open_cms . warning . get_html ( ) ) n m_label_delete_default . set_visible ( false ) n m_cms = cms n m_ok_button . add_click_listener ( new click_listener ( ) { n n private static final long serial_version_uid = _ codint n n public void button_click ( click_event event ) { n n delete_principal ( ) n window . close ( ) n app . reload ( ) n n } n n } ) n n m_cancel_button . add_click_listener ( new click_listener ( ) { n n private static final long serial_version_uid = codint n n public void button_click ( click_event event ) { n n window . close ( ) n n } n n } ) n }	0
Q_763	arrange the url in the following order	C_763_0	static list < url > bring_stage_and_proto_libs_to_front ( string stage_lib_name , list < url > urls ) { n list < url > other_jars = new array_list < > ( ) n list < url > protolib_jars = new array_list < > ( ) n list < url > stage_libjars = new array_list < > ( ) n for ( url url urls ) { n string str = url . to_external_form ( ) n if ( str . ends_with ( codstr ) ) { n int name_idx = str . last_index_of ( codstr ) n if ( name_idx > _ codint ) { n string jar_name = str . substring ( name_idx + codint ) n if ( jar_name . contains ( codstr ) ) { n / / adding only protolib jars n protolib_jars . add ( url ) n } else if ( jar_name . contains ( stage_lib_name ) ) { n stage_libjars . add ( url ) n } else { n other_jars . add ( url ) n } n } else { n other_jars . add ( url ) n } n } else { n other_jars . add ( url ) n } n } n list < url > all_jars = new array_list < > ( ) n if ( stage_libjars . size ( ) = codint ) { n throw new exception_in_initializer_error ( codstr + stage_libjars . size ( ) + n codstr + stage_lib_name ) n } n all_jars .	1
Q_763	arrange the url in the following order	C_763_1	public static base_responses enable ( nitro_service client , lbmonitor resources [ ] ) throws exception { n base_responses result = null n if ( resources = null resources . length > codint ) { n lbmonitor enableresources [ ] = new lbmonitor [ resources . length ] n for ( int i = codint i < resources . length i + + ) { n enableresources [ i ] = new lbmonitor ( ) n enableresources [ i ] . servicename = resources [ i ] . servicename n enableresources [ i ] . servicegroupname = resources [ i ] . servicegroupname n enableresources [ i ] . monitorname = resources [ i ] . monitorname n } n result = perform_operation_bulk_request ( client , enableresources , codstr ) n } n return result n }	0
Q_763	arrange the url in the following order	C_763_2	nonnull n public static list < string > split_to_list ( nonnull string source , nonnull string delimiters , boolean return_delimiters , boolean trim ) { n final list < string > values = new array_list < > ( ) n if ( source = null ) { n final string_tokenizer st = new string_tokenizer ( source , delimiters , return_delimiters ) n while ( st . has_more_tokens ( ) ) { n string value = st . next_token ( ) n if ( trim ) { n value = trim ( value ) n } n values . add ( value ) n } n } n return values n }	0
Q_764	get the table be extend column property	C_764_0	private map < string , list < string get_column_properties ( string table_name , show_table_response show_table_response ) n throws gp_udb_exception { n n list < map < string , list < string column_properties_list = show_table_response . get_properties ( ) n n if ( column_properties_list = = null column_properties_list . size ( ) = codint ) { n throw new gp_udb_exception ( codstr + table_name ) n } n n return column_properties_list . get ( codint ) n }	1
Q_764	get the table be extend column property	C_764_1	does_service_request n public void create ( table_request_options options , operation_context op_context ) throws storage_exception { n if ( op_context = = null ) { n op_context = new operation_context ( ) n } n n op_context . initialize ( ) n options = table_request_options . populate_and_apply_defaults ( options , this . table_service_client ) n n utility . assert_not_null_or_empty ( codstr , this . name ) n n final dynamic_table_entity table_entry = new dynamic_table_entity ( ) n table_entry . get_properties ( ) . put ( table_constants . table_name , new entity_property ( this . name ) ) n n table_operation . insert ( table_entry ) . execute ( this . table_service_client , table_constants . tables_service_tables_name , n options , op_context ) n }	0
Q_764	get the table be extend column property	C_764_2	public void set_style_class ( java . lang . string style_class ) { n get_state_helper ( ) . put ( property_keys . style_class , style_class ) n }	0
Q_765	remove any record from the give selection which be reference by other record not in the selection	C_765_0	public static void remove_referenced_outside_closure ( hollow_read_state_engine state_engine , map < string , bit_set > matches ) { n list < hollow_schema > ordered_schemas = hollow_schema_sorter . dependency_ordered_schema_list ( state_engine ) n collections . reverse ( ordered_schemas ) n n n for ( hollow_schema referenced_schema ordered_schemas ) { n if ( matches . contains_key ( referenced_schema . get_name ( ) ) ) { n for ( hollow_schema referencer_schema ordered_schemas ) { n if ( referencer_schema = = referenced_schema ) n break n n if ( matches . contains_key ( referenced_schema . get_name ( ) ) matches . get ( referenced_schema . get_name ( ) ) . cardinality ( ) > codint ) n traverse_references_outside_closure ( state_engine , referencer_schema . get_name ( ) , referenced_schema . get_name ( ) , matches , remove_referenced_outside_closure ) n } n } n } n }	1
Q_765	remove any record from the give selection which be reference by other record not in the selection	C_765_1	protected final int get_raw_offset ( int offset , char ch ) n { n return ( m_index_ [ offset + ( ch index_stage_1_shift_ ) ] n < < index_stage_2_shift_ ) n + ( ch index_stage_3_mask_ ) n }	0
Q_765	remove any record from the give selection which be reference by other record not in the selection	C_765_2	private string is_logged_in ( ) throws runtime_exception { n if ( this . get_user ( ) = null this . get_user ( ) . get_auth_token ( ) = null ) { n return codstr + this . get_user ( ) . get_auth_token ( ) n } else { n throw new runtime_exception ( codstr ) n } n }	0
Q_766	read one mpeg1 tagint video frame from mpeg1 tagint elementary stream into a	C_766_0	public mpeg_packet frame ( byte_buffer buffer ) throws io_exception { n n byte_buffer dup = buffer . duplicate ( ) n n while ( cur_marker = codint cur_marker = codint skip_to_marker ( ) ) n n n while ( cur_marker = codint read_to_next_marker ( dup ) ) n n n read_to_next_marker ( dup ) n n while ( cur_marker = codint cur_marker = codint read_to_next_marker ( dup ) ) n n n dup . flip ( ) n n picture_header ph = mpeg_decoder . get_picture_header ( dup . duplicate ( ) ) n n return dup . has_remaining ( ) ? new mpeg_packet ( dup , codint , codint , codint , frame_no + + , n ph . picture_coding_type < = mpeg_const . intra_coded ? frame_type . key frame_type . inter , null ) null n }	1
Q_766	read one mpeg1 tagint video frame from mpeg1 tagint elementary stream into a	C_766_1	suppress_warnings ( codstr ) n public final command optimieze_get ( final queue write_queue , final queue < command > executing_cmds , n command optimieze_command ) { n if ( optimieze_command . get_command_type ( ) = = command_type . get_one n optimieze_command . get_command_type ( ) = = command_type . gets_one ) { n if ( this . optimieze_get ) { n optimieze_command = this . merge_get_commands ( optimieze_command , write_queue , executing_cmds , n optimieze_command . get_command_type ( ) ) n } n } n return optimieze_command n }	0
Q_766	read one mpeg1 tagint video frame from mpeg1 tagint elementary stream into a	C_766_2	private void load_type_priorities ( any_object config ) { n any_object tp_object = config . get_any_object ( codstr ) n if ( tp_object = = null ) { n return n } n try { n string [ ] type_priorities_array = get_from_list_or_inherit ( tp_object , codstr ) n this . type_priorities = type_priorities_factory . create_type_priorities ( type_priorities_array ) n } catch ( io_exception e ) { n system . err . println ( codstr ) n e . print_stack_trace ( ) n } n }	0
Q_767	populate a list of rule off of json_node	C_767_0	private list < regex_rule > read_rules ( array_node rules_list ) { n list < regex_rule > rules = new array_list < > ( ) n for ( json_node url_filter_node rules_list ) { n try { n regex_rule rule = create_rule ( url_filter_node . as_text ( ) ) n if ( rule = null ) { n rules . add ( rule ) n } n } catch ( io_exception e ) { n log . error ( codstr , n url_filter_node . as_text ( ) , e ) n } n } n return rules n }	1
Q_767	populate a list of rule off of json_node	C_767_1	public object init_model_if ( event_model em , model_form form , http_servlet_request request ) throws exception { n return init_model ( request ) n }	0
Q_767	populate a list of rule off of json_node	C_767_2	public static < k , t > map < k , list < t group_by ( iterable < t > self , closure_params ( first_param . first_generic_type . class ) closure < k > closure ) { n map < k , list < t answer = new linked_hash_map < k , list < t ( ) n for ( t element self ) { n k value = closure . call ( element ) n group_answer ( answer , element , value ) n } n return answer n }	0
Q_768	create a new index base on current one except	C_768_0	index transpose ( int index1 , int index2 ) { n if ( ( index1 < codint ) ( index1 > = rank ) ) n throw new illegal_argument_exception ( ) n if ( ( index2 < codint ) ( index2 > = rank ) ) n throw new illegal_argument_exception ( ) n n index new_index = ( index ) this . clone ( ) n new_index . stride [ index1 ] = stride [ index2 ] n new_index . stride [ index2 ] = stride [ index1 ] n new_index . shape [ index1 ] = shape [ index2 ] n new_index . shape [ index2 ] = shape [ index1 ] n / * if ( name = null ) { n new_index . name [ index1 ] = name [ index2 ] n new_index . name [ index2 ] = name [ index1 ] n } * / n n new_index . fast_iterator = false n new_index . precalc ( ) / / any subclass _ specific optimizations n return new_index n }	1
Q_768	create a new index base on current one except	C_768_1	public sd_variable sigmoid_cross_entropy ( string name , non_null sd_variable label , non_null sd_variable prediction_logits , n sd_variable weights , non_null loss_reduce loss_reduce , double label_smoothing ) { n validate_floating_point ( codstr , codstr , prediction_logits ) n validate_numerical ( codstr , codstr , label ) n if ( weights = = null ) n weights = sd . scalar ( null , prediction_logits . data_type ( ) , number ) n sd_variable result = f ( ) . loss_sigmoid_cross_entropy ( label , prediction_logits , weights , loss_reduce , label_smoothing ) n result = update_variable_name_and_reference ( result , name ) n result . mark_as_loss ( ) n return result n }	0
Q_768	create a new index base on current one except	C_768_2	protected final void assert_excludes ( not_null object . objects ) { n is_not_null ( ) n check_not_null ( objects ) n collection < object > found = found ( actual_as_set ( ) , objects ) n if ( found . is_empty ( ) ) { n return n } n fail_if_custom_message_is_set ( ) n throw failure ( format ( codstr , actual , found ) ) n }	0
Q_769	get the subset string to be use in net_cdf_file	C_769_0	public static string get_subset_string ( variable var , int begin_ind , int end_ind , int id ) { n if ( var = = null ) return null n n string sub_str = codstr n n list < dimension > dim_list = var . get_dimensions ( ) n n / / enforce two dimension arrays n if ( dim_list . size ( ) > codint dim_list . size ( ) < codint ) { n return null n } n n for ( int i = codint i < dim_list . size ( ) i + + ) { n n dimension dim = dim_list . get ( i ) n if ( dim = = null ) continue n n / / if not cf time then select only that id n if ( cf . time . equals_ignore_case ( dim . get_short_name ( ) ) cf . time . equals_ignore_case ( dim . get_full_name_escaped ( ) ) ) { n sub_str + = id n } n n / / otherwise subset based on time n else { n n if ( begin_ind < codint end_ind < codint ) sub_str + = codstr n else sub_str + = ( begin_ind + codstr + end_ind ) n } n n if ( i < dim_list . size ( ) _ codint ) { n sub_str + = codstr n } n } n n return sub_str n }	1
Q_769	get the subset string to be use in net_cdf_file	C_769_1	public static html_tree frameset ( string cols , string rows , string title , string onload ) { n html_tree htmltree = new html_tree ( html_tag . frameset ) n if ( cols = null ) n htmltree . add_attr ( html_attr . cols , cols ) n if ( rows = null ) n htmltree . add_attr ( html_attr . rows , rows ) n htmltree . add_attr ( html_attr . title , null_check ( title ) ) n htmltree . add_attr ( html_attr . onload , null_check ( onload ) ) n return htmltree n }	0
Q_769	get the subset string to be use in net_cdf_file	C_769_2	suppress_warnings ( codstr ) n public e_list < ifc_organization_relationship > get_is_related_by ( ) { n return ( e_list < ifc_organization_relationship > ) e_get ( ifc2x3tc1_package . literals . ifc_organization_is_related_by , n true ) n }	0
Q_770	validate this dataset_namer object	C_770_0	"boolean validate ( string_builder out ) { n this . is_valid = true n n / / if log from construction has content , append to validation output msg . n if ( this . msg_log . length ( ) > codint ) { n out . append ( this . msg_log ) n } n n / / check that name is not null ( it can be an empty string ) . n if ( this . get_name ( ) = = null ) { n this . is_valid = false n out . append ( codstr ) n } n n / / check that add_level is not null . n / / boolean can codstr * * dataset_namer ( codint ) null value for add_level is not valid . codstr * * dataset_namer ( codint ) null value for type is not valid ( set with bad string ? ) . codstr * * dataset_namer ( codint ) invalid dataset_namer < codstr > codstr type is codstr match_pattern ( codstr ) and substitution_pattern ( codstr ) codstr must not be null . codstr * * dataset_namer ( codint ) invalid dataset_namer < codstr > codstr type is codstr attriute_container ( codstr ) and attribute_name ( codstr ) must not be null . "" ) n } n n return ( this . is_valid ) n }"	1
Q_770	validate this dataset_namer object	C_770_1	public list < groovy_row_result > execute_insert ( string sql , list < object > params , list < string > key_column_names ) throws sql_exception { n connection connection = create_connection ( ) n prepared_statement statement = null n try { n this . key_column_names = key_column_names n statement = get_prepared_statement ( connection , sql , params , use_column_names ) n this . key_column_names = null n this . update_count = statement . execute_update ( ) n result_set keys = statement . get_generated_keys ( ) n return as_list ( sql , keys ) n } catch ( sql_exception e ) { n log . warning ( codstr + sql + codstr + e . get_message ( ) ) n throw e n } finally { n close_resources ( connection , statement ) n } n }	0
Q_770	validate this dataset_namer object	C_770_2	public static charset get_string_encoding_charset ( ) { n if ( current_string_encoding = = null ) { n final string value = janus_config . get_system_property ( byte_array_string_charset_name , null ) n if ( value = null ) { n try { n current_string_encoding = charset . for_name ( value ) n if ( current_string_encoding = = null ) { n current_string_encoding = byte_array_string_charset_value n } n } catch ( throwable exception ) { n current_string_encoding = byte_array_string_charset_value n } n } else { n current_string_encoding = byte_array_string_charset_value n } n } n return current_string_encoding n }	0
Q_771	write content to a file use utf_8 encoding	C_771_0	static public void write_to_file ( string contents , string file_out_name ) throws io_exception { n write_to_file ( contents , new file ( file_out_name ) ) n }	1
Q_771	write content to a file use utf_8 encoding	C_771_1	static string canonicalize ( string input , int pos , int limit , string encode_set , n boolean already_encoded , boolean strict , boolean plus_is_space , boolean ascii_only ) { n int code_point n for ( int i = pos i < limit i + = character . char_count ( code_point ) ) { n code_point = input . code_point_at ( i ) n if ( code_point < codint n code_point = = codint n code_point > = codint ascii_only n encode_set . index_of ( code_point ) = _ codint n code_point = = codstr ( already_encoded strict percent_encoded ( input , i , limit ) ) n code_point = = codstr plus_is_space ) { n / / slow path the character at i requires encoding n buffer out = new buffer ( ) n out . write_utf8 ( input , pos , i ) n canonicalize ( out , input , i , limit , encode_set , already_encoded , strict , plus_is_space , n ascii_only ) n return out . read_utf8 ( ) n } n } n n / / fast path no characters in [ pos . limit ) required encoding . n return input . substring ( pos , limit ) n }	0
Q_771	write content to a file use utf_8 encoding	C_771_2	protected data_source create_data_source_instance ( string identifier ) throws exception { n db_instance instance = get_db_instance ( identifier ) n return this . data_source_factory . create_data_source ( from_rds_instance ( instance ) ) n }	0
Q_772	browse the index from a cursor	C_772_0	public request browse_from_async ( final non_null string cursor , non_null completion_handler completion_handler ) { n return get_client ( ) . new async_task_request ( completion_handler ) { n non_null n override n protected json_object run ( ) throws algolia_exception { n return browse_from_sync ( cursor ) n } n } . start ( ) n }	1
Q_772	browse the index from a cursor	C_772_1	private static optional < string > role_not_linked_to_relation ( role role , relation_type relation_type , relation relation ) { n boolean not_found = role . relations ( ) . n none_match ( inner_relation_type _ > inner_relation_type . label ( ) . equals ( relation_type . label ( ) ) ) n if ( not_found ) { n return optional . of ( validation_relation_casting_loop_fail . get_message ( relation . id ( ) , role . label ( ) , relation_type . label ( ) ) ) n } n return optional . empty ( ) n }	0
Q_772	browse the index from a cursor	C_772_2	override n public void do_filter ( servlet_request request , servlet_response response , n filter_chain chain ) throws io_exception , servlet_exception { n http_servlet_request req = request ( ) n n try { n request ( ( http_servlet_request ) request ) n super . do_filter ( request , response , chain ) n } finally { n request ( req ) n } n }	0
Q_773	the field editor preference page implementation of a	C_773_0	override n protected void perform_defaults ( ) { n if ( fields = null ) { n iterator < field_editor > e = fields . iterator ( ) n while ( e . has_next ( ) ) { n field_editor pe = e . next ( ) n pe . load_default ( ) n } n } n / / force a recalculation of my error state . n check_state ( ) n super . perform_defaults ( ) n }	1
Q_773	the field editor preference page implementation of a	C_773_1	override n public void clear ( ) { n if ( dao = = null ) { n return n } n closeable_iterator < t > iterator = closeable_iterator ( ) n try { n while ( iterator . has_next ( ) ) { n iterator . next ( ) n iterator . remove ( ) n } n } finally { n io_utils . close_quietly ( iterator ) n } n }	0
Q_773	the field editor preference page implementation of a	C_773_2	public observable < page < iot_hub_sku_description_inner get_valid_skus_next_async ( final string next_page_link ) { n return get_valid_skus_next_with_service_response_async ( next_page_link ) n . map ( new func1 < service_response < page < iot_hub_sku_description_inner , page < iot_hub_sku_description_inner ( ) { n override n public page < iot_hub_sku_description_inner > call ( service_response < page < iot_hub_sku_description_inner response ) { n return response . body ( ) n } n } ) n }	0
Q_774	the following method shut down an executor_service in two phase first by call shutdown to reject incoming	C_774_0	private synchronized void destroy_scheduler ( ) { n if ( pool_initializer . get ( ) . is_shutdown ( ) ) { n / / disable new tasks from being submitted n pool_initializer . get ( ) . shutdown ( ) n if ( future = null ) { n future . cancel ( true ) n } n try { n while ( pool_initializer . get ( ) . await_termination ( codint , time_unit . seconds ) ) { n log . debug ( codstr , name ) n pool_initializer . get ( ) . shutdown_now ( ) n } n } catch ( final interrupted_exception e ) { n log . debug ( codstr , e ) n / / ( re _ ) cancel if current thread also interrupted n pool_initializer . get ( ) . shutdown_now ( ) n / / preserve interrupt status n thread . current_thread ( ) . interrupt ( ) n } finally { n log . debug ( codstr , name ) n } n } n }	1
Q_774	the following method shut down an executor_service in two phase first by call shutdown to reject incoming	C_774_1	public static void sort ( int n , int [ ] xip , int xip_offset , int [ ] xlen , int xlen_offset , n double [ ] lu , int [ ] tp , int [ ] tj , double [ ] tx , int [ ] w ) n { n / * int [ ] * / double [ ] xi n double [ ] xx n int p , i , j , nz , tp , xlen , pend n int [ ] len = new int [ codint ] n int [ ] xi_offset = new int [ codint ] n int [ ] xx_offset = new int [ codint ] n n assert ( klu_valid_lu ( n , false , xip , xip_offset , xlen , xlen_offset , lu ) ) n n / * count the number of entries in each row of l or u * / n for ( i = codint i < n i + + ) n { n w [ i ] = codint n } n for ( j = codint j < n j + + ) n { n xi = xx = get_pointer ( lu , xip , xip_offset , xlen , xlen_offset , xi_offset , xx_offset , j , len ) n for ( p = codint p < len [ codint ] p + + ) n { n w [ ( int ) xi [ xi_offset [ codint	0
Q_774	the following method shut down an executor_service in two phase first by call shutdown to reject incoming	C_774_2	public static long extract_to_long ( final device_data device_data_argout ) throws dev_failed { n final object value = command_helper . extract ( device_data_argout ) n long argout = null n if ( value instanceof short ) { n argout = long . value_of ( ( ( short ) value ) . long_value ( ) ) n } else if ( value instanceof string ) { n try { n argout = long . value_of ( ( string ) value ) n } catch ( final exception e ) { n except . throw_exception ( codstr , codstr + value n + codstr , codstr ) n } n } else if ( value instanceof integer ) { n argout = long . value_of ( ( ( integer ) value ) . long_value ( ) ) n } else if ( value instanceof long ) { n argout = long . value_of ( ( ( long ) value ) . long_value ( ) ) n } else if ( value instanceof float ) { n argout = long . value_of ( ( ( float ) value ) . long_value ( ) ) n } else if ( value instanceof boolean ) { n if ( ( ( boolean ) value ) . boolean_value ( ) ) { n argout = long . value_of ( codint ) n } else { n argout = long . value_of ( codint ) n } n } else if ( value instanceof double ) {	0
Q_775	return all sub_nodes of a node whose direct sub_nodes be	C_775_0	public static < t extends elk_entity , n extends generic_taxonomy_node < t , n n set < ? extends n > get_all_sub_nodes ( final collection < ? extends n > direct ) { n return get_all_reachable ( direct , new functor < n , set < ? extends n ( ) { n n override n public set < ? extends n > apply ( final n node ) { n return node . get_direct_sub_nodes ( ) n } } ) n }	1
Q_775	return all sub_nodes of a node whose direct sub_nodes be	C_775_1	public date [ ] purge_datastream ( context context , n string pid , n string datastream_id , n date start_dt , n date end_dt , n string log_message ) throws server_exception { n throw reject_calls_from_outside_while_in_recovery_mode ( ) n }	0
Q_775	return all sub_nodes of a node whose direct sub_nodes be	C_775_2	private void filter ( predicate < tree_item < s predicate ) { n if ( task = null ) { n task . cancel ( false ) n } n task = thread_pool . schedule ( filter_runnable , codint , time_unit . milliseconds ) n }	0
Q_776	add one or more member resource	C_776_0	public collection add_member ( resource first , resource . rest ) { n if ( this . members = = null ) { n this . members = new array_list < > ( ) n check_member ( first ) n stream ( rest ) . for_each ( this check_member ) n } n this . members . add_all ( lists . as_list ( first , rest ) ) n return this n }	1
Q_776	add one or more member resource	C_776_1	public void set_title ( final string title ) { n if ( null = = title ) { n _title = title n fire_update_event ( redraw_event ) n } else { n title . set ( title ) n } n }	0
Q_776	add one or more member resource	C_776_2	public void set_value ( t value ) n { n try n { n lock . write_lock ( ) . lock ( ) n this . value = value n } n finally n { n lock . write_lock ( ) . unlock ( ) n } n }	0
Q_777	process an collection of map	C_777_0	suppress_warnings ( codstr ) n private void handle_collection_of_maps ( object new_instance , n field_access field , collection < map < string , object collection_of_maps n ) { n n collection < object > new_collection = conversions . create_collection ( field . type ( ) , collection_of_maps . size ( ) ) n n n class < ? > component_class = field . get_component_class ( ) n n if ( component_class = null ) { n n n for ( map < string , object > map_component collection_of_maps ) { n n new_collection . add ( from_map ( map_component , component_class ) ) n n } n field . set_object ( new_instance , new_collection ) n n } n n }	1
Q_777	process an collection of map	C_777_1	static private string make_cache_path ( string file_location ) { n escaper url_path_escaper = url_escapers . url_path_segment_escaper ( ) n n file_location = file_location . replace ( codstr , codstr ) / / look _ use better normalization code eg spring string_utils n string cache_path = url_path_escaper . escape ( file_location ) n n return root + cache_path n }	0
Q_777	process an collection of map	C_777_2	private void read_links2_status ( ) n throws cache_reload_exception n { n connection con = null n try { n final list < long > values = new array_list < > ( ) n con = context . get_connection ( ) n prepared_statement stmt = null n try { n stmt = con . prepare_statement ( access_set . sql_set2_status ) n stmt . set_object ( codint , get_id ( ) ) n final result_set rs = stmt . execute_query ( ) n while ( rs . next ( ) ) { n values . add ( rs . get_long ( codint ) ) n } n rs . close ( ) n } finally { n if ( stmt = null ) { n stmt . close ( ) n } n } n con . commit ( ) n for ( final long status_id values ) { n final status status = status . get ( status_id ) n if ( status = = null ) { n access_set . log . error ( codstr + codstr codstr codstr ) n } else { n access_set . log . debug ( n codstr { } codstr { } codstr , n get_name ( ) , get_id ( ) , get_uuid ( ) , status . get_key ( ) , status . get_id ( ) ) n get_statuses ( ) . add ( status ) n } n } n } catch ( final sql_exception e ) { n throw	0
Q_778	create a list of map from a list of class instance	C_778_0	override n public list < map < string , object to_list_of_maps ( collection < ? > collection ) { n list < map < string , object list = new array_list < > ( ) n for ( object o collection ) { n list . add ( to_map ( o ) ) n } n return list n }	1
Q_778	create a list of map from a list of class instance	C_778_1	pure n suppress_warnings ( codstr ) n public boolean is_parameter_exists ( int index ) { n final string [ ] params = get_command_line_parameters ( ) n return index > = codint index < params . length params [ index ] = null n }	0
Q_778	create a list of map from a list of class instance	C_778_2	"public static document create_document ( ) { n try { n document_builder_factory fact = document_builder_factory . new_instance ( ) n fact . set_namespace_aware ( true ) n document_builder db = fact . new_document_builder ( ) n return db . new_document ( ) n } catch ( parser_configuration_exception e ) { n / / will probably never be thrown because we "" re not doing anything fancy with the configuration n throw new runtime_exception ( e ) n } n }"	0
Q_779	get property value load nest property	C_779_0	public static class < ? > get_property_type ( final object root , final string property ) { n n map < string , field_access > fields = get_property_field_access_map ( root . get_class ( ) ) n n field_access field = fields . get ( property ) n return field . type ( ) n }	1
Q_779	get property value load nest property	C_779_1	void set_up_ou_combo_box ( combo_box combo ) { n n combo . remove_all_items ( ) n try { n if ( m_site = null ) { n string site_ou = get_site_ou ( ) n combo . add_item ( site_ou ) n combo . select ( site_ou ) n combo . set_enabled ( false ) n } else { n combo . add_item ( codstr ) n n m_cloned_cms . get_request_context ( ) . set_site_root ( codstr ) n list < cms_organizational_unit > ous = open_cms . get_org_unit_manager ( ) . get_organizational_units ( n m_cloned_cms , n codstr , n true ) n n for ( cms_organizational_unit ou ous ) { n n if ( ou_is_ok ( ou ) ) { n combo . add_item ( ou . get_name ( ) ) n } n n } n combo . select ( codstr ) n } n n } catch ( cms_exception e ) { n log . error ( codstr , e ) n } n combo . set_null_selection_allowed ( false ) n combo . set_text_input_allowed ( true ) n combo . set_filtering_mode ( filtering_mode . contains ) n combo . set_new_items_allowed ( false ) n n }	0
Q_779	get property value load nest property	C_779_2	public void skip_until ( final token_type . token_types ) { n set < token_type > token_type_set = sets . new_hash_set ( token_types ) n token_type_set . add ( assist . end ) n while ( token_type_set . contains ( lexer . get_current_token ( ) . get_type ( ) ) ) { n lexer . next_token ( ) n } n }	0
Q_780	draw a square of side length tagint r center at	C_780_0	public static void square ( double x , double y , double half_length ) n { n if ( ( half_length > = codint ) ) n throw new illegal_argument_exception ( codstr ) n double xs = scale_x ( x ) n double ys = scale_y ( y ) n double ws = factor_x ( codint * half_length ) n double hs = factor_y ( codint * half_length ) n if ( ws < = codint hs < = codint ) n pixel ( x , y ) n else n offscreen . draw ( new rectangle2_d . double ( xs _ ws / codint , ys _ hs / codint , ws , hs ) ) n draw ( ) n }	1
Q_780	draw a square of side length tagint r center at	C_780_1	private void print_help_and_exit ( ) { n system . out . println ( codstr ) n system . out . println ( codstr ) n system . out . println ( codstr ) n system . out . println ( codstr ) n system . out . println ( codstr ) n system . out . println ( ) n n print_help_and_exit ( codint ) n }	0
Q_780	draw a square of side length tagint r center at	C_780_2	protected fluent_model_t_impl find ( string key ) { n for ( map . entry < string , fluent_model_t_impl > entry this . child_collection . entry_set ( ) ) { n if ( entry . get_key ( ) . equals_ignore_case ( key ) ) { n return entry . get_value ( ) n } n } n return null n }	0
Q_781	finish compression without close the underlie stream	C_781_0	"public void finish ( ) throws io_exception { n if ( finished ) { n / / this checks for pending exceptions so we don "" t need to n / / worry about it here . n end_block ( ) n n try { n index . encode ( out ) n encode_stream_footer ( ) n } catch ( io_exception e ) { n exception = e n throw e n } n n / / set it to true only if everything goes fine . setting it earlier n / / would cause repeated calls to finish ( ) do nothing instead of n / / throwing an exception to indicate an earlier error . n finished = true n } n }"	1
Q_781	finish compression without close the underlie stream	C_781_1	public static < t > collector < t , ? , list < t min_all ( comparator < ? super t > comparator ) { n return min_all ( comparator , integer . max_value ) n }	0
Q_781	finish compression without close the underlie stream	C_781_2	void set_text_face ( final int face ) { n int style = codint n if ( ( face quick_draw . tx_bold_mask ) > codint ) { n style = font . bold n } n if ( ( face quick_draw . tx_italic_mask ) > codint ) { n style = font . italic n } n n / / todo other face options , like underline , shadow , etc . n n graphics . set_font ( graphics . get_font ( ) . derive_font ( style ) ) n }	0
Q_782	get the value of the objekt property	C_782_0	generated ( value = codstr , date = codstr , comments = codstr ) n public list < objekt > get_objekt ( ) { n if ( objekt = = null ) { n objekt = new array_list < objekt > ( ) n } n return this . objekt n }	1
Q_782	get the value of the objekt property	C_782_1	private static string url_encode_parameter ( string parameter ) { n try { n return url_encoder . encode ( parameter , codstr ) n } catch ( unsupported_encoding_exception ex ) { n logger . get_logger ( x_link_utils . class . get_name ( ) ) . log ( level . severe , null , ex ) n } n return parameter n }	0
Q_782	get the value of the objekt property	C_782_2	public matrix4d translation_rotate ( double tx , double ty , double tz , quaterniondc quat ) { n return translation_rotate ( tx , ty , tz , quat . x ( ) , quat . y ( ) , quat . z ( ) , quat . w ( ) ) n }	0
Q_783	actually copy the content of the code src file directory	C_783_0	private static void do_copy_recursively ( file src , file dest ) throws io_exception { n if ( src . is_directory ( ) ) { n dest . mkdir ( ) n file [ ] entries = src . list_files ( ) n if ( entries = = null ) { n throw new io_exception ( codstr + src ) n } n for ( file entry entries ) { n do_copy_recursively ( entry , new file ( dest , entry . get_name ( ) ) ) n } n } else if ( src . is_file ( ) ) { n try { n dest . create_new_file ( ) n } catch ( io_exception ex ) { n io_exception ioex = new io_exception ( codstr + dest ) n ioex . init_cause ( ex ) n throw ioex n } n file_copy_utils . copy ( src , dest ) n } else { n / / special file handle neither a file not a directory . n / / simply skip it when contained in nested directory . n } n }	1
Q_783	actually copy the content of the code src file directory	C_783_1	public static mongo_client create ( final com . mongodb . mongo_client_settings settings , n nullable final mongo_driver_information mongo_driver_information ) { n return create ( mongo_client_settings . create_from_client_settings ( settings ) , mongo_driver_information , null ) n }	0
Q_783	actually copy the content of the code src file directory	C_783_2	public static string read_stream_as_string ( input_stream stream ) throws io_exception { n try ( scanner sc = new scanner ( stream , charset . default_charset ( ) . name ( ) ) ) { n sc . use_delimiter ( codstr ) n return sc . next ( ) n } n }	0
Q_784	copy single row	C_784_0	private static void copy_single_row ( final sheet src_sheet , final sheet dest_sheet , final int source_row_num , n final int destination_row_num , final boolean check_lock , final boolean set_hidden_column ) { n / / get the source / new row n row new_row = dest_sheet . get_row ( destination_row_num ) n row source_row = src_sheet . get_row ( source_row_num ) n n if ( new_row = = null ) { n new_row = dest_sheet . create_row ( destination_row_num ) n } n new_row . set_height ( source_row . get_height ( ) ) n / / loop through source columns to add to new row n for ( int i = codint i < source_row . get_last_cell_num ( ) i + + ) { n / / grab a copy of the old / new cell n copy_cell ( dest_sheet , source_row , new_row , i , check_lock ) n } n if ( set_hidden_column ) { n configuration_utility . set_original_row_num_in_hidden_column ( new_row , source_row . get_row_num ( ) ) n } n return n n }	1
Q_784	copy single row	C_784_1	public void write ( io . netty . buffer . byte_buf buf , int off , int len ) throws io_exception { n if ( len = = codint ) { n return n } n n while ( len > codint ) { n update_current_chunk ( false ) n int to_write = math . min ( len , m_current_chunk . writable_bytes ( ) ) n m_current_chunk . write_bytes ( buf , off , to_write ) n off + = to_write n len _ = to_write n } n update_current_chunk ( false ) n }	0
Q_784	copy single row	C_784_2	private border get_border ( int row , int column ) n { n if ( row codint = = codint ) n { n switch ( column codint ) n { n case codint return bottom_right_border n case codint return bottom_left_border n default return bottom_border n } n } n else if ( row codint = = codint ) n { n switch ( column codint ) n { n case codint return top_right_border n case codint return top_left_border n default return top_border n } n } n n switch ( column codint ) n { n case codint return right_border n case codint return left_border n default return null n } n }	0
Q_785	process refresh cell	C_785_0	private void process_refresh_cell ( final string tbl_name , final int i , final int index , final cell cell , n final faces_cell fcell ) { n string new_value = cell_utility . get_cell_value_with_format ( cell , parent . get_formula_evaluator ( ) , n parent . get_data_formatter ( ) ) n if ( parent . get_cached_cells ( ) . is_value_changed ( cell , new_value ) ) { n if ( fcell . is_has_save_attr ( ) ) { n parent . get_cell_helper ( ) . save_data_in_context ( cell , new_value ) n } n request_context . get_current_instance ( ) . update ( tbl_name + codstr + i + codstr + index ) n parent . get_cached_cells ( ) . put ( cell , cell_type . formula ) n } n }	1
Q_785	process refresh cell	C_785_1	public static void register_archive_file_provider ( class < ? extends i_archive_file > provider , string file_extension ) { n extension_map . put ( file_extension , provider ) n }	0
Q_785	process refresh cell	C_785_2	public void marshall ( create_virtual_router_request create_virtual_router_request , protocol_marshaller protocol_marshaller ) { n n if ( create_virtual_router_request = = null ) { n throw new sdk_client_exception ( codstr ) n } n n try { n protocol_marshaller . marshall ( create_virtual_router_request . get_client_token ( ) , clienttoken_binding ) n protocol_marshaller . marshall ( create_virtual_router_request . get_mesh_name ( ) , meshname_binding ) n protocol_marshaller . marshall ( create_virtual_router_request . get_spec ( ) , spec_binding ) n protocol_marshaller . marshall ( create_virtual_router_request . get_tags ( ) , tags_binding ) n protocol_marshaller . marshall ( create_virtual_router_request . get_virtual_router_name ( ) , virtualroutername_binding ) n } catch ( exception e ) { n throw new sdk_client_exception ( codstr + e . get_message ( ) , e ) n } n }	0
Q_786	host or device pointer	C_786_0	public static int cublas_snrm2 ( n cublas_handle handle , n int n , n pointer x , n int incx , n pointer result ) / * * host or device pointer * / n { n return check_result ( cublas_snrm2_native ( handle , n , x , incx , result ) ) n }	1
Q_786	host or device pointer	C_786_1	public observable < service_response < deployment_locations_inner get_subscription_deployment_locations_with_service_response_async ( ) { n if ( this . subscription_id ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n if ( this . api_version ( ) = = null ) { n throw new illegal_argument_exception ( codstr ) n } n return service . get_subscription_deployment_locations ( this . subscription_id ( ) , this . api_version ( ) , this . accept_language ( ) , this . user_agent ( ) ) n . flat_map ( new func1 < response < response_body > , observable < service_response < deployment_locations_inner ( ) { n override n public observable < service_response < deployment_locations_inner call ( response < response_body > response ) { n try { n service_response < deployment_locations_inner > client_response = get_subscription_deployment_locations_delegate ( response ) n return observable . just ( client_response ) n } catch ( throwable t ) { n return observable . error ( t ) n } n } n } ) n }	0
Q_786	host or device pointer	C_786_2	public static < t , u extends closeable > t with_closeable ( u self , closure_params ( value = first_param . class ) closure < t > action ) throws io_exception { n try { n t result = action . call ( self ) n n closeable temp = self n self = null n temp . close ( ) n n return result n } finally { n default_groovy_methods_support . close_with_warning ( self ) n } n }	0
Q_787	copy the value of this matrix	C_787_0	public float [ ] copy_values1_d ( ) n { n final float v [ ] = new float [ m_n_rows ] n n for ( int r = codint r < m_n_rows + + r ) n { n v [ r ] = m_a_values [ r ] [ codint ] n } n n return v n }	1
Q_787	copy the value of this matrix	C_787_1	public void new_page ( string page_ref ) { n try { n / / request bmp to create a new har for this proxy n http_put request = new http_put ( request_uri_builder ( ) n . set_path ( proxy_uri_path ( ) + codstr ) n . build ( ) ) n n / / add form parameters to the request n apply_form_params_to_http_request ( request , n new basic_name_value_pair ( codstr , page_ref ) ) n n / / execute request n closeable_http_response response = htt_pclient . execute ( request ) n n / / check request was successful n int status_code = response . get_status_line ( ) . get_status_code ( ) n if ( status_code = codint ) { n throw new bmpc_unable_to_create_page_exception ( n codstr n + codstr n + status_code n ) n } n n / / close http response n response . close ( ) n n } catch ( exception e ) { n throw new bmpc_unable_to_create_har_exception ( e ) n } n }	0
Q_787	copy the value of this matrix	C_787_2	private static collection < string > import_sheets ( xml node_sheets ) n { n final collection < xml > children = node_sheets . get_children ( node_tile_sheet ) n final collection < string > sheets = new array_list < > ( children . size ( ) ) n n for ( final xml node_sheet children ) n { n final string sheet_filename = node_sheet . get_text ( ) n sheets . add ( sheet_filename ) n } n n return sheets n }	0
Q_788	validate the value of the float bias exponent value	C_788_0	public static void validate_float_biased_exponent ( final int biased ) throws ieee754_exception n { n if ( ( biased < codint ) ( biased > ieee754_constants . float_exponent_reserved ) ) n { n throw new ieee754_exception ( codstr + n codstr + n ieee754_constants . float_exponent_reserved + n codstr ) n } n }	1
Q_788	validate the value of the float bias exponent value	C_788_1	public static < t1 , t2 > bi_consumer < t1 , t2 > spy2nd ( bi_consumer < t1 , t2 > consumer , box < t2 > param2 ) { n return spy ( consumer , box . < t1 > empty ( ) , param2 ) n }	0
Q_788	validate the value of the float bias exponent value	C_788_2	public static list < variable_element > n fields_in ( iterable < ? extends element > elements ) { n return list_filter ( elements , field_kinds , variable_element . class ) n }	0
Q_789	get the value of code this code field as a code integer	C_789_0	xml_transient n public integer get_field_value_as_integer ( ) { n object obj = this . get_field_value ( ) n if ( obj = = null ) { n return null n } n n if ( obj instanceof integer ) { n return ( integer ) obj n } n n if ( obj instanceof number ) { n return ( ( number ) obj ) . int_value ( ) n } n n return null n }	1
Q_789	get the value of code this code field as a code integer	C_789_1	override protected double score1 ( chunk chks [ ] , double weight , double offset , double fs [ / * nclass * / ] , int row ) { n double sum = codint n if ( _nclass > codint ( _nclass = = codint _model . binomial_opt ( ) ) ) { n for ( int k = codint k < _nclass k + + ) n sum + = ( fs [ k + codint ] = weight * chk_tree ( chks , k ) . atd ( row ) / chk_oobt ( chks ) . atd ( row ) ) n } n else if ( _nclass = = codint _model . binomial_opt ( ) ) { n fs [ codint ] = weight * chk_tree ( chks , codint ) . atd ( row ) / chk_oobt ( chks ) . atd ( row ) n if ( fs [ codint ] > codint fs [ codint ] < = onebound ) n fs [ codint ] = number n else if ( fs [ codint ] < codint fs [ codint ] > = zerobound ) n fs [ codint ] = number n assert ( fs [ codint ] > = codint fs [ codint ] < = codint ) n fs [ codint ] = codint . _ fs [ codint ] n } n else { / / regression n / / average per trees voted for this row (	0
Q_789	get the value of code this code field as a code integer	C_789_2	"public static void parse_binary_and_unary_rules ( iterable < string > unfiltered_rule_lines , n list < ccg_binary_rule > binary_rules , list < ccg_unary_rule > unary_rules ) { n for ( string line unfiltered_rule_lines ) { n / / system . out . println ( line ) n if ( line . starts_with ( "" try { n binary_rules . add ( ccg_binary_rule . parse_from ( line ) ) n } catch ( illegal_argument_exception e ) { n unary_rules . add ( ccg_unary_rule . parse_from ( line ) ) n } n } n } n }"	0
Q_790	conversion to code json_object from java object	C_790_0	override n public json_object to_json_object ( ) throws json_exception n { n json_object return_val = super . to_json_object ( ) n n / / order . n if ( this . get_order ( ) = null ) n { n return_val . put ( json_mapping . order , this . get_order ( ) ) n } n n / / rule . n if ( this . get_rule ( ) = null ) n { n return_val . put ( json_mapping . rule , this . get_rule ( ) ) n } n n / / current typed syntax . n if ( this . get_current_typed_syntax ( ) = null ) n { n return_val . put ( json_mapping . current_typed_syntax , n this . get_current_typed_syntax ( ) ) n } n n / / flow . n if ( this . get_flow ( ) = null ) n { n return_val . put ( json_mapping . flow , this . get_flow ( ) . to_json_object ( ) ) n } n n / / flow step . n if ( this . get_flow_step ( ) = null ) n { n return_val . put ( json_mapping . flow_step , this . get_flow_step ( ) . to_json_object ( ) ) n } n n / / next valid syntax words . n if ( this . get_next_valid_syntax_words ( ) = null this . get_next_valid_syntax_words ( ) . is_empty ( ) ) n { n json_array json_array_of_valid_words = new json_array	1
Q_790	conversion to code json_object from java object	C_790_1	suppress_warnings ( codstr ) n public static < t > class < ? extends t > load_class ( final class < t > clazz , n final class_loader class_loader , final string class_name ) n throws class_not_found_exception , illegal_access_exception { n null_argument_exception . validate_not_null ( clazz , codstr ) n null_argument_exception . validate_not_null ( class_loader , codstr ) n null_argument_exception . validate_not_null ( class_name , codstr ) n return ( class < ? extends t > ) class_loader . load_class ( class_name ) n }	0
Q_790	conversion to code json_object from java object	C_790_2	controller ( events = event_type . pin_added ) n public void on_pin_added ( web_socket_session session , event event ) { n reply ( session , event , codstr ) n }	0
Q_791	add a tagstr predicate	C_791_0	public < v extends object > where_items not_in ( final string expression , n final v . array ) { n items . add ( new where_in ( builder ( ) , expression , true , array ) ) n return this n }	1
Q_791	add a tagstr predicate	C_791_1	suppress_warnings ( codstr ) n public < t extends serializable > t get_content ( class < t > content_class , boolean check_hash ) throws fox_http_response_exception { n try { n n type parameterized_type = new service_result_parameterized_type ( content_class ) n n string body = get_string_body ( ) n n service_result < t > result = parser . from_json ( body , parameterized_type ) n fox_http_client . get_fox_http_logger ( ) . log ( codstr + result + codstr ) n this . content = result . get_content ( ) n n check_hash ( check_hash , body , result ) n n return ( t ) this . content n } catch ( io_exception e ) { n throw new fox_http_response_exception ( e ) n } n n }	0
Q_791	add a tagstr predicate	C_791_2	private void create_field_map ( byte [ ] data ) n { n int index = codint n int last_data_block_offset = codint n int data_block_index = codint n n while ( index < data . length ) n { n long mask = mpp_utility . get_int ( data , index + codint ) n / / mask = mask < < codint n n int data_block_offset = mpp_utility . get_short ( data , index + codint ) n / / int meta_flags = mpp_utility . get_byte ( data , index + codint ) n field_type type = get_field_type ( mpp_utility . get_int ( data , index + codint ) ) n int category = mpp_utility . get_short ( data , index + codint ) n / / int size_in_bytes = mpp_utility . get_short ( data , index + codint ) n / / int meta_index = mpp_utility . get_int ( data , index + codint ) n n / / n / / categories n / / n / / codint _ short values [ rate_units , workgroup , accrue , time_units , priority , task_type , constraint , accrue , percentage , short , work_units ] _ booking_type , earned_value_method , deliverable_type , resource_request_type _ we have as string in mpxj ? ? ? ? n / / codint _ int values [ duration , integer ] _ recalc outline codes as boolean ? n / / codint _ rate , number [ rate , numeric ] n /	0
Q_792	getter for search_id _ get an identifier for this search result	C_792_0	public string get_search_id ( ) { n if ( search_type . feat_ok_tst ( ( search_type ) jcas_type ) . cas_feat_search_id = = null ) n jcas_type . jcas . throw_feat_missing ( codstr , codstr ) n return jcas_type . ll_cas . ll_get_string_value ( addr , ( ( search_type ) jcas_type ) . cas_feat_code_search_id ) }	1
Q_792	getter for search_id _ get an identifier for this search result	C_792_1	public transition create_transition_for_state ( final transitionable_state state , final string criteria_outcome , final string target_state ) { n return create_transition_for_state ( state , criteria_outcome , target_state , false ) n }	0
Q_792	getter for search_id _ get an identifier for this search result	C_792_2	private completable_future < query_response > query_forward ( query_request request ) { n if ( context . get_leader ( ) = = null ) { n return completable_future . completed_future ( log_response ( query_response . builder ( ) n . with_status ( response . status . error ) n . with_error ( copycat_error . type . no_leader_error ) n . build ( ) ) ) n } n n logger . trace ( codstr , context . get_cluster ( ) . member ( ) . address ( ) , request ) n return this . < query_request , query_response > forward ( request ) n . exceptionally ( error _ > query_response . builder ( ) n . with_status ( response . status . error ) n . with_error ( copycat_error . type . no_leader_error ) n . build ( ) ) n . then_apply ( this log_response ) n }	0
Q_793	method to generate a valid helm2 string for the second section	C_793_0	public string connection_to_helm2 ( ) { n if ( list_of_connections . size ( ) = = codint ) { n return codstr n } n string_builder notation = new string_builder ( ) n for ( int i = codint i < list_of_connections . size ( ) i + + ) { n notation . append ( list_of_connections . get ( i ) . to_helm2 ( ) + codstr ) n } n n notation . set_length ( notation . length ( ) _ codint ) n return notation . to_string ( ) n }	1
Q_793	method to generate a valid helm2 string for the second section	C_793_1	public pool_disable_auto_scale_headers with_last_modified ( date_time last_modified ) { n if ( last_modified = = null ) { n this . last_modified = null n } else { n this . last_modified = new date_time_rfc1123 ( last_modified ) n } n return this n }	0
Q_793	method to generate a valid helm2 string for the second section	C_793_2	protected void append_missing_space ( final string_builder out ) { n int len = out . length ( ) n if ( len = = codint ) { n return n } n len _ n if ( char_util . is_whitespace ( out . char_at ( len ) ) ) { n out . append ( codstr ) n } n }	0
Q_794	create a map from a collection	C_794_0	public static < t , x , e extends throwable > map < x , collection < t group_by ( iterable < t > coll , a_function1 < ? super t , ? extends x , e > f ) throws e { n final map < x , collection < t result = new hash_map < > ( ) n for ( t o coll ) { n final x key = f . apply ( o ) n collection < t > per_key = result . get ( key ) n if ( per_key = = null ) { n per_key = new array_list < > ( ) n result . put ( key , per_key ) n } n per_key . add ( o ) n } n return result n }	1
Q_794	create a map from a collection	C_794_1	protected static sql_enum value ( class < ? extends sql_enum > clazz , string value ) { n if ( value = = null ) { n return null n } n n value = value . trim ( ) n n if ( values_cache . contains_key ( clazz ) ) { n map < string , sql_enum > map2 = values_cache . get ( clazz ) n n if ( map2 . contains_key ( value ) ) { n return map2 . get ( value ) n } n } n n return null n }	0
Q_794	create a map from a collection	C_794_2	public config_option_builder set_string_converter ( string_converter converter ) { n co . set_converter ( converter ) n co . set_has_argument ( true ) n return this n }	0
Q_795	process the http request that be direct to this servlet	C_795_0	public void service ( http_servlet_request request , http_servlet_response response ) throws io_exception n { n log . fine ( codstr ) n n / / read the parameters and attributes from the request n string content_type = ( string ) request . get_attribute ( codstr ) n string content_disposition = ( string ) request . get_attribute ( codstr ) n input_stream input_stream = ( input_stream ) request . get_attribute ( codstr ) n n / / build the response header n / / response . add_header ( codstr , codstr + file_name ) n if ( content_type = null ) n { n response . set_content_type ( content_type ) n } n n if ( content_disposition = null ) n { n response . add_header ( codstr , content_disposition ) n } n n / / response . set_content_length ( ( int ) f . length ( ) ) n n / / create a stream to write the data out to n buffered_output_stream output_stream = new buffered_output_stream ( response . get_output_stream ( ) ) n n / / read the entire input stream until no more bytes can be read and write the results into the response n / / this is done in chunks of codint k at a time . n int length = _ codint n byte [ ] chunk = new byte [ codint ] n n while ( ( length = input_stream . read ( chunk ) ) = _ codint ) n {	1
Q_795	process the http request that be direct to this servlet	C_795_1	public double get_time_to_estimate ( int sequence_num_now , int sequence_num_to ) { n double time_counter = number n for ( int i = sequence_num_now _ this . sequence_number_start i < = sequence_num_to i + + ) { n time_counter + = this . get_d_ts ( ) [ i ] n } n return time_counter n }	0
Q_795	process the http request that be direct to this servlet	C_795_2	public static resolvable_type for_class ( class < ? > source_class , class < ? > implementation_class ) { n lettuce_assert . not_null ( source_class , codstr ) n resolvable_type as_type = for_type ( implementation_class ) . as ( source_class ) n return ( as_type = = none ? for_type ( source_class ) as_type ) n }	0
Q_796	create a new date range type with the specify name if it do not already exist	C_796_0	public static type create_instance ( string name , date_only from , date_only to ) n { n / / ensure that min is less than or equal to max . n if ( ( from = null ) ( to = null ) ( from . compare_to ( to ) > codint ) ) n { n throw new illegal_argument_exception ( codstr min codstr max codstr ) n } n n synchronized ( date_range_types ) n { n / / add the newly created type to the map of all types . n date_range_type new_type = new date_range_type ( name , from , to ) n n / / ensure that the named type does not already exist , unless it has an identical definition already , in which n / / case the old definition can be re _ used and the new one discarded . n date_range_type old_type = date_range_types . get ( name ) n n if ( ( old_type = null ) old_type . equals ( new_type ) ) n { n throw new illegal_argument_exception ( codstr codstr codstr ) n } n else if ( ( old_type = null ) old_type . equals ( new_type ) ) n { n return old_type n } n else n { n date_range_types . put ( name , new_type ) n n return new_type n } n } n }	1
Q_796	create a new date range type with the specify name if it do not already exist	C_796_1	private void parse_soap12_fault ( document soap_message , print_writer logger ) n throws exception { n element envelope = soap_message . get_document_element ( ) n element code = dom_utils . get_element_by_tag_name_ns ( envelope , n soap_12_namespace , codstr ) n string value = dom_utils . get_element_by_tag_name_ns ( code , soap_12_namespace , n codstr ) . get_text_content ( ) n string msg = codstr + value + codstr n element sub_code = dom_utils . get_element_by_tag_name_ns ( code , n soap_12_namespace , codstr ) n if ( sub_code = null ) { n value = dom_utils . get_element_by_tag_name_ns ( sub_code , soap_12_namespace , n codstr ) . get_text_content ( ) n msg + = codstr + value + codstr n } n element reason = dom_utils . get_element_by_tag_name_ns ( envelope , n soap_12_namespace , codstr ) n element text = dom_utils . get_element_by_tag_name_ns ( reason , n soap_12_namespace , codstr ) n if ( text = null ) { n value = text . get_text_content ( ) n msg + = codstr + value + codstr n } n n logger . println ( msg ) n }	0
Q_796	create a new date range type with the specify name if it do not already exist	C_796_2	public collection < alert_channel > list ( string name ) n { n list < alert_channel > ret = new array_list < alert_channel > ( ) n collection < alert_channel > channels = list ( ) n for ( alert_channel channel channels ) n { n if ( channel . get_name ( ) . equals ( name ) ) n ret . add ( channel ) n } n return ret n }	0
Q_797	expand a node into it successor	C_797_0	public int expand_successors ( queue < search_node < o , t expand_into , boolean reverse ) throws search_not_exhaustive_exception n { n / / used to keep count of the number of successors . n int num_successors = codint n n for ( iterator < successor < o successors = get_state ( ) . successors ( reverse ) successors . has_next ( ) ) n { n num_successors + + n n / / get the next successor state n successor < o > next = successors . next ( ) n n / / check if a repeated state filter is to be applied n if ( repeated_state_filter = null ) n { n / / filter the successor state and check if it should be accepted n if ( repeated_state_filter . evaluate ( ( t ) next . get_state ( ) , this ) ) n { n / / add the filtered state to the successors n expand_into . offer ( make_node ( next ) ) n } n } n n / / no repeated state filter is to be applied so add the successor state n else n { n expand_into . offer ( make_node ( next ) ) n } n } n n / / successors have been expanded . n expanded = true n n return num_successors n }	1
Q_797	expand a node into it successor	C_797_1	around ( codstr ) n public object trace ( proceeding_join_point call ) throws throwable { n if ( call . get_args ( ) . length = = codint call . get_args ( ) [ codint ] = = null ) { n return call . proceed ( ) n } n n string sql = ( string ) call . get_args ( ) [ codint ] n string span_name = make_span_name ( call , sql ) n n return handler . proceed ( call , tracer , span_name , sql ) n }	0
Q_797	expand a node into it successor	C_797_2	public synchronized string format ( log_record record ) { n dat . set_time ( record . get_millis ( ) ) n string source n if ( record . get_source_class_name ( ) = null ) { n source = record . get_source_class_name ( ) n if ( record . get_source_method_name ( ) = null ) { n source + = codstr + record . get_source_method_name ( ) n } n } else { n source = record . get_logger_name ( ) n } n string message = format_message ( record ) n string throwable = codstr n if ( record . get_thrown ( ) = null ) { n string_writer sw = new string_writer ( ) n print_writer pw = new print_writer ( sw ) n pw . println ( ) n record . get_thrown ( ) . print_stack_trace ( pw ) n pw . close ( ) n throwable = sw . to_string ( ) n } n return string . format ( format , n dat , n source , n record . get_logger_name ( ) , n record . get_level ( ) . get_localized_level_name ( ) , n message , n throwable ) n }	0
Q_798	initialize the connection by create a packet reader and writer and	C_798_0	"private void init_connection ( ) throws xmpp_exception { n boolean is_first_initialization = packet_reader = = null n packet_writer = = null n compression_handler = null n server_ackd_compression = false n n / / set the reader and writer instance variables n init_reader_and_writer ( ) n n try { n if ( is_first_initialization ) { n packet_writer = new packet_writer ( this ) n packet_reader = new packet_reader ( this ) n n / / if debugging is enabled , we should start the thread that will n / / listen for n / / all packets and then log them . n if ( config . is_debugger_enabled ( ) ) { n add_packet_listener ( debugger . get_reader_listener ( ) , null ) n if ( debugger . get_writer_listener ( ) = null ) { n add_packet_sending_listener ( debugger . get_writer_listener ( ) , n null ) n } n } n } else { n packet_writer . init ( ) n packet_reader . init ( ) n } n n / / start the packet writer . this will open a xmpp stream to the n / / server n packet_writer . startup ( ) n / / start the packet reader . the startup ( ) method will block until we n / / get an opening stream packet back from server . n packet_reader . startup ( ) n n / / make note of the fact that we "" re now connected . n connected ="	1
Q_798	initialize the connection by create a packet reader and writer and	C_798_1	public static string escape ( string literal ) n { n string_builder sb = new string_builder ( ) n for ( int ii = codint ii < literal . length ( ) ii + + ) n { n char cc = literal . char_at ( ii ) n switch ( cc ) n { n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n case codstr n sb . append ( codstr ) . append ( cc ) n break n default n sb . append ( cc ) n break n } n } n return sb . to_string ( ) n }	0
Q_798	initialize the connection by create a packet reader and writer and	C_798_2	public static cms_resource_info get_principal_info ( i_cms_principal principal ) { n n if ( principal = = null ) { n return null n } n if ( principal instanceof cms_user ) { n cms_user user = ( cms_user ) principal n cms_user_icon_helper helper = open_cms . get_workplace_app_manager ( ) . get_user_icon_helper ( ) n return new cms_resource_info ( n user . get_name ( ) , n user . get_email ( ) , n new external_resource ( helper . get_tiny_icon_path ( a_cms_ui . get_cms_object ( ) , user ) ) ) n } n if ( principal . get_id ( ) . equals ( cms_access_control_entry . principal_all_others_id ) ) { n return new cms_resource_info ( n cms_vaadin_utils . get_message_text ( org . opencms . workplace . commons . messages . gui_label_allothers_0 ) , n cms_vaadin_utils . get_message_text ( org . opencms . workplace . commons . messages . gui_description_allothers_0 ) , n new cms_css_icon ( open_cms_theme . icon_principal_all ) ) n } n if ( principal . get_id ( ) . equals ( cms_access_control_entry . principal_overwrite_all_id ) ) { n return new cms_resource_info ( n cms_vaadin_utils . get_message_text ( org . opencms . workplace . commons . messages . gui_label_overwriteall_0 ) , n cms_vaadin_utils . get_message_text ( org . opencms . workplace . commons . messages . gui_description_overwriteall_0 ) , n new cms_css_icon ( open_cms_theme . icon_principal_overwrite ) ) n } n cms_role role = cms_role . value_of_id ( principal . get_id ( ) ) n if ( role =	0
Q_799	swap two node take care of	C_799_0	private void swap_position ( final node < k , v > x , final node < k , v > y , final int index ) { n n / / save initial values . n node < k , v > x_former_parent = x . get_parent ( index ) n node < k , v > x_former_left_child = x . get_left ( index ) n node < k , v > x_former_right_child = x . get_right ( index ) n node < k , v > y_former_parent = y . get_parent ( index ) n node < k , v > y_former_left_child = y . get_left ( index ) n node < k , v > y_former_right_child = y . get_right ( index ) n boolean x_was_left_child = n ( x . get_parent ( index ) = null ) n ( x = = x . get_parent ( index ) . get_left ( index ) ) n boolean y_was_left_child = n ( y . get_parent ( index ) = null ) n ( y = = y . get_parent ( index ) . get_left ( index ) ) n n / / swap , handling special cases of one being the other codstr s parent n x . set_parent ( y , index ) n n if ( y_was_left_child ) { n y . set_left ( x , index ) n y . set_right ( x_former_right_child , index ) n } else { n y . set_right (	1
Q_799	swap two node take care of	C_799_1	static public result insert_elements ( tree tree , list < tree_element > elements , now_reference now ) throws exception { n n result_impl result = new result_impl ( tree ) n n tree_node_regular regular_root_node = tree . get_regular_root_node ( ) n tree_node_ongoing ongoing_root_node = tree . get_ongoing_root_node ( ) n for ( tree_element element elements ) { n time_interval element_interval = element . get_interval ( ) n n if ( element_interval . is_ongoing ( ) ) { n ongoing_root_node . insert_element ( element , result , tree . get_operations ( ) , now ) n } else { n regular_root_node . insert_element ( element , result , tree . get_operations ( ) , now ) n } n } n n return result n }	0
Q_799	swap two node take care of	C_799_2	public static iterable < mutable_long_tuple > lexicographical_iterable ( n long_tuple min , long_tuple max ) n { n return iterable ( order . lexicographical , n min , max ) n }	0
